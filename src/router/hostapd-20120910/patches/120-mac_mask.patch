--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -112,6 +112,10 @@ static int hostapd_acl_comp(const void *
 {
 	const struct mac_acl_entry *aa = a;
 	const struct mac_acl_entry *bb = b;
+
+	if (!!aa->mask != !!bb->mask)
+		return !!aa->mask - !!bb->mask;
+
 	return os_memcmp(aa->addr, bb->addr, sizeof(macaddr));
 }
 
@@ -120,11 +124,12 @@ static int hostapd_config_read_maclist(c
 				       struct mac_acl_entry **acl, int *num)
 {
 	FILE *f;
-	char buf[128], *pos;
+	char buf[128], *pos, *sep;
 	int line = 0;
 	u8 addr[ETH_ALEN];
 	struct mac_acl_entry *newacl;
-	int vlan_id;
+	int vlan_id, mask;
+	int i;
 
 	if (!fname)
 		return 0;
@@ -151,6 +156,25 @@ static int hostapd_config_read_maclist(c
 		if (buf[0] == '\0')
 			continue;
 
+		pos = buf;
+		while (*pos != '\0' && *pos != ' ' && *pos != '\t')
+			pos++;
+
+		sep = strchr(buf, '/');
+		if (sep && sep < pos) {
+			*(sep++) = 0;
+			mask = strtoul(sep, &pos, 10);
+			if (mask >= 8 * ETH_ALEN) {
+				wpa_printf(MSG_ERROR, "Invalid MAC address mask '%d'\n",
+					   mask);
+				fclose(f);
+				return -1;
+			}
+		}
+		else {
+			mask = 0;
+		}
+
 		if (hwaddr_aton(buf, addr)) {
 			wpa_printf(MSG_ERROR, "Invalid MAC address '%s' at "
 				   "line %d in '%s'", buf, line, fname);
@@ -159,9 +183,6 @@ static int hostapd_config_read_maclist(c
 		}
 
 		vlan_id = 0;
-		pos = buf;
-		while (*pos != '\0' && *pos != ' ' && *pos != '\t')
-			pos++;
 		while (*pos == ' ' || *pos == '\t')
 			pos++;
 		if (*pos != '\0')
@@ -177,6 +198,7 @@ static int hostapd_config_read_maclist(c
 		*acl = newacl;
 		os_memcpy((*acl)[*num].addr, addr, ETH_ALEN);
 		(*acl)[*num].vlan_id = vlan_id;
+		(*acl)[*num].mask = mask;
 		(*num)++;
 	}
 
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -539,6 +539,17 @@ void hostapd_config_free(struct hostapd_
 }
 
 
+static void clear_mac_bytes(u8 *addr, int mask)
+{
+	int clr_bytes = mask / 8;
+
+	if (clr_bytes > 0)
+		memset(addr + ETH_ALEN - clr_bytes, 0, clr_bytes);
+
+	if (mask % 8)
+		addr[ETH_ALEN - clr_bytes - 1] &= ~((1 << (mask % 8)) - 1);
+}
+
 /**
  * hostapd_maclist_found - Find a MAC address from a list
  * @list: MAC address list
@@ -553,10 +564,23 @@ int hostapd_maclist_found(struct mac_acl
 			  const u8 *addr, int *vlan_id)
 {
 	int start, end, middle, res;
+	u8 addr1[ETH_ALEN], addr2[ETH_ALEN];
 
 	start = 0;
 	end = num_entries - 1;
 
+	while (end >= 0 && list[end].mask) {
+		memcpy(addr1, addr, ETH_ALEN);
+		memcpy(addr2, list[end].addr, ETH_ALEN);
+		clear_mac_bytes(addr1, list[end].mask);
+		clear_mac_bytes(addr2, list[end].mask);
+
+		if (!memcmp(addr1, addr2, ETH_ALEN))
+			return 1;
+
+		end--;
+	}
+
 	while (start <= end) {
 		middle = (start + end) / 2;
 		res = os_memcmp(list[middle].addr, addr, ETH_ALEN);
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -23,6 +23,7 @@ typedef u8 macaddr[ETH_ALEN];
 struct mac_acl_entry {
 	macaddr addr;
 	int vlan_id;
+	int mask;
 };
 
 struct hostapd_radius_servers;
