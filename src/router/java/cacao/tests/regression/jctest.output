<clinit> called
0.    =================== JavaVM - Tester ========================
0.    ------------------- test arguments
1.    ------------------- test int-PUSH-STORE-LOAD
2.    int: -1 (0xffffffff)
3.    int: 0 (0x0)
4.    int: 2 (0x2)
5.    int: 17 (0x11)
6.    int: -100 (0xffffff9c)
7.    int: 500 (0x1f4)
8.    int: -32768 (0xffff8000)
9.    int: -32769 (0xffff7fff)
10.    int: 32767 (0x7fff)
11.    int: 32768 (0x8000)
12.    int: 90000 (0x15f90)
13.    int: -1000000000 (0xc4653600)
14.    ------------------- test long-PUSH-STORE-LOAD
15.    long: 3 (0x3)
16.    long: 0 (0x0)
17.    long: 99 (0x63)
18.    long: 500 (0x1f4)
19.    long: -32768 (0xffffffffffff8000)
20.    long: -32769 (0xffffffffffff7fff)
21.    long: 32767 (0x7fff)
22.    long: 32768 (0x8000)
23.    long: 6900000000000 (0x646880c8800)
24.    long: 349827389478173274 (0x4dad628428c7a5a)
25.    ------------------- test float-PUSH-STORE-LOAD
26.    float: 1120330580 (0x42c6e354)
27.    float: 0 (0x0)
28.    float: 1065353216 (0x3f800000)
29.    float: 1386178594 (0x529f6822)
30.    ------------------- test double-PUSH-STORE-LOAD
31.    double: 4681555750627175301 (0x40f83a26b851eb85)
32.    double: 0 (0x0)
33.    double: 4607182418800017408 (0x3ff0000000000000)
34.    double: 4779424231982992955 (0x4253ed043a3d8e3b)
35.    ------------------- test static variables
36.    int: -23 (0xffffffe9)
37.    int: 0 (0x0)
38.    int: -100 (0xffffff9c)
39.    long: 123456789 (0x75bcd15)
40.    long: -99998888888889 (0xffffa50d31bff5c7)
41.    long: -99999999999999 (0xffffa50cef85c001)
42.    float: 1017370379 (0x3ca3d70b)
43.    float: 1045220557 (0x3e4ccccd)
44.    float: 1050253722 (0x3e99999a)
45.    double: 4562254508917369340 (0x3f50624dd2f1a9fc)
46.    double: 4566758108544739836 (0x3f60624dd2f1a9fc)
47.    double: 4569063951553953530 (0x3f689374bc6a7efa)
48.    ------------------- test arithmetic
49.    int: 2147483647 (0x7fffffff)
50.    int: -2147483648 (0x80000000)
51.    int: -2147483630 (0x80000012)
52.    long: 9223372036854775807 (0x7fffffffffffffff)
53.    long: -9223372036854775808 (0x8000000000000000)
54.    long: -2 (0xfffffffffffffffe)
55.    statische methode
56.    interface method
57.    int: 19 (0x13)
58.    int: 18 (0x12)
59.    int: 17 (0x11)
60.    int: 16 (0x10)
61.    long: 88 (0x58)
62.    long: 77 (0x4d)
63.    long: 66 (0x42)
64.    long: 55 (0x37)
65.    float: 1036831949 (0x3dcccccd)
66.    float: 1045220557 (0x3e4ccccd)
67.    float: 1050253722 (0x3e99999a)
68.    float: 1053609165 (0x3ecccccd)
69.    double: -4611686018427387904 (0xc000000000000000)
70.    double: -4609434218613702656 (0xc008000000000000)
71.    double: -4607182418800017408 (0xc010000000000000)
72.    double: -4606056518893174784 (0xc014000000000000)
73.    ------------------- test tableswitch
74.    default
75.    default
76.    default
77.    default
78.    default
79.    default
80.    default
81.    ->  2
82.    ->  3
83.    default
84.    ->  5
85.    ->  6
86.    ->  7
87.    ->  8
88.    default
89.    -> 10
90.    default
91.    default
92.    default
93.    default
94.    ------------------- test lookupswitch
95.    default
96.    -> -4
97.    default
98.    default
99.    default
100.    default
101.    default
102.    ->  2
103.    default
104.    default
105.    default
106.    default
107.    default
108.    ->  8
109.    default
110.    default
111.    default
112.    default
113.    default
114.    -> 14
115.    ------------------- test casts
116.    null is instanceof Object:  false
117.    Integer is instanceof Object:  true
118.    Integer is instanceof Integer: true
119.    Object is instanceof Integer:  false
120.    null is instanceof Object[]:  false
121.    Integer[] is instanceof Object[]:  true
122.    Integer[] is instanceof Integer[]: true
123.    Object[] is instanceof Integer[]:  false
124.    Integer is instanceof Object[]:  false
125.    Integer[] is instanceof Object:  true
126.    Integer is instanceof Integer[]: false
127.    Object is instanceof Integer[]:  false
128.    type cast check: Integer = Object(Integer)
129.    type cast check: Integer = Object
130.    exception: class cast
131.    DataOutputStream is instanceof DataOutput: true
132.    Object is instanceof DataOutput: false
133.    type cast check: DataOutput = Object(DataOutputStream)
134.    type cast check: DataOutput = Object
135.    exception: class cast
136.    type cast check: Integer[] = Object(Integer)[]
137.    type cast check: Integer[] = Object[]
138.    exception: class cast
139.    array store check: Object(Integer)[0] = Integer
140.    array store check: Object(Integer)[0] = Object
141.    exception: array store
142.    ------------------- test special null pointers
143.    null pointer check: put field
144.    exception: null pointer
145.    null pointer check: get field
146.    exception: null pointer
147.    null pointer check: invokevirtual
148.    exception: null pointer
149.    null pointer check: invokeinterface
150.    exception: null pointer
151.    null pointer check: monitorenter
152.    exception: null pointer
153.    ------------------- test byte arrays
154.    null pointer check: byte array store
155.    exception: null pointer
156.    null pointer check: byte array load
157.    exception: null pointer
158.    negative array size check: byte array
159.    exception: negative array size
160.    array bound check: byte array store
161.    exception_1: out of bounds: -1
162.    array bound check: byte array load
163.    exception_2: out of bounds: -1
164.    testarraybounds: -5
165.    exception_3: out of bounds: 5
166.    testarraybounds: 40
167.    testarraybounds: 45
168.    testarraybounds: 50
169.    testarraybounds: 55
170.    testarraybounds: 60
171.    testarraybounds: 90
172.    testarraybounds: 95
173.    testarraybounds: 100
174.    exception_5: out of bounds: 100
175.    exception_6: out of bounds: -4
176.    exception_7: out of bounds: -3
177.    exception_8: out of bounds: -2
178.    exception_8: out of bounds: -1
179.    exception_8: out of bounds: 100
180.    exception_8: out of bounds: 101
181.    exception_9: out of bounds: 102
182.    exception_10: out of bounds: 103
183.    byte: -50 (0xffffffce)
184.    byte: -49 (0xffffffcf)
185.    byte: -48 (0xffffffd0)
186.    byte: -47 (0xffffffd1)
187.    byte: -46 (0xffffffd2)
188.    byte: -45 (0xffffffd3)
189.    byte: -44 (0xffffffd4)
190.    byte: -43 (0xffffffd5)
191.    byte: -42 (0xffffffd6)
192.    byte: -41 (0xffffffd7)
193.    byte: -40 (0xffffffd8)
194.    byte: -39 (0xffffffd9)
195.    byte: -38 (0xffffffda)
196.    byte: -37 (0xffffffdb)
197.    byte: -36 (0xffffffdc)
198.    byte: -35 (0xffffffdd)
199.    byte: -34 (0xffffffde)
200.    byte: -33 (0xffffffdf)
201.    byte: -32 (0xffffffe0)
202.    byte: -31 (0xffffffe1)
203.    byte: -30 (0xffffffe2)
204.    byte: -29 (0xffffffe3)
205.    byte: -28 (0xffffffe4)
206.    byte: -27 (0xffffffe5)
207.    byte: -26 (0xffffffe6)
208.    byte: -25 (0xffffffe7)
209.    byte: -24 (0xffffffe8)
210.    byte: -23 (0xffffffe9)
211.    byte: -22 (0xffffffea)
212.    byte: -21 (0xffffffeb)
213.    byte: -20 (0xffffffec)
214.    byte: -19 (0xffffffed)
215.    byte: -18 (0xffffffee)
216.    byte: -17 (0xffffffef)
217.    byte: -16 (0xfffffff0)
218.    byte: -15 (0xfffffff1)
219.    byte: -14 (0xfffffff2)
220.    byte: -13 (0xfffffff3)
221.    byte: -12 (0xfffffff4)
222.    byte: -11 (0xfffffff5)
223.    byte: -10 (0xfffffff6)
224.    byte: -9 (0xfffffff7)
225.    byte: -8 (0xfffffff8)
226.    byte: -7 (0xfffffff9)
227.    byte: -6 (0xfffffffa)
228.    byte: -5 (0xfffffffb)
229.    byte: -4 (0xfffffffc)
230.    byte: -3 (0xfffffffd)
231.    byte: -2 (0xfffffffe)
232.    byte: -1 (0xffffffff)
233.    byte: 0 (0x0)
234.    byte: 1 (0x1)
235.    byte: 2 (0x2)
236.    byte: 3 (0x3)
237.    byte: 4 (0x4)
238.    byte: 5 (0x5)
239.    byte: 6 (0x6)
240.    byte: 7 (0x7)
241.    byte: 8 (0x8)
242.    byte: 9 (0x9)
243.    byte: 10 (0xa)
244.    byte: 11 (0xb)
245.    byte: 12 (0xc)
246.    byte: 13 (0xd)
247.    byte: 14 (0xe)
248.    byte: 15 (0xf)
249.    byte: 16 (0x10)
250.    byte: 17 (0x11)
251.    byte: 18 (0x12)
252.    byte: 19 (0x13)
253.    byte: 20 (0x14)
254.    byte: 21 (0x15)
255.    byte: 22 (0x16)
256.    byte: 23 (0x17)
257.    byte: 24 (0x18)
258.    byte: 25 (0x19)
259.    byte: 26 (0x1a)
260.    byte: 27 (0x1b)
261.    byte: 28 (0x1c)
262.    byte: 29 (0x1d)
263.    byte: 30 (0x1e)
264.    byte: 31 (0x1f)
265.    byte: 32 (0x20)
266.    byte: 33 (0x21)
267.    byte: 34 (0x22)
268.    byte: 35 (0x23)
269.    byte: 36 (0x24)
270.    byte: 37 (0x25)
271.    byte: 38 (0x26)
272.    byte: 39 (0x27)
273.    byte: 40 (0x28)
274.    byte: 41 (0x29)
275.    byte: 42 (0x2a)
276.    byte: 43 (0x2b)
277.    byte: 44 (0x2c)
278.    byte: 45 (0x2d)
279.    byte: 46 (0x2e)
280.    byte: 47 (0x2f)
281.    byte: 48 (0x30)
282.    byte: 49 (0x31)
283.    -------- test short arrays
284.    null pointer check: short array store
285.    exception: null pointer
286.    null pointer check: short array load
287.    exception: null pointer
288.    array bound check: short array store
289.    exception_11: out of bounds: -1
290.    array bound check: short array load
291.    exception_12: out of bounds: -1
292.    short: -50 (0xffffffce)
293.    short: -49 (0xffffffcf)
294.    short: -48 (0xffffffd0)
295.    short: -47 (0xffffffd1)
296.    short: -46 (0xffffffd2)
297.    short: -45 (0xffffffd3)
298.    short: -44 (0xffffffd4)
299.    short: -43 (0xffffffd5)
300.    short: -42 (0xffffffd6)
301.    short: -41 (0xffffffd7)
302.    short: -40 (0xffffffd8)
303.    short: -39 (0xffffffd9)
304.    short: -38 (0xffffffda)
305.    short: -37 (0xffffffdb)
306.    short: -36 (0xffffffdc)
307.    short: -35 (0xffffffdd)
308.    short: -34 (0xffffffde)
309.    short: -33 (0xffffffdf)
310.    short: -32 (0xffffffe0)
311.    short: -31 (0xffffffe1)
312.    short: -30 (0xffffffe2)
313.    short: -29 (0xffffffe3)
314.    short: -28 (0xffffffe4)
315.    short: -27 (0xffffffe5)
316.    short: -26 (0xffffffe6)
317.    short: -25 (0xffffffe7)
318.    short: -24 (0xffffffe8)
319.    short: -23 (0xffffffe9)
320.    short: -22 (0xffffffea)
321.    short: -21 (0xffffffeb)
322.    short: -20 (0xffffffec)
323.    short: -19 (0xffffffed)
324.    short: -18 (0xffffffee)
325.    short: -17 (0xffffffef)
326.    short: -16 (0xfffffff0)
327.    short: -15 (0xfffffff1)
328.    short: -14 (0xfffffff2)
329.    short: -13 (0xfffffff3)
330.    short: -12 (0xfffffff4)
331.    short: -11 (0xfffffff5)
332.    short: -10 (0xfffffff6)
333.    short: -9 (0xfffffff7)
334.    short: -8 (0xfffffff8)
335.    short: -7 (0xfffffff9)
336.    short: -6 (0xfffffffa)
337.    short: -5 (0xfffffffb)
338.    short: -4 (0xfffffffc)
339.    short: -3 (0xfffffffd)
340.    short: -2 (0xfffffffe)
341.    short: -1 (0xffffffff)
342.    short: 0 (0x0)
343.    short: 1 (0x1)
344.    short: 2 (0x2)
345.    short: 3 (0x3)
346.    short: 4 (0x4)
347.    short: 5 (0x5)
348.    short: 6 (0x6)
349.    short: 7 (0x7)
350.    short: 8 (0x8)
351.    short: 9 (0x9)
352.    short: 10 (0xa)
353.    short: 11 (0xb)
354.    short: 12 (0xc)
355.    short: 13 (0xd)
356.    short: 14 (0xe)
357.    short: 15 (0xf)
358.    short: 16 (0x10)
359.    short: 17 (0x11)
360.    short: 18 (0x12)
361.    short: 19 (0x13)
362.    short: 20 (0x14)
363.    short: 21 (0x15)
364.    short: 22 (0x16)
365.    short: 23 (0x17)
366.    short: 24 (0x18)
367.    short: 25 (0x19)
368.    short: 26 (0x1a)
369.    short: 27 (0x1b)
370.    short: 28 (0x1c)
371.    short: 29 (0x1d)
372.    short: 30 (0x1e)
373.    short: 31 (0x1f)
374.    short: 32 (0x20)
375.    short: 33 (0x21)
376.    short: 34 (0x22)
377.    short: 35 (0x23)
378.    short: 36 (0x24)
379.    short: 37 (0x25)
380.    short: 38 (0x26)
381.    short: 39 (0x27)
382.    short: 40 (0x28)
383.    short: 41 (0x29)
384.    short: 42 (0x2a)
385.    short: 43 (0x2b)
386.    short: 44 (0x2c)
387.    short: 45 (0x2d)
388.    short: 46 (0x2e)
389.    short: 47 (0x2f)
390.    short: 48 (0x30)
391.    short: 49 (0x31)
392.    -------- test int arrays
393.    null pointer check: int array store
394.    exception: null pointer
395.    null pointer check: int array load
396.    exception: null pointer
397.    array bound check: int array store
398.    exception: out of bounds: -1
399.    array bound check: int array load
400.    exception: out of bounds: -1
401.    int: 123456 (0x1e240)
402.    int: 123457 (0x1e241)
403.    int: 123458 (0x1e242)
404.    int: 123459 (0x1e243)
405.    int: 123460 (0x1e244)
406.    int: 123461 (0x1e245)
407.    int: 123462 (0x1e246)
408.    int: 123463 (0x1e247)
409.    int: 123464 (0x1e248)
410.    int: 123465 (0x1e249)
411.    -------- test long arrays
412.    null pointer check: long array store
413.    exception: null pointer
414.    null pointer check: long array load
415.    exception: null pointer
416.    array bound check: long array store
417.    exception: out of bounds: -1
418.    array bound check: long array load
419.    exception: out of bounds: -1
420.    long: 1234567890123 (0x11f71fb04cb)
421.    long: 1234567890124 (0x11f71fb04cc)
422.    long: 1234567890125 (0x11f71fb04cd)
423.    long: 1234567890126 (0x11f71fb04ce)
424.    long: 1234567890127 (0x11f71fb04cf)
425.    long: 1234567890128 (0x11f71fb04d0)
426.    long: 1234567890129 (0x11f71fb04d1)
427.    long: 1234567890130 (0x11f71fb04d2)
428.    long: 1234567890131 (0x11f71fb04d3)
429.    long: 1234567890132 (0x11f71fb04d4)
430.    -------- test char arrays
431.    null pointer check: char array store
432.    exception: null pointer
433.    null pointer check: char array load
434.    exception: null pointer
435.    array bound check: char array store
436.    exception: out of bounds: -1
437.    array bound check: char array load
438.    exception: out of bounds: -1
439.    char: 65 (0x41)
440.    char: 66 (0x42)
441.    char: 67 (0x43)
442.    char: 68 (0x44)
443.    char: 69 (0x45)
444.    char: 70 (0x46)
445.    char: 71 (0x47)
446.    char: 72 (0x48)
447.    char: 73 (0x49)
448.    char: 74 (0x4a)
449.    char: 75 (0x4b)
450.    char: 76 (0x4c)
451.    char: 77 (0x4d)
452.    char: 78 (0x4e)
453.    char: 79 (0x4f)
454.    char: 80 (0x50)
455.    char: 81 (0x51)
456.    char: 82 (0x52)
457.    char: 83 (0x53)
458.    char: 84 (0x54)
459.    char: 85 (0x55)
460.    char: 86 (0x56)
461.    char: 87 (0x57)
462.    char: 88 (0x58)
463.    char: 89 (0x59)
464.    char: 90 (0x5a)
465.    char: 91 (0x5b)
466.    char: 92 (0x5c)
467.    char: 93 (0x5d)
468.    char: 94 (0x5e)
469.    char: 95 (0x5f)
470.    char: 96 (0x60)
471.    char: 97 (0x61)
472.    char: 98 (0x62)
473.    char: 99 (0x63)
474.    char: 100 (0x64)
475.    char: 101 (0x65)
476.    char: 102 (0x66)
477.    char: 103 (0x67)
478.    char: 104 (0x68)
479.    char: 105 (0x69)
480.    char: 106 (0x6a)
481.    char: 107 (0x6b)
482.    char: 108 (0x6c)
483.    char: 109 (0x6d)
484.    char: 110 (0x6e)
485.    char: 111 (0x6f)
486.    char: 112 (0x70)
487.    char: 113 (0x71)
488.    char: 114 (0x72)
489.    -------- test address arrays
490.    null pointer check: address array store
491.    exception: null pointer
492.    null pointer check: address array load
493.    exception: null pointer
494.    negative array size check: address array
495.    exception: negative array size
496.    array bound check: address array store
497.    exception: out of bounds: -1
498.    array bound check: address array load
499.    exception: out of bounds: -1
500.    0. Zeile
501.    1. Zeile
502.    2. Zeile
503.    3. Zeile
504.    4. Zeile
505.    -------- test multi dimensional arrays
506.    negative array size check: multi dimensional array
507.    exception: negative array size
508.    savedvar size copy check: multi dimensional array
509.    successfully created
510.    int: 0 (0x0)
511.    long: 7 (0x7)
512.    float: 1053609165 (0x3ecccccd)
513.    double: -4591560543518827164 (0xc047800346dc5d64)
514.    int: 1 (0x1)
515.    long: 8 (0x8)
516.    float: 1068708659 (0x3fb33333)
517.    double: -4591701281007182492 (0xc047000346dc5d64)
518.    int: 2 (0x2)
519.    long: 9 (0x9)
520.    float: 1075419546 (0x4019999a)
521.    double: -4591842018495537820 (0xc046800346dc5d64)
522.    int: 3 (0x3)
523.    long: 10 (0xa)
524.    float: 1079613850 (0x4059999a)
525.    double: -4591982755983893148 (0xc046000346dc5d64)
526.    int: 1 (0x1)
527.    long: 8 (0x8)
528.    float: 1068708659 (0x3fb33333)
529.    double: -4591701281007182492 (0xc047000346dc5d64)
530.    int: 2 (0x2)
531.    long: 9 (0x9)
532.    float: 1075419546 (0x4019999a)
533.    double: -4591842018495537820 (0xc046800346dc5d64)
534.    int: 3 (0x3)
535.    long: 10 (0xa)
536.    float: 1079613850 (0x4059999a)
537.    double: -4591982755983893148 (0xc046000346dc5d64)
538.    int: 4 (0x4)
539.    long: 11 (0xb)
540.    float: 1082969293 (0x408ccccd)
541.    double: -4592123493472248476 (0xc045800346dc5d64)
542.    int: 4 (0x4)
543.    long: 11 (0xb)
544.    float: 1082969293 (0x408ccccd)
545.    double: -4592123493472248476 (0xc045800346dc5d64)
546.    int: 5 (0x5)
547.    long: 12 (0xc)
548.    float: 1085066445 (0x40accccd)
549.    double: -4592264230960603804 (0xc045000346dc5d64)
550.    int: 6 (0x6)
551.    long: 13 (0xd)
552.    float: 1087163597 (0x40cccccd)
553.    double: -4592404968448959132 (0xc044800346dc5d64)
554.    int: 7 (0x7)
555.    long: 14 (0xe)
556.    float: 1089260749 (0x40eccccd)
557.    double: -4592545705937314460 (0xc044000346dc5d64)
558.    int: 1 (0x1)
559.    long: 8 (0x8)
560.    float: 1068708659 (0x3fb33333)
561.    double: -4591701281007182492 (0xc047000346dc5d64)
562.    int: 2 (0x2)
563.    long: 9 (0x9)
564.    float: 1075419546 (0x4019999a)
565.    double: -4591842018495537820 (0xc046800346dc5d64)
566.    int: 3 (0x3)
567.    long: 10 (0xa)
568.    float: 1079613850 (0x4059999a)
569.    double: -4591982755983893148 (0xc046000346dc5d64)
570.    int: 4 (0x4)
571.    long: 11 (0xb)
572.    float: 1082969293 (0x408ccccd)
573.    double: -4592123493472248476 (0xc045800346dc5d64)
574.    int: 2 (0x2)
575.    long: 9 (0x9)
576.    float: 1075419546 (0x4019999a)
577.    double: -4591842018495537820 (0xc046800346dc5d64)
578.    int: 3 (0x3)
579.    long: 10 (0xa)
580.    float: 1079613850 (0x4059999a)
581.    double: -4591982755983893148 (0xc046000346dc5d64)
582.    int: 4 (0x4)
583.    long: 11 (0xb)
584.    float: 1082969293 (0x408ccccd)
585.    double: -4592123493472248476 (0xc045800346dc5d64)
586.    int: 5 (0x5)
587.    long: 12 (0xc)
588.    float: 1085066445 (0x40accccd)
589.    double: -4592264230960603804 (0xc045000346dc5d64)
590.    int: 5 (0x5)
591.    long: 12 (0xc)
592.    float: 1085066445 (0x40accccd)
593.    double: -4592264230960603804 (0xc045000346dc5d64)
594.    int: 6 (0x6)
595.    long: 13 (0xd)
596.    float: 1087163597 (0x40cccccd)
597.    double: -4592404968448959132 (0xc044800346dc5d64)
598.    int: 7 (0x7)
599.    long: 14 (0xe)
600.    float: 1089260749 (0x40eccccd)
601.    double: -4592545705937314460 (0xc044000346dc5d64)
602.    int: 8 (0x8)
603.    long: 15 (0xf)
604.    float: 1090938470 (0x41066666)
605.    double: -4592686443425669788 (0xc043800346dc5d64)
606.    ------------------- test consts
607.    TESTCONST CALLED WITH int: 1 (0x1)
608.                      AND long: 1 (0x1)
609.    not IFEQ:   int: 0 (0x0)
610.    not IFLT:   int: 0 (0x0)
611.    not IFLE:   int: 0 (0x0)
612.    not IF_LEQ: int: 0 (0x0)
613.    not IF_LLT: int: 0 (0x0)
614.    not IF_LLE: int: 0 (0x0)
615.    IADDCONST:  int: 0 (0x0)
616.    ISUBCONST:  int: 2 (0x2)
617.    IMULCONST:  int: -1 (0xffffffff)
618.    ISHLCONST:  int: -2147483648 (0x80000000)
619.    ISHRCONST:  int: 0 (0x0)
620.    IUSHRCONST: int: 0 (0x0)
621.    IANDCONST:  int: 1 (0x1)
622.    IORCONST:   int: -1 (0xffffffff)
623.    IXORCONST:  int: -2 (0xfffffffe)
624.    not IFEQ:   int: -1 (0xffffffff)
625.    not IFLT:   int: -1 (0xffffffff)
626.    not IFLE:   int: -1 (0xffffffff)
627.    LADDCONST:  long: 0 (0x0)
628.    LSUBCONST:  long: 2 (0x2)
629.    LMULCONST:  long: -1 (0xffffffffffffffff)
630.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
631.    LSHRCONST:  long: 0 (0x0)
632.    LUSHRCONST: long: 0 (0x0)
633.    LANDCONST:  long: 1 (0x1)
634.    LORCONST:   long: -1 (0xffffffffffffffff)
635.    LXORCONST:  long: -2 (0xfffffffffffffffe)
636.    not IF_LEQ: int: -1 (0xffffffff)
637.    not IF_LLT: int: -1 (0xffffffff)
638.    not IF_LLE: int: -1 (0xffffffff)
639.    IADDCONST:  int: 2 (0x2)
640.    ISUBCONST:  int: 0 (0x0)
641.    IMULCONST:  int: 1 (0x1)
642.    ISHLCONST:  int: 2 (0x2)
643.    ISHRCONST:  int: 0 (0x0)
644.    IUSHRCONST: int: 0 (0x0)
645.    IANDCONST:  int: 1 (0x1)
646.    IORCONST:   int: 1 (0x1)
647.    IXORCONST:  int: 0 (0x0)
648.    not IFNE:   int: 1 (0x1)
649.    not IFLT:   int: 1 (0x1)
650.    not IFGT:   int: 1 (0x1)
651.    LADDCONST:  long: 2 (0x2)
652.    LSUBCONST:  long: 0 (0x0)
653.    LMULCONST:  long: 1 (0x1)
654.    LSHLCONST:  long: 2 (0x2)
655.    LSHRCONST:  long: 0 (0x0)
656.    LUSHRCONST: long: 0 (0x0)
657.    LANDCONST:  long: 1 (0x1)
658.    LORCONST:   long: 1 (0x1)
659.    LXORCONST:  long: 0 (0x0)
660.    not IF_LNE: int: 1 (0x1)
661.    not IF_LLT: int: 1 (0x1)
662.    not IF_LGT: int: 1 (0x1)
663.    IADDCONST:  int: 256 (0x100)
664.    ISUBCONST:  int: -254 (0xffffff02)
665.    IMULCONST:  int: 255 (0xff)
666.    ISHLCONST:  int: -2147483648 (0x80000000)
667.    ISHRCONST:  int: 0 (0x0)
668.    IUSHRCONST: int: 0 (0x0)
669.    IANDCONST:  int: 1 (0x1)
670.    IORCONST:   int: 255 (0xff)
671.    IXORCONST:  int: 254 (0xfe)
672.    not IFEQ:   int: 255 (0xff)
673.    not IFGT:   int: 255 (0xff)
674.    not IFGE:   int: 255 (0xff)
675.    LADDCONST:  long: 256 (0x100)
676.    LSUBCONST:  long: -254 (0xffffffffffffff02)
677.    LMULCONST:  long: 255 (0xff)
678.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
679.    LSHRCONST:  long: 0 (0x0)
680.    LUSHRCONST: long: 0 (0x0)
681.    LANDCONST:  long: 1 (0x1)
682.    LORCONST:   long: 255 (0xff)
683.    LXORCONST:  long: 254 (0xfe)
684.    not IF_LEQ: int: 255 (0xff)
685.    not IF_LGT: int: 255 (0xff)
686.    not IF_LGE: int: 255 (0xff)
687.    IADDCONST:  int: 257 (0x101)
688.    ISUBCONST:  int: -255 (0xffffff01)
689.    IMULCONST:  int: 256 (0x100)
690.    ISHLCONST:  int: 1 (0x1)
691.    ISHRCONST:  int: 1 (0x1)
692.    IUSHRCONST: int: 1 (0x1)
693.    IANDCONST:  int: 0 (0x0)
694.    IORCONST:   int: 257 (0x101)
695.    IXORCONST:  int: 257 (0x101)
696.    not IFEQ:   int: 256 (0x100)
697.    not IFGT:   int: 256 (0x100)
698.    not IFGE:   int: 256 (0x100)
699.    LADDCONST:  long: 257 (0x101)
700.    LSUBCONST:  long: -255 (0xffffffffffffff01)
701.    LMULCONST:  long: 256 (0x100)
702.    LSHLCONST:  long: 1 (0x1)
703.    LSHRCONST:  long: 1 (0x1)
704.    LUSHRCONST: long: 1 (0x1)
705.    LANDCONST:  long: 0 (0x0)
706.    LORCONST:   long: 257 (0x101)
707.    LXORCONST:  long: 257 (0x101)
708.    not IF_LEQ: int: 256 (0x100)
709.    not IF_LGT: int: 256 (0x100)
710.    not IF_LGE: int: 256 (0x100)
711.    IADDCONST:  int: 32768 (0x8000)
712.    ISUBCONST:  int: -32766 (0xffff8002)
713.    IMULCONST:  int: 32767 (0x7fff)
714.    ISHLCONST:  int: -2147483648 (0x80000000)
715.    ISHRCONST:  int: 0 (0x0)
716.    IUSHRCONST: int: 0 (0x0)
717.    IANDCONST:  int: 1 (0x1)
718.    IORCONST:   int: 32767 (0x7fff)
719.    IXORCONST:  int: 32766 (0x7ffe)
720.    not IFEQ:   int: 32767 (0x7fff)
721.    not IFGT:   int: 32767 (0x7fff)
722.    not IFGE:   int: 32767 (0x7fff)
723.    LADDCONST:  long: 32768 (0x8000)
724.    LSUBCONST:  long: -32766 (0xffffffffffff8002)
725.    LMULCONST:  long: 32767 (0x7fff)
726.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
727.    LSHRCONST:  long: 0 (0x0)
728.    LUSHRCONST: long: 0 (0x0)
729.    LANDCONST:  long: 1 (0x1)
730.    LORCONST:   long: 32767 (0x7fff)
731.    LXORCONST:  long: 32766 (0x7ffe)
732.    not IF_LEQ: int: 32767 (0x7fff)
733.    not IF_LGT: int: 32767 (0x7fff)
734.    not IF_LGE: int: 32767 (0x7fff)
735.    IADDCONST:  int: 32769 (0x8001)
736.    ISUBCONST:  int: -32767 (0xffff8001)
737.    IMULCONST:  int: 32768 (0x8000)
738.    ISHLCONST:  int: 1 (0x1)
739.    ISHRCONST:  int: 1 (0x1)
740.    IUSHRCONST: int: 1 (0x1)
741.    IANDCONST:  int: 0 (0x0)
742.    IORCONST:   int: 32769 (0x8001)
743.    IXORCONST:  int: 32769 (0x8001)
744.    not IFEQ:   int: 32768 (0x8000)
745.    not IFGT:   int: 32768 (0x8000)
746.    not IFGE:   int: 32768 (0x8000)
747.    LADDCONST:  long: 32769 (0x8001)
748.    LSUBCONST:  long: -32767 (0xffffffffffff8001)
749.    LMULCONST:  long: 32768 (0x8000)
750.    LSHLCONST:  long: 1 (0x1)
751.    LSHRCONST:  long: 1 (0x1)
752.    LUSHRCONST: long: 1 (0x1)
753.    LANDCONST:  long: 0 (0x0)
754.    LORCONST:   long: 32769 (0x8001)
755.    LXORCONST:  long: 32769 (0x8001)
756.    not IF_LEQ: int: 32768 (0x8000)
757.    not IF_LGT: int: 32768 (0x8000)
758.    not IF_LGE: int: 32768 (0x8000)
759.    IADDCONST:  int: -32767 (0xffff8001)
760.    ISUBCONST:  int: 32769 (0x8001)
761.    IMULCONST:  int: -32768 (0xffff8000)
762.    ISHLCONST:  int: 1 (0x1)
763.    ISHRCONST:  int: 1 (0x1)
764.    IUSHRCONST: int: 1 (0x1)
765.    IANDCONST:  int: 0 (0x0)
766.    IORCONST:   int: -32767 (0xffff8001)
767.    IXORCONST:  int: -32767 (0xffff8001)
768.    not IFEQ:   int: -32768 (0xffff8000)
769.    not IFLT:   int: -32768 (0xffff8000)
770.    not IFLE:   int: -32768 (0xffff8000)
771.    LADDCONST:  long: -32767 (0xffffffffffff8001)
772.    LSUBCONST:  long: 32769 (0x8001)
773.    LMULCONST:  long: -32768 (0xffffffffffff8000)
774.    LSHLCONST:  long: 1 (0x1)
775.    LSHRCONST:  long: 1 (0x1)
776.    LUSHRCONST: long: 1 (0x1)
777.    LANDCONST:  long: 0 (0x0)
778.    LORCONST:   long: -32767 (0xffffffffffff8001)
779.    LXORCONST:  long: -32767 (0xffffffffffff8001)
780.    not IF_LEQ: int: -32768 (0xffff8000)
781.    not IF_LLT: int: -32768 (0xffff8000)
782.    not IF_LLE: int: -32768 (0xffff8000)
783.    IADDCONST:  int: -32768 (0xffff8000)
784.    ISUBCONST:  int: 32770 (0x8002)
785.    IMULCONST:  int: -32769 (0xffff7fff)
786.    ISHLCONST:  int: -2147483648 (0x80000000)
787.    ISHRCONST:  int: 0 (0x0)
788.    IUSHRCONST: int: 0 (0x0)
789.    IANDCONST:  int: 1 (0x1)
790.    IORCONST:   int: -32769 (0xffff7fff)
791.    IXORCONST:  int: -32770 (0xffff7ffe)
792.    not IFEQ:   int: -32769 (0xffff7fff)
793.    not IFLT:   int: -32769 (0xffff7fff)
794.    not IFLE:   int: -32769 (0xffff7fff)
795.    LADDCONST:  long: -32768 (0xffffffffffff8000)
796.    LSUBCONST:  long: 32770 (0x8002)
797.    LMULCONST:  long: -32769 (0xffffffffffff7fff)
798.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
799.    LSHRCONST:  long: 0 (0x0)
800.    LUSHRCONST: long: 0 (0x0)
801.    LANDCONST:  long: 1 (0x1)
802.    LORCONST:   long: -32769 (0xffffffffffff7fff)
803.    LXORCONST:  long: -32770 (0xffffffffffff7ffe)
804.    not IF_LEQ: int: -32769 (0xffff7fff)
805.    not IF_LLT: int: -32769 (0xffff7fff)
806.    not IF_LLE: int: -32769 (0xffff7fff)
807.    IADDCONST:  int: -2147483648 (0x80000000)
808.    ISUBCONST:  int: -2147483646 (0x80000002)
809.    IMULCONST:  int: 2147483647 (0x7fffffff)
810.    ISHLCONST:  int: -2147483648 (0x80000000)
811.    ISHRCONST:  int: 0 (0x0)
812.    IUSHRCONST: int: 0 (0x0)
813.    IANDCONST:  int: 1 (0x1)
814.    IORCONST:   int: 2147483647 (0x7fffffff)
815.    IXORCONST:  int: 2147483646 (0x7ffffffe)
816.    not IFEQ:   int: 2147483647 (0x7fffffff)
817.    not IFGT:   int: 2147483647 (0x7fffffff)
818.    not IFGE:   int: 2147483647 (0x7fffffff)
819.    LADDCONST:  long: 2147483648 (0x80000000)
820.    LSUBCONST:  long: -2147483646 (0xffffffff80000002)
821.    LMULCONST:  long: 2147483647 (0x7fffffff)
822.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
823.    LSHRCONST:  long: 0 (0x0)
824.    LUSHRCONST: long: 0 (0x0)
825.    LANDCONST:  long: 1 (0x1)
826.    LORCONST:   long: 2147483647 (0x7fffffff)
827.    LXORCONST:  long: 2147483646 (0x7ffffffe)
828.    not IF_LEQ: int: 2147483647 (0x7fffffff)
829.    not IF_LGT: int: 2147483647 (0x7fffffff)
830.    not IF_LGE: int: 2147483647 (0x7fffffff)
831.    LADDCONST:  long: 2147483649 (0x80000001)
832.    LSUBCONST:  long: -2147483647 (0xffffffff80000001)
833.    LMULCONST:  long: 2147483648 (0x80000000)
834.    LSHLCONST:  long: 1 (0x1)
835.    LSHRCONST:  long: 1 (0x1)
836.    LUSHRCONST: long: 1 (0x1)
837.    LANDCONST:  long: 0 (0x0)
838.    LORCONST:   long: 2147483649 (0x80000001)
839.    LXORCONST:  long: 2147483649 (0x80000001)
840.    not IF_LEQ: long: 2147483648 (0x80000000)
841.    not IF_LGT: long: 2147483648 (0x80000000)
842.    not IF_LGE: long: 2147483648 (0x80000000)
843.    IADDCONST:  int: -2147483647 (0x80000001)
844.    ISUBCONST:  int: -2147483647 (0x80000001)
845.    IMULCONST:  int: -2147483648 (0x80000000)
846.    ISHLCONST:  int: 1 (0x1)
847.    ISHRCONST:  int: 1 (0x1)
848.    IUSHRCONST: int: 1 (0x1)
849.    IANDCONST:  int: 0 (0x0)
850.    IORCONST:   int: -2147483647 (0x80000001)
851.    IXORCONST:  int: -2147483647 (0x80000001)
852.    not IFEQ:   int: -2147483648 (0x80000000)
853.    not IFLT:   int: -2147483648 (0x80000000)
854.    not IFLE:   int: -2147483648 (0x80000000)
855.    LADDCONST:  long: -2147483647 (0xffffffff80000001)
856.    LSUBCONST:  long: 2147483649 (0x80000001)
857.    LMULCONST:  long: -2147483648 (0xffffffff80000000)
858.    LSHLCONST:  long: 1 (0x1)
859.    LSHRCONST:  long: 1 (0x1)
860.    LUSHRCONST: long: 1 (0x1)
861.    LANDCONST:  long: 0 (0x0)
862.    LORCONST:   long: -2147483647 (0xffffffff80000001)
863.    LXORCONST:  long: -2147483647 (0xffffffff80000001)
864.    not IF_LEQ: int: -2147483648 (0x80000000)
865.    not IF_LLT: int: -2147483648 (0x80000000)
866.    not IF_LLE: int: -2147483648 (0x80000000)
867.    LADDCONST:  long: -2147483648 (0xffffffff80000000)
868.    LSUBCONST:  long: 2147483650 (0x80000002)
869.    LMULCONST:  long: -2147483649 (0xffffffff7fffffff)
870.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
871.    LSHRCONST:  long: 0 (0x0)
872.    LUSHRCONST: long: 0 (0x0)
873.    LANDCONST:  long: 1 (0x1)
874.    LORCONST:   long: -2147483649 (0xffffffff7fffffff)
875.    LXORCONST:  long: -2147483650 (0xffffffff7ffffffe)
876.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
877.    not IF_LLT: long: -2147483649 (0xffffffff7fffffff)
878.    not IF_LLE: long: -2147483649 (0xffffffff7fffffff)
879.    TESTCONST CALLED WITH int: -1 (0xffffffff)
880.                      AND long: -1 (0xffffffffffffffff)
881.    not IFEQ:   int: 0 (0x0)
882.    not IFGT:   int: 0 (0x0)
883.    not IFGE:   int: 0 (0x0)
884.    not IF_LEQ: int: 0 (0x0)
885.    not IF_LGT: int: 0 (0x0)
886.    not IF_LGE: int: 0 (0x0)
887.    IADDCONST:  int: -2 (0xfffffffe)
888.    ISUBCONST:  int: 0 (0x0)
889.    IMULCONST:  int: 1 (0x1)
890.    ISHLCONST:  int: -2147483648 (0x80000000)
891.    ISHRCONST:  int: -1 (0xffffffff)
892.    IUSHRCONST: int: 1 (0x1)
893.    IANDCONST:  int: -1 (0xffffffff)
894.    IORCONST:   int: -1 (0xffffffff)
895.    IXORCONST:  int: 0 (0x0)
896.    not IFNE:   int: -1 (0xffffffff)
897.    not IFLT:   int: -1 (0xffffffff)
898.    not IFGT:   int: -1 (0xffffffff)
899.    LADDCONST:  long: -2 (0xfffffffffffffffe)
900.    LSUBCONST:  long: 0 (0x0)
901.    LMULCONST:  long: 1 (0x1)
902.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
903.    LSHRCONST:  long: -1 (0xffffffffffffffff)
904.    LUSHRCONST: long: 1 (0x1)
905.    LANDCONST:  long: -1 (0xffffffffffffffff)
906.    LORCONST:   long: -1 (0xffffffffffffffff)
907.    LXORCONST:  long: 0 (0x0)
908.    not IF_LNE: int: -1 (0xffffffff)
909.    not IF_LLT: int: -1 (0xffffffff)
910.    not IF_LGT: int: -1 (0xffffffff)
911.    IADDCONST:  int: 0 (0x0)
912.    ISUBCONST:  int: -2 (0xfffffffe)
913.    IMULCONST:  int: -1 (0xffffffff)
914.    ISHLCONST:  int: -2 (0xfffffffe)
915.    ISHRCONST:  int: -1 (0xffffffff)
916.    IUSHRCONST: int: 2147483647 (0x7fffffff)
917.    IANDCONST:  int: 1 (0x1)
918.    IORCONST:   int: -1 (0xffffffff)
919.    IXORCONST:  int: -2 (0xfffffffe)
920.    not IFEQ:   int: 1 (0x1)
921.    not IFGT:   int: 1 (0x1)
922.    not IFGE:   int: 1 (0x1)
923.    LADDCONST:  long: 0 (0x0)
924.    LSUBCONST:  long: -2 (0xfffffffffffffffe)
925.    LMULCONST:  long: -1 (0xffffffffffffffff)
926.    LSHLCONST:  long: -2 (0xfffffffffffffffe)
927.    LSHRCONST:  long: -1 (0xffffffffffffffff)
928.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
929.    LANDCONST:  long: 1 (0x1)
930.    LORCONST:   long: -1 (0xffffffffffffffff)
931.    LXORCONST:  long: -2 (0xfffffffffffffffe)
932.    not IF_LEQ: int: 1 (0x1)
933.    not IF_LGT: int: 1 (0x1)
934.    not IF_LGE: int: 1 (0x1)
935.    IADDCONST:  int: 254 (0xfe)
936.    ISUBCONST:  int: -256 (0xffffff00)
937.    IMULCONST:  int: -255 (0xffffff01)
938.    ISHLCONST:  int: -2147483648 (0x80000000)
939.    ISHRCONST:  int: -1 (0xffffffff)
940.    IUSHRCONST: int: 1 (0x1)
941.    IANDCONST:  int: 255 (0xff)
942.    IORCONST:   int: -1 (0xffffffff)
943.    IXORCONST:  int: -256 (0xffffff00)
944.    not IFEQ:   int: 255 (0xff)
945.    not IFGT:   int: 255 (0xff)
946.    not IFGE:   int: 255 (0xff)
947.    LADDCONST:  long: 254 (0xfe)
948.    LSUBCONST:  long: -256 (0xffffffffffffff00)
949.    LMULCONST:  long: -255 (0xffffffffffffff01)
950.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
951.    LSHRCONST:  long: -1 (0xffffffffffffffff)
952.    LUSHRCONST: long: 1 (0x1)
953.    LANDCONST:  long: 255 (0xff)
954.    LORCONST:   long: -1 (0xffffffffffffffff)
955.    LXORCONST:  long: -256 (0xffffffffffffff00)
956.    not IF_LEQ: int: 255 (0xff)
957.    not IF_LGT: int: 255 (0xff)
958.    not IF_LGE: int: 255 (0xff)
959.    IADDCONST:  int: 255 (0xff)
960.    ISUBCONST:  int: -257 (0xfffffeff)
961.    IMULCONST:  int: -256 (0xffffff00)
962.    ISHLCONST:  int: -1 (0xffffffff)
963.    ISHRCONST:  int: -1 (0xffffffff)
964.    IUSHRCONST: int: -1 (0xffffffff)
965.    IANDCONST:  int: 256 (0x100)
966.    IORCONST:   int: -1 (0xffffffff)
967.    IXORCONST:  int: -257 (0xfffffeff)
968.    not IFEQ:   int: 256 (0x100)
969.    not IFGT:   int: 256 (0x100)
970.    not IFGE:   int: 256 (0x100)
971.    LADDCONST:  long: 255 (0xff)
972.    LSUBCONST:  long: -257 (0xfffffffffffffeff)
973.    LMULCONST:  long: -256 (0xffffffffffffff00)
974.    LSHLCONST:  long: -1 (0xffffffffffffffff)
975.    LSHRCONST:  long: -1 (0xffffffffffffffff)
976.    LUSHRCONST: long: -1 (0xffffffffffffffff)
977.    LANDCONST:  long: 256 (0x100)
978.    LORCONST:   long: -1 (0xffffffffffffffff)
979.    LXORCONST:  long: -257 (0xfffffffffffffeff)
980.    not IF_LEQ: int: 256 (0x100)
981.    not IF_LGT: int: 256 (0x100)
982.    not IF_LGE: int: 256 (0x100)
983.    IADDCONST:  int: 32766 (0x7ffe)
984.    ISUBCONST:  int: -32768 (0xffff8000)
985.    IMULCONST:  int: -32767 (0xffff8001)
986.    ISHLCONST:  int: -2147483648 (0x80000000)
987.    ISHRCONST:  int: -1 (0xffffffff)
988.    IUSHRCONST: int: 1 (0x1)
989.    IANDCONST:  int: 32767 (0x7fff)
990.    IORCONST:   int: -1 (0xffffffff)
991.    IXORCONST:  int: -32768 (0xffff8000)
992.    not IFEQ:   int: 32767 (0x7fff)
993.    not IFGT:   int: 32767 (0x7fff)
994.    not IFGE:   int: 32767 (0x7fff)
995.    LADDCONST:  long: 32766 (0x7ffe)
996.    LSUBCONST:  long: -32768 (0xffffffffffff8000)
997.    LMULCONST:  long: -32767 (0xffffffffffff8001)
998.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
999.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1000.    LUSHRCONST: long: 1 (0x1)
1001.    LANDCONST:  long: 32767 (0x7fff)
1002.    LORCONST:   long: -1 (0xffffffffffffffff)
1003.    LXORCONST:  long: -32768 (0xffffffffffff8000)
1004.    not IF_LEQ: int: 32767 (0x7fff)
1005.    not IF_LGT: int: 32767 (0x7fff)
1006.    not IF_LGE: int: 32767 (0x7fff)
1007.    IADDCONST:  int: 32767 (0x7fff)
1008.    ISUBCONST:  int: -32769 (0xffff7fff)
1009.    IMULCONST:  int: -32768 (0xffff8000)
1010.    ISHLCONST:  int: -1 (0xffffffff)
1011.    ISHRCONST:  int: -1 (0xffffffff)
1012.    IUSHRCONST: int: -1 (0xffffffff)
1013.    IANDCONST:  int: 32768 (0x8000)
1014.    IORCONST:   int: -1 (0xffffffff)
1015.    IXORCONST:  int: -32769 (0xffff7fff)
1016.    not IFEQ:   int: 32768 (0x8000)
1017.    not IFGT:   int: 32768 (0x8000)
1018.    not IFGE:   int: 32768 (0x8000)
1019.    LADDCONST:  long: 32767 (0x7fff)
1020.    LSUBCONST:  long: -32769 (0xffffffffffff7fff)
1021.    LMULCONST:  long: -32768 (0xffffffffffff8000)
1022.    LSHLCONST:  long: -1 (0xffffffffffffffff)
1023.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1024.    LUSHRCONST: long: -1 (0xffffffffffffffff)
1025.    LANDCONST:  long: 32768 (0x8000)
1026.    LORCONST:   long: -1 (0xffffffffffffffff)
1027.    LXORCONST:  long: -32769 (0xffffffffffff7fff)
1028.    not IF_LEQ: int: 32768 (0x8000)
1029.    not IF_LGT: int: 32768 (0x8000)
1030.    not IF_LGE: int: 32768 (0x8000)
1031.    IADDCONST:  int: -32769 (0xffff7fff)
1032.    ISUBCONST:  int: 32767 (0x7fff)
1033.    IMULCONST:  int: 32768 (0x8000)
1034.    ISHLCONST:  int: -1 (0xffffffff)
1035.    ISHRCONST:  int: -1 (0xffffffff)
1036.    IUSHRCONST: int: -1 (0xffffffff)
1037.    IANDCONST:  int: -32768 (0xffff8000)
1038.    IORCONST:   int: -1 (0xffffffff)
1039.    IXORCONST:  int: 32767 (0x7fff)
1040.    not IFEQ:   int: -32768 (0xffff8000)
1041.    not IFLT:   int: -32768 (0xffff8000)
1042.    not IFLE:   int: -32768 (0xffff8000)
1043.    LADDCONST:  long: -32769 (0xffffffffffff7fff)
1044.    LSUBCONST:  long: 32767 (0x7fff)
1045.    LMULCONST:  long: 32768 (0x8000)
1046.    LSHLCONST:  long: -1 (0xffffffffffffffff)
1047.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1048.    LUSHRCONST: long: -1 (0xffffffffffffffff)
1049.    LANDCONST:  long: -32768 (0xffffffffffff8000)
1050.    LORCONST:   long: -1 (0xffffffffffffffff)
1051.    LXORCONST:  long: 32767 (0x7fff)
1052.    not IF_LEQ: int: -32768 (0xffff8000)
1053.    not IF_LLT: int: -32768 (0xffff8000)
1054.    not IF_LLE: int: -32768 (0xffff8000)
1055.    IADDCONST:  int: -32770 (0xffff7ffe)
1056.    ISUBCONST:  int: 32768 (0x8000)
1057.    IMULCONST:  int: 32769 (0x8001)
1058.    ISHLCONST:  int: -2147483648 (0x80000000)
1059.    ISHRCONST:  int: -1 (0xffffffff)
1060.    IUSHRCONST: int: 1 (0x1)
1061.    IANDCONST:  int: -32769 (0xffff7fff)
1062.    IORCONST:   int: -1 (0xffffffff)
1063.    IXORCONST:  int: 32768 (0x8000)
1064.    not IFEQ:   int: -32769 (0xffff7fff)
1065.    not IFLT:   int: -32769 (0xffff7fff)
1066.    not IFLE:   int: -32769 (0xffff7fff)
1067.    LADDCONST:  long: -32770 (0xffffffffffff7ffe)
1068.    LSUBCONST:  long: 32768 (0x8000)
1069.    LMULCONST:  long: 32769 (0x8001)
1070.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1071.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1072.    LUSHRCONST: long: 1 (0x1)
1073.    LANDCONST:  long: -32769 (0xffffffffffff7fff)
1074.    LORCONST:   long: -1 (0xffffffffffffffff)
1075.    LXORCONST:  long: 32768 (0x8000)
1076.    not IF_LEQ: int: -32769 (0xffff7fff)
1077.    not IF_LLT: int: -32769 (0xffff7fff)
1078.    not IF_LLE: int: -32769 (0xffff7fff)
1079.    IADDCONST:  int: 2147483646 (0x7ffffffe)
1080.    ISUBCONST:  int: -2147483648 (0x80000000)
1081.    IMULCONST:  int: -2147483647 (0x80000001)
1082.    ISHLCONST:  int: -2147483648 (0x80000000)
1083.    ISHRCONST:  int: -1 (0xffffffff)
1084.    IUSHRCONST: int: 1 (0x1)
1085.    IANDCONST:  int: 2147483647 (0x7fffffff)
1086.    IORCONST:   int: -1 (0xffffffff)
1087.    IXORCONST:  int: -2147483648 (0x80000000)
1088.    not IFEQ:   int: 2147483647 (0x7fffffff)
1089.    not IFGT:   int: 2147483647 (0x7fffffff)
1090.    not IFGE:   int: 2147483647 (0x7fffffff)
1091.    LADDCONST:  long: 2147483646 (0x7ffffffe)
1092.    LSUBCONST:  long: -2147483648 (0xffffffff80000000)
1093.    LMULCONST:  long: -2147483647 (0xffffffff80000001)
1094.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1095.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1096.    LUSHRCONST: long: 1 (0x1)
1097.    LANDCONST:  long: 2147483647 (0x7fffffff)
1098.    LORCONST:   long: -1 (0xffffffffffffffff)
1099.    LXORCONST:  long: -2147483648 (0xffffffff80000000)
1100.    not IF_LEQ: int: 2147483647 (0x7fffffff)
1101.    not IF_LGT: int: 2147483647 (0x7fffffff)
1102.    not IF_LGE: int: 2147483647 (0x7fffffff)
1103.    LADDCONST:  long: 2147483647 (0x7fffffff)
1104.    LSUBCONST:  long: -2147483649 (0xffffffff7fffffff)
1105.    LMULCONST:  long: -2147483648 (0xffffffff80000000)
1106.    LSHLCONST:  long: -1 (0xffffffffffffffff)
1107.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1108.    LUSHRCONST: long: -1 (0xffffffffffffffff)
1109.    LANDCONST:  long: 2147483648 (0x80000000)
1110.    LORCONST:   long: -1 (0xffffffffffffffff)
1111.    LXORCONST:  long: -2147483649 (0xffffffff7fffffff)
1112.    not IF_LEQ: long: 2147483648 (0x80000000)
1113.    not IF_LGT: long: 2147483648 (0x80000000)
1114.    not IF_LGE: long: 2147483648 (0x80000000)
1115.    IADDCONST:  int: 2147483647 (0x7fffffff)
1116.    ISUBCONST:  int: 2147483647 (0x7fffffff)
1117.    IMULCONST:  int: -2147483648 (0x80000000)
1118.    ISHLCONST:  int: -1 (0xffffffff)
1119.    ISHRCONST:  int: -1 (0xffffffff)
1120.    IUSHRCONST: int: -1 (0xffffffff)
1121.    IANDCONST:  int: -2147483648 (0x80000000)
1122.    IORCONST:   int: -1 (0xffffffff)
1123.    IXORCONST:  int: 2147483647 (0x7fffffff)
1124.    not IFEQ:   int: -2147483648 (0x80000000)
1125.    not IFLT:   int: -2147483648 (0x80000000)
1126.    not IFLE:   int: -2147483648 (0x80000000)
1127.    LADDCONST:  long: -2147483649 (0xffffffff7fffffff)
1128.    LSUBCONST:  long: 2147483647 (0x7fffffff)
1129.    LMULCONST:  long: 2147483648 (0x80000000)
1130.    LSHLCONST:  long: -1 (0xffffffffffffffff)
1131.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1132.    LUSHRCONST: long: -1 (0xffffffffffffffff)
1133.    LANDCONST:  long: -2147483648 (0xffffffff80000000)
1134.    LORCONST:   long: -1 (0xffffffffffffffff)
1135.    LXORCONST:  long: 2147483647 (0x7fffffff)
1136.    not IF_LEQ: int: -2147483648 (0x80000000)
1137.    not IF_LLT: int: -2147483648 (0x80000000)
1138.    not IF_LLE: int: -2147483648 (0x80000000)
1139.    LADDCONST:  long: -2147483650 (0xffffffff7ffffffe)
1140.    LSUBCONST:  long: 2147483648 (0x80000000)
1141.    LMULCONST:  long: 2147483649 (0x80000001)
1142.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1143.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1144.    LUSHRCONST: long: 1 (0x1)
1145.    LANDCONST:  long: -2147483649 (0xffffffff7fffffff)
1146.    LORCONST:   long: -1 (0xffffffffffffffff)
1147.    LXORCONST:  long: 2147483648 (0x80000000)
1148.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
1149.    not IF_LLT: long: -2147483649 (0xffffffff7fffffff)
1150.    not IF_LLE: long: -2147483649 (0xffffffff7fffffff)
1151.    TESTCONST CALLED WITH int: -24123 (0xffffa1c5)
1152.                      AND long: -4918923241323 (0xfffffb86b953d895)
1153.    not IFEQ:   int: 0 (0x0)
1154.    not IFGT:   int: 0 (0x0)
1155.    not IFGE:   int: 0 (0x0)
1156.    not IF_LEQ: int: 0 (0x0)
1157.    not IF_LGT: int: 0 (0x0)
1158.    not IF_LGE: int: 0 (0x0)
1159.    IADDCONST:  int: -24124 (0xffffa1c4)
1160.    ISUBCONST:  int: -24122 (0xffffa1c6)
1161.    IMULCONST:  int: 24123 (0x5e3b)
1162.    ISHLCONST:  int: -2147483648 (0x80000000)
1163.    ISHRCONST:  int: -1 (0xffffffff)
1164.    IUSHRCONST: int: 1 (0x1)
1165.    IANDCONST:  int: -24123 (0xffffa1c5)
1166.    IORCONST:   int: -1 (0xffffffff)
1167.    IXORCONST:  int: 24122 (0x5e3a)
1168.    not IFEQ:   int: -1 (0xffffffff)
1169.    not IFGT:   int: -1 (0xffffffff)
1170.    not IFGE:   int: -1 (0xffffffff)
1171.    LADDCONST:  long: -4918923241324 (0xfffffb86b953d894)
1172.    LSUBCONST:  long: -4918923241322 (0xfffffb86b953d896)
1173.    LMULCONST:  long: 4918923241323 (0x47946ac276b)
1174.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1175.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1176.    LUSHRCONST: long: 1 (0x1)
1177.    LANDCONST:  long: -4918923241323 (0xfffffb86b953d895)
1178.    LORCONST:   long: -1 (0xffffffffffffffff)
1179.    LXORCONST:  long: 4918923241322 (0x47946ac276a)
1180.    not IF_LEQ: int: -1 (0xffffffff)
1181.    not IF_LGT: int: -1 (0xffffffff)
1182.    not IF_LGE: int: -1 (0xffffffff)
1183.    IADDCONST:  int: -24122 (0xffffa1c6)
1184.    ISUBCONST:  int: -24124 (0xffffa1c4)
1185.    IMULCONST:  int: -24123 (0xffffa1c5)
1186.    ISHLCONST:  int: -48246 (0xffff438a)
1187.    ISHRCONST:  int: -12062 (0xffffd0e2)
1188.    IUSHRCONST: int: 2147471586 (0x7fffd0e2)
1189.    IANDCONST:  int: 1 (0x1)
1190.    IORCONST:   int: -24123 (0xffffa1c5)
1191.    IXORCONST:  int: -24124 (0xffffa1c4)
1192.    not IFEQ:   int: 1 (0x1)
1193.    not IFGT:   int: 1 (0x1)
1194.    not IFGE:   int: 1 (0x1)
1195.    LADDCONST:  long: -4918923241322 (0xfffffb86b953d896)
1196.    LSUBCONST:  long: -4918923241324 (0xfffffb86b953d894)
1197.    LMULCONST:  long: -4918923241323 (0xfffffb86b953d895)
1198.    LSHLCONST:  long: -9837846482646 (0xfffff70d72a7b12a)
1199.    LSHRCONST:  long: -2459461620662 (0xfffffdc35ca9ec4a)
1200.    LUSHRCONST: long: 9223369577393155146 (0x7ffffdc35ca9ec4a)
1201.    LANDCONST:  long: 1 (0x1)
1202.    LORCONST:   long: -4918923241323 (0xfffffb86b953d895)
1203.    LXORCONST:  long: -4918923241324 (0xfffffb86b953d894)
1204.    not IF_LEQ: int: 1 (0x1)
1205.    not IF_LGT: int: 1 (0x1)
1206.    not IF_LGE: int: 1 (0x1)
1207.    IADDCONST:  int: -23868 (0xffffa2c4)
1208.    ISUBCONST:  int: -24378 (0xffffa0c6)
1209.    IMULCONST:  int: -6151365 (0xffa2233b)
1210.    ISHLCONST:  int: -2147483648 (0x80000000)
1211.    ISHRCONST:  int: -1 (0xffffffff)
1212.    IUSHRCONST: int: 1 (0x1)
1213.    IANDCONST:  int: 197 (0xc5)
1214.    IORCONST:   int: -24065 (0xffffa1ff)
1215.    IXORCONST:  int: -24262 (0xffffa13a)
1216.    not IFEQ:   int: 255 (0xff)
1217.    not IFGT:   int: 255 (0xff)
1218.    not IFGE:   int: 255 (0xff)
1219.    LADDCONST:  long: -4918923241068 (0xfffffb86b953d994)
1220.    LSUBCONST:  long: -4918923241578 (0xfffffb86b953d796)
1221.    LMULCONST:  long: -1254325426537365 (0xfffb8b329a84bc6b)
1222.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1223.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1224.    LUSHRCONST: long: 1 (0x1)
1225.    LANDCONST:  long: 149 (0x95)
1226.    LORCONST:   long: -4918923241217 (0xfffffb86b953d8ff)
1227.    LXORCONST:  long: -4918923241366 (0xfffffb86b953d86a)
1228.    not IF_LEQ: int: 255 (0xff)
1229.    not IF_LGT: int: 255 (0xff)
1230.    not IF_LGE: int: 255 (0xff)
1231.    IADDCONST:  int: -23867 (0xffffa2c5)
1232.    ISUBCONST:  int: -24379 (0xffffa0c5)
1233.    IMULCONST:  int: -6175488 (0xffa1c500)
1234.    ISHLCONST:  int: -24123 (0xffffa1c5)
1235.    ISHRCONST:  int: -24123 (0xffffa1c5)
1236.    IUSHRCONST: int: -24123 (0xffffa1c5)
1237.    IANDCONST:  int: 256 (0x100)
1238.    IORCONST:   int: -24123 (0xffffa1c5)
1239.    IXORCONST:  int: -24379 (0xffffa0c5)
1240.    not IFEQ:   int: 256 (0x100)
1241.    not IFGT:   int: 256 (0x100)
1242.    not IFGE:   int: 256 (0x100)
1243.    LADDCONST:  long: -4918923241067 (0xfffffb86b953d995)
1244.    LSUBCONST:  long: -4918923241579 (0xfffffb86b953d795)
1245.    LMULCONST:  long: -1259244349778688 (0xfffb86b953d89500)
1246.    LSHLCONST:  long: -4918923241323 (0xfffffb86b953d895)
1247.    LSHRCONST:  long: -4918923241323 (0xfffffb86b953d895)
1248.    LUSHRCONST: long: -4918923241323 (0xfffffb86b953d895)
1249.    LANDCONST:  long: 0 (0x0)
1250.    LORCONST:   long: -4918923241067 (0xfffffb86b953d995)
1251.    LXORCONST:  long: -4918923241067 (0xfffffb86b953d995)
1252.    not IF_LEQ: int: 256 (0x100)
1253.    not IF_LGT: int: 256 (0x100)
1254.    not IF_LGE: int: 256 (0x100)
1255.    IADDCONST:  int: 8644 (0x21c4)
1256.    ISUBCONST:  int: -56890 (0xffff21c6)
1257.    IMULCONST:  int: -790438341 (0xd0e2de3b)
1258.    ISHLCONST:  int: -2147483648 (0x80000000)
1259.    ISHRCONST:  int: -1 (0xffffffff)
1260.    IUSHRCONST: int: 1 (0x1)
1261.    IANDCONST:  int: 8645 (0x21c5)
1262.    IORCONST:   int: -1 (0xffffffff)
1263.    IXORCONST:  int: -8646 (0xffffde3a)
1264.    not IFEQ:   int: 32767 (0x7fff)
1265.    not IFGT:   int: 32767 (0x7fff)
1266.    not IFGE:   int: 32767 (0x7fff)
1267.    LADDCONST:  long: -4918923208556 (0xfffffb86b9545894)
1268.    LSUBCONST:  long: -4918923274090 (0xfffffb86b9535896)
1269.    LMULCONST:  long: -161178357848430741 (0xfdc3612332f6a76b)
1270.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1271.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1272.    LUSHRCONST: long: 1 (0x1)
1273.    LANDCONST:  long: 22677 (0x5895)
1274.    LORCONST:   long: -4918923231233 (0xfffffb86b953ffff)
1275.    LXORCONST:  long: -4918923253910 (0xfffffb86b953a76a)
1276.    not IF_LEQ: int: 32767 (0x7fff)
1277.    not IF_LGT: int: 32767 (0x7fff)
1278.    not IF_LGE: int: 32767 (0x7fff)
1279.    IADDCONST:  int: 8645 (0x21c5)
1280.    ISUBCONST:  int: -56891 (0xffff21c5)
1281.    IMULCONST:  int: -790462464 (0xd0e28000)
1282.    ISHLCONST:  int: -24123 (0xffffa1c5)
1283.    ISHRCONST:  int: -24123 (0xffffa1c5)
1284.    IUSHRCONST: int: -24123 (0xffffa1c5)
1285.    IANDCONST:  int: 32768 (0x8000)
1286.    IORCONST:   int: -24123 (0xffffa1c5)
1287.    IXORCONST:  int: -56891 (0xffff21c5)
1288.    not IFEQ:   int: 32768 (0x8000)
1289.    not IFGT:   int: 32768 (0x8000)
1290.    not IFGE:   int: 32768 (0x8000)
1291.    LADDCONST:  long: -4918923208555 (0xfffffb86b9545895)
1292.    LSUBCONST:  long: -4918923274091 (0xfffffb86b9535895)
1293.    LMULCONST:  long: -161183276771672064 (0xfdc35ca9ec4a8000)
1294.    LSHLCONST:  long: -4918923241323 (0xfffffb86b953d895)
1295.    LSHRCONST:  long: -4918923241323 (0xfffffb86b953d895)
1296.    LUSHRCONST: long: -4918923241323 (0xfffffb86b953d895)
1297.    LANDCONST:  long: 32768 (0x8000)
1298.    LORCONST:   long: -4918923241323 (0xfffffb86b953d895)
1299.    LXORCONST:  long: -4918923274091 (0xfffffb86b9535895)
1300.    not IF_LEQ: int: 32768 (0x8000)
1301.    not IF_LGT: int: 32768 (0x8000)
1302.    not IF_LGE: int: 32768 (0x8000)
1303.    IADDCONST:  int: -56891 (0xffff21c5)
1304.    ISUBCONST:  int: 8645 (0x21c5)
1305.    IMULCONST:  int: 790462464 (0x2f1d8000)
1306.    ISHLCONST:  int: -24123 (0xffffa1c5)
1307.    ISHRCONST:  int: -24123 (0xffffa1c5)
1308.    IUSHRCONST: int: -24123 (0xffffa1c5)
1309.    IANDCONST:  int: -32768 (0xffff8000)
1310.    IORCONST:   int: -24123 (0xffffa1c5)
1311.    IXORCONST:  int: 8645 (0x21c5)
1312.    not IFEQ:   int: -32768 (0xffff8000)
1313.    not IFLT:   int: -32768 (0xffff8000)
1314.    not IFLE:   int: -32768 (0xffff8000)
1315.    LADDCONST:  long: -4918923274091 (0xfffffb86b9535895)
1316.    LSUBCONST:  long: -4918923208555 (0xfffffb86b9545895)
1317.    LMULCONST:  long: 161183276771672064 (0x23ca35613b58000)
1318.    LSHLCONST:  long: -4918923241323 (0xfffffb86b953d895)
1319.    LSHRCONST:  long: -4918923241323 (0xfffffb86b953d895)
1320.    LUSHRCONST: long: -4918923241323 (0xfffffb86b953d895)
1321.    LANDCONST:  long: -4918923264000 (0xfffffb86b9538000)
1322.    LORCONST:   long: -10091 (0xffffffffffffd895)
1323.    LXORCONST:  long: 4918923253909 (0x47946ac5895)
1324.    not IF_LEQ: int: -32768 (0xffff8000)
1325.    not IF_LGT: int: -32768 (0xffff8000)
1326.    not IF_LGE: int: -32768 (0xffff8000)
1327.    IADDCONST:  int: -56892 (0xffff21c4)
1328.    ISUBCONST:  int: 8646 (0x21c6)
1329.    IMULCONST:  int: 790486587 (0x2f1dde3b)
1330.    ISHLCONST:  int: -2147483648 (0x80000000)
1331.    ISHRCONST:  int: -1 (0xffffffff)
1332.    IUSHRCONST: int: 1 (0x1)
1333.    IANDCONST:  int: -56891 (0xffff21c5)
1334.    IORCONST:   int: -1 (0xffffffff)
1335.    IXORCONST:  int: 56890 (0xde3a)
1336.    not IFEQ:   int: -32769 (0xffff7fff)
1337.    not IFLT:   int: -32769 (0xffff7fff)
1338.    not IFLE:   int: -32769 (0xffff7fff)
1339.    LADDCONST:  long: -4918923274092 (0xfffffb86b9535894)
1340.    LSUBCONST:  long: -4918923208554 (0xfffffb86b9545896)
1341.    LMULCONST:  long: 161188195694913387 (0x23ca7cf5a61a76b)
1342.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1343.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1344.    LUSHRCONST: long: 1 (0x1)
1345.    LANDCONST:  long: -4918923274091 (0xfffffb86b9535895)
1346.    LORCONST:   long: -1 (0xffffffffffffffff)
1347.    LXORCONST:  long: 4918923274090 (0x47946aca76a)
1348.    not IF_LEQ: int: -32769 (0xffff7fff)
1349.    not IF_LGT: int: -32769 (0xffff7fff)
1350.    not IF_LGE: int: -32769 (0xffff7fff)
1351.    IADDCONST:  int: 2147459524 (0x7fffa1c4)
1352.    ISUBCONST:  int: 2147459526 (0x7fffa1c6)
1353.    IMULCONST:  int: -2147459525 (0x80005e3b)
1354.    ISHLCONST:  int: -2147483648 (0x80000000)
1355.    ISHRCONST:  int: -1 (0xffffffff)
1356.    IUSHRCONST: int: 1 (0x1)
1357.    IANDCONST:  int: 2147459525 (0x7fffa1c5)
1358.    IORCONST:   int: -1 (0xffffffff)
1359.    IXORCONST:  int: -2147459526 (0x80005e3a)
1360.    not IFEQ:   int: 2147483647 (0x7fffffff)
1361.    not IFGT:   int: 2147483647 (0x7fffffff)
1362.    not IFGE:   int: 2147483647 (0x7fffffff)
1363.    LADDCONST:  long: -4916775757676 (0xfffffb873953d894)
1364.    LSUBCONST:  long: -4921070724970 (0xfffffb863953d896)
1365.    LMULCONST:  long: 6677132646195930987 (0x5ca9f0c3c6ac276b)
1366.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1367.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1368.    LUSHRCONST: long: 1 (0x1)
1369.    LANDCONST:  long: 961796245 (0x3953d895)
1370.    LORCONST:   long: -4917737553921 (0xfffffb86ffffffff)
1371.    LXORCONST:  long: -4918699350166 (0xfffffb86c6ac276a)
1372.    not IF_LEQ: int: 2147483647 (0x7fffffff)
1373.    not IF_LGT: int: 2147483647 (0x7fffffff)
1374.    not IF_LGE: int: 2147483647 (0x7fffffff)
1375.    LADDCONST:  long: -4916775757675 (0xfffffb873953d895)
1376.    LSUBCONST:  long: -4921070724971 (0xfffffb863953d895)
1377.    LMULCONST:  long: 6677127727272689664 (0x5ca9ec4a80000000)
1378.    LSHLCONST:  long: -4918923241323 (0xfffffb86b953d895)
1379.    LSHRCONST:  long: -4918923241323 (0xfffffb86b953d895)
1380.    LUSHRCONST: long: -4918923241323 (0xfffffb86b953d895)
1381.    LANDCONST:  long: 2147483648 (0x80000000)
1382.    LORCONST:   long: -4918923241323 (0xfffffb86b953d895)
1383.    LXORCONST:  long: -4921070724971 (0xfffffb863953d895)
1384.    not IF_LEQ: long: 2147483648 (0x80000000)
1385.    not IF_LGT: long: 2147483648 (0x80000000)
1386.    not IF_LGE: long: 2147483648 (0x80000000)
1387.    IADDCONST:  int: 2147459525 (0x7fffa1c5)
1388.    ISUBCONST:  int: 2147459525 (0x7fffa1c5)
1389.    IMULCONST:  int: -2147483648 (0x80000000)
1390.    ISHLCONST:  int: -24123 (0xffffa1c5)
1391.    ISHRCONST:  int: -24123 (0xffffa1c5)
1392.    IUSHRCONST: int: -24123 (0xffffa1c5)
1393.    IANDCONST:  int: -2147483648 (0x80000000)
1394.    IORCONST:   int: -24123 (0xffffa1c5)
1395.    IXORCONST:  int: 2147459525 (0x7fffa1c5)
1396.    not IFEQ:   int: -2147483648 (0x80000000)
1397.    not IFLT:   int: -2147483648 (0x80000000)
1398.    not IFLE:   int: -2147483648 (0x80000000)
1399.    LADDCONST:  long: -4921070724971 (0xfffffb863953d895)
1400.    LSUBCONST:  long: -4916775757675 (0xfffffb873953d895)
1401.    LMULCONST:  long: -6677127727272689664 (0xa35613b580000000)
1402.    LSHLCONST:  long: -4918923241323 (0xfffffb86b953d895)
1403.    LSHRCONST:  long: -4918923241323 (0xfffffb86b953d895)
1404.    LUSHRCONST: long: -4918923241323 (0xfffffb86b953d895)
1405.    LANDCONST:  long: -4919885037568 (0xfffffb8680000000)
1406.    LORCONST:   long: -1185687403 (0xffffffffb953d895)
1407.    LXORCONST:  long: 4918699350165 (0x4793953d895)
1408.    not IF_LEQ: int: -2147483648 (0x80000000)
1409.    not IF_LGT: int: -2147483648 (0x80000000)
1410.    not IF_LGE: int: -2147483648 (0x80000000)
1411.    LADDCONST:  long: -4921070724972 (0xfffffb863953d894)
1412.    LSUBCONST:  long: -4916775757674 (0xfffffb873953d896)
1413.    LMULCONST:  long: -6677122808349448341 (0xa356182ec6ac276b)
1414.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1415.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1416.    LUSHRCONST: long: 1 (0x1)
1417.    LANDCONST:  long: -4921070724971 (0xfffffb863953d895)
1418.    LORCONST:   long: -1 (0xffffffffffffffff)
1419.    LXORCONST:  long: 4921070724970 (0x479c6ac276a)
1420.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
1421.    not IF_LGT: long: -2147483649 (0xffffffff7fffffff)
1422.    not IF_LGE: long: -2147483649 (0xffffffff7fffffff)
1423.    TESTCONST CALLED WITH int: -243511 (0xfffc48c9)
1424.                      AND long: -4423423234231423 (0xfff048eb856eb381)
1425.    not IFEQ:   int: 0 (0x0)
1426.    not IFGT:   int: 0 (0x0)
1427.    not IFGE:   int: 0 (0x0)
1428.    not IF_LEQ: int: 0 (0x0)
1429.    not IF_LGT: int: 0 (0x0)
1430.    not IF_LGE: int: 0 (0x0)
1431.    IADDCONST:  int: -243512 (0xfffc48c8)
1432.    ISUBCONST:  int: -243510 (0xfffc48ca)
1433.    IMULCONST:  int: 243511 (0x3b737)
1434.    ISHLCONST:  int: -2147483648 (0x80000000)
1435.    ISHRCONST:  int: -1 (0xffffffff)
1436.    IUSHRCONST: int: 1 (0x1)
1437.    IANDCONST:  int: -243511 (0xfffc48c9)
1438.    IORCONST:   int: -1 (0xffffffff)
1439.    IXORCONST:  int: 243510 (0x3b736)
1440.    not IFEQ:   int: -1 (0xffffffff)
1441.    not IFGT:   int: -1 (0xffffffff)
1442.    not IFGE:   int: -1 (0xffffffff)
1443.    LADDCONST:  long: -4423423234231424 (0xfff048eb856eb380)
1444.    LSUBCONST:  long: -4423423234231422 (0xfff048eb856eb382)
1445.    LMULCONST:  long: 4423423234231423 (0xfb7147a914c7f)
1446.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1447.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1448.    LUSHRCONST: long: 1 (0x1)
1449.    LANDCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1450.    LORCONST:   long: -1 (0xffffffffffffffff)
1451.    LXORCONST:  long: 4423423234231422 (0xfb7147a914c7e)
1452.    not IF_LEQ: int: -1 (0xffffffff)
1453.    not IF_LGT: int: -1 (0xffffffff)
1454.    not IF_LGE: int: -1 (0xffffffff)
1455.    IADDCONST:  int: -243510 (0xfffc48ca)
1456.    ISUBCONST:  int: -243512 (0xfffc48c8)
1457.    IMULCONST:  int: -243511 (0xfffc48c9)
1458.    ISHLCONST:  int: -487022 (0xfff89192)
1459.    ISHRCONST:  int: -121756 (0xfffe2464)
1460.    IUSHRCONST: int: 2147361892 (0x7ffe2464)
1461.    IANDCONST:  int: 1 (0x1)
1462.    IORCONST:   int: -243511 (0xfffc48c9)
1463.    IXORCONST:  int: -243512 (0xfffc48c8)
1464.    not IFEQ:   int: 1 (0x1)
1465.    not IFGT:   int: 1 (0x1)
1466.    not IFGE:   int: 1 (0x1)
1467.    LADDCONST:  long: -4423423234231422 (0xfff048eb856eb382)
1468.    LSUBCONST:  long: -4423423234231424 (0xfff048eb856eb380)
1469.    LMULCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1470.    LSHLCONST:  long: -8846846468462846 (0xffe091d70add6702)
1471.    LSHRCONST:  long: -2211711617115712 (0xfff82475c2b759c0)
1472.    LUSHRCONST: long: 9221160325237660096 (0x7ff82475c2b759c0)
1473.    LANDCONST:  long: 1 (0x1)
1474.    LORCONST:   long: -4423423234231423 (0xfff048eb856eb381)
1475.    LXORCONST:  long: -4423423234231424 (0xfff048eb856eb380)
1476.    not IF_LEQ: int: 1 (0x1)
1477.    not IF_LGT: int: 1 (0x1)
1478.    not IF_LGE: int: 1 (0x1)
1479.    IADDCONST:  int: -243256 (0xfffc49c8)
1480.    ISUBCONST:  int: -243766 (0xfffc47ca)
1481.    IMULCONST:  int: -62095305 (0xfc4c8037)
1482.    ISHLCONST:  int: -2147483648 (0x80000000)
1483.    ISHRCONST:  int: -1 (0xffffffff)
1484.    IUSHRCONST: int: 1 (0x1)
1485.    IANDCONST:  int: 201 (0xc9)
1486.    IORCONST:   int: -243457 (0xfffc48ff)
1487.    IXORCONST:  int: -243658 (0xfffc4836)
1488.    not IFEQ:   int: 255 (0xff)
1489.    not IFGT:   int: 255 (0xff)
1490.    not IFGE:   int: 255 (0xff)
1491.    LADDCONST:  long: -4423423234231168 (0xfff048eb856eb480)
1492.    LSUBCONST:  long: -4423423234231678 (0xfff048eb856eb282)
1493.    LMULCONST:  long: -1127972924729012865 (0xf058a299e944cd7f)
1494.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1495.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1496.    LUSHRCONST: long: 1 (0x1)
1497.    LANDCONST:  long: 129 (0x81)
1498.    LORCONST:   long: -4423423234231297 (0xfff048eb856eb3ff)
1499.    LXORCONST:  long: -4423423234231426 (0xfff048eb856eb37e)
1500.    not IF_LEQ: int: 255 (0xff)
1501.    not IF_LGT: int: 255 (0xff)
1502.    not IF_LGE: int: 255 (0xff)
1503.    IADDCONST:  int: -243255 (0xfffc49c9)
1504.    ISUBCONST:  int: -243767 (0xfffc47c9)
1505.    IMULCONST:  int: -62338816 (0xfc48c900)
1506.    ISHLCONST:  int: -243511 (0xfffc48c9)
1507.    ISHRCONST:  int: -243511 (0xfffc48c9)
1508.    IUSHRCONST: int: -243511 (0xfffc48c9)
1509.    IANDCONST:  int: 0 (0x0)
1510.    IORCONST:   int: -243255 (0xfffc49c9)
1511.    IXORCONST:  int: -243255 (0xfffc49c9)
1512.    not IFEQ:   int: 256 (0x100)
1513.    not IFGT:   int: 256 (0x100)
1514.    not IFGE:   int: 256 (0x100)
1515.    LADDCONST:  long: -4423423234231167 (0xfff048eb856eb481)
1516.    LSUBCONST:  long: -4423423234231679 (0xfff048eb856eb281)
1517.    LMULCONST:  long: -1132396347963244288 (0xf048eb856eb38100)
1518.    LSHLCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1519.    LSHRCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1520.    LUSHRCONST: long: -4423423234231423 (0xfff048eb856eb381)
1521.    LANDCONST:  long: 256 (0x100)
1522.    LORCONST:   long: -4423423234231423 (0xfff048eb856eb381)
1523.    LXORCONST:  long: -4423423234231679 (0xfff048eb856eb281)
1524.    not IF_LEQ: int: 256 (0x100)
1525.    not IF_LGT: int: 256 (0x100)
1526.    not IF_LGE: int: 256 (0x100)
1527.    IADDCONST:  int: -210744 (0xfffcc8c8)
1528.    ISUBCONST:  int: -276278 (0xfffbc8ca)
1529.    IMULCONST:  int: 610809655 (0x24683737)
1530.    ISHLCONST:  int: -2147483648 (0x80000000)
1531.    ISHRCONST:  int: -1 (0xffffffff)
1532.    IUSHRCONST: int: 1 (0x1)
1533.    IANDCONST:  int: 18633 (0x48c9)
1534.    IORCONST:   int: -229377 (0xfffc7fff)
1535.    IXORCONST:  int: -248010 (0xfffc3736)
1536.    not IFEQ:   int: 32767 (0x7fff)
1537.    not IFGT:   int: 32767 (0x7fff)
1538.    not IFGE:   int: 32767 (0x7fff)
1539.    LADDCONST:  long: -4423423234198656 (0xfff048eb856f3380)
1540.    LSUBCONST:  long: -4423423234264190 (0xfff048eb856e3382)
1541.    LMULCONST:  long: 2631643473615375487 (0x248579cbd451cc7f)
1542.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1543.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1544.    LUSHRCONST: long: 1 (0x1)
1545.    LANDCONST:  long: 13185 (0x3381)
1546.    LORCONST:   long: -4423423234211841 (0xfff048eb856effff)
1547.    LXORCONST:  long: -4423423234225026 (0xfff048eb856ecc7e)
1548.    not IF_LEQ: int: 32767 (0x7fff)
1549.    not IF_LGT: int: 32767 (0x7fff)
1550.    not IF_LGE: int: 32767 (0x7fff)
1551.    IADDCONST:  int: -210743 (0xfffcc8c9)
1552.    ISUBCONST:  int: -276279 (0xfffbc8c9)
1553.    IMULCONST:  int: 610566144 (0x24648000)
1554.    ISHLCONST:  int: -243511 (0xfffc48c9)
1555.    ISHRCONST:  int: -243511 (0xfffc48c9)
1556.    IUSHRCONST: int: -243511 (0xfffc48c9)
1557.    IANDCONST:  int: 0 (0x0)
1558.    IORCONST:   int: -210743 (0xfffcc8c9)
1559.    IXORCONST:  int: -210743 (0xfffcc8c9)
1560.    not IFEQ:   int: 32768 (0x8000)
1561.    not IFGT:   int: 32768 (0x8000)
1562.    not IFGE:   int: 32768 (0x8000)
1563.    LADDCONST:  long: -4423423234198655 (0xfff048eb856f3381)
1564.    LSUBCONST:  long: -4423423234264191 (0xfff048eb856e3381)
1565.    LMULCONST:  long: 2627220050381144064 (0x2475c2b759c08000)
1566.    LSHLCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1567.    LSHRCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1568.    LUSHRCONST: long: -4423423234231423 (0xfff048eb856eb381)
1569.    LANDCONST:  long: 32768 (0x8000)
1570.    LORCONST:   long: -4423423234231423 (0xfff048eb856eb381)
1571.    LXORCONST:  long: -4423423234264191 (0xfff048eb856e3381)
1572.    not IF_LEQ: int: 32768 (0x8000)
1573.    not IF_LGT: int: 32768 (0x8000)
1574.    not IF_LGE: int: 32768 (0x8000)
1575.    IADDCONST:  int: -276279 (0xfffbc8c9)
1576.    ISUBCONST:  int: -210743 (0xfffcc8c9)
1577.    IMULCONST:  int: -610566144 (0xdb9b8000)
1578.    ISHLCONST:  int: -243511 (0xfffc48c9)
1579.    ISHRCONST:  int: -243511 (0xfffc48c9)
1580.    IUSHRCONST: int: -243511 (0xfffc48c9)
1581.    IANDCONST:  int: -262144 (0xfffc0000)
1582.    IORCONST:   int: -14135 (0xffffc8c9)
1583.    IXORCONST:  int: 248009 (0x3c8c9)
1584.    not IFEQ:   int: -32768 (0xffff8000)
1585.    not IFGT:   int: -32768 (0xffff8000)
1586.    not IFGE:   int: -32768 (0xffff8000)
1587.    LADDCONST:  long: -4423423234264191 (0xfff048eb856e3381)
1588.    LSUBCONST:  long: -4423423234198655 (0xfff048eb856f3381)
1589.    LMULCONST:  long: -2627220050381144064 (0xdb8a3d48a63f8000)
1590.    LSHLCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1591.    LSHRCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1592.    LUSHRCONST: long: -4423423234231423 (0xfff048eb856eb381)
1593.    LANDCONST:  long: -4423423234244608 (0xfff048eb856e8000)
1594.    LORCONST:   long: -19583 (0xffffffffffffb381)
1595.    LXORCONST:  long: 4423423234225025 (0xfb7147a913381)
1596.    not IF_LEQ: int: -32768 (0xffff8000)
1597.    not IF_LGT: int: -32768 (0xffff8000)
1598.    not IF_LGE: int: -32768 (0xffff8000)
1599.    IADDCONST:  int: -276280 (0xfffbc8c8)
1600.    ISUBCONST:  int: -210742 (0xfffcc8ca)
1601.    IMULCONST:  int: -610322633 (0xdb9f3737)
1602.    ISHLCONST:  int: -2147483648 (0x80000000)
1603.    ISHRCONST:  int: -1 (0xffffffff)
1604.    IUSHRCONST: int: 1 (0x1)
1605.    IANDCONST:  int: -243511 (0xfffc48c9)
1606.    IORCONST:   int: -32769 (0xffff7fff)
1607.    IXORCONST:  int: 210742 (0x33736)
1608.    not IFEQ:   int: -32769 (0xffff7fff)
1609.    not IFGT:   int: -32769 (0xffff7fff)
1610.    not IFGE:   int: -32769 (0xffff7fff)
1611.    LADDCONST:  long: -4423423234264192 (0xfff048eb856e3380)
1612.    LSUBCONST:  long: -4423423234198654 (0xfff048eb856f3382)
1613.    LMULCONST:  long: -2622796627146912641 (0xdb99f45d20d0cc7f)
1614.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1615.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1616.    LUSHRCONST: long: 1 (0x1)
1617.    LANDCONST:  long: -4423423234264191 (0xfff048eb856e3381)
1618.    LORCONST:   long: -1 (0xffffffffffffffff)
1619.    LXORCONST:  long: 4423423234264190 (0xfb7147a91cc7e)
1620.    not IF_LEQ: int: -32769 (0xffff7fff)
1621.    not IF_LGT: int: -32769 (0xffff7fff)
1622.    not IF_LGE: int: -32769 (0xffff7fff)
1623.    IADDCONST:  int: 2147240136 (0x7ffc48c8)
1624.    ISUBCONST:  int: 2147240138 (0x7ffc48ca)
1625.    IMULCONST:  int: -2147240137 (0x8003b737)
1626.    ISHLCONST:  int: -2147483648 (0x80000000)
1627.    ISHRCONST:  int: -1 (0xffffffff)
1628.    IUSHRCONST: int: 1 (0x1)
1629.    IANDCONST:  int: 2147240137 (0x7ffc48c9)
1630.    IORCONST:   int: -1 (0xffffffff)
1631.    IXORCONST:  int: -2147240138 (0x8003b736)
1632.    not IFEQ:   int: 2147483647 (0x7fffffff)
1633.    not IFGT:   int: 2147483647 (0x7fffffff)
1634.    not IFGE:   int: 2147483647 (0x7fffffff)
1635.    LADDCONST:  long: -4423421086747776 (0xfff048ec056eb380)
1636.    LSUBCONST:  long: -4423425381715070 (0xfff048eb056eb382)
1637.    LMULCONST:  long: -4411538803063174017 (0xc2c710d4fa914c7f)
1638.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1639.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1640.    LUSHRCONST: long: 1 (0x1)
1641.    LANDCONST:  long: 91140993 (0x56eb381)
1642.    LORCONST:   long: -4423421177888769 (0xfff048ebffffffff)
1643.    LXORCONST:  long: -4423421269029762 (0xfff048ebfa914c7e)
1644.    not IF_LEQ: int: 2147483647 (0x7fffffff)
1645.    not IF_LGT: int: 2147483647 (0x7fffffff)
1646.    not IF_LGE: int: 2147483647 (0x7fffffff)
1647.    LADDCONST:  long: -4423421086747775 (0xfff048ec056eb381)
1648.    LSUBCONST:  long: -4423425381715071 (0xfff048eb056eb381)
1649.    LMULCONST:  long: -4415962226297405440 (0xc2b759c080000000)
1650.    LSHLCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1651.    LSHRCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1652.    LUSHRCONST: long: -4423423234231423 (0xfff048eb856eb381)
1653.    LANDCONST:  long: 2147483648 (0x80000000)
1654.    LORCONST:   long: -4423423234231423 (0xfff048eb856eb381)
1655.    LXORCONST:  long: -4423425381715071 (0xfff048eb056eb381)
1656.    not IF_LEQ: long: 2147483648 (0x80000000)
1657.    not IF_LGT: long: 2147483648 (0x80000000)
1658.    not IF_LGE: long: 2147483648 (0x80000000)
1659.    IADDCONST:  int: 2147240137 (0x7ffc48c9)
1660.    ISUBCONST:  int: 2147240137 (0x7ffc48c9)
1661.    IMULCONST:  int: -2147483648 (0x80000000)
1662.    ISHLCONST:  int: -243511 (0xfffc48c9)
1663.    ISHRCONST:  int: -243511 (0xfffc48c9)
1664.    IUSHRCONST: int: -243511 (0xfffc48c9)
1665.    IANDCONST:  int: -2147483648 (0x80000000)
1666.    IORCONST:   int: -243511 (0xfffc48c9)
1667.    IXORCONST:  int: 2147240137 (0x7ffc48c9)
1668.    not IFEQ:   int: -2147483648 (0x80000000)
1669.    not IFLT:   int: -2147483648 (0x80000000)
1670.    not IFLE:   int: -2147483648 (0x80000000)
1671.    LADDCONST:  long: -4423425381715071 (0xfff048eb056eb381)
1672.    LSUBCONST:  long: -4423421086747775 (0xfff048ec056eb381)
1673.    LMULCONST:  long: 4415962226297405440 (0x3d48a63f80000000)
1674.    LSHLCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1675.    LSHRCONST:  long: -4423423234231423 (0xfff048eb856eb381)
1676.    LUSHRCONST: long: -4423423234231423 (0xfff048eb856eb381)
1677.    LANDCONST:  long: -4423423325372416 (0xfff048eb80000000)
1678.    LORCONST:   long: -2056342655 (0xffffffff856eb381)
1679.    LXORCONST:  long: 4423421269029761 (0xfb714056eb381)
1680.    not IF_LEQ: int: -2147483648 (0x80000000)
1681.    not IF_LGT: int: -2147483648 (0x80000000)
1682.    not IF_LGE: int: -2147483648 (0x80000000)
1683.    LADDCONST:  long: -4423425381715072 (0xfff048eb056eb380)
1684.    LSUBCONST:  long: -4423421086747774 (0xfff048ec056eb382)
1685.    LMULCONST:  long: 4420385649531636863 (0x3d585d53fa914c7f)
1686.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1687.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1688.    LUSHRCONST: long: 1 (0x1)
1689.    LANDCONST:  long: -4423425381715071 (0xfff048eb056eb381)
1690.    LORCONST:   long: -1 (0xffffffffffffffff)
1691.    LXORCONST:  long: 4423425381715070 (0xfb714fa914c7e)
1692.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
1693.    not IF_LGT: long: -2147483649 (0xffffffff7fffffff)
1694.    not IF_LGE: long: -2147483649 (0xffffffff7fffffff)
1695.    TESTCONST CALLED WITH int: 2147483647 (0x7fffffff)
1696.                      AND long: 9223372036854775807 (0x7fffffffffffffff)
1697.    not IFEQ:   int: 0 (0x0)
1698.    not IFLT:   int: 0 (0x0)
1699.    not IFLE:   int: 0 (0x0)
1700.    not IF_LEQ: int: 0 (0x0)
1701.    not IF_LLT: int: 0 (0x0)
1702.    not IF_LLE: int: 0 (0x0)
1703.    IADDCONST:  int: 2147483646 (0x7ffffffe)
1704.    ISUBCONST:  int: -2147483648 (0x80000000)
1705.    IMULCONST:  int: -2147483647 (0x80000001)
1706.    ISHLCONST:  int: -2147483648 (0x80000000)
1707.    ISHRCONST:  int: 0 (0x0)
1708.    IUSHRCONST: int: 0 (0x0)
1709.    IANDCONST:  int: 2147483647 (0x7fffffff)
1710.    IORCONST:   int: -1 (0xffffffff)
1711.    IXORCONST:  int: -2147483648 (0x80000000)
1712.    not IFEQ:   int: -1 (0xffffffff)
1713.    not IFLT:   int: -1 (0xffffffff)
1714.    not IFLE:   int: -1 (0xffffffff)
1715.    LADDCONST:  long: 9223372036854775806 (0x7ffffffffffffffe)
1716.    LSUBCONST:  long: -9223372036854775808 (0x8000000000000000)
1717.    LMULCONST:  long: -9223372036854775807 (0x8000000000000001)
1718.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1719.    LSHRCONST:  long: 0 (0x0)
1720.    LUSHRCONST: long: 0 (0x0)
1721.    LANDCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1722.    LORCONST:   long: -1 (0xffffffffffffffff)
1723.    LXORCONST:  long: -9223372036854775808 (0x8000000000000000)
1724.    not IF_LEQ: int: -1 (0xffffffff)
1725.    not IF_LLT: int: -1 (0xffffffff)
1726.    not IF_LLE: int: -1 (0xffffffff)
1727.    IADDCONST:  int: -2147483648 (0x80000000)
1728.    ISUBCONST:  int: 2147483646 (0x7ffffffe)
1729.    IMULCONST:  int: 2147483647 (0x7fffffff)
1730.    ISHLCONST:  int: -2 (0xfffffffe)
1731.    ISHRCONST:  int: 1073741823 (0x3fffffff)
1732.    IUSHRCONST: int: 1073741823 (0x3fffffff)
1733.    IANDCONST:  int: 1 (0x1)
1734.    IORCONST:   int: 2147483647 (0x7fffffff)
1735.    IXORCONST:  int: 2147483646 (0x7ffffffe)
1736.    not IFEQ:   int: 1 (0x1)
1737.    not IFLT:   int: 1 (0x1)
1738.    not IFLE:   int: 1 (0x1)
1739.    LADDCONST:  long: -9223372036854775808 (0x8000000000000000)
1740.    LSUBCONST:  long: 9223372036854775806 (0x7ffffffffffffffe)
1741.    LMULCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1742.    LSHLCONST:  long: -2 (0xfffffffffffffffe)
1743.    LSHRCONST:  long: 4611686018427387903 (0x3fffffffffffffff)
1744.    LUSHRCONST: long: 4611686018427387903 (0x3fffffffffffffff)
1745.    LANDCONST:  long: 1 (0x1)
1746.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1747.    LXORCONST:  long: 9223372036854775806 (0x7ffffffffffffffe)
1748.    not IF_LEQ: int: 1 (0x1)
1749.    not IF_LLT: int: 1 (0x1)
1750.    not IF_LLE: int: 1 (0x1)
1751.    IADDCONST:  int: -2147483394 (0x800000fe)
1752.    ISUBCONST:  int: 2147483392 (0x7fffff00)
1753.    IMULCONST:  int: 2147483393 (0x7fffff01)
1754.    ISHLCONST:  int: -2147483648 (0x80000000)
1755.    ISHRCONST:  int: 0 (0x0)
1756.    IUSHRCONST: int: 0 (0x0)
1757.    IANDCONST:  int: 255 (0xff)
1758.    IORCONST:   int: 2147483647 (0x7fffffff)
1759.    IXORCONST:  int: 2147483392 (0x7fffff00)
1760.    not IFEQ:   int: 255 (0xff)
1761.    not IFLT:   int: 255 (0xff)
1762.    not IFLE:   int: 255 (0xff)
1763.    LADDCONST:  long: -9223372036854775554 (0x80000000000000fe)
1764.    LSUBCONST:  long: 9223372036854775552 (0x7fffffffffffff00)
1765.    LMULCONST:  long: 9223372036854775553 (0x7fffffffffffff01)
1766.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1767.    LSHRCONST:  long: 0 (0x0)
1768.    LUSHRCONST: long: 0 (0x0)
1769.    LANDCONST:  long: 255 (0xff)
1770.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1771.    LXORCONST:  long: 9223372036854775552 (0x7fffffffffffff00)
1772.    not IF_LEQ: int: 255 (0xff)
1773.    not IF_LLT: int: 255 (0xff)
1774.    not IF_LLE: int: 255 (0xff)
1775.    IADDCONST:  int: -2147483393 (0x800000ff)
1776.    ISUBCONST:  int: 2147483391 (0x7ffffeff)
1777.    IMULCONST:  int: -256 (0xffffff00)
1778.    ISHLCONST:  int: 2147483647 (0x7fffffff)
1779.    ISHRCONST:  int: 2147483647 (0x7fffffff)
1780.    IUSHRCONST: int: 2147483647 (0x7fffffff)
1781.    IANDCONST:  int: 256 (0x100)
1782.    IORCONST:   int: 2147483647 (0x7fffffff)
1783.    IXORCONST:  int: 2147483391 (0x7ffffeff)
1784.    not IFEQ:   int: 256 (0x100)
1785.    not IFLT:   int: 256 (0x100)
1786.    not IFLE:   int: 256 (0x100)
1787.    LADDCONST:  long: -9223372036854775553 (0x80000000000000ff)
1788.    LSUBCONST:  long: 9223372036854775551 (0x7ffffffffffffeff)
1789.    LMULCONST:  long: -256 (0xffffffffffffff00)
1790.    LSHLCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1791.    LSHRCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1792.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
1793.    LANDCONST:  long: 256 (0x100)
1794.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1795.    LXORCONST:  long: 9223372036854775551 (0x7ffffffffffffeff)
1796.    not IF_LEQ: int: 256 (0x100)
1797.    not IF_LLT: int: 256 (0x100)
1798.    not IF_LLE: int: 256 (0x100)
1799.    IADDCONST:  int: -2147450882 (0x80007ffe)
1800.    ISUBCONST:  int: 2147450880 (0x7fff8000)
1801.    IMULCONST:  int: 2147450881 (0x7fff8001)
1802.    ISHLCONST:  int: -2147483648 (0x80000000)
1803.    ISHRCONST:  int: 0 (0x0)
1804.    IUSHRCONST: int: 0 (0x0)
1805.    IANDCONST:  int: 32767 (0x7fff)
1806.    IORCONST:   int: 2147483647 (0x7fffffff)
1807.    IXORCONST:  int: 2147450880 (0x7fff8000)
1808.    not IFEQ:   int: 32767 (0x7fff)
1809.    not IFLT:   int: 32767 (0x7fff)
1810.    not IFLE:   int: 32767 (0x7fff)
1811.    LADDCONST:  long: -9223372036854743042 (0x8000000000007ffe)
1812.    LSUBCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
1813.    LMULCONST:  long: 9223372036854743041 (0x7fffffffffff8001)
1814.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1815.    LSHRCONST:  long: 0 (0x0)
1816.    LUSHRCONST: long: 0 (0x0)
1817.    LANDCONST:  long: 32767 (0x7fff)
1818.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1819.    LXORCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
1820.    not IF_LEQ: int: 32767 (0x7fff)
1821.    not IF_LLT: int: 32767 (0x7fff)
1822.    not IF_LLE: int: 32767 (0x7fff)
1823.    IADDCONST:  int: -2147450881 (0x80007fff)
1824.    ISUBCONST:  int: 2147450879 (0x7fff7fff)
1825.    IMULCONST:  int: -32768 (0xffff8000)
1826.    ISHLCONST:  int: 2147483647 (0x7fffffff)
1827.    ISHRCONST:  int: 2147483647 (0x7fffffff)
1828.    IUSHRCONST: int: 2147483647 (0x7fffffff)
1829.    IANDCONST:  int: 32768 (0x8000)
1830.    IORCONST:   int: 2147483647 (0x7fffffff)
1831.    IXORCONST:  int: 2147450879 (0x7fff7fff)
1832.    not IFEQ:   int: 32768 (0x8000)
1833.    not IFLT:   int: 32768 (0x8000)
1834.    not IFLE:   int: 32768 (0x8000)
1835.    LADDCONST:  long: -9223372036854743041 (0x8000000000007fff)
1836.    LSUBCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
1837.    LMULCONST:  long: -32768 (0xffffffffffff8000)
1838.    LSHLCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1839.    LSHRCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1840.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
1841.    LANDCONST:  long: 32768 (0x8000)
1842.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1843.    LXORCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
1844.    not IF_LEQ: int: 32768 (0x8000)
1845.    not IF_LLT: int: 32768 (0x8000)
1846.    not IF_LLE: int: 32768 (0x8000)
1847.    IADDCONST:  int: 2147450879 (0x7fff7fff)
1848.    ISUBCONST:  int: -2147450881 (0x80007fff)
1849.    IMULCONST:  int: 32768 (0x8000)
1850.    ISHLCONST:  int: 2147483647 (0x7fffffff)
1851.    ISHRCONST:  int: 2147483647 (0x7fffffff)
1852.    IUSHRCONST: int: 2147483647 (0x7fffffff)
1853.    IANDCONST:  int: 2147450880 (0x7fff8000)
1854.    IORCONST:   int: -1 (0xffffffff)
1855.    IXORCONST:  int: -2147450881 (0x80007fff)
1856.    not IFEQ:   int: -32768 (0xffff8000)
1857.    not IFLT:   int: -32768 (0xffff8000)
1858.    not IFLE:   int: -32768 (0xffff8000)
1859.    LADDCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
1860.    LSUBCONST:  long: -9223372036854743041 (0x8000000000007fff)
1861.    LMULCONST:  long: 32768 (0x8000)
1862.    LSHLCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1863.    LSHRCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1864.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
1865.    LANDCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
1866.    LORCONST:   long: -1 (0xffffffffffffffff)
1867.    LXORCONST:  long: -9223372036854743041 (0x8000000000007fff)
1868.    not IF_LEQ: int: -32768 (0xffff8000)
1869.    not IF_LLT: int: -32768 (0xffff8000)
1870.    not IF_LLE: int: -32768 (0xffff8000)
1871.    IADDCONST:  int: 2147450878 (0x7fff7ffe)
1872.    ISUBCONST:  int: -2147450880 (0x80008000)
1873.    IMULCONST:  int: -2147450879 (0x80008001)
1874.    ISHLCONST:  int: -2147483648 (0x80000000)
1875.    ISHRCONST:  int: 0 (0x0)
1876.    IUSHRCONST: int: 0 (0x0)
1877.    IANDCONST:  int: 2147450879 (0x7fff7fff)
1878.    IORCONST:   int: -1 (0xffffffff)
1879.    IXORCONST:  int: -2147450880 (0x80008000)
1880.    not IFEQ:   int: -32769 (0xffff7fff)
1881.    not IFLT:   int: -32769 (0xffff7fff)
1882.    not IFLE:   int: -32769 (0xffff7fff)
1883.    LADDCONST:  long: 9223372036854743038 (0x7fffffffffff7ffe)
1884.    LSUBCONST:  long: -9223372036854743040 (0x8000000000008000)
1885.    LMULCONST:  long: -9223372036854743039 (0x8000000000008001)
1886.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1887.    LSHRCONST:  long: 0 (0x0)
1888.    LUSHRCONST: long: 0 (0x0)
1889.    LANDCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
1890.    LORCONST:   long: -1 (0xffffffffffffffff)
1891.    LXORCONST:  long: -9223372036854743040 (0x8000000000008000)
1892.    not IF_LEQ: int: -32769 (0xffff7fff)
1893.    not IF_LLT: int: -32769 (0xffff7fff)
1894.    not IF_LLE: int: -32769 (0xffff7fff)
1895.    IADDCONST:  int: -2 (0xfffffffe)
1896.    ISUBCONST:  int: 0 (0x0)
1897.    IMULCONST:  int: 1 (0x1)
1898.    ISHLCONST:  int: -2147483648 (0x80000000)
1899.    ISHRCONST:  int: 0 (0x0)
1900.    IUSHRCONST: int: 0 (0x0)
1901.    IANDCONST:  int: 2147483647 (0x7fffffff)
1902.    IORCONST:   int: 2147483647 (0x7fffffff)
1903.    IXORCONST:  int: 0 (0x0)
1904.    not IFNE:   int: 2147483647 (0x7fffffff)
1905.    not IFLT:   int: 2147483647 (0x7fffffff)
1906.    not IFGT:   int: 2147483647 (0x7fffffff)
1907.    LADDCONST:  long: -9223372034707292162 (0x800000007ffffffe)
1908.    LSUBCONST:  long: 9223372034707292160 (0x7fffffff80000000)
1909.    LMULCONST:  long: 9223372034707292161 (0x7fffffff80000001)
1910.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1911.    LSHRCONST:  long: 0 (0x0)
1912.    LUSHRCONST: long: 0 (0x0)
1913.    LANDCONST:  long: 2147483647 (0x7fffffff)
1914.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1915.    LXORCONST:  long: 9223372034707292160 (0x7fffffff80000000)
1916.    not IF_LEQ: int: 2147483647 (0x7fffffff)
1917.    not IF_LLT: int: 2147483647 (0x7fffffff)
1918.    not IF_LLE: int: 2147483647 (0x7fffffff)
1919.    LADDCONST:  long: -9223372034707292161 (0x800000007fffffff)
1920.    LSUBCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
1921.    LMULCONST:  long: -2147483648 (0xffffffff80000000)
1922.    LSHLCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1923.    LSHRCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1924.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
1925.    LANDCONST:  long: 2147483648 (0x80000000)
1926.    LORCONST:   long: 9223372036854775807 (0x7fffffffffffffff)
1927.    LXORCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
1928.    not IF_LEQ: long: 2147483648 (0x80000000)
1929.    not IF_LLT: long: 2147483648 (0x80000000)
1930.    not IF_LLE: long: 2147483648 (0x80000000)
1931.    IADDCONST:  int: -1 (0xffffffff)
1932.    ISUBCONST:  int: -1 (0xffffffff)
1933.    IMULCONST:  int: -2147483648 (0x80000000)
1934.    ISHLCONST:  int: 2147483647 (0x7fffffff)
1935.    ISHRCONST:  int: 2147483647 (0x7fffffff)
1936.    IUSHRCONST: int: 2147483647 (0x7fffffff)
1937.    IANDCONST:  int: 0 (0x0)
1938.    IORCONST:   int: -1 (0xffffffff)
1939.    IXORCONST:  int: -1 (0xffffffff)
1940.    not IFEQ:   int: -2147483648 (0x80000000)
1941.    not IFLT:   int: -2147483648 (0x80000000)
1942.    not IFLE:   int: -2147483648 (0x80000000)
1943.    LADDCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
1944.    LSUBCONST:  long: -9223372034707292161 (0x800000007fffffff)
1945.    LMULCONST:  long: 2147483648 (0x80000000)
1946.    LSHLCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1947.    LSHRCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1948.    LUSHRCONST: long: 9223372036854775807 (0x7fffffffffffffff)
1949.    LANDCONST:  long: 9223372034707292160 (0x7fffffff80000000)
1950.    LORCONST:   long: -1 (0xffffffffffffffff)
1951.    LXORCONST:  long: -9223372034707292161 (0x800000007fffffff)
1952.    not IF_LEQ: int: -2147483648 (0x80000000)
1953.    not IF_LLT: int: -2147483648 (0x80000000)
1954.    not IF_LLE: int: -2147483648 (0x80000000)
1955.    LADDCONST:  long: 9223372034707292158 (0x7fffffff7ffffffe)
1956.    LSUBCONST:  long: -9223372034707292160 (0x8000000080000000)
1957.    LMULCONST:  long: -9223372034707292159 (0x8000000080000001)
1958.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
1959.    LSHRCONST:  long: 0 (0x0)
1960.    LUSHRCONST: long: 0 (0x0)
1961.    LANDCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
1962.    LORCONST:   long: -1 (0xffffffffffffffff)
1963.    LXORCONST:  long: -9223372034707292160 (0x8000000080000000)
1964.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
1965.    not IF_LLT: long: -2147483649 (0xffffffff7fffffff)
1966.    not IF_LLE: long: -2147483649 (0xffffffff7fffffff)
1967.    TESTCONST CALLED WITH int: -2147483648 (0x80000000)
1968.                      AND long: -9223372036854775808 (0x8000000000000000)
1969.    not IFEQ:   int: 0 (0x0)
1970.    not IFGT:   int: 0 (0x0)
1971.    not IFGE:   int: 0 (0x0)
1972.    not IF_LEQ: int: 0 (0x0)
1973.    not IF_LGT: int: 0 (0x0)
1974.    not IF_LGE: int: 0 (0x0)
1975.    IADDCONST:  int: 2147483647 (0x7fffffff)
1976.    ISUBCONST:  int: -2147483647 (0x80000001)
1977.    IMULCONST:  int: -2147483648 (0x80000000)
1978.    ISHLCONST:  int: 0 (0x0)
1979.    ISHRCONST:  int: -1 (0xffffffff)
1980.    IUSHRCONST: int: 1 (0x1)
1981.    IANDCONST:  int: -2147483648 (0x80000000)
1982.    IORCONST:   int: -1 (0xffffffff)
1983.    IXORCONST:  int: 2147483647 (0x7fffffff)
1984.    not IFEQ:   int: -1 (0xffffffff)
1985.    not IFGT:   int: -1 (0xffffffff)
1986.    not IFGE:   int: -1 (0xffffffff)
1987.    LADDCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1988.    LSUBCONST:  long: -9223372036854775807 (0x8000000000000001)
1989.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
1990.    LSHLCONST:  long: 0 (0x0)
1991.    LSHRCONST:  long: -1 (0xffffffffffffffff)
1992.    LUSHRCONST: long: 1 (0x1)
1993.    LANDCONST:  long: -9223372036854775808 (0x8000000000000000)
1994.    LORCONST:   long: -1 (0xffffffffffffffff)
1995.    LXORCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
1996.    not IF_LEQ: int: -1 (0xffffffff)
1997.    not IF_LGT: int: -1 (0xffffffff)
1998.    not IF_LGE: int: -1 (0xffffffff)
1999.    IADDCONST:  int: -2147483647 (0x80000001)
2000.    ISUBCONST:  int: 2147483647 (0x7fffffff)
2001.    IMULCONST:  int: -2147483648 (0x80000000)
2002.    ISHLCONST:  int: 0 (0x0)
2003.    ISHRCONST:  int: -1073741824 (0xc0000000)
2004.    IUSHRCONST: int: 1073741824 (0x40000000)
2005.    IANDCONST:  int: 0 (0x0)
2006.    IORCONST:   int: -2147483647 (0x80000001)
2007.    IXORCONST:  int: -2147483647 (0x80000001)
2008.    not IFEQ:   int: 1 (0x1)
2009.    not IFGT:   int: 1 (0x1)
2010.    not IFGE:   int: 1 (0x1)
2011.    LADDCONST:  long: -9223372036854775807 (0x8000000000000001)
2012.    LSUBCONST:  long: 9223372036854775807 (0x7fffffffffffffff)
2013.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2014.    LSHLCONST:  long: 0 (0x0)
2015.    LSHRCONST:  long: -4611686018427387904 (0xc000000000000000)
2016.    LUSHRCONST: long: 4611686018427387904 (0x4000000000000000)
2017.    LANDCONST:  long: 0 (0x0)
2018.    LORCONST:   long: -9223372036854775807 (0x8000000000000001)
2019.    LXORCONST:  long: -9223372036854775807 (0x8000000000000001)
2020.    not IF_LEQ: int: 1 (0x1)
2021.    not IF_LGT: int: 1 (0x1)
2022.    not IF_LGE: int: 1 (0x1)
2023.    IADDCONST:  int: -2147483393 (0x800000ff)
2024.    ISUBCONST:  int: 2147483393 (0x7fffff01)
2025.    IMULCONST:  int: -2147483648 (0x80000000)
2026.    ISHLCONST:  int: 0 (0x0)
2027.    ISHRCONST:  int: -1 (0xffffffff)
2028.    IUSHRCONST: int: 1 (0x1)
2029.    IANDCONST:  int: 0 (0x0)
2030.    IORCONST:   int: -2147483393 (0x800000ff)
2031.    IXORCONST:  int: -2147483393 (0x800000ff)
2032.    not IFEQ:   int: 255 (0xff)
2033.    not IFGT:   int: 255 (0xff)
2034.    not IFGE:   int: 255 (0xff)
2035.    LADDCONST:  long: -9223372036854775553 (0x80000000000000ff)
2036.    LSUBCONST:  long: 9223372036854775553 (0x7fffffffffffff01)
2037.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2038.    LSHLCONST:  long: 0 (0x0)
2039.    LSHRCONST:  long: -1 (0xffffffffffffffff)
2040.    LUSHRCONST: long: 1 (0x1)
2041.    LANDCONST:  long: 0 (0x0)
2042.    LORCONST:   long: -9223372036854775553 (0x80000000000000ff)
2043.    LXORCONST:  long: -9223372036854775553 (0x80000000000000ff)
2044.    not IF_LEQ: int: 255 (0xff)
2045.    not IF_LGT: int: 255 (0xff)
2046.    not IF_LGE: int: 255 (0xff)
2047.    IADDCONST:  int: -2147483392 (0x80000100)
2048.    ISUBCONST:  int: 2147483392 (0x7fffff00)
2049.    IMULCONST:  int: 0 (0x0)
2050.    ISHLCONST:  int: -2147483648 (0x80000000)
2051.    ISHRCONST:  int: -2147483648 (0x80000000)
2052.    IUSHRCONST: int: -2147483648 (0x80000000)
2053.    IANDCONST:  int: 0 (0x0)
2054.    IORCONST:   int: -2147483392 (0x80000100)
2055.    IXORCONST:  int: -2147483392 (0x80000100)
2056.    not IFEQ:   int: 256 (0x100)
2057.    not IFGT:   int: 256 (0x100)
2058.    not IFGE:   int: 256 (0x100)
2059.    LADDCONST:  long: -9223372036854775552 (0x8000000000000100)
2060.    LSUBCONST:  long: 9223372036854775552 (0x7fffffffffffff00)
2061.    LMULCONST:  long: 0 (0x0)
2062.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
2063.    LSHRCONST:  long: -9223372036854775808 (0x8000000000000000)
2064.    LUSHRCONST: long: -9223372036854775808 (0x8000000000000000)
2065.    LANDCONST:  long: 0 (0x0)
2066.    LORCONST:   long: -9223372036854775552 (0x8000000000000100)
2067.    LXORCONST:  long: -9223372036854775552 (0x8000000000000100)
2068.    not IF_LEQ: int: 256 (0x100)
2069.    not IF_LGT: int: 256 (0x100)
2070.    not IF_LGE: int: 256 (0x100)
2071.    IADDCONST:  int: -2147450881 (0x80007fff)
2072.    ISUBCONST:  int: 2147450881 (0x7fff8001)
2073.    IMULCONST:  int: -2147483648 (0x80000000)
2074.    ISHLCONST:  int: 0 (0x0)
2075.    ISHRCONST:  int: -1 (0xffffffff)
2076.    IUSHRCONST: int: 1 (0x1)
2077.    IANDCONST:  int: 0 (0x0)
2078.    IORCONST:   int: -2147450881 (0x80007fff)
2079.    IXORCONST:  int: -2147450881 (0x80007fff)
2080.    not IFEQ:   int: 32767 (0x7fff)
2081.    not IFGT:   int: 32767 (0x7fff)
2082.    not IFGE:   int: 32767 (0x7fff)
2083.    LADDCONST:  long: -9223372036854743041 (0x8000000000007fff)
2084.    LSUBCONST:  long: 9223372036854743041 (0x7fffffffffff8001)
2085.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2086.    LSHLCONST:  long: 0 (0x0)
2087.    LSHRCONST:  long: -1 (0xffffffffffffffff)
2088.    LUSHRCONST: long: 1 (0x1)
2089.    LANDCONST:  long: 0 (0x0)
2090.    LORCONST:   long: -9223372036854743041 (0x8000000000007fff)
2091.    LXORCONST:  long: -9223372036854743041 (0x8000000000007fff)
2092.    not IF_LEQ: int: 32767 (0x7fff)
2093.    not IF_LGT: int: 32767 (0x7fff)
2094.    not IF_LGE: int: 32767 (0x7fff)
2095.    IADDCONST:  int: -2147450880 (0x80008000)
2096.    ISUBCONST:  int: 2147450880 (0x7fff8000)
2097.    IMULCONST:  int: 0 (0x0)
2098.    ISHLCONST:  int: -2147483648 (0x80000000)
2099.    ISHRCONST:  int: -2147483648 (0x80000000)
2100.    IUSHRCONST: int: -2147483648 (0x80000000)
2101.    IANDCONST:  int: 0 (0x0)
2102.    IORCONST:   int: -2147450880 (0x80008000)
2103.    IXORCONST:  int: -2147450880 (0x80008000)
2104.    not IFEQ:   int: 32768 (0x8000)
2105.    not IFGT:   int: 32768 (0x8000)
2106.    not IFGE:   int: 32768 (0x8000)
2107.    LADDCONST:  long: -9223372036854743040 (0x8000000000008000)
2108.    LSUBCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
2109.    LMULCONST:  long: 0 (0x0)
2110.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
2111.    LSHRCONST:  long: -9223372036854775808 (0x8000000000000000)
2112.    LUSHRCONST: long: -9223372036854775808 (0x8000000000000000)
2113.    LANDCONST:  long: 0 (0x0)
2114.    LORCONST:   long: -9223372036854743040 (0x8000000000008000)
2115.    LXORCONST:  long: -9223372036854743040 (0x8000000000008000)
2116.    not IF_LEQ: int: 32768 (0x8000)
2117.    not IF_LGT: int: 32768 (0x8000)
2118.    not IF_LGE: int: 32768 (0x8000)
2119.    IADDCONST:  int: 2147450880 (0x7fff8000)
2120.    ISUBCONST:  int: -2147450880 (0x80008000)
2121.    IMULCONST:  int: 0 (0x0)
2122.    ISHLCONST:  int: -2147483648 (0x80000000)
2123.    ISHRCONST:  int: -2147483648 (0x80000000)
2124.    IUSHRCONST: int: -2147483648 (0x80000000)
2125.    IANDCONST:  int: -2147483648 (0x80000000)
2126.    IORCONST:   int: -32768 (0xffff8000)
2127.    IXORCONST:  int: 2147450880 (0x7fff8000)
2128.    not IFEQ:   int: -32768 (0xffff8000)
2129.    not IFGT:   int: -32768 (0xffff8000)
2130.    not IFGE:   int: -32768 (0xffff8000)
2131.    LADDCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
2132.    LSUBCONST:  long: -9223372036854743040 (0x8000000000008000)
2133.    LMULCONST:  long: 0 (0x0)
2134.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
2135.    LSHRCONST:  long: -9223372036854775808 (0x8000000000000000)
2136.    LUSHRCONST: long: -9223372036854775808 (0x8000000000000000)
2137.    LANDCONST:  long: -9223372036854775808 (0x8000000000000000)
2138.    LORCONST:   long: -32768 (0xffffffffffff8000)
2139.    LXORCONST:  long: 9223372036854743040 (0x7fffffffffff8000)
2140.    not IF_LEQ: int: -32768 (0xffff8000)
2141.    not IF_LGT: int: -32768 (0xffff8000)
2142.    not IF_LGE: int: -32768 (0xffff8000)
2143.    IADDCONST:  int: 2147450879 (0x7fff7fff)
2144.    ISUBCONST:  int: -2147450879 (0x80008001)
2145.    IMULCONST:  int: -2147483648 (0x80000000)
2146.    ISHLCONST:  int: 0 (0x0)
2147.    ISHRCONST:  int: -1 (0xffffffff)
2148.    IUSHRCONST: int: 1 (0x1)
2149.    IANDCONST:  int: -2147483648 (0x80000000)
2150.    IORCONST:   int: -32769 (0xffff7fff)
2151.    IXORCONST:  int: 2147450879 (0x7fff7fff)
2152.    not IFEQ:   int: -32769 (0xffff7fff)
2153.    not IFGT:   int: -32769 (0xffff7fff)
2154.    not IFGE:   int: -32769 (0xffff7fff)
2155.    LADDCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
2156.    LSUBCONST:  long: -9223372036854743039 (0x8000000000008001)
2157.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2158.    LSHLCONST:  long: 0 (0x0)
2159.    LSHRCONST:  long: -1 (0xffffffffffffffff)
2160.    LUSHRCONST: long: 1 (0x1)
2161.    LANDCONST:  long: -9223372036854775808 (0x8000000000000000)
2162.    LORCONST:   long: -32769 (0xffffffffffff7fff)
2163.    LXORCONST:  long: 9223372036854743039 (0x7fffffffffff7fff)
2164.    not IF_LEQ: int: -32769 (0xffff7fff)
2165.    not IF_LGT: int: -32769 (0xffff7fff)
2166.    not IF_LGE: int: -32769 (0xffff7fff)
2167.    IADDCONST:  int: -1 (0xffffffff)
2168.    ISUBCONST:  int: 1 (0x1)
2169.    IMULCONST:  int: -2147483648 (0x80000000)
2170.    ISHLCONST:  int: 0 (0x0)
2171.    ISHRCONST:  int: -1 (0xffffffff)
2172.    IUSHRCONST: int: 1 (0x1)
2173.    IANDCONST:  int: 0 (0x0)
2174.    IORCONST:   int: -1 (0xffffffff)
2175.    IXORCONST:  int: -1 (0xffffffff)
2176.    not IFEQ:   int: 2147483647 (0x7fffffff)
2177.    not IFGT:   int: 2147483647 (0x7fffffff)
2178.    not IFGE:   int: 2147483647 (0x7fffffff)
2179.    LADDCONST:  long: -9223372034707292161 (0x800000007fffffff)
2180.    LSUBCONST:  long: 9223372034707292161 (0x7fffffff80000001)
2181.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2182.    LSHLCONST:  long: 0 (0x0)
2183.    LSHRCONST:  long: -1 (0xffffffffffffffff)
2184.    LUSHRCONST: long: 1 (0x1)
2185.    LANDCONST:  long: 0 (0x0)
2186.    LORCONST:   long: -9223372034707292161 (0x800000007fffffff)
2187.    LXORCONST:  long: -9223372034707292161 (0x800000007fffffff)
2188.    not IF_LEQ: int: 2147483647 (0x7fffffff)
2189.    not IF_LGT: int: 2147483647 (0x7fffffff)
2190.    not IF_LGE: int: 2147483647 (0x7fffffff)
2191.    LADDCONST:  long: -9223372034707292160 (0x8000000080000000)
2192.    LSUBCONST:  long: 9223372034707292160 (0x7fffffff80000000)
2193.    LMULCONST:  long: 0 (0x0)
2194.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
2195.    LSHRCONST:  long: -9223372036854775808 (0x8000000000000000)
2196.    LUSHRCONST: long: -9223372036854775808 (0x8000000000000000)
2197.    LANDCONST:  long: 0 (0x0)
2198.    LORCONST:   long: -9223372034707292160 (0x8000000080000000)
2199.    LXORCONST:  long: -9223372034707292160 (0x8000000080000000)
2200.    not IF_LEQ: long: 2147483648 (0x80000000)
2201.    not IF_LGT: long: 2147483648 (0x80000000)
2202.    not IF_LGE: long: 2147483648 (0x80000000)
2203.    IADDCONST:  int: 0 (0x0)
2204.    ISUBCONST:  int: 0 (0x0)
2205.    IMULCONST:  int: 0 (0x0)
2206.    ISHLCONST:  int: -2147483648 (0x80000000)
2207.    ISHRCONST:  int: -2147483648 (0x80000000)
2208.    IUSHRCONST: int: -2147483648 (0x80000000)
2209.    IANDCONST:  int: -2147483648 (0x80000000)
2210.    IORCONST:   int: -2147483648 (0x80000000)
2211.    IXORCONST:  int: 0 (0x0)
2212.    not IFNE:   int: -2147483648 (0x80000000)
2213.    not IFLT:   int: -2147483648 (0x80000000)
2214.    not IFGT:   int: -2147483648 (0x80000000)
2215.    LADDCONST:  long: 9223372034707292160 (0x7fffffff80000000)
2216.    LSUBCONST:  long: -9223372034707292160 (0x8000000080000000)
2217.    LMULCONST:  long: 0 (0x0)
2218.    LSHLCONST:  long: -9223372036854775808 (0x8000000000000000)
2219.    LSHRCONST:  long: -9223372036854775808 (0x8000000000000000)
2220.    LUSHRCONST: long: -9223372036854775808 (0x8000000000000000)
2221.    LANDCONST:  long: -9223372036854775808 (0x8000000000000000)
2222.    LORCONST:   long: -2147483648 (0xffffffff80000000)
2223.    LXORCONST:  long: 9223372034707292160 (0x7fffffff80000000)
2224.    not IF_LEQ: int: -2147483648 (0x80000000)
2225.    not IF_LGT: int: -2147483648 (0x80000000)
2226.    not IF_LGE: int: -2147483648 (0x80000000)
2227.    LADDCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
2228.    LSUBCONST:  long: -9223372034707292159 (0x8000000080000001)
2229.    LMULCONST:  long: -9223372036854775808 (0x8000000000000000)
2230.    LSHLCONST:  long: 0 (0x0)
2231.    LSHRCONST:  long: -1 (0xffffffffffffffff)
2232.    LUSHRCONST: long: 1 (0x1)
2233.    LANDCONST:  long: -9223372036854775808 (0x8000000000000000)
2234.    LORCONST:   long: -2147483649 (0xffffffff7fffffff)
2235.    LXORCONST:  long: 9223372034707292159 (0x7fffffff7fffffff)
2236.    not IF_LEQ: long: -2147483649 (0xffffffff7fffffff)
2237.    not IF_LGT: long: -2147483649 (0xffffffff7fffffff)
2238.    not IF_LGE: long: -2147483649 (0xffffffff7fffffff)
2239.    ------------------- test div and rem consts
2240.    IDIVPOW2 (17 / 0x00000001):  int: 17 (0x11)
2241.    IDIVPOW2 (17 / 0x00000002):  int: 8 (0x8)
2242.    IDIVPOW2 (17 / 0x00000004):  int: 4 (0x4)
2243.    IDIVPOW2 (17 / 0x00000008):  int: 2 (0x2)
2244.    IDIVPOW2 (17 / 0x00000010):  int: 1 (0x1)
2245.    IDIVPOW2 (17 / 0x00000020):  int: 0 (0x0)
2246.    IDIVPOW2 (17 / 0x00000040):  int: 0 (0x0)
2247.    IDIVPOW2 (17 / 0x00000080):  int: 0 (0x0)
2248.    IDIVPOW2 (17 / 0x00000100):  int: 0 (0x0)
2249.    IDIVPOW2 (17 / 0x00000200):  int: 0 (0x0)
2250.    IDIVPOW2 (17 / 0x00000400):  int: 0 (0x0)
2251.    IDIVPOW2 (17 / 0x00000800):  int: 0 (0x0)
2252.    IDIVPOW2 (17 / 0x00001000):  int: 0 (0x0)
2253.    IDIVPOW2 (17 / 0x00002000):  int: 0 (0x0)
2254.    IDIVPOW2 (17 / 0x00004000):  int: 0 (0x0)
2255.    IDIVPOW2 (17 / 0x00008000):  int: 0 (0x0)
2256.    IDIVPOW2 (17 / 0x00010000):  int: 0 (0x0)
2257.    IDIVPOW2 (17 / 0x00020000):  int: 0 (0x0)
2258.    IDIVPOW2 (17 / 0x00040000):  int: 0 (0x0)
2259.    IDIVPOW2 (17 / 0x00080000):  int: 0 (0x0)
2260.    IDIVPOW2 (17 / 0x00100000):  int: 0 (0x0)
2261.    IDIVPOW2 (17 / 0x00200000):  int: 0 (0x0)
2262.    IDIVPOW2 (17 / 0x00400000):  int: 0 (0x0)
2263.    IDIVPOW2 (17 / 0x00800000):  int: 0 (0x0)
2264.    IDIVPOW2 (17 / 0x01000000):  int: 0 (0x0)
2265.    IDIVPOW2 (17 / 0x02000000):  int: 0 (0x0)
2266.    IDIVPOW2 (17 / 0x04000000):  int: 0 (0x0)
2267.    IDIVPOW2 (17 / 0x08000000):  int: 0 (0x0)
2268.    IDIVPOW2 (17 / 0x10000000):  int: 0 (0x0)
2269.    IDIVPOW2 (17 / 0x20000000):  int: 0 (0x0)
2270.    IDIVPOW2 (17 / 0x40000000):  int: 0 (0x0)
2271.    IDIVPOW2 (17 / 0x80000000):  int: 0 (0x0)
2272.    IREMPOW2 (17 % 0x00000001):  int: 0 (0x0)
2273.    IREMPOW2 (17 % 0x00000002):  int: 1 (0x1)
2274.    IREMPOW2 (17 % 0x00000004):  int: 1 (0x1)
2275.    IREMPOW2 (17 % 0x00000008):  int: 1 (0x1)
2276.    IREMPOW2 (17 % 0x00000010):  int: 1 (0x1)
2277.    IREMPOW2 (17 % 0x00000020):  int: 17 (0x11)
2278.    IREMPOW2 (17 % 0x00000040):  int: 17 (0x11)
2279.    IREMPOW2 (17 % 0x00000080):  int: 17 (0x11)
2280.    IREMPOW2 (17 % 0x00000100):  int: 17 (0x11)
2281.    IREMPOW2 (17 % 0x00000200):  int: 17 (0x11)
2282.    IREMPOW2 (17 % 0x00000400):  int: 17 (0x11)
2283.    IREMPOW2 (17 % 0x00000800):  int: 17 (0x11)
2284.    IREMPOW2 (17 % 0x00001000):  int: 17 (0x11)
2285.    IREMPOW2 (17 % 0x00002000):  int: 17 (0x11)
2286.    IREMPOW2 (17 % 0x00004000):  int: 17 (0x11)
2287.    IREMPOW2 (17 % 0x00008000):  int: 17 (0x11)
2288.    IREMPOW2 (17 % 0x00010000):  int: 17 (0x11)
2289.    IREMPOW2 (17 % 0x00020000):  int: 17 (0x11)
2290.    IREMPOW2 (17 % 0x00040000):  int: 17 (0x11)
2291.    IREMPOW2 (17 % 0x00080000):  int: 17 (0x11)
2292.    IREMPOW2 (17 % 0x00100000):  int: 17 (0x11)
2293.    IREMPOW2 (17 % 0x00200000):  int: 17 (0x11)
2294.    IREMPOW2 (17 % 0x00400000):  int: 17 (0x11)
2295.    IREMPOW2 (17 % 0x00800000):  int: 17 (0x11)
2296.    IREMPOW2 (17 % 0x01000000):  int: 17 (0x11)
2297.    IREMPOW2 (17 % 0x02000000):  int: 17 (0x11)
2298.    IREMPOW2 (17 % 0x04000000):  int: 17 (0x11)
2299.    IREMPOW2 (17 % 0x08000000):  int: 17 (0x11)
2300.    IREMPOW2 (17 % 0x10000000):  int: 17 (0x11)
2301.    IREMPOW2 (17 % 0x20000000):  int: 17 (0x11)
2302.    IREMPOW2 (17 % 0x40000000):  int: 17 (0x11)
2303.    IREMPOW2 (17 % 0x80000000):  int: 17 (0x11)
2304.    IDIVPOW2 (12347 / 0x00000001):  int: 12347 (0x303b)
2305.    IDIVPOW2 (12347 / 0x00000002):  int: 6173 (0x181d)
2306.    IDIVPOW2 (12347 / 0x00000004):  int: 3086 (0xc0e)
2307.    IDIVPOW2 (12347 / 0x00000008):  int: 1543 (0x607)
2308.    IDIVPOW2 (12347 / 0x00000010):  int: 771 (0x303)
2309.    IDIVPOW2 (12347 / 0x00000020):  int: 385 (0x181)
2310.    IDIVPOW2 (12347 / 0x00000040):  int: 192 (0xc0)
2311.    IDIVPOW2 (12347 / 0x00000080):  int: 96 (0x60)
2312.    IDIVPOW2 (12347 / 0x00000100):  int: 48 (0x30)
2313.    IDIVPOW2 (12347 / 0x00000200):  int: 24 (0x18)
2314.    IDIVPOW2 (12347 / 0x00000400):  int: 12 (0xc)
2315.    IDIVPOW2 (12347 / 0x00000800):  int: 6 (0x6)
2316.    IDIVPOW2 (12347 / 0x00001000):  int: 3 (0x3)
2317.    IDIVPOW2 (12347 / 0x00002000):  int: 1 (0x1)
2318.    IDIVPOW2 (12347 / 0x00004000):  int: 0 (0x0)
2319.    IDIVPOW2 (12347 / 0x00008000):  int: 0 (0x0)
2320.    IDIVPOW2 (12347 / 0x00010000):  int: 0 (0x0)
2321.    IDIVPOW2 (12347 / 0x00020000):  int: 0 (0x0)
2322.    IDIVPOW2 (12347 / 0x00040000):  int: 0 (0x0)
2323.    IDIVPOW2 (12347 / 0x00080000):  int: 0 (0x0)
2324.    IDIVPOW2 (12347 / 0x00100000):  int: 0 (0x0)
2325.    IDIVPOW2 (12347 / 0x00200000):  int: 0 (0x0)
2326.    IDIVPOW2 (12347 / 0x00400000):  int: 0 (0x0)
2327.    IDIVPOW2 (12347 / 0x00800000):  int: 0 (0x0)
2328.    IDIVPOW2 (12347 / 0x01000000):  int: 0 (0x0)
2329.    IDIVPOW2 (12347 / 0x02000000):  int: 0 (0x0)
2330.    IDIVPOW2 (12347 / 0x04000000):  int: 0 (0x0)
2331.    IDIVPOW2 (12347 / 0x08000000):  int: 0 (0x0)
2332.    IDIVPOW2 (12347 / 0x10000000):  int: 0 (0x0)
2333.    IDIVPOW2 (12347 / 0x20000000):  int: 0 (0x0)
2334.    IDIVPOW2 (12347 / 0x40000000):  int: 0 (0x0)
2335.    IDIVPOW2 (12347 / 0x80000000):  int: 0 (0x0)
2336.    IREMPOW2 (12347 % 0x00000001):  int: 0 (0x0)
2337.    IREMPOW2 (12347 % 0x00000002):  int: 1 (0x1)
2338.    IREMPOW2 (12347 % 0x00000004):  int: 3 (0x3)
2339.    IREMPOW2 (12347 % 0x00000008):  int: 3 (0x3)
2340.    IREMPOW2 (12347 % 0x00000010):  int: 11 (0xb)
2341.    IREMPOW2 (12347 % 0x00000020):  int: 27 (0x1b)
2342.    IREMPOW2 (12347 % 0x00000040):  int: 59 (0x3b)
2343.    IREMPOW2 (12347 % 0x00000080):  int: 59 (0x3b)
2344.    IREMPOW2 (12347 % 0x00000100):  int: 59 (0x3b)
2345.    IREMPOW2 (12347 % 0x00000200):  int: 59 (0x3b)
2346.    IREMPOW2 (12347 % 0x00000400):  int: 59 (0x3b)
2347.    IREMPOW2 (12347 % 0x00000800):  int: 59 (0x3b)
2348.    IREMPOW2 (12347 % 0x00001000):  int: 59 (0x3b)
2349.    IREMPOW2 (12347 % 0x00002000):  int: 4155 (0x103b)
2350.    IREMPOW2 (12347 % 0x00004000):  int: 12347 (0x303b)
2351.    IREMPOW2 (12347 % 0x00008000):  int: 12347 (0x303b)
2352.    IREMPOW2 (12347 % 0x00010000):  int: 12347 (0x303b)
2353.    IREMPOW2 (12347 % 0x00020000):  int: 12347 (0x303b)
2354.    IREMPOW2 (12347 % 0x00040000):  int: 12347 (0x303b)
2355.    IREMPOW2 (12347 % 0x00080000):  int: 12347 (0x303b)
2356.    IREMPOW2 (12347 % 0x00100000):  int: 12347 (0x303b)
2357.    IREMPOW2 (12347 % 0x00200000):  int: 12347 (0x303b)
2358.    IREMPOW2 (12347 % 0x00400000):  int: 12347 (0x303b)
2359.    IREMPOW2 (12347 % 0x00800000):  int: 12347 (0x303b)
2360.    IREMPOW2 (12347 % 0x01000000):  int: 12347 (0x303b)
2361.    IREMPOW2 (12347 % 0x02000000):  int: 12347 (0x303b)
2362.    IREMPOW2 (12347 % 0x04000000):  int: 12347 (0x303b)
2363.    IREMPOW2 (12347 % 0x08000000):  int: 12347 (0x303b)
2364.    IREMPOW2 (12347 % 0x10000000):  int: 12347 (0x303b)
2365.    IREMPOW2 (12347 % 0x20000000):  int: 12347 (0x303b)
2366.    IREMPOW2 (12347 % 0x40000000):  int: 12347 (0x303b)
2367.    IREMPOW2 (12347 % 0x80000000):  int: 12347 (0x303b)
2368.    IDIVPOW2 (8893427 / 0x00000001):  int: 8893427 (0x87b3f3)
2369.    IDIVPOW2 (8893427 / 0x00000002):  int: 4446713 (0x43d9f9)
2370.    IDIVPOW2 (8893427 / 0x00000004):  int: 2223356 (0x21ecfc)
2371.    IDIVPOW2 (8893427 / 0x00000008):  int: 1111678 (0x10f67e)
2372.    IDIVPOW2 (8893427 / 0x00000010):  int: 555839 (0x87b3f)
2373.    IDIVPOW2 (8893427 / 0x00000020):  int: 277919 (0x43d9f)
2374.    IDIVPOW2 (8893427 / 0x00000040):  int: 138959 (0x21ecf)
2375.    IDIVPOW2 (8893427 / 0x00000080):  int: 69479 (0x10f67)
2376.    IDIVPOW2 (8893427 / 0x00000100):  int: 34739 (0x87b3)
2377.    IDIVPOW2 (8893427 / 0x00000200):  int: 17369 (0x43d9)
2378.    IDIVPOW2 (8893427 / 0x00000400):  int: 8684 (0x21ec)
2379.    IDIVPOW2 (8893427 / 0x00000800):  int: 4342 (0x10f6)
2380.    IDIVPOW2 (8893427 / 0x00001000):  int: 2171 (0x87b)
2381.    IDIVPOW2 (8893427 / 0x00002000):  int: 1085 (0x43d)
2382.    IDIVPOW2 (8893427 / 0x00004000):  int: 542 (0x21e)
2383.    IDIVPOW2 (8893427 / 0x00008000):  int: 271 (0x10f)
2384.    IDIVPOW2 (8893427 / 0x00010000):  int: 135 (0x87)
2385.    IDIVPOW2 (8893427 / 0x00020000):  int: 67 (0x43)
2386.    IDIVPOW2 (8893427 / 0x00040000):  int: 33 (0x21)
2387.    IDIVPOW2 (8893427 / 0x00080000):  int: 16 (0x10)
2388.    IDIVPOW2 (8893427 / 0x00100000):  int: 8 (0x8)
2389.    IDIVPOW2 (8893427 / 0x00200000):  int: 4 (0x4)
2390.    IDIVPOW2 (8893427 / 0x00400000):  int: 2 (0x2)
2391.    IDIVPOW2 (8893427 / 0x00800000):  int: 1 (0x1)
2392.    IDIVPOW2 (8893427 / 0x01000000):  int: 0 (0x0)
2393.    IDIVPOW2 (8893427 / 0x02000000):  int: 0 (0x0)
2394.    IDIVPOW2 (8893427 / 0x04000000):  int: 0 (0x0)
2395.    IDIVPOW2 (8893427 / 0x08000000):  int: 0 (0x0)
2396.    IDIVPOW2 (8893427 / 0x10000000):  int: 0 (0x0)
2397.    IDIVPOW2 (8893427 / 0x20000000):  int: 0 (0x0)
2398.    IDIVPOW2 (8893427 / 0x40000000):  int: 0 (0x0)
2399.    IDIVPOW2 (8893427 / 0x80000000):  int: 0 (0x0)
2400.    IREMPOW2 (8893427 % 0x00000001):  int: 0 (0x0)
2401.    IREMPOW2 (8893427 % 0x00000002):  int: 1 (0x1)
2402.    IREMPOW2 (8893427 % 0x00000004):  int: 3 (0x3)
2403.    IREMPOW2 (8893427 % 0x00000008):  int: 3 (0x3)
2404.    IREMPOW2 (8893427 % 0x00000010):  int: 3 (0x3)
2405.    IREMPOW2 (8893427 % 0x00000020):  int: 19 (0x13)
2406.    IREMPOW2 (8893427 % 0x00000040):  int: 51 (0x33)
2407.    IREMPOW2 (8893427 % 0x00000080):  int: 115 (0x73)
2408.    IREMPOW2 (8893427 % 0x00000100):  int: 243 (0xf3)
2409.    IREMPOW2 (8893427 % 0x00000200):  int: 499 (0x1f3)
2410.    IREMPOW2 (8893427 % 0x00000400):  int: 1011 (0x3f3)
2411.    IREMPOW2 (8893427 % 0x00000800):  int: 1011 (0x3f3)
2412.    IREMPOW2 (8893427 % 0x00001000):  int: 1011 (0x3f3)
2413.    IREMPOW2 (8893427 % 0x00002000):  int: 5107 (0x13f3)
2414.    IREMPOW2 (8893427 % 0x00004000):  int: 13299 (0x33f3)
2415.    IREMPOW2 (8893427 % 0x00008000):  int: 13299 (0x33f3)
2416.    IREMPOW2 (8893427 % 0x00010000):  int: 46067 (0xb3f3)
2417.    IREMPOW2 (8893427 % 0x00020000):  int: 111603 (0x1b3f3)
2418.    IREMPOW2 (8893427 % 0x00040000):  int: 242675 (0x3b3f3)
2419.    IREMPOW2 (8893427 % 0x00080000):  int: 504819 (0x7b3f3)
2420.    IREMPOW2 (8893427 % 0x00100000):  int: 504819 (0x7b3f3)
2421.    IREMPOW2 (8893427 % 0x00200000):  int: 504819 (0x7b3f3)
2422.    IREMPOW2 (8893427 % 0x00400000):  int: 504819 (0x7b3f3)
2423.    IREMPOW2 (8893427 % 0x00800000):  int: 504819 (0x7b3f3)
2424.    IREMPOW2 (8893427 % 0x01000000):  int: 8893427 (0x87b3f3)
2425.    IREMPOW2 (8893427 % 0x02000000):  int: 8893427 (0x87b3f3)
2426.    IREMPOW2 (8893427 % 0x04000000):  int: 8893427 (0x87b3f3)
2427.    IREMPOW2 (8893427 % 0x08000000):  int: 8893427 (0x87b3f3)
2428.    IREMPOW2 (8893427 % 0x10000000):  int: 8893427 (0x87b3f3)
2429.    IREMPOW2 (8893427 % 0x20000000):  int: 8893427 (0x87b3f3)
2430.    IREMPOW2 (8893427 % 0x40000000):  int: 8893427 (0x87b3f3)
2431.    IREMPOW2 (8893427 % 0x80000000):  int: 8893427 (0x87b3f3)
2432.    IDIVPOW2 (1005234562 / 0x00000001):  int: 1005234562 (0x3beaa982)
2433.    IDIVPOW2 (1005234562 / 0x00000002):  int: 502617281 (0x1df554c1)
2434.    IDIVPOW2 (1005234562 / 0x00000004):  int: 251308640 (0xefaaa60)
2435.    IDIVPOW2 (1005234562 / 0x00000008):  int: 125654320 (0x77d5530)
2436.    IDIVPOW2 (1005234562 / 0x00000010):  int: 62827160 (0x3beaa98)
2437.    IDIVPOW2 (1005234562 / 0x00000020):  int: 31413580 (0x1df554c)
2438.    IDIVPOW2 (1005234562 / 0x00000040):  int: 15706790 (0xefaaa6)
2439.    IDIVPOW2 (1005234562 / 0x00000080):  int: 7853395 (0x77d553)
2440.    IDIVPOW2 (1005234562 / 0x00000100):  int: 3926697 (0x3beaa9)
2441.    IDIVPOW2 (1005234562 / 0x00000200):  int: 1963348 (0x1df554)
2442.    IDIVPOW2 (1005234562 / 0x00000400):  int: 981674 (0xefaaa)
2443.    IDIVPOW2 (1005234562 / 0x00000800):  int: 490837 (0x77d55)
2444.    IDIVPOW2 (1005234562 / 0x00001000):  int: 245418 (0x3beaa)
2445.    IDIVPOW2 (1005234562 / 0x00002000):  int: 122709 (0x1df55)
2446.    IDIVPOW2 (1005234562 / 0x00004000):  int: 61354 (0xefaa)
2447.    IDIVPOW2 (1005234562 / 0x00008000):  int: 30677 (0x77d5)
2448.    IDIVPOW2 (1005234562 / 0x00010000):  int: 15338 (0x3bea)
2449.    IDIVPOW2 (1005234562 / 0x00020000):  int: 7669 (0x1df5)
2450.    IDIVPOW2 (1005234562 / 0x00040000):  int: 3834 (0xefa)
2451.    IDIVPOW2 (1005234562 / 0x00080000):  int: 1917 (0x77d)
2452.    IDIVPOW2 (1005234562 / 0x00100000):  int: 958 (0x3be)
2453.    IDIVPOW2 (1005234562 / 0x00200000):  int: 479 (0x1df)
2454.    IDIVPOW2 (1005234562 / 0x00400000):  int: 239 (0xef)
2455.    IDIVPOW2 (1005234562 / 0x00800000):  int: 119 (0x77)
2456.    IDIVPOW2 (1005234562 / 0x01000000):  int: 59 (0x3b)
2457.    IDIVPOW2 (1005234562 / 0x02000000):  int: 29 (0x1d)
2458.    IDIVPOW2 (1005234562 / 0x04000000):  int: 14 (0xe)
2459.    IDIVPOW2 (1005234562 / 0x08000000):  int: 7 (0x7)
2460.    IDIVPOW2 (1005234562 / 0x10000000):  int: 3 (0x3)
2461.    IDIVPOW2 (1005234562 / 0x20000000):  int: 1 (0x1)
2462.    IDIVPOW2 (1005234562 / 0x40000000):  int: 0 (0x0)
2463.    IDIVPOW2 (1005234562 / 0x80000000):  int: 0 (0x0)
2464.    IREMPOW2 (1005234562 % 0x00000001):  int: 0 (0x0)
2465.    IREMPOW2 (1005234562 % 0x00000002):  int: 0 (0x0)
2466.    IREMPOW2 (1005234562 % 0x00000004):  int: 2 (0x2)
2467.    IREMPOW2 (1005234562 % 0x00000008):  int: 2 (0x2)
2468.    IREMPOW2 (1005234562 % 0x00000010):  int: 2 (0x2)
2469.    IREMPOW2 (1005234562 % 0x00000020):  int: 2 (0x2)
2470.    IREMPOW2 (1005234562 % 0x00000040):  int: 2 (0x2)
2471.    IREMPOW2 (1005234562 % 0x00000080):  int: 2 (0x2)
2472.    IREMPOW2 (1005234562 % 0x00000100):  int: 130 (0x82)
2473.    IREMPOW2 (1005234562 % 0x00000200):  int: 386 (0x182)
2474.    IREMPOW2 (1005234562 % 0x00000400):  int: 386 (0x182)
2475.    IREMPOW2 (1005234562 % 0x00000800):  int: 386 (0x182)
2476.    IREMPOW2 (1005234562 % 0x00001000):  int: 2434 (0x982)
2477.    IREMPOW2 (1005234562 % 0x00002000):  int: 2434 (0x982)
2478.    IREMPOW2 (1005234562 % 0x00004000):  int: 10626 (0x2982)
2479.    IREMPOW2 (1005234562 % 0x00008000):  int: 10626 (0x2982)
2480.    IREMPOW2 (1005234562 % 0x00010000):  int: 43394 (0xa982)
2481.    IREMPOW2 (1005234562 % 0x00020000):  int: 43394 (0xa982)
2482.    IREMPOW2 (1005234562 % 0x00040000):  int: 174466 (0x2a982)
2483.    IREMPOW2 (1005234562 % 0x00080000):  int: 174466 (0x2a982)
2484.    IREMPOW2 (1005234562 % 0x00100000):  int: 698754 (0xaa982)
2485.    IREMPOW2 (1005234562 % 0x00200000):  int: 698754 (0xaa982)
2486.    IREMPOW2 (1005234562 % 0x00400000):  int: 2795906 (0x2aa982)
2487.    IREMPOW2 (1005234562 % 0x00800000):  int: 6990210 (0x6aa982)
2488.    IREMPOW2 (1005234562 % 0x01000000):  int: 15378818 (0xeaa982)
2489.    IREMPOW2 (1005234562 % 0x02000000):  int: 32156034 (0x1eaa982)
2490.    IREMPOW2 (1005234562 % 0x04000000):  int: 65710466 (0x3eaa982)
2491.    IREMPOW2 (1005234562 % 0x08000000):  int: 65710466 (0x3eaa982)
2492.    IREMPOW2 (1005234562 % 0x10000000):  int: 199928194 (0xbeaa982)
2493.    IREMPOW2 (1005234562 % 0x20000000):  int: 468363650 (0x1beaa982)
2494.    IREMPOW2 (1005234562 % 0x40000000):  int: 1005234562 (0x3beaa982)
2495.    IREMPOW2 (1005234562 % 0x80000000):  int: 1005234562 (0x3beaa982)
2496.    IDIVPOW2 (-17 / 0x00000001):  int: -17 (0xffffffef)
2497.    IDIVPOW2 (-17 / 0x00000002):  int: -8 (0xfffffff8)
2498.    IDIVPOW2 (-17 / 0x00000004):  int: -4 (0xfffffffc)
2499.    IDIVPOW2 (-17 / 0x00000008):  int: -2 (0xfffffffe)
2500.    IDIVPOW2 (-17 / 0x00000010):  int: -1 (0xffffffff)
2501.    IDIVPOW2 (-17 / 0x00000020):  int: 0 (0x0)
2502.    IDIVPOW2 (-17 / 0x00000040):  int: 0 (0x0)
2503.    IDIVPOW2 (-17 / 0x00000080):  int: 0 (0x0)
2504.    IDIVPOW2 (-17 / 0x00000100):  int: 0 (0x0)
2505.    IDIVPOW2 (-17 / 0x00000200):  int: 0 (0x0)
2506.    IDIVPOW2 (-17 / 0x00000400):  int: 0 (0x0)
2507.    IDIVPOW2 (-17 / 0x00000800):  int: 0 (0x0)
2508.    IDIVPOW2 (-17 / 0x00001000):  int: 0 (0x0)
2509.    IDIVPOW2 (-17 / 0x00002000):  int: 0 (0x0)
2510.    IDIVPOW2 (-17 / 0x00004000):  int: 0 (0x0)
2511.    IDIVPOW2 (-17 / 0x00008000):  int: 0 (0x0)
2512.    IDIVPOW2 (-17 / 0x00010000):  int: 0 (0x0)
2513.    IDIVPOW2 (-17 / 0x00020000):  int: 0 (0x0)
2514.    IDIVPOW2 (-17 / 0x00040000):  int: 0 (0x0)
2515.    IDIVPOW2 (-17 / 0x00080000):  int: 0 (0x0)
2516.    IDIVPOW2 (-17 / 0x00100000):  int: 0 (0x0)
2517.    IDIVPOW2 (-17 / 0x00200000):  int: 0 (0x0)
2518.    IDIVPOW2 (-17 / 0x00400000):  int: 0 (0x0)
2519.    IDIVPOW2 (-17 / 0x00800000):  int: 0 (0x0)
2520.    IDIVPOW2 (-17 / 0x01000000):  int: 0 (0x0)
2521.    IDIVPOW2 (-17 / 0x02000000):  int: 0 (0x0)
2522.    IDIVPOW2 (-17 / 0x04000000):  int: 0 (0x0)
2523.    IDIVPOW2 (-17 / 0x08000000):  int: 0 (0x0)
2524.    IDIVPOW2 (-17 / 0x10000000):  int: 0 (0x0)
2525.    IDIVPOW2 (-17 / 0x20000000):  int: 0 (0x0)
2526.    IDIVPOW2 (-17 / 0x40000000):  int: 0 (0x0)
2527.    IDIVPOW2 (-17 / 0x80000000):  int: 0 (0x0)
2528.    IREMPOW2 (-17 % 0x00000001):  int: 0 (0x0)
2529.    IREMPOW2 (-17 % 0x00000002):  int: -1 (0xffffffff)
2530.    IREMPOW2 (-17 % 0x00000004):  int: -1 (0xffffffff)
2531.    IREMPOW2 (-17 % 0x00000008):  int: -1 (0xffffffff)
2532.    IREMPOW2 (-17 % 0x00000010):  int: -1 (0xffffffff)
2533.    IREMPOW2 (-17 % 0x00000020):  int: -17 (0xffffffef)
2534.    IREMPOW2 (-17 % 0x00000040):  int: -17 (0xffffffef)
2535.    IREMPOW2 (-17 % 0x00000080):  int: -17 (0xffffffef)
2536.    IREMPOW2 (-17 % 0x00000100):  int: -17 (0xffffffef)
2537.    IREMPOW2 (-17 % 0x00000200):  int: -17 (0xffffffef)
2538.    IREMPOW2 (-17 % 0x00000400):  int: -17 (0xffffffef)
2539.    IREMPOW2 (-17 % 0x00000800):  int: -17 (0xffffffef)
2540.    IREMPOW2 (-17 % 0x00001000):  int: -17 (0xffffffef)
2541.    IREMPOW2 (-17 % 0x00002000):  int: -17 (0xffffffef)
2542.    IREMPOW2 (-17 % 0x00004000):  int: -17 (0xffffffef)
2543.    IREMPOW2 (-17 % 0x00008000):  int: -17 (0xffffffef)
2544.    IREMPOW2 (-17 % 0x00010000):  int: -17 (0xffffffef)
2545.    IREMPOW2 (-17 % 0x00020000):  int: -17 (0xffffffef)
2546.    IREMPOW2 (-17 % 0x00040000):  int: -17 (0xffffffef)
2547.    IREMPOW2 (-17 % 0x00080000):  int: -17 (0xffffffef)
2548.    IREMPOW2 (-17 % 0x00100000):  int: -17 (0xffffffef)
2549.    IREMPOW2 (-17 % 0x00200000):  int: -17 (0xffffffef)
2550.    IREMPOW2 (-17 % 0x00400000):  int: -17 (0xffffffef)
2551.    IREMPOW2 (-17 % 0x00800000):  int: -17 (0xffffffef)
2552.    IREMPOW2 (-17 % 0x01000000):  int: -17 (0xffffffef)
2553.    IREMPOW2 (-17 % 0x02000000):  int: -17 (0xffffffef)
2554.    IREMPOW2 (-17 % 0x04000000):  int: -17 (0xffffffef)
2555.    IREMPOW2 (-17 % 0x08000000):  int: -17 (0xffffffef)
2556.    IREMPOW2 (-17 % 0x10000000):  int: -17 (0xffffffef)
2557.    IREMPOW2 (-17 % 0x20000000):  int: -17 (0xffffffef)
2558.    IREMPOW2 (-17 % 0x40000000):  int: -17 (0xffffffef)
2559.    IREMPOW2 (-17 % 0x80000000):  int: -17 (0xffffffef)
2560.    IDIVPOW2 (-12347 / 0x00000001):  int: -12347 (0xffffcfc5)
2561.    IDIVPOW2 (-12347 / 0x00000002):  int: -6173 (0xffffe7e3)
2562.    IDIVPOW2 (-12347 / 0x00000004):  int: -3086 (0xfffff3f2)
2563.    IDIVPOW2 (-12347 / 0x00000008):  int: -1543 (0xfffff9f9)
2564.    IDIVPOW2 (-12347 / 0x00000010):  int: -771 (0xfffffcfd)
2565.    IDIVPOW2 (-12347 / 0x00000020):  int: -385 (0xfffffe7f)
2566.    IDIVPOW2 (-12347 / 0x00000040):  int: -192 (0xffffff40)
2567.    IDIVPOW2 (-12347 / 0x00000080):  int: -96 (0xffffffa0)
2568.    IDIVPOW2 (-12347 / 0x00000100):  int: -48 (0xffffffd0)
2569.    IDIVPOW2 (-12347 / 0x00000200):  int: -24 (0xffffffe8)
2570.    IDIVPOW2 (-12347 / 0x00000400):  int: -12 (0xfffffff4)
2571.    IDIVPOW2 (-12347 / 0x00000800):  int: -6 (0xfffffffa)
2572.    IDIVPOW2 (-12347 / 0x00001000):  int: -3 (0xfffffffd)
2573.    IDIVPOW2 (-12347 / 0x00002000):  int: -1 (0xffffffff)
2574.    IDIVPOW2 (-12347 / 0x00004000):  int: 0 (0x0)
2575.    IDIVPOW2 (-12347 / 0x00008000):  int: 0 (0x0)
2576.    IDIVPOW2 (-12347 / 0x00010000):  int: 0 (0x0)
2577.    IDIVPOW2 (-12347 / 0x00020000):  int: 0 (0x0)
2578.    IDIVPOW2 (-12347 / 0x00040000):  int: 0 (0x0)
2579.    IDIVPOW2 (-12347 / 0x00080000):  int: 0 (0x0)
2580.    IDIVPOW2 (-12347 / 0x00100000):  int: 0 (0x0)
2581.    IDIVPOW2 (-12347 / 0x00200000):  int: 0 (0x0)
2582.    IDIVPOW2 (-12347 / 0x00400000):  int: 0 (0x0)
2583.    IDIVPOW2 (-12347 / 0x00800000):  int: 0 (0x0)
2584.    IDIVPOW2 (-12347 / 0x01000000):  int: 0 (0x0)
2585.    IDIVPOW2 (-12347 / 0x02000000):  int: 0 (0x0)
2586.    IDIVPOW2 (-12347 / 0x04000000):  int: 0 (0x0)
2587.    IDIVPOW2 (-12347 / 0x08000000):  int: 0 (0x0)
2588.    IDIVPOW2 (-12347 / 0x10000000):  int: 0 (0x0)
2589.    IDIVPOW2 (-12347 / 0x20000000):  int: 0 (0x0)
2590.    IDIVPOW2 (-12347 / 0x40000000):  int: 0 (0x0)
2591.    IDIVPOW2 (-12347 / 0x80000000):  int: 0 (0x0)
2592.    IREMPOW2 (-12347 % 0x00000001):  int: 0 (0x0)
2593.    IREMPOW2 (-12347 % 0x00000002):  int: -1 (0xffffffff)
2594.    IREMPOW2 (-12347 % 0x00000004):  int: -3 (0xfffffffd)
2595.    IREMPOW2 (-12347 % 0x00000008):  int: -3 (0xfffffffd)
2596.    IREMPOW2 (-12347 % 0x00000010):  int: -11 (0xfffffff5)
2597.    IREMPOW2 (-12347 % 0x00000020):  int: -27 (0xffffffe5)
2598.    IREMPOW2 (-12347 % 0x00000040):  int: -59 (0xffffffc5)
2599.    IREMPOW2 (-12347 % 0x00000080):  int: -59 (0xffffffc5)
2600.    IREMPOW2 (-12347 % 0x00000100):  int: -59 (0xffffffc5)
2601.    IREMPOW2 (-12347 % 0x00000200):  int: -59 (0xffffffc5)
2602.    IREMPOW2 (-12347 % 0x00000400):  int: -59 (0xffffffc5)
2603.    IREMPOW2 (-12347 % 0x00000800):  int: -59 (0xffffffc5)
2604.    IREMPOW2 (-12347 % 0x00001000):  int: -59 (0xffffffc5)
2605.    IREMPOW2 (-12347 % 0x00002000):  int: -4155 (0xffffefc5)
2606.    IREMPOW2 (-12347 % 0x00004000):  int: -12347 (0xffffcfc5)
2607.    IREMPOW2 (-12347 % 0x00008000):  int: -12347 (0xffffcfc5)
2608.    IREMPOW2 (-12347 % 0x00010000):  int: -12347 (0xffffcfc5)
2609.    IREMPOW2 (-12347 % 0x00020000):  int: -12347 (0xffffcfc5)
2610.    IREMPOW2 (-12347 % 0x00040000):  int: -12347 (0xffffcfc5)
2611.    IREMPOW2 (-12347 % 0x00080000):  int: -12347 (0xffffcfc5)
2612.    IREMPOW2 (-12347 % 0x00100000):  int: -12347 (0xffffcfc5)
2613.    IREMPOW2 (-12347 % 0x00200000):  int: -12347 (0xffffcfc5)
2614.    IREMPOW2 (-12347 % 0x00400000):  int: -12347 (0xffffcfc5)
2615.    IREMPOW2 (-12347 % 0x00800000):  int: -12347 (0xffffcfc5)
2616.    IREMPOW2 (-12347 % 0x01000000):  int: -12347 (0xffffcfc5)
2617.    IREMPOW2 (-12347 % 0x02000000):  int: -12347 (0xffffcfc5)
2618.    IREMPOW2 (-12347 % 0x04000000):  int: -12347 (0xffffcfc5)
2619.    IREMPOW2 (-12347 % 0x08000000):  int: -12347 (0xffffcfc5)
2620.    IREMPOW2 (-12347 % 0x10000000):  int: -12347 (0xffffcfc5)
2621.    IREMPOW2 (-12347 % 0x20000000):  int: -12347 (0xffffcfc5)
2622.    IREMPOW2 (-12347 % 0x40000000):  int: -12347 (0xffffcfc5)
2623.    IREMPOW2 (-12347 % 0x80000000):  int: -12347 (0xffffcfc5)
2624.    IDIVPOW2 (-8893427 / 0x00000001):  int: -8893427 (0xff784c0d)
2625.    IDIVPOW2 (-8893427 / 0x00000002):  int: -4446713 (0xffbc2607)
2626.    IDIVPOW2 (-8893427 / 0x00000004):  int: -2223356 (0xffde1304)
2627.    IDIVPOW2 (-8893427 / 0x00000008):  int: -1111678 (0xffef0982)
2628.    IDIVPOW2 (-8893427 / 0x00000010):  int: -555839 (0xfff784c1)
2629.    IDIVPOW2 (-8893427 / 0x00000020):  int: -277919 (0xfffbc261)
2630.    IDIVPOW2 (-8893427 / 0x00000040):  int: -138959 (0xfffde131)
2631.    IDIVPOW2 (-8893427 / 0x00000080):  int: -69479 (0xfffef099)
2632.    IDIVPOW2 (-8893427 / 0x00000100):  int: -34739 (0xffff784d)
2633.    IDIVPOW2 (-8893427 / 0x00000200):  int: -17369 (0xffffbc27)
2634.    IDIVPOW2 (-8893427 / 0x00000400):  int: -8684 (0xffffde14)
2635.    IDIVPOW2 (-8893427 / 0x00000800):  int: -4342 (0xffffef0a)
2636.    IDIVPOW2 (-8893427 / 0x00001000):  int: -2171 (0xfffff785)
2637.    IDIVPOW2 (-8893427 / 0x00002000):  int: -1085 (0xfffffbc3)
2638.    IDIVPOW2 (-8893427 / 0x00004000):  int: -542 (0xfffffde2)
2639.    IDIVPOW2 (-8893427 / 0x00008000):  int: -271 (0xfffffef1)
2640.    IDIVPOW2 (-8893427 / 0x00010000):  int: -135 (0xffffff79)
2641.    IDIVPOW2 (-8893427 / 0x00020000):  int: -67 (0xffffffbd)
2642.    IDIVPOW2 (-8893427 / 0x00040000):  int: -33 (0xffffffdf)
2643.    IDIVPOW2 (-8893427 / 0x00080000):  int: -16 (0xfffffff0)
2644.    IDIVPOW2 (-8893427 / 0x00100000):  int: -8 (0xfffffff8)
2645.    IDIVPOW2 (-8893427 / 0x00200000):  int: -4 (0xfffffffc)
2646.    IDIVPOW2 (-8893427 / 0x00400000):  int: -2 (0xfffffffe)
2647.    IDIVPOW2 (-8893427 / 0x00800000):  int: -1 (0xffffffff)
2648.    IDIVPOW2 (-8893427 / 0x01000000):  int: 0 (0x0)
2649.    IDIVPOW2 (-8893427 / 0x02000000):  int: 0 (0x0)
2650.    IDIVPOW2 (-8893427 / 0x04000000):  int: 0 (0x0)
2651.    IDIVPOW2 (-8893427 / 0x08000000):  int: 0 (0x0)
2652.    IDIVPOW2 (-8893427 / 0x10000000):  int: 0 (0x0)
2653.    IDIVPOW2 (-8893427 / 0x20000000):  int: 0 (0x0)
2654.    IDIVPOW2 (-8893427 / 0x40000000):  int: 0 (0x0)
2655.    IDIVPOW2 (-8893427 / 0x80000000):  int: 0 (0x0)
2656.    IREMPOW2 (-8893427 % 0x00000001):  int: 0 (0x0)
2657.    IREMPOW2 (-8893427 % 0x00000002):  int: -1 (0xffffffff)
2658.    IREMPOW2 (-8893427 % 0x00000004):  int: -3 (0xfffffffd)
2659.    IREMPOW2 (-8893427 % 0x00000008):  int: -3 (0xfffffffd)
2660.    IREMPOW2 (-8893427 % 0x00000010):  int: -3 (0xfffffffd)
2661.    IREMPOW2 (-8893427 % 0x00000020):  int: -19 (0xffffffed)
2662.    IREMPOW2 (-8893427 % 0x00000040):  int: -51 (0xffffffcd)
2663.    IREMPOW2 (-8893427 % 0x00000080):  int: -115 (0xffffff8d)
2664.    IREMPOW2 (-8893427 % 0x00000100):  int: -243 (0xffffff0d)
2665.    IREMPOW2 (-8893427 % 0x00000200):  int: -499 (0xfffffe0d)
2666.    IREMPOW2 (-8893427 % 0x00000400):  int: -1011 (0xfffffc0d)
2667.    IREMPOW2 (-8893427 % 0x00000800):  int: -1011 (0xfffffc0d)
2668.    IREMPOW2 (-8893427 % 0x00001000):  int: -1011 (0xfffffc0d)
2669.    IREMPOW2 (-8893427 % 0x00002000):  int: -5107 (0xffffec0d)
2670.    IREMPOW2 (-8893427 % 0x00004000):  int: -13299 (0xffffcc0d)
2671.    IREMPOW2 (-8893427 % 0x00008000):  int: -13299 (0xffffcc0d)
2672.    IREMPOW2 (-8893427 % 0x00010000):  int: -46067 (0xffff4c0d)
2673.    IREMPOW2 (-8893427 % 0x00020000):  int: -111603 (0xfffe4c0d)
2674.    IREMPOW2 (-8893427 % 0x00040000):  int: -242675 (0xfffc4c0d)
2675.    IREMPOW2 (-8893427 % 0x00080000):  int: -504819 (0xfff84c0d)
2676.    IREMPOW2 (-8893427 % 0x00100000):  int: -504819 (0xfff84c0d)
2677.    IREMPOW2 (-8893427 % 0x00200000):  int: -504819 (0xfff84c0d)
2678.    IREMPOW2 (-8893427 % 0x00400000):  int: -504819 (0xfff84c0d)
2679.    IREMPOW2 (-8893427 % 0x00800000):  int: -504819 (0xfff84c0d)
2680.    IREMPOW2 (-8893427 % 0x01000000):  int: -8893427 (0xff784c0d)
2681.    IREMPOW2 (-8893427 % 0x02000000):  int: -8893427 (0xff784c0d)
2682.    IREMPOW2 (-8893427 % 0x04000000):  int: -8893427 (0xff784c0d)
2683.    IREMPOW2 (-8893427 % 0x08000000):  int: -8893427 (0xff784c0d)
2684.    IREMPOW2 (-8893427 % 0x10000000):  int: -8893427 (0xff784c0d)
2685.    IREMPOW2 (-8893427 % 0x20000000):  int: -8893427 (0xff784c0d)
2686.    IREMPOW2 (-8893427 % 0x40000000):  int: -8893427 (0xff784c0d)
2687.    IREMPOW2 (-8893427 % 0x80000000):  int: -8893427 (0xff784c0d)
2688.    IDIVPOW2 (-1005234562 / 0x00000001):  int: -1005234562 (0xc415567e)
2689.    IDIVPOW2 (-1005234562 / 0x00000002):  int: -502617281 (0xe20aab3f)
2690.    IDIVPOW2 (-1005234562 / 0x00000004):  int: -251308640 (0xf10555a0)
2691.    IDIVPOW2 (-1005234562 / 0x00000008):  int: -125654320 (0xf882aad0)
2692.    IDIVPOW2 (-1005234562 / 0x00000010):  int: -62827160 (0xfc415568)
2693.    IDIVPOW2 (-1005234562 / 0x00000020):  int: -31413580 (0xfe20aab4)
2694.    IDIVPOW2 (-1005234562 / 0x00000040):  int: -15706790 (0xff10555a)
2695.    IDIVPOW2 (-1005234562 / 0x00000080):  int: -7853395 (0xff882aad)
2696.    IDIVPOW2 (-1005234562 / 0x00000100):  int: -3926697 (0xffc41557)
2697.    IDIVPOW2 (-1005234562 / 0x00000200):  int: -1963348 (0xffe20aac)
2698.    IDIVPOW2 (-1005234562 / 0x00000400):  int: -981674 (0xfff10556)
2699.    IDIVPOW2 (-1005234562 / 0x00000800):  int: -490837 (0xfff882ab)
2700.    IDIVPOW2 (-1005234562 / 0x00001000):  int: -245418 (0xfffc4156)
2701.    IDIVPOW2 (-1005234562 / 0x00002000):  int: -122709 (0xfffe20ab)
2702.    IDIVPOW2 (-1005234562 / 0x00004000):  int: -61354 (0xffff1056)
2703.    IDIVPOW2 (-1005234562 / 0x00008000):  int: -30677 (0xffff882b)
2704.    IDIVPOW2 (-1005234562 / 0x00010000):  int: -15338 (0xffffc416)
2705.    IDIVPOW2 (-1005234562 / 0x00020000):  int: -7669 (0xffffe20b)
2706.    IDIVPOW2 (-1005234562 / 0x00040000):  int: -3834 (0xfffff106)
2707.    IDIVPOW2 (-1005234562 / 0x00080000):  int: -1917 (0xfffff883)
2708.    IDIVPOW2 (-1005234562 / 0x00100000):  int: -958 (0xfffffc42)
2709.    IDIVPOW2 (-1005234562 / 0x00200000):  int: -479 (0xfffffe21)
2710.    IDIVPOW2 (-1005234562 / 0x00400000):  int: -239 (0xffffff11)
2711.    IDIVPOW2 (-1005234562 / 0x00800000):  int: -119 (0xffffff89)
2712.    IDIVPOW2 (-1005234562 / 0x01000000):  int: -59 (0xffffffc5)
2713.    IDIVPOW2 (-1005234562 / 0x02000000):  int: -29 (0xffffffe3)
2714.    IDIVPOW2 (-1005234562 / 0x04000000):  int: -14 (0xfffffff2)
2715.    IDIVPOW2 (-1005234562 / 0x08000000):  int: -7 (0xfffffff9)
2716.    IDIVPOW2 (-1005234562 / 0x10000000):  int: -3 (0xfffffffd)
2717.    IDIVPOW2 (-1005234562 / 0x20000000):  int: -1 (0xffffffff)
2718.    IDIVPOW2 (-1005234562 / 0x40000000):  int: 0 (0x0)
2719.    IDIVPOW2 (-1005234562 / 0x80000000):  int: 0 (0x0)
2720.    IREMPOW2 (-1005234562 % 0x00000001):  int: 0 (0x0)
2721.    IREMPOW2 (-1005234562 % 0x00000002):  int: 0 (0x0)
2722.    IREMPOW2 (-1005234562 % 0x00000004):  int: -2 (0xfffffffe)
2723.    IREMPOW2 (-1005234562 % 0x00000008):  int: -2 (0xfffffffe)
2724.    IREMPOW2 (-1005234562 % 0x00000010):  int: -2 (0xfffffffe)
2725.    IREMPOW2 (-1005234562 % 0x00000020):  int: -2 (0xfffffffe)
2726.    IREMPOW2 (-1005234562 % 0x00000040):  int: -2 (0xfffffffe)
2727.    IREMPOW2 (-1005234562 % 0x00000080):  int: -2 (0xfffffffe)
2728.    IREMPOW2 (-1005234562 % 0x00000100):  int: -130 (0xffffff7e)
2729.    IREMPOW2 (-1005234562 % 0x00000200):  int: -386 (0xfffffe7e)
2730.    IREMPOW2 (-1005234562 % 0x00000400):  int: -386 (0xfffffe7e)
2731.    IREMPOW2 (-1005234562 % 0x00000800):  int: -386 (0xfffffe7e)
2732.    IREMPOW2 (-1005234562 % 0x00001000):  int: -2434 (0xfffff67e)
2733.    IREMPOW2 (-1005234562 % 0x00002000):  int: -2434 (0xfffff67e)
2734.    IREMPOW2 (-1005234562 % 0x00004000):  int: -10626 (0xffffd67e)
2735.    IREMPOW2 (-1005234562 % 0x00008000):  int: -10626 (0xffffd67e)
2736.    IREMPOW2 (-1005234562 % 0x00010000):  int: -43394 (0xffff567e)
2737.    IREMPOW2 (-1005234562 % 0x00020000):  int: -43394 (0xffff567e)
2738.    IREMPOW2 (-1005234562 % 0x00040000):  int: -174466 (0xfffd567e)
2739.    IREMPOW2 (-1005234562 % 0x00080000):  int: -174466 (0xfffd567e)
2740.    IREMPOW2 (-1005234562 % 0x00100000):  int: -698754 (0xfff5567e)
2741.    IREMPOW2 (-1005234562 % 0x00200000):  int: -698754 (0xfff5567e)
2742.    IREMPOW2 (-1005234562 % 0x00400000):  int: -2795906 (0xffd5567e)
2743.    IREMPOW2 (-1005234562 % 0x00800000):  int: -6990210 (0xff95567e)
2744.    IREMPOW2 (-1005234562 % 0x01000000):  int: -15378818 (0xff15567e)
2745.    IREMPOW2 (-1005234562 % 0x02000000):  int: -32156034 (0xfe15567e)
2746.    IREMPOW2 (-1005234562 % 0x04000000):  int: -65710466 (0xfc15567e)
2747.    IREMPOW2 (-1005234562 % 0x08000000):  int: -65710466 (0xfc15567e)
2748.    IREMPOW2 (-1005234562 % 0x10000000):  int: -199928194 (0xf415567e)
2749.    IREMPOW2 (-1005234562 % 0x20000000):  int: -468363650 (0xe415567e)
2750.    IREMPOW2 (-1005234562 % 0x40000000):  int: -1005234562 (0xc415567e)
2751.    IREMPOW2 (-1005234562 % 0x80000000):  int: -1005234562 (0xc415567e)
2752.    LDIVPOW2 (17 / 0x00000001):  long: 17 (0x11)
2753.    LDIVPOW2 (17 / 0x00000002):  long: 8 (0x8)
2754.    LDIVPOW2 (17 / 0x00000004):  long: 4 (0x4)
2755.    LDIVPOW2 (17 / 0x00000008):  long: 2 (0x2)
2756.    LDIVPOW2 (17 / 0x00000010):  long: 1 (0x1)
2757.    LDIVPOW2 (17 / 0x00000020):  long: 0 (0x0)
2758.    LDIVPOW2 (17 / 0x00000040):  long: 0 (0x0)
2759.    LDIVPOW2 (17 / 0x00000080):  long: 0 (0x0)
2760.    LDIVPOW2 (17 / 0x00000100):  long: 0 (0x0)
2761.    LDIVPOW2 (17 / 0x00000200):  long: 0 (0x0)
2762.    LDIVPOW2 (17 / 0x00000400):  long: 0 (0x0)
2763.    LDIVPOW2 (17 / 0x00000800):  long: 0 (0x0)
2764.    LDIVPOW2 (17 / 0x00001000):  long: 0 (0x0)
2765.    LDIVPOW2 (17 / 0x00002000):  long: 0 (0x0)
2766.    LDIVPOW2 (17 / 0x00004000):  long: 0 (0x0)
2767.    LDIVPOW2 (17 / 0x00008000):  long: 0 (0x0)
2768.    LDIVPOW2 (17 / 0x00010000):  long: 0 (0x0)
2769.    LDIVPOW2 (17 / 0x00020000):  long: 0 (0x0)
2770.    LDIVPOW2 (17 / 0x00040000):  long: 0 (0x0)
2771.    LDIVPOW2 (17 / 0x00080000):  long: 0 (0x0)
2772.    LDIVPOW2 (17 / 0x00100000):  long: 0 (0x0)
2773.    LDIVPOW2 (17 / 0x00200000):  long: 0 (0x0)
2774.    LDIVPOW2 (17 / 0x00400000):  long: 0 (0x0)
2775.    LDIVPOW2 (17 / 0x00800000):  long: 0 (0x0)
2776.    LDIVPOW2 (17 / 0x01000000):  long: 0 (0x0)
2777.    LDIVPOW2 (17 / 0x02000000):  long: 0 (0x0)
2778.    LDIVPOW2 (17 / 0x04000000):  long: 0 (0x0)
2779.    LDIVPOW2 (17 / 0x08000000):  long: 0 (0x0)
2780.    LDIVPOW2 (17 / 0x10000000):  long: 0 (0x0)
2781.    LDIVPOW2 (17 / 0x20000000):  long: 0 (0x0)
2782.    LDIVPOW2 (17 / 0x40000000):  long: 0 (0x0)
2783.    LDIVPOW2 (17 / 0x80000000):  long: 0 (0x0)
2784.    LREMPOW2 (17 % 0x00000001):  long: 0 (0x0)
2785.    LREMPOW2 (17 % 0x00000002):  long: 1 (0x1)
2786.    LREMPOW2 (17 % 0x00000004):  long: 1 (0x1)
2787.    LREMPOW2 (17 % 0x00000008):  long: 1 (0x1)
2788.    LREMPOW2 (17 % 0x00000010):  long: 1 (0x1)
2789.    LREMPOW2 (17 % 0x00000020):  long: 17 (0x11)
2790.    LREMPOW2 (17 % 0x00000040):  long: 17 (0x11)
2791.    LREMPOW2 (17 % 0x00000080):  long: 17 (0x11)
2792.    LREMPOW2 (17 % 0x00000100):  long: 17 (0x11)
2793.    LREMPOW2 (17 % 0x00000200):  long: 17 (0x11)
2794.    LREMPOW2 (17 % 0x00000400):  long: 17 (0x11)
2795.    LREMPOW2 (17 % 0x00000800):  long: 17 (0x11)
2796.    LREMPOW2 (17 % 0x00001000):  long: 17 (0x11)
2797.    LREMPOW2 (17 % 0x00002000):  long: 17 (0x11)
2798.    LREMPOW2 (17 % 0x00004000):  long: 17 (0x11)
2799.    LREMPOW2 (17 % 0x00008000):  long: 17 (0x11)
2800.    LREMPOW2 (17 % 0x00010000):  long: 17 (0x11)
2801.    LREMPOW2 (17 % 0x00020000):  long: 17 (0x11)
2802.    LREMPOW2 (17 % 0x00040000):  long: 17 (0x11)
2803.    LREMPOW2 (17 % 0x00080000):  long: 17 (0x11)
2804.    LREMPOW2 (17 % 0x00100000):  long: 17 (0x11)
2805.    LREMPOW2 (17 % 0x00200000):  long: 17 (0x11)
2806.    LREMPOW2 (17 % 0x00400000):  long: 17 (0x11)
2807.    LREMPOW2 (17 % 0x00800000):  long: 17 (0x11)
2808.    LREMPOW2 (17 % 0x01000000):  long: 17 (0x11)
2809.    LREMPOW2 (17 % 0x02000000):  long: 17 (0x11)
2810.    LREMPOW2 (17 % 0x04000000):  long: 17 (0x11)
2811.    LREMPOW2 (17 % 0x08000000):  long: 17 (0x11)
2812.    LREMPOW2 (17 % 0x10000000):  long: 17 (0x11)
2813.    LREMPOW2 (17 % 0x20000000):  long: 17 (0x11)
2814.    LREMPOW2 (17 % 0x40000000):  long: 17 (0x11)
2815.    LREMPOW2 (17 % 0x80000000):  long: 17 (0x11)
2816.    LDIVPOW2 (12347 / 0x00000001):  long: 12347 (0x303b)
2817.    LDIVPOW2 (12347 / 0x00000002):  long: 6173 (0x181d)
2818.    LDIVPOW2 (12347 / 0x00000004):  long: 3086 (0xc0e)
2819.    LDIVPOW2 (12347 / 0x00000008):  long: 1543 (0x607)
2820.    LDIVPOW2 (12347 / 0x00000010):  long: 771 (0x303)
2821.    LDIVPOW2 (12347 / 0x00000020):  long: 385 (0x181)
2822.    LDIVPOW2 (12347 / 0x00000040):  long: 192 (0xc0)
2823.    LDIVPOW2 (12347 / 0x00000080):  long: 96 (0x60)
2824.    LDIVPOW2 (12347 / 0x00000100):  long: 48 (0x30)
2825.    LDIVPOW2 (12347 / 0x00000200):  long: 24 (0x18)
2826.    LDIVPOW2 (12347 / 0x00000400):  long: 12 (0xc)
2827.    LDIVPOW2 (12347 / 0x00000800):  long: 6 (0x6)
2828.    LDIVPOW2 (12347 / 0x00001000):  long: 3 (0x3)
2829.    LDIVPOW2 (12347 / 0x00002000):  long: 1 (0x1)
2830.    LDIVPOW2 (12347 / 0x00004000):  long: 0 (0x0)
2831.    LDIVPOW2 (12347 / 0x00008000):  long: 0 (0x0)
2832.    LDIVPOW2 (12347 / 0x00010000):  long: 0 (0x0)
2833.    LDIVPOW2 (12347 / 0x00020000):  long: 0 (0x0)
2834.    LDIVPOW2 (12347 / 0x00040000):  long: 0 (0x0)
2835.    LDIVPOW2 (12347 / 0x00080000):  long: 0 (0x0)
2836.    LDIVPOW2 (12347 / 0x00100000):  long: 0 (0x0)
2837.    LDIVPOW2 (12347 / 0x00200000):  long: 0 (0x0)
2838.    LDIVPOW2 (12347 / 0x00400000):  long: 0 (0x0)
2839.    LDIVPOW2 (12347 / 0x00800000):  long: 0 (0x0)
2840.    LDIVPOW2 (12347 / 0x01000000):  long: 0 (0x0)
2841.    LDIVPOW2 (12347 / 0x02000000):  long: 0 (0x0)
2842.    LDIVPOW2 (12347 / 0x04000000):  long: 0 (0x0)
2843.    LDIVPOW2 (12347 / 0x08000000):  long: 0 (0x0)
2844.    LDIVPOW2 (12347 / 0x10000000):  long: 0 (0x0)
2845.    LDIVPOW2 (12347 / 0x20000000):  long: 0 (0x0)
2846.    LDIVPOW2 (12347 / 0x40000000):  long: 0 (0x0)
2847.    LDIVPOW2 (12347 / 0x80000000):  long: 0 (0x0)
2848.    LREMPOW2 (12347 % 0x00000001):  long: 0 (0x0)
2849.    LREMPOW2 (12347 % 0x00000002):  long: 1 (0x1)
2850.    LREMPOW2 (12347 % 0x00000004):  long: 3 (0x3)
2851.    LREMPOW2 (12347 % 0x00000008):  long: 3 (0x3)
2852.    LREMPOW2 (12347 % 0x00000010):  long: 11 (0xb)
2853.    LREMPOW2 (12347 % 0x00000020):  long: 27 (0x1b)
2854.    LREMPOW2 (12347 % 0x00000040):  long: 59 (0x3b)
2855.    LREMPOW2 (12347 % 0x00000080):  long: 59 (0x3b)
2856.    LREMPOW2 (12347 % 0x00000100):  long: 59 (0x3b)
2857.    LREMPOW2 (12347 % 0x00000200):  long: 59 (0x3b)
2858.    LREMPOW2 (12347 % 0x00000400):  long: 59 (0x3b)
2859.    LREMPOW2 (12347 % 0x00000800):  long: 59 (0x3b)
2860.    LREMPOW2 (12347 % 0x00001000):  long: 59 (0x3b)
2861.    LREMPOW2 (12347 % 0x00002000):  long: 4155 (0x103b)
2862.    LREMPOW2 (12347 % 0x00004000):  long: 12347 (0x303b)
2863.    LREMPOW2 (12347 % 0x00008000):  long: 12347 (0x303b)
2864.    LREMPOW2 (12347 % 0x00010000):  long: 12347 (0x303b)
2865.    LREMPOW2 (12347 % 0x00020000):  long: 12347 (0x303b)
2866.    LREMPOW2 (12347 % 0x00040000):  long: 12347 (0x303b)
2867.    LREMPOW2 (12347 % 0x00080000):  long: 12347 (0x303b)
2868.    LREMPOW2 (12347 % 0x00100000):  long: 12347 (0x303b)
2869.    LREMPOW2 (12347 % 0x00200000):  long: 12347 (0x303b)
2870.    LREMPOW2 (12347 % 0x00400000):  long: 12347 (0x303b)
2871.    LREMPOW2 (12347 % 0x00800000):  long: 12347 (0x303b)
2872.    LREMPOW2 (12347 % 0x01000000):  long: 12347 (0x303b)
2873.    LREMPOW2 (12347 % 0x02000000):  long: 12347 (0x303b)
2874.    LREMPOW2 (12347 % 0x04000000):  long: 12347 (0x303b)
2875.    LREMPOW2 (12347 % 0x08000000):  long: 12347 (0x303b)
2876.    LREMPOW2 (12347 % 0x10000000):  long: 12347 (0x303b)
2877.    LREMPOW2 (12347 % 0x20000000):  long: 12347 (0x303b)
2878.    LREMPOW2 (12347 % 0x40000000):  long: 12347 (0x303b)
2879.    LREMPOW2 (12347 % 0x80000000):  long: 12347 (0x303b)
2880.    LDIVPOW2 (8893427 / 0x00000001):  long: 8893427 (0x87b3f3)
2881.    LDIVPOW2 (8893427 / 0x00000002):  long: 4446713 (0x43d9f9)
2882.    LDIVPOW2 (8893427 / 0x00000004):  long: 2223356 (0x21ecfc)
2883.    LDIVPOW2 (8893427 / 0x00000008):  long: 1111678 (0x10f67e)
2884.    LDIVPOW2 (8893427 / 0x00000010):  long: 555839 (0x87b3f)
2885.    LDIVPOW2 (8893427 / 0x00000020):  long: 277919 (0x43d9f)
2886.    LDIVPOW2 (8893427 / 0x00000040):  long: 138959 (0x21ecf)
2887.    LDIVPOW2 (8893427 / 0x00000080):  long: 69479 (0x10f67)
2888.    LDIVPOW2 (8893427 / 0x00000100):  long: 34739 (0x87b3)
2889.    LDIVPOW2 (8893427 / 0x00000200):  long: 17369 (0x43d9)
2890.    LDIVPOW2 (8893427 / 0x00000400):  long: 8684 (0x21ec)
2891.    LDIVPOW2 (8893427 / 0x00000800):  long: 4342 (0x10f6)
2892.    LDIVPOW2 (8893427 / 0x00001000):  long: 2171 (0x87b)
2893.    LDIVPOW2 (8893427 / 0x00002000):  long: 1085 (0x43d)
2894.    LDIVPOW2 (8893427 / 0x00004000):  long: 542 (0x21e)
2895.    LDIVPOW2 (8893427 / 0x00008000):  long: 271 (0x10f)
2896.    LDIVPOW2 (8893427 / 0x00010000):  long: 135 (0x87)
2897.    LDIVPOW2 (8893427 / 0x00020000):  long: 67 (0x43)
2898.    LDIVPOW2 (8893427 / 0x00040000):  long: 33 (0x21)
2899.    LDIVPOW2 (8893427 / 0x00080000):  long: 16 (0x10)
2900.    LDIVPOW2 (8893427 / 0x00100000):  long: 8 (0x8)
2901.    LDIVPOW2 (8893427 / 0x00200000):  long: 4 (0x4)
2902.    LDIVPOW2 (8893427 / 0x00400000):  long: 2 (0x2)
2903.    LDIVPOW2 (8893427 / 0x00800000):  long: 1 (0x1)
2904.    LDIVPOW2 (8893427 / 0x01000000):  long: 0 (0x0)
2905.    LDIVPOW2 (8893427 / 0x02000000):  long: 0 (0x0)
2906.    LDIVPOW2 (8893427 / 0x04000000):  long: 0 (0x0)
2907.    LDIVPOW2 (8893427 / 0x08000000):  long: 0 (0x0)
2908.    LDIVPOW2 (8893427 / 0x10000000):  long: 0 (0x0)
2909.    LDIVPOW2 (8893427 / 0x20000000):  long: 0 (0x0)
2910.    LDIVPOW2 (8893427 / 0x40000000):  long: 0 (0x0)
2911.    LDIVPOW2 (8893427 / 0x80000000):  long: 0 (0x0)
2912.    LREMPOW2 (8893427 % 0x00000001):  long: 0 (0x0)
2913.    LREMPOW2 (8893427 % 0x00000002):  long: 1 (0x1)
2914.    LREMPOW2 (8893427 % 0x00000004):  long: 3 (0x3)
2915.    LREMPOW2 (8893427 % 0x00000008):  long: 3 (0x3)
2916.    LREMPOW2 (8893427 % 0x00000010):  long: 3 (0x3)
2917.    LREMPOW2 (8893427 % 0x00000020):  long: 19 (0x13)
2918.    LREMPOW2 (8893427 % 0x00000040):  long: 51 (0x33)
2919.    LREMPOW2 (8893427 % 0x00000080):  long: 115 (0x73)
2920.    LREMPOW2 (8893427 % 0x00000100):  long: 243 (0xf3)
2921.    LREMPOW2 (8893427 % 0x00000200):  long: 499 (0x1f3)
2922.    LREMPOW2 (8893427 % 0x00000400):  long: 1011 (0x3f3)
2923.    LREMPOW2 (8893427 % 0x00000800):  long: 1011 (0x3f3)
2924.    LREMPOW2 (8893427 % 0x00001000):  long: 1011 (0x3f3)
2925.    LREMPOW2 (8893427 % 0x00002000):  long: 5107 (0x13f3)
2926.    LREMPOW2 (8893427 % 0x00004000):  long: 13299 (0x33f3)
2927.    LREMPOW2 (8893427 % 0x00008000):  long: 13299 (0x33f3)
2928.    LREMPOW2 (8893427 % 0x00010000):  long: 46067 (0xb3f3)
2929.    LREMPOW2 (8893427 % 0x00020000):  long: 111603 (0x1b3f3)
2930.    LREMPOW2 (8893427 % 0x00040000):  long: 242675 (0x3b3f3)
2931.    LREMPOW2 (8893427 % 0x00080000):  long: 504819 (0x7b3f3)
2932.    LREMPOW2 (8893427 % 0x00100000):  long: 504819 (0x7b3f3)
2933.    LREMPOW2 (8893427 % 0x00200000):  long: 504819 (0x7b3f3)
2934.    LREMPOW2 (8893427 % 0x00400000):  long: 504819 (0x7b3f3)
2935.    LREMPOW2 (8893427 % 0x00800000):  long: 504819 (0x7b3f3)
2936.    LREMPOW2 (8893427 % 0x01000000):  long: 8893427 (0x87b3f3)
2937.    LREMPOW2 (8893427 % 0x02000000):  long: 8893427 (0x87b3f3)
2938.    LREMPOW2 (8893427 % 0x04000000):  long: 8893427 (0x87b3f3)
2939.    LREMPOW2 (8893427 % 0x08000000):  long: 8893427 (0x87b3f3)
2940.    LREMPOW2 (8893427 % 0x10000000):  long: 8893427 (0x87b3f3)
2941.    LREMPOW2 (8893427 % 0x20000000):  long: 8893427 (0x87b3f3)
2942.    LREMPOW2 (8893427 % 0x40000000):  long: 8893427 (0x87b3f3)
2943.    LREMPOW2 (8893427 % 0x80000000):  long: 8893427 (0x87b3f3)
2944.    LDIVPOW2 (1005234562 / 0x00000001):  long: 1005234562 (0x3beaa982)
2945.    LDIVPOW2 (1005234562 / 0x00000002):  long: 502617281 (0x1df554c1)
2946.    LDIVPOW2 (1005234562 / 0x00000004):  long: 251308640 (0xefaaa60)
2947.    LDIVPOW2 (1005234562 / 0x00000008):  long: 125654320 (0x77d5530)
2948.    LDIVPOW2 (1005234562 / 0x00000010):  long: 62827160 (0x3beaa98)
2949.    LDIVPOW2 (1005234562 / 0x00000020):  long: 31413580 (0x1df554c)
2950.    LDIVPOW2 (1005234562 / 0x00000040):  long: 15706790 (0xefaaa6)
2951.    LDIVPOW2 (1005234562 / 0x00000080):  long: 7853395 (0x77d553)
2952.    LDIVPOW2 (1005234562 / 0x00000100):  long: 3926697 (0x3beaa9)
2953.    LDIVPOW2 (1005234562 / 0x00000200):  long: 1963348 (0x1df554)
2954.    LDIVPOW2 (1005234562 / 0x00000400):  long: 981674 (0xefaaa)
2955.    LDIVPOW2 (1005234562 / 0x00000800):  long: 490837 (0x77d55)
2956.    LDIVPOW2 (1005234562 / 0x00001000):  long: 245418 (0x3beaa)
2957.    LDIVPOW2 (1005234562 / 0x00002000):  long: 122709 (0x1df55)
2958.    LDIVPOW2 (1005234562 / 0x00004000):  long: 61354 (0xefaa)
2959.    LDIVPOW2 (1005234562 / 0x00008000):  long: 30677 (0x77d5)
2960.    LDIVPOW2 (1005234562 / 0x00010000):  long: 15338 (0x3bea)
2961.    LDIVPOW2 (1005234562 / 0x00020000):  long: 7669 (0x1df5)
2962.    LDIVPOW2 (1005234562 / 0x00040000):  long: 3834 (0xefa)
2963.    LDIVPOW2 (1005234562 / 0x00080000):  long: 1917 (0x77d)
2964.    LDIVPOW2 (1005234562 / 0x00100000):  long: 958 (0x3be)
2965.    LDIVPOW2 (1005234562 / 0x00200000):  long: 479 (0x1df)
2966.    LDIVPOW2 (1005234562 / 0x00400000):  long: 239 (0xef)
2967.    LDIVPOW2 (1005234562 / 0x00800000):  long: 119 (0x77)
2968.    LDIVPOW2 (1005234562 / 0x01000000):  long: 59 (0x3b)
2969.    LDIVPOW2 (1005234562 / 0x02000000):  long: 29 (0x1d)
2970.    LDIVPOW2 (1005234562 / 0x04000000):  long: 14 (0xe)
2971.    LDIVPOW2 (1005234562 / 0x08000000):  long: 7 (0x7)
2972.    LDIVPOW2 (1005234562 / 0x10000000):  long: 3 (0x3)
2973.    LDIVPOW2 (1005234562 / 0x20000000):  long: 1 (0x1)
2974.    LDIVPOW2 (1005234562 / 0x40000000):  long: 0 (0x0)
2975.    LDIVPOW2 (1005234562 / 0x80000000):  long: 0 (0x0)
2976.    LREMPOW2 (1005234562 % 0x00000001):  long: 0 (0x0)
2977.    LREMPOW2 (1005234562 % 0x00000002):  long: 0 (0x0)
2978.    LREMPOW2 (1005234562 % 0x00000004):  long: 2 (0x2)
2979.    LREMPOW2 (1005234562 % 0x00000008):  long: 2 (0x2)
2980.    LREMPOW2 (1005234562 % 0x00000010):  long: 2 (0x2)
2981.    LREMPOW2 (1005234562 % 0x00000020):  long: 2 (0x2)
2982.    LREMPOW2 (1005234562 % 0x00000040):  long: 2 (0x2)
2983.    LREMPOW2 (1005234562 % 0x00000080):  long: 2 (0x2)
2984.    LREMPOW2 (1005234562 % 0x00000100):  long: 130 (0x82)
2985.    LREMPOW2 (1005234562 % 0x00000200):  long: 386 (0x182)
2986.    LREMPOW2 (1005234562 % 0x00000400):  long: 386 (0x182)
2987.    LREMPOW2 (1005234562 % 0x00000800):  long: 386 (0x182)
2988.    LREMPOW2 (1005234562 % 0x00001000):  long: 2434 (0x982)
2989.    LREMPOW2 (1005234562 % 0x00002000):  long: 2434 (0x982)
2990.    LREMPOW2 (1005234562 % 0x00004000):  long: 10626 (0x2982)
2991.    LREMPOW2 (1005234562 % 0x00008000):  long: 10626 (0x2982)
2992.    LREMPOW2 (1005234562 % 0x00010000):  long: 43394 (0xa982)
2993.    LREMPOW2 (1005234562 % 0x00020000):  long: 43394 (0xa982)
2994.    LREMPOW2 (1005234562 % 0x00040000):  long: 174466 (0x2a982)
2995.    LREMPOW2 (1005234562 % 0x00080000):  long: 174466 (0x2a982)
2996.    LREMPOW2 (1005234562 % 0x00100000):  long: 698754 (0xaa982)
2997.    LREMPOW2 (1005234562 % 0x00200000):  long: 698754 (0xaa982)
2998.    LREMPOW2 (1005234562 % 0x00400000):  long: 2795906 (0x2aa982)
2999.    LREMPOW2 (1005234562 % 0x00800000):  long: 6990210 (0x6aa982)
3000.    LREMPOW2 (1005234562 % 0x01000000):  long: 15378818 (0xeaa982)
3001.    LREMPOW2 (1005234562 % 0x02000000):  long: 32156034 (0x1eaa982)
3002.    LREMPOW2 (1005234562 % 0x04000000):  long: 65710466 (0x3eaa982)
3003.    LREMPOW2 (1005234562 % 0x08000000):  long: 65710466 (0x3eaa982)
3004.    LREMPOW2 (1005234562 % 0x10000000):  long: 199928194 (0xbeaa982)
3005.    LREMPOW2 (1005234562 % 0x20000000):  long: 468363650 (0x1beaa982)
3006.    LREMPOW2 (1005234562 % 0x40000000):  long: 1005234562 (0x3beaa982)
3007.    LREMPOW2 (1005234562 % 0x80000000):  long: 1005234562 (0x3beaa982)
3008.    LDIVPOW2 (12135005234562 / 0x00000001):  long: 12135005234562 (0xb0966ad2582)
3009.    LDIVPOW2 (12135005234562 / 0x00000002):  long: 6067502617281 (0x584b35692c1)
3010.    LDIVPOW2 (12135005234562 / 0x00000004):  long: 3033751308640 (0x2c259ab4960)
3011.    LDIVPOW2 (12135005234562 / 0x00000008):  long: 1516875654320 (0x1612cd5a4b0)
3012.    LDIVPOW2 (12135005234562 / 0x00000010):  long: 758437827160 (0xb0966ad258)
3013.    LDIVPOW2 (12135005234562 / 0x00000020):  long: 379218913580 (0x584b35692c)
3014.    LDIVPOW2 (12135005234562 / 0x00000040):  long: 189609456790 (0x2c259ab496)
3015.    LDIVPOW2 (12135005234562 / 0x00000080):  long: 94804728395 (0x1612cd5a4b)
3016.    LDIVPOW2 (12135005234562 / 0x00000100):  long: 47402364197 (0xb0966ad25)
3017.    LDIVPOW2 (12135005234562 / 0x00000200):  long: 23701182098 (0x584b35692)
3018.    LDIVPOW2 (12135005234562 / 0x00000400):  long: 11850591049 (0x2c259ab49)
3019.    LDIVPOW2 (12135005234562 / 0x00000800):  long: 5925295524 (0x1612cd5a4)
3020.    LDIVPOW2 (12135005234562 / 0x00001000):  long: 2962647762 (0xb0966ad2)
3021.    LDIVPOW2 (12135005234562 / 0x00002000):  long: 1481323881 (0x584b3569)
3022.    LDIVPOW2 (12135005234562 / 0x00004000):  long: 740661940 (0x2c259ab4)
3023.    LDIVPOW2 (12135005234562 / 0x00008000):  long: 370330970 (0x1612cd5a)
3024.    LDIVPOW2 (12135005234562 / 0x00010000):  long: 185165485 (0xb0966ad)
3025.    LDIVPOW2 (12135005234562 / 0x00020000):  long: 92582742 (0x584b356)
3026.    LDIVPOW2 (12135005234562 / 0x00040000):  long: 46291371 (0x2c259ab)
3027.    LDIVPOW2 (12135005234562 / 0x00080000):  long: 23145685 (0x1612cd5)
3028.    LDIVPOW2 (12135005234562 / 0x00100000):  long: 11572842 (0xb0966a)
3029.    LDIVPOW2 (12135005234562 / 0x00200000):  long: 5786421 (0x584b35)
3030.    LDIVPOW2 (12135005234562 / 0x00400000):  long: 2893210 (0x2c259a)
3031.    LDIVPOW2 (12135005234562 / 0x00800000):  long: 1446605 (0x1612cd)
3032.    LDIVPOW2 (12135005234562 / 0x01000000):  long: 723302 (0xb0966)
3033.    LDIVPOW2 (12135005234562 / 0x02000000):  long: 361651 (0x584b3)
3034.    LDIVPOW2 (12135005234562 / 0x04000000):  long: 180825 (0x2c259)
3035.    LDIVPOW2 (12135005234562 / 0x08000000):  long: 90412 (0x1612c)
3036.    LDIVPOW2 (12135005234562 / 0x10000000):  long: 45206 (0xb096)
3037.    LDIVPOW2 (12135005234562 / 0x20000000):  long: 22603 (0x584b)
3038.    LDIVPOW2 (12135005234562 / 0x40000000):  long: 11301 (0x2c25)
3039.    LDIVPOW2 (12135005234562 / 0x80000000):  long: -5650 (0xffffffffffffe9ee)
3040.    LREMPOW2 (12135005234562 % 0x00000001):  long: 0 (0x0)
3041.    LREMPOW2 (12135005234562 % 0x00000002):  long: 0 (0x0)
3042.    LREMPOW2 (12135005234562 % 0x00000004):  long: 2 (0x2)
3043.    LREMPOW2 (12135005234562 % 0x00000008):  long: 2 (0x2)
3044.    LREMPOW2 (12135005234562 % 0x00000010):  long: 2 (0x2)
3045.    LREMPOW2 (12135005234562 % 0x00000020):  long: 2 (0x2)
3046.    LREMPOW2 (12135005234562 % 0x00000040):  long: 2 (0x2)
3047.    LREMPOW2 (12135005234562 % 0x00000080):  long: 2 (0x2)
3048.    LREMPOW2 (12135005234562 % 0x00000100):  long: 130 (0x82)
3049.    LREMPOW2 (12135005234562 % 0x00000200):  long: 386 (0x182)
3050.    LREMPOW2 (12135005234562 % 0x00000400):  long: 386 (0x182)
3051.    LREMPOW2 (12135005234562 % 0x00000800):  long: 1410 (0x582)
3052.    LREMPOW2 (12135005234562 % 0x00001000):  long: 1410 (0x582)
3053.    LREMPOW2 (12135005234562 % 0x00002000):  long: 1410 (0x582)
3054.    LREMPOW2 (12135005234562 % 0x00004000):  long: 9602 (0x2582)
3055.    LREMPOW2 (12135005234562 % 0x00008000):  long: 9602 (0x2582)
3056.    LREMPOW2 (12135005234562 % 0x00010000):  long: 9602 (0x2582)
3057.    LREMPOW2 (12135005234562 % 0x00020000):  long: 75138 (0x12582)
3058.    LREMPOW2 (12135005234562 % 0x00040000):  long: 75138 (0x12582)
3059.    LREMPOW2 (12135005234562 % 0x00080000):  long: 337282 (0x52582)
3060.    LREMPOW2 (12135005234562 % 0x00100000):  long: 861570 (0xd2582)
3061.    LREMPOW2 (12135005234562 % 0x00200000):  long: 861570 (0xd2582)
3062.    LREMPOW2 (12135005234562 % 0x00400000):  long: 2958722 (0x2d2582)
3063.    LREMPOW2 (12135005234562 % 0x00800000):  long: 2958722 (0x2d2582)
3064.    LREMPOW2 (12135005234562 % 0x01000000):  long: 11347330 (0xad2582)
3065.    LREMPOW2 (12135005234562 % 0x02000000):  long: 11347330 (0xad2582)
3066.    LREMPOW2 (12135005234562 % 0x04000000):  long: 44901762 (0x2ad2582)
3067.    LREMPOW2 (12135005234562 % 0x08000000):  long: 112010626 (0x6ad2582)
3068.    LREMPOW2 (12135005234562 % 0x10000000):  long: 112010626 (0x6ad2582)
3069.    LREMPOW2 (12135005234562 % 0x20000000):  long: 112010626 (0x6ad2582)
3070.    LREMPOW2 (12135005234562 % 0x40000000):  long: 648881538 (0x26ad2582)
3071.    LREMPOW2 (12135005234562 % 0x80000000):  long: 1722623362 (0x66ad2582)
3072.    LDIVPOW2 (2343552355623464626 / 0x00000001):  long: 2343552355623464626 (0x2085f87365776eb2)
3073.    LDIVPOW2 (2343552355623464626 / 0x00000002):  long: 1171776177811732313 (0x1042fc39b2bbb759)
3074.    LDIVPOW2 (2343552355623464626 / 0x00000004):  long: 585888088905866156 (0x8217e1cd95ddbac)
3075.    LDIVPOW2 (2343552355623464626 / 0x00000008):  long: 292944044452933078 (0x410bf0e6caeedd6)
3076.    LDIVPOW2 (2343552355623464626 / 0x00000010):  long: 146472022226466539 (0x2085f87365776eb)
3077.    LDIVPOW2 (2343552355623464626 / 0x00000020):  long: 73236011113233269 (0x1042fc39b2bbb75)
3078.    LDIVPOW2 (2343552355623464626 / 0x00000040):  long: 36618005556616634 (0x8217e1cd95ddba)
3079.    LDIVPOW2 (2343552355623464626 / 0x00000080):  long: 18309002778308317 (0x410bf0e6caeedd)
3080.    LDIVPOW2 (2343552355623464626 / 0x00000100):  long: 9154501389154158 (0x2085f87365776e)
3081.    LDIVPOW2 (2343552355623464626 / 0x00000200):  long: 4577250694577079 (0x1042fc39b2bbb7)
3082.    LDIVPOW2 (2343552355623464626 / 0x00000400):  long: 2288625347288539 (0x8217e1cd95ddb)
3083.    LDIVPOW2 (2343552355623464626 / 0x00000800):  long: 1144312673644269 (0x410bf0e6caeed)
3084.    LDIVPOW2 (2343552355623464626 / 0x00001000):  long: 572156336822134 (0x2085f87365776)
3085.    LDIVPOW2 (2343552355623464626 / 0x00002000):  long: 286078168411067 (0x1042fc39b2bbb)
3086.    LDIVPOW2 (2343552355623464626 / 0x00004000):  long: 143039084205533 (0x8217e1cd95dd)
3087.    LDIVPOW2 (2343552355623464626 / 0x00008000):  long: 71519542102766 (0x410bf0e6caee)
3088.    LDIVPOW2 (2343552355623464626 / 0x00010000):  long: 35759771051383 (0x2085f8736577)
3089.    LDIVPOW2 (2343552355623464626 / 0x00020000):  long: 17879885525691 (0x1042fc39b2bb)
3090.    LDIVPOW2 (2343552355623464626 / 0x00040000):  long: 8939942762845 (0x8217e1cd95d)
3091.    LDIVPOW2 (2343552355623464626 / 0x00080000):  long: 4469971381422 (0x410bf0e6cae)
3092.    LDIVPOW2 (2343552355623464626 / 0x00100000):  long: 2234985690711 (0x2085f873657)
3093.    LDIVPOW2 (2343552355623464626 / 0x00200000):  long: 1117492845355 (0x1042fc39b2b)
3094.    LDIVPOW2 (2343552355623464626 / 0x00400000):  long: 558746422677 (0x8217e1cd95)
3095.    LDIVPOW2 (2343552355623464626 / 0x00800000):  long: 279373211338 (0x410bf0e6ca)
3096.    LDIVPOW2 (2343552355623464626 / 0x01000000):  long: 139686605669 (0x2085f87365)
3097.    LDIVPOW2 (2343552355623464626 / 0x02000000):  long: 69843302834 (0x1042fc39b2)
3098.    LDIVPOW2 (2343552355623464626 / 0x04000000):  long: 34921651417 (0x8217e1cd9)
3099.    LDIVPOW2 (2343552355623464626 / 0x08000000):  long: 17460825708 (0x410bf0e6c)
3100.    LDIVPOW2 (2343552355623464626 / 0x10000000):  long: 8730412854 (0x2085f8736)
3101.    LDIVPOW2 (2343552355623464626 / 0x20000000):  long: 4365206427 (0x1042fc39b)
3102.    LDIVPOW2 (2343552355623464626 / 0x40000000):  long: 2182603213 (0x8217e1cd)
3103.    LDIVPOW2 (2343552355623464626 / 0x80000000):  long: -1091301606 (0xffffffffbef40f1a)
3104.    LREMPOW2 (2343552355623464626 % 0x00000001):  long: 0 (0x0)
3105.    LREMPOW2 (2343552355623464626 % 0x00000002):  long: 0 (0x0)
3106.    LREMPOW2 (2343552355623464626 % 0x00000004):  long: 2 (0x2)
3107.    LREMPOW2 (2343552355623464626 % 0x00000008):  long: 2 (0x2)
3108.    LREMPOW2 (2343552355623464626 % 0x00000010):  long: 2 (0x2)
3109.    LREMPOW2 (2343552355623464626 % 0x00000020):  long: 18 (0x12)
3110.    LREMPOW2 (2343552355623464626 % 0x00000040):  long: 50 (0x32)
3111.    LREMPOW2 (2343552355623464626 % 0x00000080):  long: 50 (0x32)
3112.    LREMPOW2 (2343552355623464626 % 0x00000100):  long: 178 (0xb2)
3113.    LREMPOW2 (2343552355623464626 % 0x00000200):  long: 178 (0xb2)
3114.    LREMPOW2 (2343552355623464626 % 0x00000400):  long: 690 (0x2b2)
3115.    LREMPOW2 (2343552355623464626 % 0x00000800):  long: 1714 (0x6b2)
3116.    LREMPOW2 (2343552355623464626 % 0x00001000):  long: 3762 (0xeb2)
3117.    LREMPOW2 (2343552355623464626 % 0x00002000):  long: 3762 (0xeb2)
3118.    LREMPOW2 (2343552355623464626 % 0x00004000):  long: 11954 (0x2eb2)
3119.    LREMPOW2 (2343552355623464626 % 0x00008000):  long: 28338 (0x6eb2)
3120.    LREMPOW2 (2343552355623464626 % 0x00010000):  long: 28338 (0x6eb2)
3121.    LREMPOW2 (2343552355623464626 % 0x00020000):  long: 93874 (0x16eb2)
3122.    LREMPOW2 (2343552355623464626 % 0x00040000):  long: 224946 (0x36eb2)
3123.    LREMPOW2 (2343552355623464626 % 0x00080000):  long: 487090 (0x76eb2)
3124.    LREMPOW2 (2343552355623464626 % 0x00100000):  long: 487090 (0x76eb2)
3125.    LREMPOW2 (2343552355623464626 % 0x00200000):  long: 1535666 (0x176eb2)
3126.    LREMPOW2 (2343552355623464626 % 0x00400000):  long: 3632818 (0x376eb2)
3127.    LREMPOW2 (2343552355623464626 % 0x00800000):  long: 7827122 (0x776eb2)
3128.    LREMPOW2 (2343552355623464626 % 0x01000000):  long: 7827122 (0x776eb2)
3129.    LREMPOW2 (2343552355623464626 % 0x02000000):  long: 24604338 (0x1776eb2)
3130.    LREMPOW2 (2343552355623464626 % 0x04000000):  long: 24604338 (0x1776eb2)
3131.    LREMPOW2 (2343552355623464626 % 0x08000000):  long: 91713202 (0x5776eb2)
3132.    LREMPOW2 (2343552355623464626 % 0x10000000):  long: 91713202 (0x5776eb2)
3133.    LREMPOW2 (2343552355623464626 % 0x20000000):  long: 91713202 (0x5776eb2)
3134.    LREMPOW2 (2343552355623464626 % 0x40000000):  long: 628584114 (0x25776eb2)
3135.    LREMPOW2 (2343552355623464626 % 0x80000000):  long: 1702325938 (0x65776eb2)
3136.    LDIVPOW2 (-17 / 0x00000001):  long: -17 (0xffffffffffffffef)
3137.    LDIVPOW2 (-17 / 0x00000002):  long: -8 (0xfffffffffffffff8)
3138.    LDIVPOW2 (-17 / 0x00000004):  long: -4 (0xfffffffffffffffc)
3139.    LDIVPOW2 (-17 / 0x00000008):  long: -2 (0xfffffffffffffffe)
3140.    LDIVPOW2 (-17 / 0x00000010):  long: -1 (0xffffffffffffffff)
3141.    LDIVPOW2 (-17 / 0x00000020):  long: 0 (0x0)
3142.    LDIVPOW2 (-17 / 0x00000040):  long: 0 (0x0)
3143.    LDIVPOW2 (-17 / 0x00000080):  long: 0 (0x0)
3144.    LDIVPOW2 (-17 / 0x00000100):  long: 0 (0x0)
3145.    LDIVPOW2 (-17 / 0x00000200):  long: 0 (0x0)
3146.    LDIVPOW2 (-17 / 0x00000400):  long: 0 (0x0)
3147.    LDIVPOW2 (-17 / 0x00000800):  long: 0 (0x0)
3148.    LDIVPOW2 (-17 / 0x00001000):  long: 0 (0x0)
3149.    LDIVPOW2 (-17 / 0x00002000):  long: 0 (0x0)
3150.    LDIVPOW2 (-17 / 0x00004000):  long: 0 (0x0)
3151.    LDIVPOW2 (-17 / 0x00008000):  long: 0 (0x0)
3152.    LDIVPOW2 (-17 / 0x00010000):  long: 0 (0x0)
3153.    LDIVPOW2 (-17 / 0x00020000):  long: 0 (0x0)
3154.    LDIVPOW2 (-17 / 0x00040000):  long: 0 (0x0)
3155.    LDIVPOW2 (-17 / 0x00080000):  long: 0 (0x0)
3156.    LDIVPOW2 (-17 / 0x00100000):  long: 0 (0x0)
3157.    LDIVPOW2 (-17 / 0x00200000):  long: 0 (0x0)
3158.    LDIVPOW2 (-17 / 0x00400000):  long: 0 (0x0)
3159.    LDIVPOW2 (-17 / 0x00800000):  long: 0 (0x0)
3160.    LDIVPOW2 (-17 / 0x01000000):  long: 0 (0x0)
3161.    LDIVPOW2 (-17 / 0x02000000):  long: 0 (0x0)
3162.    LDIVPOW2 (-17 / 0x04000000):  long: 0 (0x0)
3163.    LDIVPOW2 (-17 / 0x08000000):  long: 0 (0x0)
3164.    LDIVPOW2 (-17 / 0x10000000):  long: 0 (0x0)
3165.    LDIVPOW2 (-17 / 0x20000000):  long: 0 (0x0)
3166.    LDIVPOW2 (-17 / 0x40000000):  long: 0 (0x0)
3167.    LDIVPOW2 (-17 / 0x80000000):  long: 0 (0x0)
3168.    LREMPOW2 (-17 % 0x00000001):  long: 0 (0x0)
3169.    LREMPOW2 (-17 % 0x00000002):  long: -1 (0xffffffffffffffff)
3170.    LREMPOW2 (-17 % 0x00000004):  long: -1 (0xffffffffffffffff)
3171.    LREMPOW2 (-17 % 0x00000008):  long: -1 (0xffffffffffffffff)
3172.    LREMPOW2 (-17 % 0x00000010):  long: -1 (0xffffffffffffffff)
3173.    LREMPOW2 (-17 % 0x00000020):  long: -17 (0xffffffffffffffef)
3174.    LREMPOW2 (-17 % 0x00000040):  long: -17 (0xffffffffffffffef)
3175.    LREMPOW2 (-17 % 0x00000080):  long: -17 (0xffffffffffffffef)
3176.    LREMPOW2 (-17 % 0x00000100):  long: -17 (0xffffffffffffffef)
3177.    LREMPOW2 (-17 % 0x00000200):  long: -17 (0xffffffffffffffef)
3178.    LREMPOW2 (-17 % 0x00000400):  long: -17 (0xffffffffffffffef)
3179.    LREMPOW2 (-17 % 0x00000800):  long: -17 (0xffffffffffffffef)
3180.    LREMPOW2 (-17 % 0x00001000):  long: -17 (0xffffffffffffffef)
3181.    LREMPOW2 (-17 % 0x00002000):  long: -17 (0xffffffffffffffef)
3182.    LREMPOW2 (-17 % 0x00004000):  long: -17 (0xffffffffffffffef)
3183.    LREMPOW2 (-17 % 0x00008000):  long: -17 (0xffffffffffffffef)
3184.    LREMPOW2 (-17 % 0x00010000):  long: -17 (0xffffffffffffffef)
3185.    LREMPOW2 (-17 % 0x00020000):  long: -17 (0xffffffffffffffef)
3186.    LREMPOW2 (-17 % 0x00040000):  long: -17 (0xffffffffffffffef)
3187.    LREMPOW2 (-17 % 0x00080000):  long: -17 (0xffffffffffffffef)
3188.    LREMPOW2 (-17 % 0x00100000):  long: -17 (0xffffffffffffffef)
3189.    LREMPOW2 (-17 % 0x00200000):  long: -17 (0xffffffffffffffef)
3190.    LREMPOW2 (-17 % 0x00400000):  long: -17 (0xffffffffffffffef)
3191.    LREMPOW2 (-17 % 0x00800000):  long: -17 (0xffffffffffffffef)
3192.    LREMPOW2 (-17 % 0x01000000):  long: -17 (0xffffffffffffffef)
3193.    LREMPOW2 (-17 % 0x02000000):  long: -17 (0xffffffffffffffef)
3194.    LREMPOW2 (-17 % 0x04000000):  long: -17 (0xffffffffffffffef)
3195.    LREMPOW2 (-17 % 0x08000000):  long: -17 (0xffffffffffffffef)
3196.    LREMPOW2 (-17 % 0x10000000):  long: -17 (0xffffffffffffffef)
3197.    LREMPOW2 (-17 % 0x20000000):  long: -17 (0xffffffffffffffef)
3198.    LREMPOW2 (-17 % 0x40000000):  long: -17 (0xffffffffffffffef)
3199.    LREMPOW2 (-17 % 0x80000000):  long: -17 (0xffffffffffffffef)
3200.    LDIVPOW2 (-12347 / 0x00000001):  long: -12347 (0xffffffffffffcfc5)
3201.    LDIVPOW2 (-12347 / 0x00000002):  long: -6173 (0xffffffffffffe7e3)
3202.    LDIVPOW2 (-12347 / 0x00000004):  long: -3086 (0xfffffffffffff3f2)
3203.    LDIVPOW2 (-12347 / 0x00000008):  long: -1543 (0xfffffffffffff9f9)
3204.    LDIVPOW2 (-12347 / 0x00000010):  long: -771 (0xfffffffffffffcfd)
3205.    LDIVPOW2 (-12347 / 0x00000020):  long: -385 (0xfffffffffffffe7f)
3206.    LDIVPOW2 (-12347 / 0x00000040):  long: -192 (0xffffffffffffff40)
3207.    LDIVPOW2 (-12347 / 0x00000080):  long: -96 (0xffffffffffffffa0)
3208.    LDIVPOW2 (-12347 / 0x00000100):  long: -48 (0xffffffffffffffd0)
3209.    LDIVPOW2 (-12347 / 0x00000200):  long: -24 (0xffffffffffffffe8)
3210.    LDIVPOW2 (-12347 / 0x00000400):  long: -12 (0xfffffffffffffff4)
3211.    LDIVPOW2 (-12347 / 0x00000800):  long: -6 (0xfffffffffffffffa)
3212.    LDIVPOW2 (-12347 / 0x00001000):  long: -3 (0xfffffffffffffffd)
3213.    LDIVPOW2 (-12347 / 0x00002000):  long: -1 (0xffffffffffffffff)
3214.    LDIVPOW2 (-12347 / 0x00004000):  long: 0 (0x0)
3215.    LDIVPOW2 (-12347 / 0x00008000):  long: 0 (0x0)
3216.    LDIVPOW2 (-12347 / 0x00010000):  long: 0 (0x0)
3217.    LDIVPOW2 (-12347 / 0x00020000):  long: 0 (0x0)
3218.    LDIVPOW2 (-12347 / 0x00040000):  long: 0 (0x0)
3219.    LDIVPOW2 (-12347 / 0x00080000):  long: 0 (0x0)
3220.    LDIVPOW2 (-12347 / 0x00100000):  long: 0 (0x0)
3221.    LDIVPOW2 (-12347 / 0x00200000):  long: 0 (0x0)
3222.    LDIVPOW2 (-12347 / 0x00400000):  long: 0 (0x0)
3223.    LDIVPOW2 (-12347 / 0x00800000):  long: 0 (0x0)
3224.    LDIVPOW2 (-12347 / 0x01000000):  long: 0 (0x0)
3225.    LDIVPOW2 (-12347 / 0x02000000):  long: 0 (0x0)
3226.    LDIVPOW2 (-12347 / 0x04000000):  long: 0 (0x0)
3227.    LDIVPOW2 (-12347 / 0x08000000):  long: 0 (0x0)
3228.    LDIVPOW2 (-12347 / 0x10000000):  long: 0 (0x0)
3229.    LDIVPOW2 (-12347 / 0x20000000):  long: 0 (0x0)
3230.    LDIVPOW2 (-12347 / 0x40000000):  long: 0 (0x0)
3231.    LDIVPOW2 (-12347 / 0x80000000):  long: 0 (0x0)
3232.    LREMPOW2 (-12347 % 0x00000001):  long: 0 (0x0)
3233.    LREMPOW2 (-12347 % 0x00000002):  long: -1 (0xffffffffffffffff)
3234.    LREMPOW2 (-12347 % 0x00000004):  long: -3 (0xfffffffffffffffd)
3235.    LREMPOW2 (-12347 % 0x00000008):  long: -3 (0xfffffffffffffffd)
3236.    LREMPOW2 (-12347 % 0x00000010):  long: -11 (0xfffffffffffffff5)
3237.    LREMPOW2 (-12347 % 0x00000020):  long: -27 (0xffffffffffffffe5)
3238.    LREMPOW2 (-12347 % 0x00000040):  long: -59 (0xffffffffffffffc5)
3239.    LREMPOW2 (-12347 % 0x00000080):  long: -59 (0xffffffffffffffc5)
3240.    LREMPOW2 (-12347 % 0x00000100):  long: -59 (0xffffffffffffffc5)
3241.    LREMPOW2 (-12347 % 0x00000200):  long: -59 (0xffffffffffffffc5)
3242.    LREMPOW2 (-12347 % 0x00000400):  long: -59 (0xffffffffffffffc5)
3243.    LREMPOW2 (-12347 % 0x00000800):  long: -59 (0xffffffffffffffc5)
3244.    LREMPOW2 (-12347 % 0x00001000):  long: -59 (0xffffffffffffffc5)
3245.    LREMPOW2 (-12347 % 0x00002000):  long: -4155 (0xffffffffffffefc5)
3246.    LREMPOW2 (-12347 % 0x00004000):  long: -12347 (0xffffffffffffcfc5)
3247.    LREMPOW2 (-12347 % 0x00008000):  long: -12347 (0xffffffffffffcfc5)
3248.    LREMPOW2 (-12347 % 0x00010000):  long: -12347 (0xffffffffffffcfc5)
3249.    LREMPOW2 (-12347 % 0x00020000):  long: -12347 (0xffffffffffffcfc5)
3250.    LREMPOW2 (-12347 % 0x00040000):  long: -12347 (0xffffffffffffcfc5)
3251.    LREMPOW2 (-12347 % 0x00080000):  long: -12347 (0xffffffffffffcfc5)
3252.    LREMPOW2 (-12347 % 0x00100000):  long: -12347 (0xffffffffffffcfc5)
3253.    LREMPOW2 (-12347 % 0x00200000):  long: -12347 (0xffffffffffffcfc5)
3254.    LREMPOW2 (-12347 % 0x00400000):  long: -12347 (0xffffffffffffcfc5)
3255.    LREMPOW2 (-12347 % 0x00800000):  long: -12347 (0xffffffffffffcfc5)
3256.    LREMPOW2 (-12347 % 0x01000000):  long: -12347 (0xffffffffffffcfc5)
3257.    LREMPOW2 (-12347 % 0x02000000):  long: -12347 (0xffffffffffffcfc5)
3258.    LREMPOW2 (-12347 % 0x04000000):  long: -12347 (0xffffffffffffcfc5)
3259.    LREMPOW2 (-12347 % 0x08000000):  long: -12347 (0xffffffffffffcfc5)
3260.    LREMPOW2 (-12347 % 0x10000000):  long: -12347 (0xffffffffffffcfc5)
3261.    LREMPOW2 (-12347 % 0x20000000):  long: -12347 (0xffffffffffffcfc5)
3262.    LREMPOW2 (-12347 % 0x40000000):  long: -12347 (0xffffffffffffcfc5)
3263.    LREMPOW2 (-12347 % 0x80000000):  long: -12347 (0xffffffffffffcfc5)
3264.    LDIVPOW2 (-8893427 / 0x00000001):  long: -8893427 (0xffffffffff784c0d)
3265.    LDIVPOW2 (-8893427 / 0x00000002):  long: -4446713 (0xffffffffffbc2607)
3266.    LDIVPOW2 (-8893427 / 0x00000004):  long: -2223356 (0xffffffffffde1304)
3267.    LDIVPOW2 (-8893427 / 0x00000008):  long: -1111678 (0xffffffffffef0982)
3268.    LDIVPOW2 (-8893427 / 0x00000010):  long: -555839 (0xfffffffffff784c1)
3269.    LDIVPOW2 (-8893427 / 0x00000020):  long: -277919 (0xfffffffffffbc261)
3270.    LDIVPOW2 (-8893427 / 0x00000040):  long: -138959 (0xfffffffffffde131)
3271.    LDIVPOW2 (-8893427 / 0x00000080):  long: -69479 (0xfffffffffffef099)
3272.    LDIVPOW2 (-8893427 / 0x00000100):  long: -34739 (0xffffffffffff784d)
3273.    LDIVPOW2 (-8893427 / 0x00000200):  long: -17369 (0xffffffffffffbc27)
3274.    LDIVPOW2 (-8893427 / 0x00000400):  long: -8684 (0xffffffffffffde14)
3275.    LDIVPOW2 (-8893427 / 0x00000800):  long: -4342 (0xffffffffffffef0a)
3276.    LDIVPOW2 (-8893427 / 0x00001000):  long: -2171 (0xfffffffffffff785)
3277.    LDIVPOW2 (-8893427 / 0x00002000):  long: -1085 (0xfffffffffffffbc3)
3278.    LDIVPOW2 (-8893427 / 0x00004000):  long: -542 (0xfffffffffffffde2)
3279.    LDIVPOW2 (-8893427 / 0x00008000):  long: -271 (0xfffffffffffffef1)
3280.    LDIVPOW2 (-8893427 / 0x00010000):  long: -135 (0xffffffffffffff79)
3281.    LDIVPOW2 (-8893427 / 0x00020000):  long: -67 (0xffffffffffffffbd)
3282.    LDIVPOW2 (-8893427 / 0x00040000):  long: -33 (0xffffffffffffffdf)
3283.    LDIVPOW2 (-8893427 / 0x00080000):  long: -16 (0xfffffffffffffff0)
3284.    LDIVPOW2 (-8893427 / 0x00100000):  long: -8 (0xfffffffffffffff8)
3285.    LDIVPOW2 (-8893427 / 0x00200000):  long: -4 (0xfffffffffffffffc)
3286.    LDIVPOW2 (-8893427 / 0x00400000):  long: -2 (0xfffffffffffffffe)
3287.    LDIVPOW2 (-8893427 / 0x00800000):  long: -1 (0xffffffffffffffff)
3288.    LDIVPOW2 (-8893427 / 0x01000000):  long: 0 (0x0)
3289.    LDIVPOW2 (-8893427 / 0x02000000):  long: 0 (0x0)
3290.    LDIVPOW2 (-8893427 / 0x04000000):  long: 0 (0x0)
3291.    LDIVPOW2 (-8893427 / 0x08000000):  long: 0 (0x0)
3292.    LDIVPOW2 (-8893427 / 0x10000000):  long: 0 (0x0)
3293.    LDIVPOW2 (-8893427 / 0x20000000):  long: 0 (0x0)
3294.    LDIVPOW2 (-8893427 / 0x40000000):  long: 0 (0x0)
3295.    LDIVPOW2 (-8893427 / 0x80000000):  long: 0 (0x0)
3296.    LREMPOW2 (-8893427 % 0x00000001):  long: 0 (0x0)
3297.    LREMPOW2 (-8893427 % 0x00000002):  long: -1 (0xffffffffffffffff)
3298.    LREMPOW2 (-8893427 % 0x00000004):  long: -3 (0xfffffffffffffffd)
3299.    LREMPOW2 (-8893427 % 0x00000008):  long: -3 (0xfffffffffffffffd)
3300.    LREMPOW2 (-8893427 % 0x00000010):  long: -3 (0xfffffffffffffffd)
3301.    LREMPOW2 (-8893427 % 0x00000020):  long: -19 (0xffffffffffffffed)
3302.    LREMPOW2 (-8893427 % 0x00000040):  long: -51 (0xffffffffffffffcd)
3303.    LREMPOW2 (-8893427 % 0x00000080):  long: -115 (0xffffffffffffff8d)
3304.    LREMPOW2 (-8893427 % 0x00000100):  long: -243 (0xffffffffffffff0d)
3305.    LREMPOW2 (-8893427 % 0x00000200):  long: -499 (0xfffffffffffffe0d)
3306.    LREMPOW2 (-8893427 % 0x00000400):  long: -1011 (0xfffffffffffffc0d)
3307.    LREMPOW2 (-8893427 % 0x00000800):  long: -1011 (0xfffffffffffffc0d)
3308.    LREMPOW2 (-8893427 % 0x00001000):  long: -1011 (0xfffffffffffffc0d)
3309.    LREMPOW2 (-8893427 % 0x00002000):  long: -5107 (0xffffffffffffec0d)
3310.    LREMPOW2 (-8893427 % 0x00004000):  long: -13299 (0xffffffffffffcc0d)
3311.    LREMPOW2 (-8893427 % 0x00008000):  long: -13299 (0xffffffffffffcc0d)
3312.    LREMPOW2 (-8893427 % 0x00010000):  long: -46067 (0xffffffffffff4c0d)
3313.    LREMPOW2 (-8893427 % 0x00020000):  long: -111603 (0xfffffffffffe4c0d)
3314.    LREMPOW2 (-8893427 % 0x00040000):  long: -242675 (0xfffffffffffc4c0d)
3315.    LREMPOW2 (-8893427 % 0x00080000):  long: -504819 (0xfffffffffff84c0d)
3316.    LREMPOW2 (-8893427 % 0x00100000):  long: -504819 (0xfffffffffff84c0d)
3317.    LREMPOW2 (-8893427 % 0x00200000):  long: -504819 (0xfffffffffff84c0d)
3318.    LREMPOW2 (-8893427 % 0x00400000):  long: -504819 (0xfffffffffff84c0d)
3319.    LREMPOW2 (-8893427 % 0x00800000):  long: -504819 (0xfffffffffff84c0d)
3320.    LREMPOW2 (-8893427 % 0x01000000):  long: -8893427 (0xffffffffff784c0d)
3321.    LREMPOW2 (-8893427 % 0x02000000):  long: -8893427 (0xffffffffff784c0d)
3322.    LREMPOW2 (-8893427 % 0x04000000):  long: -8893427 (0xffffffffff784c0d)
3323.    LREMPOW2 (-8893427 % 0x08000000):  long: -8893427 (0xffffffffff784c0d)
3324.    LREMPOW2 (-8893427 % 0x10000000):  long: -8893427 (0xffffffffff784c0d)
3325.    LREMPOW2 (-8893427 % 0x20000000):  long: -8893427 (0xffffffffff784c0d)
3326.    LREMPOW2 (-8893427 % 0x40000000):  long: -8893427 (0xffffffffff784c0d)
3327.    LREMPOW2 (-8893427 % 0x80000000):  long: -8893427 (0xffffffffff784c0d)
3328.    LDIVPOW2 (-1005234562 / 0x00000001):  long: -1005234562 (0xffffffffc415567e)
3329.    LDIVPOW2 (-1005234562 / 0x00000002):  long: -502617281 (0xffffffffe20aab3f)
3330.    LDIVPOW2 (-1005234562 / 0x00000004):  long: -251308640 (0xfffffffff10555a0)
3331.    LDIVPOW2 (-1005234562 / 0x00000008):  long: -125654320 (0xfffffffff882aad0)
3332.    LDIVPOW2 (-1005234562 / 0x00000010):  long: -62827160 (0xfffffffffc415568)
3333.    LDIVPOW2 (-1005234562 / 0x00000020):  long: -31413580 (0xfffffffffe20aab4)
3334.    LDIVPOW2 (-1005234562 / 0x00000040):  long: -15706790 (0xffffffffff10555a)
3335.    LDIVPOW2 (-1005234562 / 0x00000080):  long: -7853395 (0xffffffffff882aad)
3336.    LDIVPOW2 (-1005234562 / 0x00000100):  long: -3926697 (0xffffffffffc41557)
3337.    LDIVPOW2 (-1005234562 / 0x00000200):  long: -1963348 (0xffffffffffe20aac)
3338.    LDIVPOW2 (-1005234562 / 0x00000400):  long: -981674 (0xfffffffffff10556)
3339.    LDIVPOW2 (-1005234562 / 0x00000800):  long: -490837 (0xfffffffffff882ab)
3340.    LDIVPOW2 (-1005234562 / 0x00001000):  long: -245418 (0xfffffffffffc4156)
3341.    LDIVPOW2 (-1005234562 / 0x00002000):  long: -122709 (0xfffffffffffe20ab)
3342.    LDIVPOW2 (-1005234562 / 0x00004000):  long: -61354 (0xffffffffffff1056)
3343.    LDIVPOW2 (-1005234562 / 0x00008000):  long: -30677 (0xffffffffffff882b)
3344.    LDIVPOW2 (-1005234562 / 0x00010000):  long: -15338 (0xffffffffffffc416)
3345.    LDIVPOW2 (-1005234562 / 0x00020000):  long: -7669 (0xffffffffffffe20b)
3346.    LDIVPOW2 (-1005234562 / 0x00040000):  long: -3834 (0xfffffffffffff106)
3347.    LDIVPOW2 (-1005234562 / 0x00080000):  long: -1917 (0xfffffffffffff883)
3348.    LDIVPOW2 (-1005234562 / 0x00100000):  long: -958 (0xfffffffffffffc42)
3349.    LDIVPOW2 (-1005234562 / 0x00200000):  long: -479 (0xfffffffffffffe21)
3350.    LDIVPOW2 (-1005234562 / 0x00400000):  long: -239 (0xffffffffffffff11)
3351.    LDIVPOW2 (-1005234562 / 0x00800000):  long: -119 (0xffffffffffffff89)
3352.    LDIVPOW2 (-1005234562 / 0x01000000):  long: -59 (0xffffffffffffffc5)
3353.    LDIVPOW2 (-1005234562 / 0x02000000):  long: -29 (0xffffffffffffffe3)
3354.    LDIVPOW2 (-1005234562 / 0x04000000):  long: -14 (0xfffffffffffffff2)
3355.    LDIVPOW2 (-1005234562 / 0x08000000):  long: -7 (0xfffffffffffffff9)
3356.    LDIVPOW2 (-1005234562 / 0x10000000):  long: -3 (0xfffffffffffffffd)
3357.    LDIVPOW2 (-1005234562 / 0x20000000):  long: -1 (0xffffffffffffffff)
3358.    LDIVPOW2 (-1005234562 / 0x40000000):  long: 0 (0x0)
3359.    LDIVPOW2 (-1005234562 / 0x80000000):  long: 0 (0x0)
3360.    LREMPOW2 (-1005234562 % 0x00000001):  long: 0 (0x0)
3361.    LREMPOW2 (-1005234562 % 0x00000002):  long: 0 (0x0)
3362.    LREMPOW2 (-1005234562 % 0x00000004):  long: -2 (0xfffffffffffffffe)
3363.    LREMPOW2 (-1005234562 % 0x00000008):  long: -2 (0xfffffffffffffffe)
3364.    LREMPOW2 (-1005234562 % 0x00000010):  long: -2 (0xfffffffffffffffe)
3365.    LREMPOW2 (-1005234562 % 0x00000020):  long: -2 (0xfffffffffffffffe)
3366.    LREMPOW2 (-1005234562 % 0x00000040):  long: -2 (0xfffffffffffffffe)
3367.    LREMPOW2 (-1005234562 % 0x00000080):  long: -2 (0xfffffffffffffffe)
3368.    LREMPOW2 (-1005234562 % 0x00000100):  long: -130 (0xffffffffffffff7e)
3369.    LREMPOW2 (-1005234562 % 0x00000200):  long: -386 (0xfffffffffffffe7e)
3370.    LREMPOW2 (-1005234562 % 0x00000400):  long: -386 (0xfffffffffffffe7e)
3371.    LREMPOW2 (-1005234562 % 0x00000800):  long: -386 (0xfffffffffffffe7e)
3372.    LREMPOW2 (-1005234562 % 0x00001000):  long: -2434 (0xfffffffffffff67e)
3373.    LREMPOW2 (-1005234562 % 0x00002000):  long: -2434 (0xfffffffffffff67e)
3374.    LREMPOW2 (-1005234562 % 0x00004000):  long: -10626 (0xffffffffffffd67e)
3375.    LREMPOW2 (-1005234562 % 0x00008000):  long: -10626 (0xffffffffffffd67e)
3376.    LREMPOW2 (-1005234562 % 0x00010000):  long: -43394 (0xffffffffffff567e)
3377.    LREMPOW2 (-1005234562 % 0x00020000):  long: -43394 (0xffffffffffff567e)
3378.    LREMPOW2 (-1005234562 % 0x00040000):  long: -174466 (0xfffffffffffd567e)
3379.    LREMPOW2 (-1005234562 % 0x00080000):  long: -174466 (0xfffffffffffd567e)
3380.    LREMPOW2 (-1005234562 % 0x00100000):  long: -698754 (0xfffffffffff5567e)
3381.    LREMPOW2 (-1005234562 % 0x00200000):  long: -698754 (0xfffffffffff5567e)
3382.    LREMPOW2 (-1005234562 % 0x00400000):  long: -2795906 (0xffffffffffd5567e)
3383.    LREMPOW2 (-1005234562 % 0x00800000):  long: -6990210 (0xffffffffff95567e)
3384.    LREMPOW2 (-1005234562 % 0x01000000):  long: -15378818 (0xffffffffff15567e)
3385.    LREMPOW2 (-1005234562 % 0x02000000):  long: -32156034 (0xfffffffffe15567e)
3386.    LREMPOW2 (-1005234562 % 0x04000000):  long: -65710466 (0xfffffffffc15567e)
3387.    LREMPOW2 (-1005234562 % 0x08000000):  long: -65710466 (0xfffffffffc15567e)
3388.    LREMPOW2 (-1005234562 % 0x10000000):  long: -199928194 (0xfffffffff415567e)
3389.    LREMPOW2 (-1005234562 % 0x20000000):  long: -468363650 (0xffffffffe415567e)
3390.    LREMPOW2 (-1005234562 % 0x40000000):  long: -1005234562 (0xffffffffc415567e)
3391.    LREMPOW2 (-1005234562 % 0x80000000):  long: -1005234562 (0xffffffffc415567e)
3392.    LDIVPOW2 (-12135005234562 / 0x00000001):  long: -12135005234562 (0xfffff4f69952da7e)
3393.    LDIVPOW2 (-12135005234562 / 0x00000002):  long: -6067502617281 (0xfffffa7b4ca96d3f)
3394.    LDIVPOW2 (-12135005234562 / 0x00000004):  long: -3033751308640 (0xfffffd3da654b6a0)
3395.    LDIVPOW2 (-12135005234562 / 0x00000008):  long: -1516875654320 (0xfffffe9ed32a5b50)
3396.    LDIVPOW2 (-12135005234562 / 0x00000010):  long: -758437827160 (0xffffff4f69952da8)
3397.    LDIVPOW2 (-12135005234562 / 0x00000020):  long: -379218913580 (0xffffffa7b4ca96d4)
3398.    LDIVPOW2 (-12135005234562 / 0x00000040):  long: -189609456790 (0xffffffd3da654b6a)
3399.    LDIVPOW2 (-12135005234562 / 0x00000080):  long: -94804728395 (0xffffffe9ed32a5b5)
3400.    LDIVPOW2 (-12135005234562 / 0x00000100):  long: -47402364197 (0xfffffff4f69952db)
3401.    LDIVPOW2 (-12135005234562 / 0x00000200):  long: -23701182098 (0xfffffffa7b4ca96e)
3402.    LDIVPOW2 (-12135005234562 / 0x00000400):  long: -11850591049 (0xfffffffd3da654b7)
3403.    LDIVPOW2 (-12135005234562 / 0x00000800):  long: -5925295524 (0xfffffffe9ed32a5c)
3404.    LDIVPOW2 (-12135005234562 / 0x00001000):  long: -2962647762 (0xffffffff4f69952e)
3405.    LDIVPOW2 (-12135005234562 / 0x00002000):  long: -1481323881 (0xffffffffa7b4ca97)
3406.    LDIVPOW2 (-12135005234562 / 0x00004000):  long: -740661940 (0xffffffffd3da654c)
3407.    LDIVPOW2 (-12135005234562 / 0x00008000):  long: -370330970 (0xffffffffe9ed32a6)
3408.    LDIVPOW2 (-12135005234562 / 0x00010000):  long: -185165485 (0xfffffffff4f69953)
3409.    LDIVPOW2 (-12135005234562 / 0x00020000):  long: -92582742 (0xfffffffffa7b4caa)
3410.    LDIVPOW2 (-12135005234562 / 0x00040000):  long: -46291371 (0xfffffffffd3da655)
3411.    LDIVPOW2 (-12135005234562 / 0x00080000):  long: -23145685 (0xfffffffffe9ed32b)
3412.    LDIVPOW2 (-12135005234562 / 0x00100000):  long: -11572842 (0xffffffffff4f6996)
3413.    LDIVPOW2 (-12135005234562 / 0x00200000):  long: -5786421 (0xffffffffffa7b4cb)
3414.    LDIVPOW2 (-12135005234562 / 0x00400000):  long: -2893210 (0xffffffffffd3da66)
3415.    LDIVPOW2 (-12135005234562 / 0x00800000):  long: -1446605 (0xffffffffffe9ed33)
3416.    LDIVPOW2 (-12135005234562 / 0x01000000):  long: -723302 (0xfffffffffff4f69a)
3417.    LDIVPOW2 (-12135005234562 / 0x02000000):  long: -361651 (0xfffffffffffa7b4d)
3418.    LDIVPOW2 (-12135005234562 / 0x04000000):  long: -180825 (0xfffffffffffd3da7)
3419.    LDIVPOW2 (-12135005234562 / 0x08000000):  long: -90412 (0xfffffffffffe9ed4)
3420.    LDIVPOW2 (-12135005234562 / 0x10000000):  long: -45206 (0xffffffffffff4f6a)
3421.    LDIVPOW2 (-12135005234562 / 0x20000000):  long: -22603 (0xffffffffffffa7b5)
3422.    LDIVPOW2 (-12135005234562 / 0x40000000):  long: -11301 (0xffffffffffffd3db)
3423.    LDIVPOW2 (-12135005234562 / 0x80000000):  long: 5650 (0x1612)
3424.    LREMPOW2 (-12135005234562 % 0x00000001):  long: 0 (0x0)
3425.    LREMPOW2 (-12135005234562 % 0x00000002):  long: 0 (0x0)
3426.    LREMPOW2 (-12135005234562 % 0x00000004):  long: -2 (0xfffffffffffffffe)
3427.    LREMPOW2 (-12135005234562 % 0x00000008):  long: -2 (0xfffffffffffffffe)
3428.    LREMPOW2 (-12135005234562 % 0x00000010):  long: -2 (0xfffffffffffffffe)
3429.    LREMPOW2 (-12135005234562 % 0x00000020):  long: -2 (0xfffffffffffffffe)
3430.    LREMPOW2 (-12135005234562 % 0x00000040):  long: -2 (0xfffffffffffffffe)
3431.    LREMPOW2 (-12135005234562 % 0x00000080):  long: -2 (0xfffffffffffffffe)
3432.    LREMPOW2 (-12135005234562 % 0x00000100):  long: -130 (0xffffffffffffff7e)
3433.    LREMPOW2 (-12135005234562 % 0x00000200):  long: -386 (0xfffffffffffffe7e)
3434.    LREMPOW2 (-12135005234562 % 0x00000400):  long: -386 (0xfffffffffffffe7e)
3435.    LREMPOW2 (-12135005234562 % 0x00000800):  long: -1410 (0xfffffffffffffa7e)
3436.    LREMPOW2 (-12135005234562 % 0x00001000):  long: -1410 (0xfffffffffffffa7e)
3437.    LREMPOW2 (-12135005234562 % 0x00002000):  long: -1410 (0xfffffffffffffa7e)
3438.    LREMPOW2 (-12135005234562 % 0x00004000):  long: -9602 (0xffffffffffffda7e)
3439.    LREMPOW2 (-12135005234562 % 0x00008000):  long: -9602 (0xffffffffffffda7e)
3440.    LREMPOW2 (-12135005234562 % 0x00010000):  long: -9602 (0xffffffffffffda7e)
3441.    LREMPOW2 (-12135005234562 % 0x00020000):  long: -75138 (0xfffffffffffeda7e)
3442.    LREMPOW2 (-12135005234562 % 0x00040000):  long: -75138 (0xfffffffffffeda7e)
3443.    LREMPOW2 (-12135005234562 % 0x00080000):  long: -337282 (0xfffffffffffada7e)
3444.    LREMPOW2 (-12135005234562 % 0x00100000):  long: -861570 (0xfffffffffff2da7e)
3445.    LREMPOW2 (-12135005234562 % 0x00200000):  long: -861570 (0xfffffffffff2da7e)
3446.    LREMPOW2 (-12135005234562 % 0x00400000):  long: -2958722 (0xffffffffffd2da7e)
3447.    LREMPOW2 (-12135005234562 % 0x00800000):  long: -2958722 (0xffffffffffd2da7e)
3448.    LREMPOW2 (-12135005234562 % 0x01000000):  long: -11347330 (0xffffffffff52da7e)
3449.    LREMPOW2 (-12135005234562 % 0x02000000):  long: -11347330 (0xffffffffff52da7e)
3450.    LREMPOW2 (-12135005234562 % 0x04000000):  long: -44901762 (0xfffffffffd52da7e)
3451.    LREMPOW2 (-12135005234562 % 0x08000000):  long: -112010626 (0xfffffffff952da7e)
3452.    LREMPOW2 (-12135005234562 % 0x10000000):  long: -112010626 (0xfffffffff952da7e)
3453.    LREMPOW2 (-12135005234562 % 0x20000000):  long: -112010626 (0xfffffffff952da7e)
3454.    LREMPOW2 (-12135005234562 % 0x40000000):  long: -648881538 (0xffffffffd952da7e)
3455.    LREMPOW2 (-12135005234562 % 0x80000000):  long: -1722623362 (0xffffffff9952da7e)
3456.    LDIVPOW2 (-2343552355623464626 / 0x00000001):  long: -2343552355623464626 (0xdf7a078c9a88914e)
3457.    LDIVPOW2 (-2343552355623464626 / 0x00000002):  long: -1171776177811732313 (0xefbd03c64d4448a7)
3458.    LDIVPOW2 (-2343552355623464626 / 0x00000004):  long: -585888088905866156 (0xf7de81e326a22454)
3459.    LDIVPOW2 (-2343552355623464626 / 0x00000008):  long: -292944044452933078 (0xfbef40f19351122a)
3460.    LDIVPOW2 (-2343552355623464626 / 0x00000010):  long: -146472022226466539 (0xfdf7a078c9a88915)
3461.    LDIVPOW2 (-2343552355623464626 / 0x00000020):  long: -73236011113233269 (0xfefbd03c64d4448b)
3462.    LDIVPOW2 (-2343552355623464626 / 0x00000040):  long: -36618005556616634 (0xff7de81e326a2246)
3463.    LDIVPOW2 (-2343552355623464626 / 0x00000080):  long: -18309002778308317 (0xffbef40f19351123)
3464.    LDIVPOW2 (-2343552355623464626 / 0x00000100):  long: -9154501389154158 (0xffdf7a078c9a8892)
3465.    LDIVPOW2 (-2343552355623464626 / 0x00000200):  long: -4577250694577079 (0xffefbd03c64d4449)
3466.    LDIVPOW2 (-2343552355623464626 / 0x00000400):  long: -2288625347288539 (0xfff7de81e326a225)
3467.    LDIVPOW2 (-2343552355623464626 / 0x00000800):  long: -1144312673644269 (0xfffbef40f1935113)
3468.    LDIVPOW2 (-2343552355623464626 / 0x00001000):  long: -572156336822134 (0xfffdf7a078c9a88a)
3469.    LDIVPOW2 (-2343552355623464626 / 0x00002000):  long: -286078168411067 (0xfffefbd03c64d445)
3470.    LDIVPOW2 (-2343552355623464626 / 0x00004000):  long: -143039084205533 (0xffff7de81e326a23)
3471.    LDIVPOW2 (-2343552355623464626 / 0x00008000):  long: -71519542102766 (0xffffbef40f193512)
3472.    LDIVPOW2 (-2343552355623464626 / 0x00010000):  long: -35759771051383 (0xffffdf7a078c9a89)
3473.    LDIVPOW2 (-2343552355623464626 / 0x00020000):  long: -17879885525691 (0xffffefbd03c64d45)
3474.    LDIVPOW2 (-2343552355623464626 / 0x00040000):  long: -8939942762845 (0xfffff7de81e326a3)
3475.    LDIVPOW2 (-2343552355623464626 / 0x00080000):  long: -4469971381422 (0xfffffbef40f19352)
3476.    LDIVPOW2 (-2343552355623464626 / 0x00100000):  long: -2234985690711 (0xfffffdf7a078c9a9)
3477.    LDIVPOW2 (-2343552355623464626 / 0x00200000):  long: -1117492845355 (0xfffffefbd03c64d5)
3478.    LDIVPOW2 (-2343552355623464626 / 0x00400000):  long: -558746422677 (0xffffff7de81e326b)
3479.    LDIVPOW2 (-2343552355623464626 / 0x00800000):  long: -279373211338 (0xffffffbef40f1936)
3480.    LDIVPOW2 (-2343552355623464626 / 0x01000000):  long: -139686605669 (0xffffffdf7a078c9b)
3481.    LDIVPOW2 (-2343552355623464626 / 0x02000000):  long: -69843302834 (0xffffffefbd03c64e)
3482.    LDIVPOW2 (-2343552355623464626 / 0x04000000):  long: -34921651417 (0xfffffff7de81e327)
3483.    LDIVPOW2 (-2343552355623464626 / 0x08000000):  long: -17460825708 (0xfffffffbef40f194)
3484.    LDIVPOW2 (-2343552355623464626 / 0x10000000):  long: -8730412854 (0xfffffffdf7a078ca)
3485.    LDIVPOW2 (-2343552355623464626 / 0x20000000):  long: -4365206427 (0xfffffffefbd03c65)
3486.    LDIVPOW2 (-2343552355623464626 / 0x40000000):  long: -2182603213 (0xffffffff7de81e33)
3487.    LDIVPOW2 (-2343552355623464626 / 0x80000000):  long: 1091301606 (0x410bf0e6)
3488.    LREMPOW2 (-2343552355623464626 % 0x00000001):  long: 0 (0x0)
3489.    LREMPOW2 (-2343552355623464626 % 0x00000002):  long: 0 (0x0)
3490.    LREMPOW2 (-2343552355623464626 % 0x00000004):  long: -2 (0xfffffffffffffffe)
3491.    LREMPOW2 (-2343552355623464626 % 0x00000008):  long: -2 (0xfffffffffffffffe)
3492.    LREMPOW2 (-2343552355623464626 % 0x00000010):  long: -2 (0xfffffffffffffffe)
3493.    LREMPOW2 (-2343552355623464626 % 0x00000020):  long: -18 (0xffffffffffffffee)
3494.    LREMPOW2 (-2343552355623464626 % 0x00000040):  long: -50 (0xffffffffffffffce)
3495.    LREMPOW2 (-2343552355623464626 % 0x00000080):  long: -50 (0xffffffffffffffce)
3496.    LREMPOW2 (-2343552355623464626 % 0x00000100):  long: -178 (0xffffffffffffff4e)
3497.    LREMPOW2 (-2343552355623464626 % 0x00000200):  long: -178 (0xffffffffffffff4e)
3498.    LREMPOW2 (-2343552355623464626 % 0x00000400):  long: -690 (0xfffffffffffffd4e)
3499.    LREMPOW2 (-2343552355623464626 % 0x00000800):  long: -1714 (0xfffffffffffff94e)
3500.    LREMPOW2 (-2343552355623464626 % 0x00001000):  long: -3762 (0xfffffffffffff14e)
3501.    LREMPOW2 (-2343552355623464626 % 0x00002000):  long: -3762 (0xfffffffffffff14e)
3502.    LREMPOW2 (-2343552355623464626 % 0x00004000):  long: -11954 (0xffffffffffffd14e)
3503.    LREMPOW2 (-2343552355623464626 % 0x00008000):  long: -28338 (0xffffffffffff914e)
3504.    LREMPOW2 (-2343552355623464626 % 0x00010000):  long: -28338 (0xffffffffffff914e)
3505.    LREMPOW2 (-2343552355623464626 % 0x00020000):  long: -93874 (0xfffffffffffe914e)
3506.    LREMPOW2 (-2343552355623464626 % 0x00040000):  long: -224946 (0xfffffffffffc914e)
3507.    LREMPOW2 (-2343552355623464626 % 0x00080000):  long: -487090 (0xfffffffffff8914e)
3508.    LREMPOW2 (-2343552355623464626 % 0x00100000):  long: -487090 (0xfffffffffff8914e)
3509.    LREMPOW2 (-2343552355623464626 % 0x00200000):  long: -1535666 (0xffffffffffe8914e)
3510.    LREMPOW2 (-2343552355623464626 % 0x00400000):  long: -3632818 (0xffffffffffc8914e)
3511.    LREMPOW2 (-2343552355623464626 % 0x00800000):  long: -7827122 (0xffffffffff88914e)
3512.    LREMPOW2 (-2343552355623464626 % 0x01000000):  long: -7827122 (0xffffffffff88914e)
3513.    LREMPOW2 (-2343552355623464626 % 0x02000000):  long: -24604338 (0xfffffffffe88914e)
3514.    LREMPOW2 (-2343552355623464626 % 0x04000000):  long: -24604338 (0xfffffffffe88914e)
3515.    LREMPOW2 (-2343552355623464626 % 0x08000000):  long: -91713202 (0xfffffffffa88914e)
3516.    LREMPOW2 (-2343552355623464626 % 0x10000000):  long: -91713202 (0xfffffffffa88914e)
3517.    LREMPOW2 (-2343552355623464626 % 0x20000000):  long: -91713202 (0xfffffffffa88914e)
3518.    LREMPOW2 (-2343552355623464626 % 0x40000000):  long: -628584114 (0xffffffffda88914e)
3519.    LREMPOW2 (-2343552355623464626 % 0x80000000):  long: -1702325938 (0xffffffff9a88914e)
3520.    ------------------- test ints
3521.    TESTINT called with int: 1 (0x1)
3522.                    AND int: 2 (0x2)
3523.    IADD:  int: 3 (0x3)
3524.    ISUB:  int: -1 (0xffffffff)
3525.    IMUL:  int: 2 (0x2)
3526.    IDIV:  int: 0 (0x0)
3527.    IREM:  int: 1 (0x1)
3528.    INEG:  int: -1 (0xffffffff)
3529.    ISHL:  int: 4 (0x4)
3530.    ISHR:  int: 0 (0x0)
3531.    IUSHR: int: 0 (0x0)
3532.    IAND:  int: 0 (0x0)
3533.    IOR:   int: 3 (0x3)
3534.    IXOR:  int: 3 (0x3)
3535.    I2L:   long: 1 (0x1)
3536.    I2F:   float: 1065353216 (0x3f800000)
3537.    I2D:   double: 4607182418800017408 (0x3ff0000000000000)
3538.    INT2BYTE: byte: 1 (0x1)
3539.    INT2CHAR: char: 1 (0x1)
3540.    INT2SHORT: short: 1 (0x1)
3541.    not IFEQ
3542.    not IFLT
3543.    not IFLE
3544.    not IF_ICMPEQ
3545.    not IF_ICMPGT
3546.    not IF_ICMPGE
3547.    COND_ICMPEQ 1 == 0: 1
3548.    COND_ICMPNE 1 != 0: 0
3549.    COND_ICMPLT 1 <  0: 1
3550.    COND_ICMPLE 1 <= 0: 1
3551.    COND_ICMPGT 1 >  0: 0
3552.    COND_ICMPGE 1 >= 0: 0
3553.    COND_ICMPEQ 1 == 0: 0
3554.    COND_ICMPNE 1 != 0: 1
3555.    COND_ICMPLT 1 <  0: 0
3556.    COND_ICMPLE 1 <= 0: 0
3557.    COND_ICMPGT 1 >  0: 1
3558.    COND_ICMPGE 1 >= 0: 1
3559.    COND_ICMPEQ 1 == 0: 3
3560.    COND_ICMPNE 1 != 0: 2
3561.    COND_ICMPLT 1 <  0: 3
3562.    COND_ICMPLE 1 <= 0: 3
3563.    COND_ICMPGT 1 >  0: 2
3564.    COND_ICMPGE 1 >= 0: 2
3565.    COND_ICMPEQ 1 == 2: false
3566.    COND_ICMPNE 1 != 2: true
3567.    COND_ICMPLT 1 <  2: true
3568.    COND_ICMPLE 1 <= 2: true
3569.    COND_ICMPGT 1 >  2: false
3570.    COND_ICMPGE 1 >= 2: false
3571.    TESTINT called with int: -1 (0xffffffff)
3572.                    AND int: 17 (0x11)
3573.    IADD:  int: 16 (0x10)
3574.    ISUB:  int: -18 (0xffffffee)
3575.    IMUL:  int: -17 (0xffffffef)
3576.    IDIV:  int: 0 (0x0)
3577.    IREM:  int: -1 (0xffffffff)
3578.    INEG:  int: 1 (0x1)
3579.    ISHL:  int: -131072 (0xfffe0000)
3580.    ISHR:  int: -1 (0xffffffff)
3581.    IUSHR: int: 32767 (0x7fff)
3582.    IAND:  int: 17 (0x11)
3583.    IOR:   int: -1 (0xffffffff)
3584.    IXOR:  int: -18 (0xffffffee)
3585.    I2L:   long: -1 (0xffffffffffffffff)
3586.    I2F:   float: -1082130432 (0xbf800000)
3587.    I2D:   double: -4616189618054758400 (0xbff0000000000000)
3588.    INT2BYTE: byte: -1 (0xffffffff)
3589.    INT2CHAR: char: 65535 (0xffff)
3590.    INT2SHORT: short: -1 (0xffffffff)
3591.    not IFEQ
3592.    not IFGT
3593.    not IFGE
3594.    not IF_ICMPEQ
3595.    not IF_ICMPGT
3596.    not IF_ICMPGE
3597.    COND_ICMPEQ -1 == 0: 1
3598.    COND_ICMPNE -1 != 0: 0
3599.    COND_ICMPLT -1 <  0: 0
3600.    COND_ICMPLE -1 <= 0: 0
3601.    COND_ICMPGT -1 >  0: 1
3602.    COND_ICMPGE -1 >= 0: 1
3603.    COND_ICMPEQ -1 == 0: 0
3604.    COND_ICMPNE -1 != 0: 1
3605.    COND_ICMPLT -1 <  0: 1
3606.    COND_ICMPLE -1 <= 0: 1
3607.    COND_ICMPGT -1 >  0: 0
3608.    COND_ICMPGE -1 >= 0: 0
3609.    COND_ICMPEQ -1 == 0: 3
3610.    COND_ICMPNE -1 != 0: 2
3611.    COND_ICMPLT -1 <  0: 2
3612.    COND_ICMPLE -1 <= 0: 2
3613.    COND_ICMPGT -1 >  0: 3
3614.    COND_ICMPGE -1 >= 0: 3
3615.    COND_ICMPEQ -1 == 17: false
3616.    COND_ICMPNE -1 != 17: true
3617.    COND_ICMPLT -1 <  17: true
3618.    COND_ICMPLE -1 <= 17: true
3619.    COND_ICMPGT -1 >  17: false
3620.    COND_ICMPGE -1 >= 17: false
3621.    TESTINT called with int: -24351 (0xffffa0e1)
3622.                    AND int: 24123 (0x5e3b)
3623.    IADD:  int: -228 (0xffffff1c)
3624.    ISUB:  int: -48474 (0xffff42a6)
3625.    IMUL:  int: -587419173 (0xdcfcb1db)
3626.    IDIV:  int: -1 (0xffffffff)
3627.    IREM:  int: -228 (0xffffff1c)
3628.    INEG:  int: 24351 (0x5f1f)
3629.    ISHL:  int: 134217728 (0x8000000)
3630.    ISHR:  int: -1 (0xffffffff)
3631.    IUSHR: int: 31 (0x1f)
3632.    IAND:  int: 33 (0x21)
3633.    IOR:   int: -261 (0xfffffefb)
3634.    IXOR:  int: -294 (0xfffffeda)
3635.    I2L:   long: -24351 (0xffffffffffffa0e1)
3636.    I2F:   float: -960610816 (0xc6be3e00)
3637.    I2D:   double: -4550949270986948608 (0xc0d7c7c000000000)
3638.    INT2BYTE: byte: -31 (0xffffffe1)
3639.    INT2CHAR: char: 41185 (0xa0e1)
3640.    INT2SHORT: short: -24351 (0xffffa0e1)
3641.    not IFEQ
3642.    not IFGT
3643.    not IFGE
3644.    not IF_ICMPEQ
3645.    not IF_ICMPGT
3646.    not IF_ICMPGE
3647.    COND_ICMPEQ -24351 == 0: 1
3648.    COND_ICMPNE -24351 != 0: 0
3649.    COND_ICMPLT -24351 <  0: 0
3650.    COND_ICMPLE -24351 <= 0: 0
3651.    COND_ICMPGT -24351 >  0: 1
3652.    COND_ICMPGE -24351 >= 0: 1
3653.    COND_ICMPEQ -24351 == 0: 0
3654.    COND_ICMPNE -24351 != 0: 1
3655.    COND_ICMPLT -24351 <  0: 1
3656.    COND_ICMPLE -24351 <= 0: 1
3657.    COND_ICMPGT -24351 >  0: 0
3658.    COND_ICMPGE -24351 >= 0: 0
3659.    COND_ICMPEQ -24351 == 0: 3
3660.    COND_ICMPNE -24351 != 0: 2
3661.    COND_ICMPLT -24351 <  0: 2
3662.    COND_ICMPLE -24351 <= 0: 2
3663.    COND_ICMPGT -24351 >  0: 3
3664.    COND_ICMPGE -24351 >= 0: 3
3665.    COND_ICMPEQ -24351 == 24123: false
3666.    COND_ICMPNE -24351 != 24123: true
3667.    COND_ICMPLT -24351 <  24123: true
3668.    COND_ICMPLE -24351 <= 24123: true
3669.    COND_ICMPGT -24351 >  24123: false
3670.    COND_ICMPGE -24351 >= 24123: false
3671.    TESTINT called with int: 4918923 (0x4b0e8b)
3672.                    AND int: -441423 (0xfff943b1)
3673.    IADD:  int: 4477500 (0x44523c)
3674.    ISUB:  int: 5360346 (0x51cada)
3675.    IMUL:  int: 1927704347 (0x72e66f1b)
3676.    IDIV:  int: -11 (0xfffffff5)
3677.    IREM:  int: 63270 (0xf726)
3678.    INEG:  int: -4918923 (0xffb4f175)
3679.    ISHL:  int: 487981056 (0x1d160000)
3680.    ISHR:  int: 37 (0x25)
3681.    IUSHR: int: 37 (0x25)
3682.    IAND:  int: 4784769 (0x490281)
3683.    IOR:   int: -307269 (0xfffb4fbb)
3684.    IXOR:  int: -5092038 (0xffb24d3a)
3685.    I2L:   long: 4918923 (0x4b0e8b)
3686.    I2F:   float: 1251351830 (0x4a961d16)
3687.    I2D:   double: 4707039664328933376 (0x4152c3a2c0000000)
3688.    INT2BYTE: byte: -117 (0xffffff8b)
3689.    INT2CHAR: char: 3723 (0xe8b)
3690.    INT2SHORT: short: 3723 (0xe8b)
3691.    not IFEQ
3692.    not IFLT
3693.    not IFLE
3694.    not IF_ICMPEQ
3695.    not IF_ICMPLT
3696.    not IF_ICMPLE
3697.    COND_ICMPEQ 4918923 == 0: 1
3698.    COND_ICMPNE 4918923 != 0: 0
3699.    COND_ICMPLT 4918923 <  0: 1
3700.    COND_ICMPLE 4918923 <= 0: 1
3701.    COND_ICMPGT 4918923 >  0: 0
3702.    COND_ICMPGE 4918923 >= 0: 0
3703.    COND_ICMPEQ 4918923 == 0: 0
3704.    COND_ICMPNE 4918923 != 0: 1
3705.    COND_ICMPLT 4918923 <  0: 0
3706.    COND_ICMPLE 4918923 <= 0: 0
3707.    COND_ICMPGT 4918923 >  0: 1
3708.    COND_ICMPGE 4918923 >= 0: 1
3709.    COND_ICMPEQ 4918923 == 0: 3
3710.    COND_ICMPNE 4918923 != 0: 2
3711.    COND_ICMPLT 4918923 <  0: 3
3712.    COND_ICMPLE 4918923 <= 0: 3
3713.    COND_ICMPGT 4918923 >  0: 2
3714.    COND_ICMPGE 4918923 >= 0: 2
3715.    COND_ICMPEQ 4918923 == -441423: false
3716.    COND_ICMPNE 4918923 != -441423: true
3717.    COND_ICMPLT 4918923 <  -441423: false
3718.    COND_ICMPLE 4918923 <= -441423: false
3719.    COND_ICMPGT 4918923 >  -441423: true
3720.    COND_ICMPGE 4918923 >= -441423: true
3721.    TESTINT called with int: 0 (0x0)
3722.                    AND int: 0 (0x0)
3723.    IADD:  int: 0 (0x0)
3724.    ISUB:  int: 0 (0x0)
3725.    IMUL:  int: 0 (0x0)
3726.    divison by zero
3727.    divison by zero
3728.    INEG:  int: 0 (0x0)
3729.    ISHL:  int: 0 (0x0)
3730.    ISHR:  int: 0 (0x0)
3731.    IUSHR: int: 0 (0x0)
3732.    IAND:  int: 0 (0x0)
3733.    IOR:   int: 0 (0x0)
3734.    IXOR:  int: 0 (0x0)
3735.    I2L:   long: 0 (0x0)
3736.    I2F:   float: 0 (0x0)
3737.    I2D:   double: 0 (0x0)
3738.    INT2BYTE: byte: 0 (0x0)
3739.    INT2CHAR: char: 0 (0x0)
3740.    INT2SHORT: short: 0 (0x0)
3741.    not IFNE
3742.    not IFLT
3743.    not IFGT
3744.    not IF_ICMPNE
3745.    not IF_ICMPLT
3746.    not IF_ICMPGT
3747.    COND_ICMPEQ 0 == 0: 0
3748.    COND_ICMPNE 0 != 0: 1
3749.    COND_ICMPLT 0 <  0: 1
3750.    COND_ICMPLE 0 <= 0: 0
3751.    COND_ICMPGT 0 >  0: 1
3752.    COND_ICMPGE 0 >= 0: 0
3753.    COND_ICMPEQ 0 == 0: 1
3754.    COND_ICMPNE 0 != 0: 0
3755.    COND_ICMPLT 0 <  0: 0
3756.    COND_ICMPLE 0 <= 0: 1
3757.    COND_ICMPGT 0 >  0: 0
3758.    COND_ICMPGE 0 >= 0: 1
3759.    COND_ICMPEQ 0 == 0: 2
3760.    COND_ICMPNE 0 != 0: 3
3761.    COND_ICMPLT 0 <  0: 3
3762.    COND_ICMPLE 0 <= 0: 2
3763.    COND_ICMPGT 0 >  0: 3
3764.    COND_ICMPGE 0 >= 0: 2
3765.    COND_ICMPEQ 0 == 0: true
3766.    COND_ICMPNE 0 != 0: false
3767.    COND_ICMPLT 0 <  0: false
3768.    COND_ICMPLE 0 <= 0: true
3769.    COND_ICMPGT 0 >  0: false
3770.    COND_ICMPGE 0 >= 0: true
3771.    TESTINT called with int: -1 (0xffffffff)
3772.                    AND int: -1 (0xffffffff)
3773.    IADD:  int: -2 (0xfffffffe)
3774.    ISUB:  int: 0 (0x0)
3775.    IMUL:  int: 1 (0x1)
3776.    IDIV:  int: 1 (0x1)
3777.    IREM:  int: 0 (0x0)
3778.    INEG:  int: 1 (0x1)
3779.    ISHL:  int: -2147483648 (0x80000000)
3780.    ISHR:  int: -1 (0xffffffff)
3781.    IUSHR: int: 1 (0x1)
3782.    IAND:  int: -1 (0xffffffff)
3783.    IOR:   int: -1 (0xffffffff)
3784.    IXOR:  int: 0 (0x0)
3785.    I2L:   long: -1 (0xffffffffffffffff)
3786.    I2F:   float: -1082130432 (0xbf800000)
3787.    I2D:   double: -4616189618054758400 (0xbff0000000000000)
3788.    INT2BYTE: byte: -1 (0xffffffff)
3789.    INT2CHAR: char: 65535 (0xffff)
3790.    INT2SHORT: short: -1 (0xffffffff)
3791.    not IFEQ
3792.    not IFGT
3793.    not IFGE
3794.    not IF_ICMPNE
3795.    not IF_ICMPLT
3796.    not IF_ICMPGT
3797.    COND_ICMPEQ -1 == 0: 1
3798.    COND_ICMPNE -1 != 0: 0
3799.    COND_ICMPLT -1 <  0: 0
3800.    COND_ICMPLE -1 <= 0: 0
3801.    COND_ICMPGT -1 >  0: 1
3802.    COND_ICMPGE -1 >= 0: 1
3803.    COND_ICMPEQ -1 == 0: 0
3804.    COND_ICMPNE -1 != 0: 1
3805.    COND_ICMPLT -1 <  0: 1
3806.    COND_ICMPLE -1 <= 0: 1
3807.    COND_ICMPGT -1 >  0: 0
3808.    COND_ICMPGE -1 >= 0: 0
3809.    COND_ICMPEQ -1 == 0: 3
3810.    COND_ICMPNE -1 != 0: 2
3811.    COND_ICMPLT -1 <  0: 2
3812.    COND_ICMPLE -1 <= 0: 2
3813.    COND_ICMPGT -1 >  0: 3
3814.    COND_ICMPGE -1 >= 0: 3
3815.    COND_ICMPEQ -1 == -1: true
3816.    COND_ICMPNE -1 != -1: false
3817.    COND_ICMPLT -1 <  -1: false
3818.    COND_ICMPLE -1 <= -1: true
3819.    COND_ICMPGT -1 >  -1: false
3820.    COND_ICMPGE -1 >= -1: true
3821.    TESTINT called with int: 1423487 (0x15b87f)
3822.                    AND int: 123444444 (0x75b9cdc)
3823.    IADD:  int: 124867931 (0x771555b)
3824.    ISUB:  int: -122020957 (0xf8ba1ba3)
3825.    IMUL:  int: 1564274980 (0x5d3cf124)
3826.    IDIV:  int: 0 (0x0)
3827.    IREM:  int: 1423487 (0x15b87f)
3828.    INEG:  int: -1423487 (0xffea4781)
3829.    ISHL:  int: -268435456 (0xf0000000)
3830.    ISHR:  int: 0 (0x0)
3831.    IUSHR: int: 0 (0x0)
3832.    IAND:  int: 1153116 (0x11985c)
3833.    IOR:   int: 123714815 (0x75fbcff)
3834.    IXOR:  int: 122561699 (0x74e24a3)
3835.    I2L:   long: 1423487 (0x15b87f)
3836.    I2F:   float: 1236124664 (0x49adc3f8)
3837.    I2D:   double: 4698864641831337984 (0x4135b87f00000000)
3838.    INT2BYTE: byte: 127 (0x7f)
3839.    INT2CHAR: char: 47231 (0xb87f)
3840.    INT2SHORT: short: -18305 (0xffffb87f)
3841.    not IFEQ
3842.    not IFLT
3843.    not IFLE
3844.    not IF_ICMPEQ
3845.    not IF_ICMPGT
3846.    not IF_ICMPGE
3847.    COND_ICMPEQ 1423487 == 0: 1
3848.    COND_ICMPNE 1423487 != 0: 0
3849.    COND_ICMPLT 1423487 <  0: 1
3850.    COND_ICMPLE 1423487 <= 0: 1
3851.    COND_ICMPGT 1423487 >  0: 0
3852.    COND_ICMPGE 1423487 >= 0: 0
3853.    COND_ICMPEQ 1423487 == 0: 0
3854.    COND_ICMPNE 1423487 != 0: 1
3855.    COND_ICMPLT 1423487 <  0: 0
3856.    COND_ICMPLE 1423487 <= 0: 0
3857.    COND_ICMPGT 1423487 >  0: 1
3858.    COND_ICMPGE 1423487 >= 0: 1
3859.    COND_ICMPEQ 1423487 == 0: 3
3860.    COND_ICMPNE 1423487 != 0: 2
3861.    COND_ICMPLT 1423487 <  0: 3
3862.    COND_ICMPLE 1423487 <= 0: 3
3863.    COND_ICMPGT 1423487 >  0: 2
3864.    COND_ICMPGE 1423487 >= 0: 2
3865.    COND_ICMPEQ 1423487 == 123444444: false
3866.    COND_ICMPNE 1423487 != 123444444: true
3867.    COND_ICMPLT 1423487 <  123444444: true
3868.    COND_ICMPLE 1423487 <= 123444444: true
3869.    COND_ICMPGT 1423487 >  123444444: false
3870.    COND_ICMPGE 1423487 >= 123444444: false
3871.    TESTINT called with int: 2147483647 (0x7fffffff)
3872.                    AND int: 1 (0x1)
3873.    IADD:  int: -2147483648 (0x80000000)
3874.    ISUB:  int: 2147483646 (0x7ffffffe)
3875.    IMUL:  int: 2147483647 (0x7fffffff)
3876.    IDIV:  int: 2147483647 (0x7fffffff)
3877.    IREM:  int: 0 (0x0)
3878.    INEG:  int: -2147483647 (0x80000001)
3879.    ISHL:  int: -2 (0xfffffffe)
3880.    ISHR:  int: 1073741823 (0x3fffffff)
3881.    IUSHR: int: 1073741823 (0x3fffffff)
3882.    IAND:  int: 1 (0x1)
3883.    IOR:   int: 2147483647 (0x7fffffff)
3884.    IXOR:  int: 2147483646 (0x7ffffffe)
3885.    I2L:   long: 2147483647 (0x7fffffff)
3886.    I2F:   float: 1325400064 (0x4f000000)
3887.    I2D:   double: 4746794007244308480 (0x41dfffffffc00000)
3888.    INT2BYTE: byte: -1 (0xffffffff)
3889.    INT2CHAR: char: 65535 (0xffff)
3890.    INT2SHORT: short: -1 (0xffffffff)
3891.    not IFEQ
3892.    not IFLT
3893.    not IFLE
3894.    not IF_ICMPEQ
3895.    not IF_ICMPLT
3896.    not IF_ICMPLE
3897.    COND_ICMPEQ 2147483647 == 0: 1
3898.    COND_ICMPNE 2147483647 != 0: 0
3899.    COND_ICMPLT 2147483647 <  0: 1
3900.    COND_ICMPLE 2147483647 <= 0: 1
3901.    COND_ICMPGT 2147483647 >  0: 0
3902.    COND_ICMPGE 2147483647 >= 0: 0
3903.    COND_ICMPEQ 2147483647 == 0: 0
3904.    COND_ICMPNE 2147483647 != 0: 1
3905.    COND_ICMPLT 2147483647 <  0: 0
3906.    COND_ICMPLE 2147483647 <= 0: 0
3907.    COND_ICMPGT 2147483647 >  0: 1
3908.    COND_ICMPGE 2147483647 >= 0: 1
3909.    COND_ICMPEQ 2147483647 == 0: 3
3910.    COND_ICMPNE 2147483647 != 0: 2
3911.    COND_ICMPLT 2147483647 <  0: 3
3912.    COND_ICMPLE 2147483647 <= 0: 3
3913.    COND_ICMPGT 2147483647 >  0: 2
3914.    COND_ICMPGE 2147483647 >= 0: 2
3915.    COND_ICMPEQ 2147483647 == 1: false
3916.    COND_ICMPNE 2147483647 != 1: true
3917.    COND_ICMPLT 2147483647 <  1: false
3918.    COND_ICMPLE 2147483647 <= 1: false
3919.    COND_ICMPGT 2147483647 >  1: true
3920.    COND_ICMPGE 2147483647 >= 1: true
3921.    TESTINT called with int: 0 (0x0)
3922.                    AND int: 2147483647 (0x7fffffff)
3923.    IADD:  int: 2147483647 (0x7fffffff)
3924.    ISUB:  int: -2147483647 (0x80000001)
3925.    IMUL:  int: 0 (0x0)
3926.    IDIV:  int: 0 (0x0)
3927.    IREM:  int: 0 (0x0)
3928.    INEG:  int: 0 (0x0)
3929.    ISHL:  int: 0 (0x0)
3930.    ISHR:  int: 0 (0x0)
3931.    IUSHR: int: 0 (0x0)
3932.    IAND:  int: 0 (0x0)
3933.    IOR:   int: 2147483647 (0x7fffffff)
3934.    IXOR:  int: 2147483647 (0x7fffffff)
3935.    I2L:   long: 0 (0x0)
3936.    I2F:   float: 0 (0x0)
3937.    I2D:   double: 0 (0x0)
3938.    INT2BYTE: byte: 0 (0x0)
3939.    INT2CHAR: char: 0 (0x0)
3940.    INT2SHORT: short: 0 (0x0)
3941.    not IFNE
3942.    not IFLT
3943.    not IFGT
3944.    not IF_ICMPEQ
3945.    not IF_ICMPGT
3946.    not IF_ICMPGE
3947.    COND_ICMPEQ 0 == 0: 0
3948.    COND_ICMPNE 0 != 0: 1
3949.    COND_ICMPLT 0 <  0: 1
3950.    COND_ICMPLE 0 <= 0: 0
3951.    COND_ICMPGT 0 >  0: 1
3952.    COND_ICMPGE 0 >= 0: 0
3953.    COND_ICMPEQ 0 == 0: 1
3954.    COND_ICMPNE 0 != 0: 0
3955.    COND_ICMPLT 0 <  0: 0
3956.    COND_ICMPLE 0 <= 0: 1
3957.    COND_ICMPGT 0 >  0: 0
3958.    COND_ICMPGE 0 >= 0: 1
3959.    COND_ICMPEQ 0 == 0: 2
3960.    COND_ICMPNE 0 != 0: 3
3961.    COND_ICMPLT 0 <  0: 3
3962.    COND_ICMPLE 0 <= 0: 2
3963.    COND_ICMPGT 0 >  0: 3
3964.    COND_ICMPGE 0 >= 0: 2
3965.    COND_ICMPEQ 0 == 2147483647: false
3966.    COND_ICMPNE 0 != 2147483647: true
3967.    COND_ICMPLT 0 <  2147483647: true
3968.    COND_ICMPLE 0 <= 2147483647: true
3969.    COND_ICMPGT 0 >  2147483647: false
3970.    COND_ICMPGE 0 >= 2147483647: false
3971.    TESTINT called with int: 13107 (0x3333)
3972.                    AND int: 143444 (0x23054)
3973.    IADD:  int: 156551 (0x26387)
3974.    ISUB:  int: -130337 (0xfffe02df)
3975.    IMUL:  int: 1880120508 (0x70105cbc)
3976.    IDIV:  int: 0 (0x0)
3977.    IREM:  int: 13107 (0x3333)
3978.    INEG:  int: -13107 (0xffffcccd)
3979.    ISHL:  int: 858783744 (0x33300000)
3980.    ISHR:  int: 0 (0x0)
3981.    IUSHR: int: 0 (0x0)
3982.    IAND:  int: 12304 (0x3010)
3983.    IOR:   int: 144247 (0x23377)
3984.    IXOR:  int: 131943 (0x20367)
3985.    I2L:   long: 13107 (0x3333)
3986.    I2F:   float: 1179438080 (0x464ccc00)
3987.    I2D:   double: 4668431263781093376 (0x40c9998000000000)
3988.    INT2BYTE: byte: 51 (0x33)
3989.    INT2CHAR: char: 13107 (0x3333)
3990.    INT2SHORT: short: 13107 (0x3333)
3991.    not IFEQ
3992.    not IFLT
3993.    not IFLE
3994.    not IF_ICMPEQ
3995.    not IF_ICMPGT
3996.    not IF_ICMPGE
3997.    COND_ICMPEQ 13107 == 0: 1
3998.    COND_ICMPNE 13107 != 0: 0
3999.    COND_ICMPLT 13107 <  0: 1
4000.    COND_ICMPLE 13107 <= 0: 1
4001.    COND_ICMPGT 13107 >  0: 0
4002.    COND_ICMPGE 13107 >= 0: 0
4003.    COND_ICMPEQ 13107 == 0: 0
4004.    COND_ICMPNE 13107 != 0: 1
4005.    COND_ICMPLT 13107 <  0: 0
4006.    COND_ICMPLE 13107 <= 0: 0
4007.    COND_ICMPGT 13107 >  0: 1
4008.    COND_ICMPGE 13107 >= 0: 1
4009.    COND_ICMPEQ 13107 == 0: 3
4010.    COND_ICMPNE 13107 != 0: 2
4011.    COND_ICMPLT 13107 <  0: 3
4012.    COND_ICMPLE 13107 <= 0: 3
4013.    COND_ICMPGT 13107 >  0: 2
4014.    COND_ICMPGE 13107 >= 0: 2
4015.    COND_ICMPEQ 13107 == 143444: false
4016.    COND_ICMPNE 13107 != 143444: true
4017.    COND_ICMPLT 13107 <  143444: true
4018.    COND_ICMPLE 13107 <= 143444: true
4019.    COND_ICMPGT 13107 >  143444: false
4020.    COND_ICMPGE 13107 >= 143444: false
4021.    TESTINT called with int: 4444441 (0x43d119)
4022.                    AND int: 12342 (0x3036)
4023.    IADD:  int: 4456783 (0x44014f)
4024.    ISUB:  int: 4432099 (0x43a0e3)
4025.    IMUL:  int: -981284026 (0xc582cb46)
4026.    IDIV:  int: 360 (0x168)
4027.    IREM:  int: 1321 (0x529)
4028.    INEG:  int: -4444441 (0xffbc2ee7)
4029.    ISHL:  int: 1178599424 (0x46400000)
4030.    ISHR:  int: 1 (0x1)
4031.    IUSHR: int: 1 (0x1)
4032.    IAND:  int: 4112 (0x1010)
4033.    IOR:   int: 4452671 (0x43f13f)
4034.    IXOR:  int: 4448559 (0x43e12f)
4035.    I2L:   long: 4444441 (0x43d119)
4036.    I2F:   float: 1250402866 (0x4a87a232)
4037.    I2D:   double: 4706530193160798208 (0x4150f44640000000)
4038.    INT2BYTE: byte: 25 (0x19)
4039.    INT2CHAR: char: 53529 (0xd119)
4040.    INT2SHORT: short: -12007 (0xffffd119)
4041.    not IFEQ
4042.    not IFLT
4043.    not IFLE
4044.    not IF_ICMPEQ
4045.    not IF_ICMPLT
4046.    not IF_ICMPLE
4047.    COND_ICMPEQ 4444441 == 0: 1
4048.    COND_ICMPNE 4444441 != 0: 0
4049.    COND_ICMPLT 4444441 <  0: 1
4050.    COND_ICMPLE 4444441 <= 0: 1
4051.    COND_ICMPGT 4444441 >  0: 0
4052.    COND_ICMPGE 4444441 >= 0: 0
4053.    COND_ICMPEQ 4444441 == 0: 0
4054.    COND_ICMPNE 4444441 != 0: 1
4055.    COND_ICMPLT 4444441 <  0: 0
4056.    COND_ICMPLE 4444441 <= 0: 0
4057.    COND_ICMPGT 4444441 >  0: 1
4058.    COND_ICMPGE 4444441 >= 0: 1
4059.    COND_ICMPEQ 4444441 == 0: 3
4060.    COND_ICMPNE 4444441 != 0: 2
4061.    COND_ICMPLT 4444441 <  0: 3
4062.    COND_ICMPLE 4444441 <= 0: 3
4063.    COND_ICMPGT 4444441 >  0: 2
4064.    COND_ICMPGE 4444441 >= 0: 2
4065.    COND_ICMPEQ 4444441 == 12342: false
4066.    COND_ICMPNE 4444441 != 12342: true
4067.    COND_ICMPLT 4444441 <  12342: false
4068.    COND_ICMPLE 4444441 <= 12342: false
4069.    COND_ICMPGT 4444441 >  12342: true
4070.    COND_ICMPGE 4444441 >= 12342: true
4071.    TESTINT called with int: -2147483648 (0x80000000)
4072.                    AND int: -1 (0xffffffff)
4073.    IADD:  int: 2147483647 (0x7fffffff)
4074.    ISUB:  int: -2147483647 (0x80000001)
4075.    IMUL:  int: -2147483648 (0x80000000)
4076.    IDIV:  int: -2147483648 (0x80000000)
4077.    IREM:  int: 0 (0x0)
4078.    INEG:  int: -2147483648 (0x80000000)
4079.    ISHL:  int: 0 (0x0)
4080.    ISHR:  int: -1 (0xffffffff)
4081.    IUSHR: int: 1 (0x1)
4082.    IAND:  int: -2147483648 (0x80000000)
4083.    IOR:   int: -1 (0xffffffff)
4084.    IXOR:  int: 2147483647 (0x7fffffff)
4085.    I2L:   long: -2147483648 (0xffffffff80000000)
4086.    I2F:   float: -822083584 (0xcf000000)
4087.    I2D:   double: -4476578029606273024 (0xc1e0000000000000)
4088.    INT2BYTE: byte: 0 (0x0)
4089.    INT2CHAR: char: 0 (0x0)
4090.    INT2SHORT: short: 0 (0x0)
4091.    not IFEQ
4092.    not IFGT
4093.    not IFGE
4094.    not IF_ICMPEQ
4095.    not IF_ICMPGT
4096.    not IF_ICMPGE
4097.    COND_ICMPEQ -2147483648 == 0: 1
4098.    COND_ICMPNE -2147483648 != 0: 0
4099.    COND_ICMPLT -2147483648 <  0: 0
4100.    COND_ICMPLE -2147483648 <= 0: 0
4101.    COND_ICMPGT -2147483648 >  0: 1
4102.    COND_ICMPGE -2147483648 >= 0: 1
4103.    COND_ICMPEQ -2147483648 == 0: 0
4104.    COND_ICMPNE -2147483648 != 0: 1
4105.    COND_ICMPLT -2147483648 <  0: 1
4106.    COND_ICMPLE -2147483648 <= 0: 1
4107.    COND_ICMPGT -2147483648 >  0: 0
4108.    COND_ICMPGE -2147483648 >= 0: 0
4109.    COND_ICMPEQ -2147483648 == 0: 3
4110.    COND_ICMPNE -2147483648 != 0: 2
4111.    COND_ICMPLT -2147483648 <  0: 2
4112.    COND_ICMPLE -2147483648 <= 0: 2
4113.    COND_ICMPGT -2147483648 >  0: 3
4114.    COND_ICMPGE -2147483648 >= 0: 3
4115.    COND_ICMPEQ -2147483648 == -1: false
4116.    COND_ICMPNE -2147483648 != -1: true
4117.    COND_ICMPLT -2147483648 <  -1: true
4118.    COND_ICMPLE -2147483648 <= -1: true
4119.    COND_ICMPGT -2147483648 >  -1: false
4120.    COND_ICMPGE -2147483648 >= -1: false
4121.    ------------------- test longs
4122.    TESTLONG called with long: 1 (0x1)
4123.                     AND long: 2 (0x2)
4124.    LADD:  long: 3 (0x3)
4125.    LSUB:  long: -1 (0xffffffffffffffff)
4126.    LMUL:  long: 2 (0x2)
4127.    LDIV:  long: 0 (0x0)
4128.    LREM:  long: 1 (0x1)
4129.    LNEG:  long: -1 (0xffffffffffffffff)
4130.    LSHL:  long: 4 (0x4)
4131.    LSHR:  long: 0 (0x0)
4132.    LUSHR: long: 0 (0x0)
4133.    LAND:  long: 0 (0x0)
4134.    LOR:   long: 3 (0x3)
4135.    LXOR:  long: 3 (0x3)
4136.    L2I:   int: 1 (0x1)
4137.    L2F:   float: 1065353216 (0x3f800000)
4138.    L2D:   double: 4607182418800017408 (0x3ff0000000000000)
4139.    LCMP a == b : false
4140.    LCMP a != b : true
4141.    LCMP a <  b : true
4142.    LCMP a <= b : true
4143.    LCMP a >  b : false
4144.    LCMP a >= b : false
4145.    not IF_LEQ
4146.    not IF_LLT
4147.    not IF_LLE
4148.    not IF_LCMPEQ
4149.    not IF_LCMPGT
4150.    not IF_LCMPGE
4151.    TESTLONG called with long: -1 (0xffffffffffffffff)
4152.                     AND long: 17 (0x11)
4153.    LADD:  long: 16 (0x10)
4154.    LSUB:  long: -18 (0xffffffffffffffee)
4155.    LMUL:  long: -17 (0xffffffffffffffef)
4156.    LDIV:  long: 0 (0x0)
4157.    LREM:  long: -1 (0xffffffffffffffff)
4158.    LNEG:  long: 1 (0x1)
4159.    LSHL:  long: -131072 (0xfffffffffffe0000)
4160.    LSHR:  long: -1 (0xffffffffffffffff)
4161.    LUSHR: long: 140737488355327 (0x7fffffffffff)
4162.    LAND:  long: 17 (0x11)
4163.    LOR:   long: -1 (0xffffffffffffffff)
4164.    LXOR:  long: -18 (0xffffffffffffffee)
4165.    L2I:   int: -1 (0xffffffff)
4166.    L2F:   float: -1082130432 (0xbf800000)
4167.    L2D:   double: -4616189618054758400 (0xbff0000000000000)
4168.    LCMP a == b : false
4169.    LCMP a != b : true
4170.    LCMP a <  b : true
4171.    LCMP a <= b : true
4172.    LCMP a >  b : false
4173.    LCMP a >= b : false
4174.    not IF_LEQ
4175.    not IF_LGT
4176.    not IF_LGE
4177.    not IF_LCMPEQ
4178.    not IF_LCMPGT
4179.    not IF_LCMPGE
4180.    TESTLONG called with long: -24351 (0xffffffffffffa0e1)
4181.                     AND long: 24123 (0x5e3b)
4182.    LADD:  long: -228 (0xffffffffffffff1c)
4183.    LSUB:  long: -48474 (0xffffffffffff42a6)
4184.    LMUL:  long: -587419173 (0xffffffffdcfcb1db)
4185.    LDIV:  long: -1 (0xffffffffffffffff)
4186.    LREM:  long: -228 (0xffffffffffffff1c)
4187.    LNEG:  long: 24351 (0x5f1f)
4188.    LSHL:  long: 576460752303423488 (0x800000000000000)
4189.    LSHR:  long: -1 (0xffffffffffffffff)
4190.    LUSHR: long: 31 (0x1f)
4191.    LAND:  long: 33 (0x21)
4192.    LOR:   long: -261 (0xfffffffffffffefb)
4193.    LXOR:  long: -294 (0xfffffffffffffeda)
4194.    L2I:   int: -24351 (0xffffa0e1)
4195.    L2F:   float: -960610816 (0xc6be3e00)
4196.    L2D:   double: -4550949270986948608 (0xc0d7c7c000000000)
4197.    LCMP a == b : false
4198.    LCMP a != b : true
4199.    LCMP a <  b : true
4200.    LCMP a <= b : true
4201.    LCMP a >  b : false
4202.    LCMP a >= b : false
4203.    not IF_LEQ
4204.    not IF_LGT
4205.    not IF_LGE
4206.    not IF_LCMPEQ
4207.    not IF_LCMPGT
4208.    not IF_LCMPGE
4209.    TESTLONG called with long: 4918923241323 (0x47946ac276b)
4210.                     AND long: -4423423234231423 (0xfff048eb856eb381)
4211.    LADD:  long: -4418504310990100 (0xfff04d64cc1adaec)
4212.    LSUB:  long: 4428342157472746 (0xfbb8dc13d73ea)
4213.    LMUL:  long: -4222930371437023765 (0xc56523338349adeb)
4214.    LDIV:  long: 0 (0x0)
4215.    LREM:  long: 4918923241323 (0x47946ac276b)
4216.    LNEG:  long: -4918923241323 (0xfffffb86b953d895)
4217.    LSHL:  long: 9837846482646 (0x8f28d584ed6)
4218.    LSHR:  long: 2459461620661 (0x23ca35613b5)
4219.    LUSHR: long: 2459461620661 (0x23ca35613b5)
4220.    LAND:  long: 451041567489 (0x69042c2301)
4221.    LOR:   long: -4418955352557589 (0xfff04cfbc7eeb7eb)
4222.    LXOR:  long: -4419406394125078 (0xfff04c92c3c294ea)
4223.    L2I:   int: 1185687403 (0x46ac276b)
4224.    L2F:   float: 1418668246 (0x548f28d6)
4225.    L2D:   double: 4796866980921322496 (0x4291e51ab09dac00)
4226.    LCMP a == b : false
4227.    LCMP a != b : true
4228.    LCMP a <  b : false
4229.    LCMP a <= b : false
4230.    LCMP a >  b : true
4231.    LCMP a >= b : true
4232.    not IF_LEQ
4233.    not IF_LLT
4234.    not IF_LLE
4235.    not IF_LCMPEQ
4236.    not IF_LCMPLT
4237.    not IF_LCMPLE
4238.    TESTLONG called with long: 0 (0x0)
4239.                     AND long: 0 (0x0)
4240.    LADD:  long: 0 (0x0)
4241.    LSUB:  long: 0 (0x0)
4242.    LMUL:  long: 0 (0x0)
4243.    divison by zero
4244.    divison by zero
4245.    LNEG:  long: 0 (0x0)
4246.    LSHL:  long: 0 (0x0)
4247.    LSHR:  long: 0 (0x0)
4248.    LUSHR: long: 0 (0x0)
4249.    LAND:  long: 0 (0x0)
4250.    LOR:   long: 0 (0x0)
4251.    LXOR:  long: 0 (0x0)
4252.    L2I:   int: 0 (0x0)
4253.    L2F:   float: 0 (0x0)
4254.    L2D:   double: 0 (0x0)
4255.    LCMP a == b : true
4256.    LCMP a != b : false
4257.    LCMP a <  b : false
4258.    LCMP a <= b : true
4259.    LCMP a >  b : false
4260.    LCMP a >= b : true
4261.    not IF_LNE
4262.    not IF_LLT
4263.    not IF_LGT
4264.    not IF_LCMPNE
4265.    not IF_LCMPLT
4266.    not IF_LCMPGT
4267.    TESTLONG called with long: -1 (0xffffffffffffffff)
4268.                     AND long: -1 (0xffffffffffffffff)
4269.    LADD:  long: -2 (0xfffffffffffffffe)
4270.    LSUB:  long: 0 (0x0)
4271.    LMUL:  long: 1 (0x1)
4272.    LDIV:  long: 1 (0x1)
4273.    LREM:  long: 0 (0x0)
4274.    LNEG:  long: 1 (0x1)
4275.    LSHL:  long: -9223372036854775808 (0x8000000000000000)
4276.    LSHR:  long: -1 (0xffffffffffffffff)
4277.    LUSHR: long: 1 (0x1)
4278.    LAND:  long: -1 (0xffffffffffffffff)
4279.    LOR:   long: -1 (0xffffffffffffffff)
4280.    LXOR:  long: 0 (0x0)
4281.    L2I:   int: -1 (0xffffffff)
4282.    L2F:   float: -1082130432 (0xbf800000)
4283.    L2D:   double: -4616189618054758400 (0xbff0000000000000)
4284.    LCMP a == b : true
4285.    LCMP a != b : false
4286.    LCMP a <  b : false
4287.    LCMP a <= b : true
4288.    LCMP a >  b : false
4289.    LCMP a >= b : true
4290.    not IF_LEQ
4291.    not IF_LGT
4292.    not IF_LGE
4293.    not IF_LCMPNE
4294.    not IF_LCMPLT
4295.    not IF_LCMPGT
4296.    TESTLONG called with long: 1423487 (0x15b87f)
4297.                     AND long: 123444442344 (0x1cbddcb4e8)
4298.    LADD:  long: 123445865831 (0x1cbdf26d67)
4299.    LSUB:  long: -123443018857 (0xffffffe342390397)
4300.    LMUL:  long: 175721558898933528 (0x27049d3a98c7f18)
4301.    LDIV:  long: 0 (0x0)
4302.    LREM:  long: 1423487 (0x15b87f)
4303.    LNEG:  long: -1423487 (0xffffffffffea4781)
4304.    LSHL:  long: 1565140508487974912 (0x15b87f0000000000)
4305.    LSHR:  long: 0 (0x0)
4306.    LUSHR: long: 0 (0x0)
4307.    LAND:  long: 1355880 (0x14b068)
4308.    LOR:   long: 123444509951 (0x1cbdddbcff)
4309.    LXOR:  long: 123443154071 (0x1cbdc90c97)
4310.    L2I:   int: 1423487 (0x15b87f)
4311.    L2F:   float: 1236124664 (0x49adc3f8)
4312.    L2D:   double: 4698864641831337984 (0x4135b87f00000000)
4313.    LCMP a == b : false
4314.    LCMP a != b : true
4315.    LCMP a <  b : true
4316.    LCMP a <= b : true
4317.    LCMP a >  b : false
4318.    LCMP a >= b : false
4319.    not IF_LEQ
4320.    not IF_LLT
4321.    not IF_LLE
4322.    not IF_LCMPEQ
4323.    not IF_LCMPGT
4324.    not IF_LCMPGE
4325.    TESTLONG called with long: 9223372036854775807 (0x7fffffffffffffff)
4326.                     AND long: 1 (0x1)
4327.    LADD:  long: -9223372036854775808 (0x8000000000000000)
4328.    LSUB:  long: 9223372036854775806 (0x7ffffffffffffffe)
4329.    LMUL:  long: 9223372036854775807 (0x7fffffffffffffff)
4330.    LDIV:  long: 9223372036854775807 (0x7fffffffffffffff)
4331.    LREM:  long: 0 (0x0)
4332.    LNEG:  long: -9223372036854775807 (0x8000000000000001)
4333.    LSHL:  long: -2 (0xfffffffffffffffe)
4334.    LSHR:  long: 4611686018427387903 (0x3fffffffffffffff)
4335.    LUSHR: long: 4611686018427387903 (0x3fffffffffffffff)
4336.    LAND:  long: 1 (0x1)
4337.    LOR:   long: 9223372036854775807 (0x7fffffffffffffff)
4338.    LXOR:  long: 9223372036854775806 (0x7ffffffffffffffe)
4339.    L2I:   int: -1 (0xffffffff)
4340.    L2F:   float: 1593835520 (0x5f000000)
4341.    L2D:   double: 4890909195324358656 (0x43e0000000000000)
4342.    LCMP a == b : false
4343.    LCMP a != b : true
4344.    LCMP a <  b : false
4345.    LCMP a <= b : false
4346.    LCMP a >  b : true
4347.    LCMP a >= b : true
4348.    not IF_LEQ
4349.    not IF_LLT
4350.    not IF_LLE
4351.    not IF_LCMPEQ
4352.    not IF_LCMPLT
4353.    not IF_LCMPLE
4354.    TESTLONG called with long: 0 (0x0)
4355.                     AND long: 9223372036854775807 (0x7fffffffffffffff)
4356.    LADD:  long: 9223372036854775807 (0x7fffffffffffffff)
4357.    LSUB:  long: -9223372036854775807 (0x8000000000000001)
4358.    LMUL:  long: 0 (0x0)
4359.    LDIV:  long: 0 (0x0)
4360.    LREM:  long: 0 (0x0)
4361.    LNEG:  long: 0 (0x0)
4362.    LSHL:  long: 0 (0x0)
4363.    LSHR:  long: 0 (0x0)
4364.    LUSHR: long: 0 (0x0)
4365.    LAND:  long: 0 (0x0)
4366.    LOR:   long: 9223372036854775807 (0x7fffffffffffffff)
4367.    LXOR:  long: 9223372036854775807 (0x7fffffffffffffff)
4368.    L2I:   int: 0 (0x0)
4369.    L2F:   float: 0 (0x0)
4370.    L2D:   double: 0 (0x0)
4371.    LCMP a == b : false
4372.    LCMP a != b : true
4373.    LCMP a <  b : true
4374.    LCMP a <= b : true
4375.    LCMP a >  b : false
4376.    LCMP a >= b : false
4377.    not IF_LNE
4378.    not IF_LLT
4379.    not IF_LGT
4380.    not IF_LCMPEQ
4381.    not IF_LCMPGT
4382.    not IF_LCMPGE
4383.    TESTLONG called with long: 13107 (0x3333)
4384.                     AND long: 143444 (0x23054)
4385.    LADD:  long: 156551 (0x26387)
4386.    LSUB:  long: -130337 (0xfffffffffffe02df)
4387.    LMUL:  long: 1880120508 (0x70105cbc)
4388.    LDIV:  long: 0 (0x0)
4389.    LREM:  long: 13107 (0x3333)
4390.    LNEG:  long: -13107 (0xffffffffffffcccd)
4391.    LSHL:  long: 13743685632 (0x333300000)
4392.    LSHR:  long: 0 (0x0)
4393.    LUSHR: long: 0 (0x0)
4394.    LAND:  long: 12304 (0x3010)
4395.    LOR:   long: 144247 (0x23377)
4396.    LXOR:  long: 131943 (0x20367)
4397.    L2I:   int: 13107 (0x3333)
4398.    L2F:   float: 1179438080 (0x464ccc00)
4399.    L2D:   double: 4668431263781093376 (0x40c9998000000000)
4400.    LCMP a == b : false
4401.    LCMP a != b : true
4402.    LCMP a <  b : true
4403.    LCMP a <= b : true
4404.    LCMP a >  b : false
4405.    LCMP a >= b : false
4406.    not IF_LEQ
4407.    not IF_LLT
4408.    not IF_LLE
4409.    not IF_LCMPEQ
4410.    not IF_LCMPGT
4411.    not IF_LCMPGE
4412.    TESTLONG called with long: 4444441 (0x43d119)
4413.                     AND long: 12342 (0x3036)
4414.    LADD:  long: 4456783 (0x44014f)
4415.    LSUB:  long: 4432099 (0x43a0e3)
4416.    LMUL:  long: 54853290822 (0xcc582cb46)
4417.    LDIV:  long: 360 (0x168)
4418.    LREM:  long: 1321 (0x529)
4419.    LNEG:  long: -4444441 (0xffffffffffbc2ee7)
4420.    LSHL:  long: 5062045981164437504 (0x4640000000000000)
4421.    LSHR:  long: 0 (0x0)
4422.    LUSHR: long: 0 (0x0)
4423.    LAND:  long: 4112 (0x1010)
4424.    LOR:   long: 4452671 (0x43f13f)
4425.    LXOR:  long: 4448559 (0x43e12f)
4426.    L2I:   int: 4444441 (0x43d119)
4427.    L2F:   float: 1250402866 (0x4a87a232)
4428.    L2D:   double: 4706530193160798208 (0x4150f44640000000)
4429.    LCMP a == b : false
4430.    LCMP a != b : true
4431.    LCMP a <  b : false
4432.    LCMP a <= b : false
4433.    LCMP a >  b : true
4434.    LCMP a >= b : true
4435.    not IF_LEQ
4436.    not IF_LLT
4437.    not IF_LLE
4438.    not IF_LCMPEQ
4439.    not IF_LCMPLT
4440.    not IF_LCMPLE
4441.    TESTLONG called with long: -9223372036854775808 (0x8000000000000000)
4442.                     AND long: -1 (0xffffffffffffffff)
4443.    LADD:  long: 9223372036854775807 (0x7fffffffffffffff)
4444.    LSUB:  long: -9223372036854775807 (0x8000000000000001)
4445.    LMUL:  long: -9223372036854775808 (0x8000000000000000)
4446.    LDIV:  long: -9223372036854775808 (0x8000000000000000)
4447.    LREM:  long: 0 (0x0)
4448.    LNEG:  long: -9223372036854775808 (0x8000000000000000)
4449.    LSHL:  long: 0 (0x0)
4450.    LSHR:  long: -1 (0xffffffffffffffff)
4451.    LUSHR: long: 1 (0x1)
4452.    LAND:  long: -9223372036854775808 (0x8000000000000000)
4453.    LOR:   long: -1 (0xffffffffffffffff)
4454.    LXOR:  long: 9223372036854775807 (0x7fffffffffffffff)
4455.    L2I:   int: 0 (0x0)
4456.    L2F:   float: -553648128 (0xdf000000)
4457.    L2D:   double: -4332462841530417152 (0xc3e0000000000000)
4458.    LCMP a == b : false
4459.    LCMP a != b : true
4460.    LCMP a <  b : true
4461.    LCMP a <= b : true
4462.    LCMP a >  b : false
4463.    LCMP a >= b : false
4464.    not IF_LEQ
4465.    not IF_LGT
4466.    not IF_LGE
4467.    not IF_LCMPEQ
4468.    not IF_LCMPGT
4469.    not IF_LCMPGE
4470.    TESTLONG called with long: 2147483648 (0x80000000)
4471.                     AND long: 2147483648 (0x80000000)
4472.    LADD:  long: 4294967296 (0x100000000)
4473.    LSUB:  long: 0 (0x0)
4474.    LMUL:  long: 4611686018427387904 (0x4000000000000000)
4475.    LDIV:  long: 1 (0x1)
4476.    LREM:  long: 0 (0x0)
4477.    LNEG:  long: -2147483648 (0xffffffff80000000)
4478.    LSHL:  long: 2147483648 (0x80000000)
4479.    LSHR:  long: 2147483648 (0x80000000)
4480.    LUSHR: long: 2147483648 (0x80000000)
4481.    LAND:  long: 2147483648 (0x80000000)
4482.    LOR:   long: 2147483648 (0x80000000)
4483.    LXOR:  long: 0 (0x0)
4484.    L2I:   int: -2147483648 (0x80000000)
4485.    L2F:   float: 1325400064 (0x4f000000)
4486.    L2D:   double: 4746794007248502784 (0x41e0000000000000)
4487.    LCMP a == b : true
4488.    LCMP a != b : false
4489.    LCMP a <  b : false
4490.    LCMP a <= b : true
4491.    LCMP a >  b : false
4492.    LCMP a >= b : true
4493.    not IF_LEQ
4494.    not IF_LLT
4495.    not IF_LLE
4496.    not IF_LCMPNE
4497.    not IF_LCMPLT
4498.    not IF_LCMPGT
4499.    ------------------- test floats
4500.    TESTFLOAT called with float: 1065353216 (0x3f800000)
4501.                      AND float: 1073917985 (0x4002b021)
4502.    FADD:  float: 1078112289 (0x4042b021)
4503.    FSUB:  float: -1081778110 (0xbf856042)
4504.    FMUL:  float: 1073917985 (0x4002b021)
4505.    FDIV:  float: 1056619533 (0x3efabc0d)
4506.    FREM:  float: 1065353216 (0x3f800000)
4507.    F2I:   int: 1 (0x1)
4508.    F2L:   long: 1 (0x1)
4509.    F2D:   double: 4607182418800017408 (0x3ff0000000000000)
4510.    FCMP a != b
4511.    FCMP a < b
4512.    FCMP a <= b
4513.    TESTFLOAT called with float: -1080167498 (0xbf9df3b6)
4514.                      AND float: 1099662623 (0x418b851f)
4515.    FADD:  float: 1099015652 (0x4181a5e4)
4516.    FSUB:  float: -1047174054 (0xc195645a)
4517.    FMUL:  float: -1045681427 (0xc1ac2aed)
4518.    FDIV:  float: -1114576645 (0xbd90e8fb)
4519.    FREM:  float: -1080167498 (0xbf9df3b6)
4520.    F2I:   int: -1 (0xffffffff)
4521.    F2L:   long: -1 (0xffffffffffffffff)
4522.    F2D:   double: -4615135775887982592 (0xbff3be76c0000000)
4523.    FCMP a != b
4524.    FCMP a < b
4525.    FCMP a <= b
4526.    TESTFLOAT called with float: -960610816 (0xc6be3e00)
4527.                      AND float: 1186756096 (0x46bc7600)
4528.    FADD:  float: -1016856576 (0xc3640000)
4529.    FSUB:  float: -952280576 (0xc73d5a00)
4530.    FMUL:  float: -838070983 (0xce0c0d39)
4531.    FDIV:  float: -1082051147 (0xbf8135b5)
4532.    FREM:  float: -1016856576 (0xc3640000)
4533.    F2I:   int: -24351 (0xffffa0e1)
4534.    F2L:   long: -24351 (0xffffffffffffa0e1)
4535.    F2D:   double: -4550949270986948608 (0xc0d7c7c000000000)
4536.    FCMP a != b
4537.    FCMP a < b
4538.    FCMP a <= b
4539.    TESTFLOAT called with float: 1036831949 (0x3dcccccd)
4540.                      AND float: 1151033344 (0x449b6000)
4541.    FADD:  float: 1151034163 (0x449b6333)
4542.    FSUB:  float: -996451123 (0xc49b5ccd)
4543.    FMUL:  float: 1123588506 (0x42f8999a)
4544.    FDIV:  float: 950581132 (0x38a8b78c)
4545.    FREM:  float: 1036831949 (0x3dcccccd)
4546.    F2I:   int: 0 (0x0)
4547.    F2L:   long: 0 (0x0)
4548.    F2D:   double: 4591870180174331904 (0x3fb99999a0000000)
4549.    FCMP a != b
4550.    FCMP a < b
4551.    FCMP a <= b
4552.    TESTFLOAT called with float: 0 (0x0)
4553.                      AND float: -1005921678 (0xc40ada72)
4554.    FADD:  float: -1005921678 (0xc40ada72)
4555.    FSUB:  float: 1141561970 (0x440ada72)
4556.    FMUL:  float: -2147483648 (0x80000000)
4557.    FDIV:  float: -2147483648 (0x80000000)
4558.    FREM:  float: 0 (0x0)
4559.    F2I:   int: 0 (0x0)
4560.    F2L:   long: 0 (0x0)
4561.    F2D:   double: 0 (0x0)
4562.    FCMP a != b
4563.    FCMP a > b
4564.    FCMP a >= b
4565.    TESTFLOAT called with float: 1117388800 (0x429a0000)
4566.                      AND float: -1005928448 (0xc40ac000)
4567.    FADD:  float: -1007747072 (0xc3ef0000)
4568.    FSUB:  float: 1142816768 (0x441e0000)
4569.    FMUL:  float: -953749760 (0xc726ef00)
4570.    FDIV:  float: -1106374265 (0xbe0e1187)
4571.    FREM:  float: 1117388800 (0x429a0000)
4572.    F2I:   int: 77 (0x4d)
4573.    F2L:   long: 77 (0x4d)
4574.    F2D:   double: 4635118810238550016 (0x4053400000000000)
4575.    FCMP a != b
4576.    FCMP a > b
4577.    FCMP a >= b
4578.    TESTFLOAT called with float: 1325400059 (0x4efffffb)
4579.                      AND float: -922251744 (0xc9078e20)
4580.    FADD:  float: 1325395721 (0x4effef09)
4581.    FSUB:  float: 1325402230 (0x4f000876)
4582.    FMUL:  float: -662204899 (0xd8878e1d)
4583.    FDIV:  float: -982402220 (0xc571bb54)
4584.    FREM:  float: 1220539712 (0x48bff540)
4585.    F2I:   int: 2147483008 (0x7ffffd80)
4586.    F2L:   long: 2147483008 (0x7ffffd80)
4587.    F2D:   double: 4746794004564148224 (0x41dfffff60000000)
4588.    FCMP a != b
4589.    FCMP a > b
4590.    FCMP a >= b
4591.    ------------------- test doubles
4592.    TESTDOUBLE called with double: 4607182418800017408 (0x3ff0000000000000)
4593.                       AND double: 4611780594019562684 (0x40005604189374bc)
4594.    DADD:  double: 4614032393833247932 (0x40085604189374bc)
4595.    DSUB:  double: -4616000466870408840 (0xbff0ac083126e978)
4596.    DMUL:  double: 4611780594019562684 (0x40005604189374bc)
4597.    DDIV:  double: 4602493558463195825 (0x3fdf5781a138eab1)
4598.    DREM:  double: 4607182418800017408 (0x3ff0000000000000)
4599.    D2I:   int: 1 (0x1)
4600.    D2L:   long: 1 (0x1)
4601.    D2F:   float: 1065353216 (0x3f800000)
4602.    DCMP a != b
4603.    DCMP a < b
4604.    DCMP a <= b
4605.    TESTDOUBLE called with double: -4615135775741953704 (0xbff3be76c8b43958)
4606.                       AND double: 4625602141275962737 (0x403170a3d70a3d71)
4607.    DADD:  double: 4625254801154701788 (0x403034bc6a7ef9dc)
4608.    DSUB:  double: -4597422555457552122 (0xc032ac8b43958106)
4609.    DMUL:  double: -4596621207457855952 (0xc035855da2728630)
4610.    DDIV:  double: -4633609045604294190 (0xbfb21d1f78b821d2)
4611.    DREM:  double: -4615135775741953704 (0xbff3be76c8b43958)
4612.    D2I:   int: -1 (0xffffffff)
4613.    D2L:   long: -1 (0xffffffffffffffff)
4614.    D2F:   float: -1080167498 (0xbf9df3b6)
4615.    DCMP a != b
4616.    DCMP a < b
4617.    DCMP a <= b
4618.    TESTDOUBLE called with double: -4550949270986948608 (0xc0d7c7c000000000)
4619.                       AND double: 4672360093705043968 (0x40d78ec000000000)
4620.    DADD:  double: -4581145983454281728 (0xc06c800000000000)
4621.    DSUB:  double: -4546477007440969728 (0xc0e7ab4000000000)
4622.    DMUL:  double: -4485161199314403328 (0xc1c181a712800000)
4623.    DDIV:  double: -4616147052009281450 (0xbff026b6ae052856)
4624.    DREM:  double: -4581145983454281728 (0xc06c800000000000)
4625.    D2I:   int: -24351 (0xffffa0e1)
4626.    D2L:   long: -24351 (0xffffffffffffa0e1)
4627.    D2F:   float: -960610816 (0xc6be3e00)
4628.    DCMP a != b
4629.    DCMP a < b
4630.    DCMP a <= b
4631.    TESTDOUBLE called with double: 4591870180066957722 (0x3fb999999999999a)
4632.                       AND double: 4653181587259654144 (0x40936c0000000000)
4633.    DADD:  double: 4653182027064305254 (0x40936c6666666666)
4634.    DSUB:  double: -4570190889399772774 (0xc0936b999999999a)
4635.    DMUL:  double: 4638447251838153524 (0x405f133333333334)
4636.    DDIV:  double: 4545564625217685086 (0x3f1516f175ae865e)
4637.    DREM:  double: 4591870180066957722 (0x3fb999999999999a)
4638.    D2I:   int: 0 (0x0)
4639.    D2L:   long: 0 (0x0)
4640.    D2F:   float: 1036831949 (0x3dcccccd)
4641.    DCMP a != b
4642.    DCMP a < b
4643.    DCMP a <= b
4644.    TESTDOUBLE called with double: 0 (0x0)
4645.                       AND double: -4575275354862832216 (0xc0815b4e3bcd35a8)
4646.    DADD:  double: -4575275354862832216 (0xc0815b4e3bcd35a8)
4647.    DSUB:  double: 4648096681991943592 (0x40815b4e3bcd35a8)
4648.    DMUL:  double: -9223372036854775808 (0x8000000000000000)
4649.    DDIV:  double: -9223372036854775808 (0x8000000000000000)
4650.    DREM:  double: 0 (0x0)
4651.    D2I:   int: 0 (0x0)
4652.    D2L:   long: 0 (0x0)
4653.    D2F:   float: 0 (0x0)
4654.    DCMP a != b
4655.    DCMP a > b
4656.    DCMP a >= b
4657.    TESTDOUBLE called with double: 4635118810238550016 (0x4053400000000000)
4658.                       AND double: -4575278989408468992 (0xc081580000000000)
4659.    DADD:  double: -4576255355733934080 (0xc07de00000000000)
4660.    DSUB:  double: 4648770346609016832 (0x4083c00000000000)
4661.    DMUL:  double: -4547265769594945536 (0xc0e4dde000000000)
4662.    DDIV:  double: -4629205426707555293 (0xbfc1c230e4c91c23)
4663.    DREM:  double: 4635118810238550016 (0x4053400000000000)
4664.    D2I:   int: 77 (0x4d)
4665.    D2L:   long: 77 (0x4d)
4666.    D2F:   float: 1117388800 (0x429a0000)
4667.    DCMP a != b
4668.    DCMP a > b
4669.    DCMP a >= b
4670.    TESTDOUBLE called with double: 4746794004530593792 (0x41dfffff5e000000)
4671.                       AND double: -4530355401018834944 (0xc120f1c400000000)
4672.    DADD:  double: 4746791675710406656 (0x41dffde125800000)
4673.    DSUB:  double: 4746795170299641856 (0x41e0010ecb400000)
4674.    DMUL:  double: -4390743814009516096 (0xc310f1c3aa380fc0)
4675.    DDIV:  double: -4562648441878701322 (0xc0ae376a82d49af6)
4676.    DREM:  double: 4690497396998668288 (0x4117fe8800000000)
4677.    D2I:   int: 2147483000 (0x7ffffd78)
4678.    D2L:   long: 2147483000 (0x7ffffd78)
4679.    D2F:   float: 1325400059 (0x4efffffb)
4680.    DCMP a != b
4681.    DCMP a > b
4682.    DCMP a >= b
4683.    =================== end of test =========================
4684.    