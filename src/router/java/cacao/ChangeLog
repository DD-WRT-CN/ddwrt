2008-06-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99. (OPT_CFLAGS): Set
	to -O2.
	[ea12d8e7f38d] [tip]

	* NEWS:
	* NEWS: Added latest 0.99 news.
	[3d976222eac4]

	* src/vm/properties.c:
	* src/vm/properties.c (properties_set): Changed java.vm.vendor to
	CACAOVM - Verein zur Foerderung der freien virtuellen Maschine
	CACAO.
	[801e8faac4a0]

	* .hgignore, configure.ac, tests/regression/Makefile.am,
	tests/regression/base/All.java, tests/regression/base/Makefile.am,
	tests/regression/base/TestExceptionInStaticClassInitializer.java,
	tests/regression/base/TestPatcher.java,
	tests/regression/junit/All.java, tests/regression/junit/Makefile.am,
	tests/regression/junit/TestExceptionInStaticClassInitializer.java,
	tests/regression/junit/TestPatcher.java:
	* .hgignore: Removed tests/regression/junit/*.class, added
	tests/regression/base/*.class.
	* configure.ac (AC_CONFIG_FILES): Removed
	tests/regression/junit/Makefile, added
	tests/regression/base/Makefile.
	* tests/regression/Makefile.am (SUBDIRS): Removed junit, added base.
	* tests/regression/junit/All.java, tests/regression/junit/Makefile.am,
	tests/regression/junit/TestExceptionInStaticClassInitializer.java,
	tests/regression/junit/TestPatcher.java: Moved from here...
	* tests/regression/base/All.java, tests/regression/base/Makefile.am,
	tests/regression/base/TestExceptionInStaticClassInitializer.java,
	tests/regression/base/TestPatcher.java: ...to here.
	[c08a0a544e42]

2008-06-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac: Bumped _XOPEN_SOURCE version to 600.
	[fcabb9585a21]

	* src/vm/builtin.c, tests/regression/bugzilla/All.java,
	tests/regression/bugzilla/PR80.java:
	Fixes PR80.
	* src/vm/builtin.c (builtin_arraycopy): Fixed range checks, cast to
	unsigned values.
	* tests/regression/bugzilla/All.java (suite): Added PR80.
	* tests/regression/bugzilla/PR80.java: New file.
	[75bfed30df25]

	* autogen.sh:
	* autogen.sh (CACAO_ACLOCAL): Added aclocal-1.10. (CACAO_AUTOMAKE):
	Added automake-1.10.
	[f1f4b00872fb]

2008-06-12  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc7.
	(AM_INIT_AUTOMAKE): Added tar-ustar for long filename support
	(thanks to Mark Wielaard). (OPT_CFLAGS): Only use -g to be portable.
	[b35960d5977e]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_run): Fixed compiler warning.
	[62e3843fdbfa]

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: Ported to UNIX03
	(__DARWIN_UNIX03).
	[f8847b43a1aa]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_startup_thread)
	[__DARWIN__]: Don't register the thread to Boehm-GC, it's not
	implemented yet.
	[dfff3126e8cb]

	* configure.ac, src/vm/global.h:
	* configure.ac (INTRP_CFLAGS, ARCH_CFLAGS): Use -std=c99 instead of
	-ansi and bumped _POSIX_C_SOURCE to version 200112L.
	(AC_CHECK_HEADERS): Added stdbool.h and stdint.h.
	* src/vm/global.h (boolm true, false): Removed.
	[f2cd982f6ab5]

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_store): Removed inline keyword.
	[6c549a21d7ec]

	* src/toolbox/set.c, src/toolbox/set.h:
	* src/toolbox/set.c (config.h): Added. (vm/global.h): Likewise.
	* src/toolbox/set.h (config.h): Likewise.
	[7b5a9fbd4309]

	* * Merged with tip.
	[e195cdba0d70]

	* configure.ac, m4/dl.m4, m4/ltdl.m4, src/cacao/cacao.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnuclasspath/java_lang_VMRuntime.c,
	src/vmcore/system.h:
	* configure.ac (AC_CHECK_ENABLE_LTDL): Removed.
	(AC_CHECK_ENABLE_DL): Added.
	* m4/ltdl.m4: Removed.
	* m4/dl.m4: New file.

	* src/cacao/cacao.c [ENABLE_LIBJVM] (ltdl.h): Removed.
	(vmcore/system.h): Added. (LIBJVM_NAME): New define. (main): Use
	system_dl* functions.

	* src/native/native.c: Replaced ltdl stuff with sytem_dl* stuff.
	* src/native/native.h (NATIVE_LIBRARY_PREFIX): New define.
	(NATIVE_LIBRARY_SUFFIX): Likewise.

	* src/native/vm/gnuclasspath/java_lang_VMRuntime.c (mapLibraryName):
	Use NATIVE_LIBRARY_* defines.

	* src/vmcore/system.h [HAVE_DLFCN_H] (dlfcn.h): Added.
	(system_dlclose): New function. (system_dlerror): Likewise.
	(system_dlopen): Likewise. (system_dlsym): Likewise.
	[9ce78261b91c]

	* src/native/include/Makefile.am:
	* src/native/include/Makefile.am (VM_ZIP) [ENABLE_ZLIB]: Added if.
	[aba8982958ea]

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: Fixed indent.
	[377f38200eb2]

	* src/native/jni.c, src/threads/posix/thread-posix.c,
	src/threads/posix/thread-posix.h, src/threads/thread.c,
	src/threads/thread.h, src/vm/vm.c:
	Fixes PR77.
	* src/native/jni.c (jni_attach_current_thread): Call
	thread_attach_current_external_thread instead of
	threads_attach_current_thread. (_Jv_JNI_AttachCurrentThread):
	Renamed to jni_AttachCurrentThread. (_Jv_JNI_DetachCurrentThread):
	Renamed to jni_DetachCurrentThread, call
	thread_detach_current_external_thread instead of
	threads_detach_thread. (_Jv_JNI_AttachCurrentThreadAsDaemon):
	Renamed to jni_AttachCurrentThreadAsDaemon.

	* src/threads/posix/thread-posix.c (threads_startup_thread)
	[ENABLE_GC_BOEHM]: Call GC_register_my_thread. Call
	thread_detach_current_thread instead of threads_detach_thread.
	(threads_detach_thread): Removed. (thread_detach_current_thread):
	New function.
	* src/threads/posix/thread-posix.h (threads_detach_thread): Removed.

	* src/threads/thread.c [ENABLE_GC_BOEHM] (mm/boehm-gc/include/gc.h):
	Added. (threads_attach_current_thread): Renamed to
	thread_attach_current_thread.
	(thread_attach_current_external_thread): New function.
	(thread_detach_current_external_thread): Likewise.
	* src/threads/thread.h (threads_attach_current_thread): Removed.
	(thread_attach_current_thread): Added.
	(thread_attach_current_external_thread): Likewise.
	(thread_detach_current_thread): Likewise.
	(thread_detach_current_external_thread): Likewise.

	* src/vm/vm.c (vm_run): Call thread_detach_current_thread instead of
	threads_detach_thread. (vm_destroy): Call
	thread_attach_current_thread instead of
	threads_attach_current_thread.
	[9aa5016cca58]

2008-06-12  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* .hgtags:
	Oops. Corrected cacao-0.97 tag.
	[1bcb1eb6f00b]

	* .hgtags:
	Added tag cacao-0.98 for changeset 430cdebdf7d1
	[93eb8ccd253b]

	* .hgtags:
	Added tag cacao-0.97 for changeset 430cdebdf7d1
	[32222043ce3e]

2008-06-09  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/vm/builtin.c, src/vm/builtin.h, src/vm/jit
	/emit-common.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h, src/vmcore/class.c, src/vmcore/linker.c,
	src/vmcore/linker.h:
	* src/vm/builtin.c: Added fast_subtype_check.
	(builtin_fast_canstore, builtin_fast_canstore_onedim,
	builtin_fast_canstore_onedim_class): Using fast subtype check. Don't
	need to lock linker_classrenumber_lock anymore.
	* src/vm/builtin.h: Added fast_subtype_check.

	* src/vm/jit/emit-common.h: Added more branch labels.

	* src/vm/jit/x86_64/codegen.c (gen_method): New subtype checking
	code.
	* src/vm/jit/x86_64/codegen.h: Added some new mnemonics.
	* src/vm/jit/x86_64/emit.c: New mnemonics. (emit_classcast_check): New
	branch modes.
	* src/vm/jit/x86_64/emit.h: New mnemonics.
	* src/vmcore/class.c (class_isanysubclass): Using fast_subtype_check.

	* src/vmcore/linker.c: Removed linker_classrenumber_lock.
	(build_display): Implemented. (link_class_intern, link_array,
	linker_compute_subclasses): Minor changes.

	* src/vmcore/linker.h: Removed linker_compute_subclasses. Added
	subtype-related fields to _vftbl.

	* src/cacaoh/dummy.c: Added fast_subtype_check (link dependency).
	[f4d2cd262a58]

2008-06-11  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/emit.h,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/emit.h:
	Fixes PR72.
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Return value
	expansion in native stubs (for gcc 4.3).
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Likewise.

	* src/vm/jit/i386/codegen.h: Added more value extension operations.
	* src/vm/jit/i386/emit.c: Likewise.
	* src/vm/jit/i386/emit.h: Likewise.
	* src/vm/jit/x86_64/codegen.h: Likewise.
	* src/vm/jit/x86_64/emit.c: Likewise.
	* src/vm/jit/x86_64/emit.h: Likewise.
	[f4e23a5fb467]

2008-06-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/arm/emit.c:
	Fixes PR63.
	* src/vm/jit/arm/emit.c (emit_verbosecall_enter) [ENABLE_SOFTFLOAT]:
	Save and restore floating point types correctly.
	[cc3688ed7116]

	* src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h:
	* src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h: Fixed comment
	type.
	[d5092d317d71]

	* tests/havoc.class:
	* tests/havoc.class: Removed binary file.
	[0ec52c695779]

2008-06-09  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_GetEnv): Renamed to jni_GetEnv.
	[5e61d64d83a9]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_PushLocalFrame): Renamed to
	jni_PushLocalFrame, added trace output. (_Jv_JNI_PopLocalFrame):
	Renamed to jni_PopLocalFrame. (_Jv_JNI_DeleteLocalRef): Renamed to
	jni_DeleteLocalRef. (_Jv_JNI_NewLocalRef): Renamed to
	jni_NewLocalRef. (_Jv_JNI_EnsureLocalCapacity): Renamed to
	jni_EnsureLocalCapacity.
	[b8487bde49f1]

	* src/threads/thread.c:
	* src/threads/thread.c (threads_preinit): Check if main thread index
	is 1.
	[e747bbe9a38e]

	* src/classes/gnuclasspath/gnu/java/lang/CPStringBuilder.java:
	* src/classes/gnuclasspath/gnu/java/lang/CPStringBuilder.java:
	Updated to current GNU Classpath CVS version.
	[d6187703cf55]

2008-06-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 7d4cc49cbd31.
	[b5d519382b16]

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc6. This reflects
	the update to Boehm-GC 7.1.
	[a7955e22203b]

	* configure.ac, src/mm/boehm-gc/configure.in, src/mm/boehm-
	gc/doc/Makefile.am, src/mm/boehm-gc/gcc_support.c, src/mm/boehm-
	gc/include/Makefile.am, src/mm/boehm-gc/include/gc_alloc.h, src/mm
	/boehm-gc/include/gc_inl.h, src/mm/boehm-
	gc/include/gc_local_alloc.h, src/mm/boehm-
	gc/include/private/solaris_threads.h, src/mm/boehm-gc/ltconfig,
	src/mm/boehm-gc/pc_excludes, src/mm/boehm-
	gc/powerpc_darwin_mach_dep.s, src/mm/boehm-gc/solaris_pthreads.c,
	src/mm/boehm-gc/solaris_threads.c, src/mm/boehm-
	gc/tests/trace_test.c, src/mm/boehm-gc/version.h:
	* Merged with 31f9198caefc.
	[fee37d480fb4]

2008-06-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/mips.h:
	Missed a file again, grrrrrrrrr.

	* src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/mips.h: Patched.
	[31f9198caefc]

	* src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/s390.h:
	S390 patch applied from Thiemo Seufer. This is also already applied
	to bdwgc CVS.

	* src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/s390.h: Patched.
	[b5631b6d091a]

	* src/mm/boehm-gc/include/private/gcconfig.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/Makefile.am, src/mm
	/boehm-gc/mach_dep.c:
	MIPS patches applied from Thiemo Seufer. These are also already
	applied to bdwgc CVS.

	* src/mm/boehm-gc/include/private/gcconfig.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/Makefile.am, src/mm
	/boehm-gc/mach_dep.c: Patched.
	[1386a607d249]

	* src/mm/boehm-gc/Makefile.am:
	* src/mm/boehm-gc/Makefile.am (AM_CPPFLAGS): Use libatomic_ops
	instead of libatomic_ops-1.2, because only the former is linked into
	the build directory. Maybe this should go upstream?
	[8157901df4bf]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c: Added a comment why we include
	Boehm's gc.h.
	[1382eba18ad3]

	* configure.ac, src/mm/boehm-gc/configure.in, src/mm/boehm-
	gc/doc/Makefile.am, src/mm/boehm-gc/gcc_support.c, src/mm/boehm-
	gc/include/Makefile.am, src/mm/boehm-gc/include/gc_alloc.h, src/mm
	/boehm-gc/include/gc_inl.h, src/mm/boehm-
	gc/include/gc_local_alloc.h, src/mm/boehm-
	gc/include/private/solaris_threads.h, src/mm/boehm-gc/ltconfig,
	src/mm/boehm-gc/pc_excludes, src/mm/boehm-
	gc/powerpc_darwin_mach_dep.s, src/mm/boehm-gc/solaris_pthreads.c,
	src/mm/boehm-gc/solaris_threads.c, src/mm/boehm-
	gc/tests/trace_test.c, src/mm/boehm-gc/version.h, src/threads/posix
	/thread-posix.c:
	* Merged gc7-branch to default.
	[71c85ba866cf]

2008-06-08  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.h,
	src/vm/jit/optimizing/bytecode_escape.c,
	src/vm/jit/optimizing/escape.c, src/vm/jit/optimizing/escape.h:
	* src/vm/jit/i386/codegen.c (codegen_emit): Commented out escape
	checks.
	* src/vm/jit/i386/emit.h: Fixed typo.
	* src/vm/jit/optimizing/bytecode_escape.c,
	src/vm/jit/optimizing/escape.c, src/vm/jit/optimizing/escape.h:
	Added copyright header.
	[7d4cc49cbd31]

2008-06-06  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/optimizing/escape.h:
	* src/vm/jit/optimizing/escape.h: Added forgotten file.
	[c8ec78cfd2db]

	* configure.ac, src/vm/global.h, src/vm/jit/asmpart.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/emit.h,
	src/vm/jit/optimizing/escape.c:
	* configure.ac: [ENABLE_SSA] define ENABLE_ESCAPE_CHECK.
	* src/vm/global.h [ENABLE_ESCAPE_CHECK] add additional fields to
	java_object_t for escape analysis verification.
	* src/vm/jit/asmpart.h, src/vm/jit/i386/asmpart.S
	[ENABLE_ESCAPE_CHECK] (asm_escape_check): new symbol.
	* src/vm/jit/i386/codegen.c [ENABLE_ESCAPE_CHECK] (codegen_emit):
	First stetps of annotating all objects with escape information and
	checking that information upon every access to an object.
	* src/vm/jit/i386/emit.c, src/vm/jit/i386/emit.h (emit_escape_check):
	New symbol.
	* src/vm/jit/optimizing/escape.c (escape_analysis_escape_check): New
	symbol.
	[348a7d510d11]

2008-06-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* .hgignore, src/mm/boehm-gc/NT_X64_THREADS_MAKEFILE, src/mm/boehm-
	gc/include/extra/gc.h, src/mm/boehm-gc/include/extra/gc_cpp.h,
	src/mm/boehm-gc/include/gc_version.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/armcc/arm_v6.h, src/mm
	/boehm-gc/tests/huge_test.c, src/mm/boehm-gc/tests/smash_test.c,
	src/mm/boehm-gc/version.h:
	Files missed in the Boehm-GC 7.1 import (sorry).

	* .hgignore: Added src/mm/boehm-gc/.dirstamp.
	* src/mm/boehm-gc/NT_X64_THREADS_MAKEFILE: Added.
	* src/mm/boehm-gc/include/extra/gc.h, src/mm/boehm-
	gc/include/extra/gc_cpp.h, src/mm/boehm-gc/include/gc_version.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/armcc/arm_v6.h, src/mm
	/boehm-gc/tests/huge_test.c, src/mm/boehm-gc/tests/smash_test.c:
	Likewise.
	* src/mm/boehm-gc/version.h: Removed.
	[0340b2f6a236]

	* src/mm/boehm-gc/configure.ac, src/mm/boehm-
	gc/libatomic_ops-1.2/configure.ac:
	* src/mm/boehm-gc/configure.ac: Made autogen.sh warning free.
	* src/mm/boehm-gc/libatomic_ops-1.2/configure.ac: Likewise.
	[7256403a4a32]

	* src/mm/boehm-gc/ChangeLog, src/mm/boehm-gc/Makefile.am, src/mm
	/boehm-gc/Makefile.direct, src/mm/boehm-gc/Makefile.dj, src/mm
	/boehm-gc/NT_X64_STATIC_THREADS_MAKEFILE, src/mm/boehm-
	gc/add_gc_prefix.c, src/mm/boehm-gc/allchblk.c, src/mm/boehm-
	gc/alloc.c, src/mm/boehm-gc/backgraph.c, src/mm/boehm-
	gc/configure.ac, src/mm/boehm-gc/darwin_stop_world.c, src/mm/boehm-
	gc/dbg_mlc.c, src/mm/boehm-gc/doc/README, src/mm/boehm-
	gc/doc/README.macros, src/mm/boehm-gc/doc/README.win32, src/mm
	/boehm-gc/doc/README.win64, src/mm/boehm-gc/doc/gcinterface.html,
	src/mm/boehm-gc/doc/scale.html, src/mm/boehm-gc/dyn_load.c, src/mm
	/boehm-gc/finalize.c, src/mm/boehm-gc/gc_cpp.cc, src/mm/boehm-
	gc/gcname.c, src/mm/boehm-gc/headers.c, src/mm/boehm-
	gc/include/gc.h, src/mm/boehm-gc/include/gc_cpp.h, src/mm/boehm-
	gc/include/gc_inline.h, src/mm/boehm-gc/include/gc_tiny_fl.h, src/mm
	/boehm-gc/include/include.am, src/mm/boehm-
	gc/include/private/gc_locks.h, src/mm/boehm-
	gc/include/private/gc_pmark.h, src/mm/boehm-
	gc/include/private/gc_priv.h, src/mm/boehm-
	gc/include/private/gcconfig.h, src/mm/boehm-
	gc/include/private/thread_local_alloc.h, src/mm/boehm-
	gc/libatomic_ops-1.2/ChangeLog, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/README.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/generalize.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/powerpc.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/x86.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/x86_64.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/msftc/x86.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/msftc/x86_64.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/standard_ao_double_t.h,
	src/mm/boehm-gc/mach_dep.c, src/mm/boehm-gc/malloc.c, src/mm/boehm-
	gc/mark.c, src/mm/boehm-gc/mark_rts.c, src/mm/boehm-gc/misc.c,
	src/mm/boehm-gc/msvc_dbg.c, src/mm/boehm-gc/obj_map.c, src/mm/boehm-
	gc/os_dep.c, src/mm/boehm-gc/pthread_stop_world.c, src/mm/boehm-
	gc/pthread_support.c, src/mm/boehm-gc/reclaim.c, src/mm/boehm-
	gc/tests/test.c, src/mm/boehm-gc/tests/tests.am, src/mm/boehm-
	gc/thread_local_alloc.c, src/mm/boehm-gc/typd_mlc.c, src/mm/boehm-
	gc/win32_threads.c:
	* Imported Boehm-GC 7.1.
	[a09ac5792898]

	* .hgignore:
	* .hgignore: Added src/mm/boehm-gc/atomic_ops.c, src/mm/boehm-
	gc/atomic_ops_sysdeps.S, src/mm/boehm-gc/bdw-gc.pc, src/mm/boehm-
	gc/libatomic_ops, src/mm/boehm-gc/cord/.dirstamp.
	[c0c33aa59df7]

	* configure.ac, src/mm/boehm-gc/Makefile.am, src/mm/boehm-
	gc/cord/cord.am:
	* configure.ac (ac_configure_args): Removed --disable-shared, add
	--disable-static.
	* src/mm/boehm-gc/Makefile.am (lib_LTLIBRARIES): Renamed to
	noinst_LTLIBRARIES.
	* src/mm/boehm-gc/cord/cord.am: Likewise.
	[ded63b659817]

2008-06-01  Peter Molnar  <pm@complang.tuwien.ac.at>

	* configure.ac, src/vm/global.h, src/vm/jit/cfg.c, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/optimizing/Makefile.am,
	src/vm/jit/optimizing/bytecode_escape.c,
	src/vm/jit/optimizing/escape.c, src/vm/jit/optimizing/ssa3.c,
	src/vmcore/method.h:
	* configure.ac: Define ENABLE_ESCAPE if ENABLE_SSA is defined.
	* src/vm/global.h (ACC_METHOD_EA): new symbol.
	* src/vm/jit/cfg.c (cfg_add_root): correctly initialize method member
	of basicblock.
	* src/vm/jit/jit.c (basicblock) [ENABLE_SSA]: new members phis and
	phicount.
	* src/vm/jit/jit.h (jit_compile_intern): Transform exception handlers
	only if -lsra is given.
	* src/vm/jit/optimizing/Makefile.am: Adpated.
	* src/vm/jit/optimizing/bytecode_escape.c: New file. Implementation of
	escape analysis on bytecode.
	* src/vm/jit/optimizing/escape.c: Changed a lot.
	* src/vm/jit/optimizing/ssa3.c: Changed a lot.
	* src/vmcore/method.h (methodinfo) [ENABLE_ESCAPE]: New member
	paramescape.
	[76f979c4a7dc]

2008-05-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* m4/classpath.m4, src/classes/gnu/gnu/classpath/VMStackWalker.java,
	src/classes/gnu/gnu/classpath/VMSystemProperties.java,
	src/classes/gnu/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/VMCPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/classes/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/classes/gnu/java/lang/VMClassLoader.java,
	src/classes/gnu/java/lang/VMString.java,
	src/classes/gnu/java/lang/VMThread.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/lang/reflect/Modifier.java,
	src/classes/gnu/java/lang/reflect/VMConstructor.java,
	src/classes/gnu/java/lang/reflect/VMField.java,
	src/classes/gnu/java/lang/reflect/VMMethod.java,
	src/classes/gnu/java/security/VMAccessController.java,
	src/classes/gnu/sun/misc/Unsafe.java,
	src/classes/gnu/sun/reflect/ConstantPool.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationType.java, src/clas
	ses/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.
	java, src/classes/gnu/sun/reflect/annotation/EnumConstantNotPresentE
	xceptionProxy.java,
	src/classes/gnu/sun/reflect/annotation/ExceptionProxy.java, src/clas
	ses/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/native/vm/gnu/Makefile.am, src/native/vm/gnu/VMjdwp.c,
	src/native/vm/gnu/VMjdwp.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnu/gnu_java_lang_VMCPStringBuilder.c, src/native/vm/g
	nu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnu/java_lang_reflect_VMField.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/openjdk/jvm.c, src/native/vm/sun/Makefile.am,
	src/native/vm/sun/hpi.c, src/native/vm/sun/hpi.h,
	src/native/vm/sun/jvm.c:
	* Merged with tip.
	[b3b00c455d2b]

2008-05-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/m68k/linux/md-os.h, tests/regression/HelloWorld.java,
	tests/regression/codepatching/Makefile.am,
	tests/regression/codepatching/aastoreconstClass.java,
	tests/regression/codepatching/checkcastC.java,
	tests/regression/codepatching/checkcastI.java,
	tests/regression/codepatching/getfieldD.java,
	tests/regression/codepatching/getfieldF.java,
	tests/regression/codepatching/getfieldI.java,
	tests/regression/codepatching/getfieldJ.java,
	tests/regression/codepatching/getfieldL.java,
	tests/regression/codepatching/getstaticD.java,
	tests/regression/codepatching/getstaticF.java,
	tests/regression/codepatching/getstaticI.java,
	tests/regression/codepatching/getstaticJ.java,
	tests/regression/codepatching/getstaticL.java,
	tests/regression/codepatching/instanceofC.java,
	tests/regression/codepatching/instanceofI.java,
	tests/regression/codepatching/invokespecial.java,
	tests/regression/codepatching/invokestatic.java,
	tests/regression/codepatching/multianewarray.java,
	tests/regression/codepatching/newarray.java,
	tests/regression/codepatching/putfieldD.java,
	tests/regression/codepatching/putfieldF.java,
	tests/regression/codepatching/putfieldI.java,
	tests/regression/codepatching/putfieldJ.java,
	tests/regression/codepatching/putfieldL.java,
	tests/regression/codepatching/putfieldconstC.java,
	tests/regression/codepatching/putfieldconstD.java,
	tests/regression/codepatching/putfieldconstF.java,
	tests/regression/codepatching/putfieldconstI.java,
	tests/regression/codepatching/putfieldconstJ.java,
	tests/regression/codepatching/putfieldconstL.java,
	tests/regression/codepatching/putstaticD.java,
	tests/regression/codepatching/putstaticF.java,
	tests/regression/codepatching/putstaticI.java,
	tests/regression/codepatching/putstaticJ.java,
	tests/regression/codepatching/putstaticL.java,
	tests/regression/codepatching/putstaticconstC.java,
	tests/regression/codepatching/putstaticconstD.java,
	tests/regression/codepatching/putstaticconstF.java,
	tests/regression/codepatching/putstaticconstI.java,
	tests/regression/codepatching/putstaticconstJ.java,
	tests/regression/codepatching/putstaticconstL.java,
	tests/regression/codepatching/test.java,
	tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j:
	* Merged with tip.
	[b0f1bca06030]

2008-04-26  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetEnclosingMethodInfo): Use
	class_get_enclosingmethod_raw instead of class_get_enclosingmethod.
	[14d10bd7f425]

2008-05-15  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/classes/gnuclasspath/java/lang/.VMClassLoader.java.swp:
	* src/classes/gnuclasspath/java/lang/.VMClassLoader.java.swp:
	Removed. How did this get in?
	[7c99307ac907]

2008-05-14  Peter Molnar  <pm@complang.tuwien.ac.at>

	* m4/classpath.m4, src/classes/gnu/gnu/classpath/VMStackWalker.java,
	src/classes/gnu/gnu/classpath/VMSystemProperties.java,
	src/classes/gnu/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/VMCPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/classes/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/classes/gnu/java/lang/VMClassLoader.java,
	src/classes/gnu/java/lang/VMString.java,
	src/classes/gnu/java/lang/VMThread.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/lang/reflect/Modifier.java,
	src/classes/gnu/java/lang/reflect/VMConstructor.java,
	src/classes/gnu/java/lang/reflect/VMField.java,
	src/classes/gnu/java/lang/reflect/VMMethod.java,
	src/classes/gnu/java/security/VMAccessController.java,
	src/classes/gnu/sun/misc/Unsafe.java,
	src/classes/gnu/sun/reflect/ConstantPool.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationType.java, src/clas
	ses/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.
	java, src/classes/gnu/sun/reflect/annotation/EnumConstantNotPresentE
	xceptionProxy.java,
	src/classes/gnu/sun/reflect/annotation/ExceptionProxy.java, src/clas
	ses/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/classes/gnuclasspath/java/lang/.VMClassLoader.java.swp,
	src/native/vm/gnu/Makefile.am, src/native/vm/gnu/VMjdwp.c,
	src/native/vm/gnu/VMjdwp.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnu/gnu_java_lang_VMCPStringBuilder.c, src/native/vm/g
	nu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnu/java_lang_reflect_VMField.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/sun/Makefile.am, src/native/vm/sun/hpi.c,
	src/native/vm/sun/hpi.h, src/native/vm/sun/jvm.c, src/vm/jit/jit.c:
	Merging 8179.
	[e1df59a7c5b8]

	* src/vm/jit/cfg.c, src/vm/jit/optimizing/ssa3.c:
	* src/vm/jit/cfg.c: Changed all occurences of class to clazz.
	* src/vm/jit/optimizing/ssa3.c: Removed accidentally forgotten diff
	marker resulting from previous merge.
	[3497103d748b]

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/cfg.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/icmdtable.inc,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa3.c, src/vm/jit/show.c:
	* src/vm/jit/allocator/simplereg.c (simplereg_allocate_temporaries):
	Support for ICMD_GETEXCEPTION.
	* src/vm/jit/cfg.c (cfg_eliminate_edges_to_unreachable,
	cfg_calculate_reachability, cfg_remove_predecessors,
	cfg_eliminate_edges_to_unreachable): new functions.
	* src/vm/jit/i386/codegen.c [ENABLE_SSA] (codegen_emit): Don't copy
	itmp1 into invar 1 in exh blocks.
	* src/vm/jit/icmdtable.inc (ICMD_GETEXCEPTION, ICMD_PHI): new opcodes.
	* src/vm/jit/jit.c (jit_compile_intern) [ENABLE_SSA]: Normalizing
	exception handlers before SSA transformation.
	* src/vm/jit/jit.h (var_is_inout): Correctly handling TYPE_RET
	variables.
	* src/vm/jit/optimizing/ssa.c: adapted.
	* src/vm/jit/optimizing/ssa3.c: Changed a lot.
	* src/vm/jit/show.c (show_icmd): Support for ICMD_GETEXCEPTION.
	[3224e4058498]

2008-05-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/classes/Makefile.am,
	src/classes/gnu/gnu/classpath/VMStackWalker.java,
	src/classes/gnu/gnu/classpath/VMSystemProperties.java,
	src/classes/gnu/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/VMCPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/classes/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/classes/gnu/java/lang/VMClassLoader.java,
	src/classes/gnu/java/lang/VMString.java,
	src/classes/gnu/java/lang/VMThread.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/lang/reflect/Modifier.java,
	src/classes/gnu/java/lang/reflect/VMConstructor.java,
	src/classes/gnu/java/lang/reflect/VMField.java,
	src/classes/gnu/java/lang/reflect/VMMethod.java,
	src/classes/gnu/java/security/VMAccessController.java,
	src/classes/gnu/sun/misc/Unsafe.java,
	src/classes/gnu/sun/reflect/ConstantPool.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationType.java, src/clas
	ses/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.
	java, src/classes/gnu/sun/reflect/annotation/EnumConstantNotPresentE
	xceptionProxy.java,
	src/classes/gnu/sun/reflect/annotation/ExceptionProxy.java, src/clas
	ses/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/classes/gnuclasspath/gnu/classpath/VMStackWalker.java,
	src/classes/gnuclasspath/gnu/classpath/VMSystemProperties.java,
	src/classes/gnuclasspath/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnuclasspath/gnu/java/lang/VMCPStringBuilder.java, src/c
	lasses/gnuclasspath/gnu/java/lang/management/VMMemoryMXBeanImpl.java
	, src/classes/gnuclasspath/gnu/java/lang/management/VMRuntimeMXBeanI
	mpl.java, src/classes/gnuclasspath/java/lang/VMClassLoader.java,
	src/classes/gnuclasspath/java/lang/VMString.java,
	src/classes/gnuclasspath/java/lang/VMThread.java,
	src/classes/gnuclasspath/java/lang/reflect/Constructor.java,
	src/classes/gnuclasspath/java/lang/reflect/Field.java,
	src/classes/gnuclasspath/java/lang/reflect/Method.java,
	src/classes/gnuclasspath/java/lang/reflect/Modifier.java,
	src/classes/gnuclasspath/java/lang/reflect/VMConstructor.java,
	src/classes/gnuclasspath/java/lang/reflect/VMField.java,
	src/classes/gnuclasspath/java/lang/reflect/VMMethod.java,
	src/classes/gnuclasspath/java/security/VMAccessController.java,
	src/classes/gnuclasspath/sun/misc/Unsafe.java,
	src/classes/gnuclasspath/sun/reflect/ConstantPool.java, src/classes/
	gnuclasspath/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnuclasspath/sun/reflect/annotation/AnnotationType.java,
	src/classes/gnuclasspath/sun/reflect/annotation/AnnotationTypeMismat
	chExceptionProxy.java, src/classes/gnuclasspath/sun/reflect/annotati
	on/EnumConstantNotPresentExceptionProxy.java,
	src/classes/gnuclasspath/sun/reflect/annotation/ExceptionProxy.java,
	src/classes/gnuclasspath/sun/reflect/annotation/TypeNotPresentExcept
	ionProxy.java:
	* src/classes/gnu: Renamed to src/classes/gnuclasspath.
	[caa690b0970d]

	* src/classes/Makefile.am:
	* src/classes/Makefile.am (BOOTCLASSPATH): Removed, this is set
	during configure.
	[b46e2a411a24]

	* configure.ac, src/native/vm/Makefile.am,
	src/native/vm/gnu/Makefile.am, src/native/vm/gnu/VMjdwp.c,
	src/native/vm/gnu/VMjdwp.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnu/gnu_java_lang_VMCPStringBuilder.c, src/native/vm/g
	nu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnu/java_lang_reflect_VMField.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/gnuclasspath/Makefile.am,
	src/native/vm/gnuclasspath/VMjdwp.c,
	src/native/vm/gnuclasspath/VMjdwp.h,
	src/native/vm/gnuclasspath/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnuclasspath/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnuclasspath/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnuclasspath/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnuclasspath/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnuclasspath/gnu_java_lang_VMCPStringBuilder.c, src/na
	tive/vm/gnuclasspath/gnu_java_lang_management_VMClassLoadingMXBeanIm
	pl.c, src/native/vm/gnuclasspath/gnu_java_lang_management_VMMemoryMX
	BeanImpl.c, src/native/vm/gnuclasspath/gnu_java_lang_management_VMRu
	ntimeMXBeanImpl.c, src/native/vm/gnuclasspath/gnu_java_lang_manageme
	nt_VMThreadMXBeanImpl.c,
	src/native/vm/gnuclasspath/java_lang_VMClass.c,
	src/native/vm/gnuclasspath/java_lang_VMClassLoader.c,
	src/native/vm/gnuclasspath/java_lang_VMObject.c,
	src/native/vm/gnuclasspath/java_lang_VMRuntime.c,
	src/native/vm/gnuclasspath/java_lang_VMString.c,
	src/native/vm/gnuclasspath/java_lang_VMSystem.c,
	src/native/vm/gnuclasspath/java_lang_VMThread.c,
	src/native/vm/gnuclasspath/java_lang_VMThrowable.c, src/native/vm/gn
	uclasspath/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnuclasspath/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnuclasspath/java_lang_reflect_VMField.c,
	src/native/vm/gnuclasspath/java_lang_reflect_VMMethod.c,
	src/native/vm/gnuclasspath/java_lang_reflect_VMProxy.c,
	src/native/vm/gnuclasspath/java_security_VMAccessController.c,
	src/native/vm/gnuclasspath/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/gnuclasspath/sun_reflect_ConstantPool.c,
	src/native/vm/nativevm.c, src/native/vm/openjdk/Makefile.am,
	src/native/vm/openjdk/hpi.c, src/native/vm/openjdk/hpi.h,
	src/native/vm/openjdk/jvm.c, src/native/vm/sun/Makefile.am,
	src/native/vm/sun/hpi.c, src/native/vm/sun/hpi.h,
	src/native/vm/sun/jvm.c:
	* src/native/vm/gnu: Renamed to src/native/vm/gnuclasspath.
	* src/native/vm/sun: Renamed to src/native/vm/openjdk.
	[1c0d84d8f0dc]

	* m4/classpath.m4, m4/java-runtime-library.m4:
	* m4/classpath.m4: Moved from here...
	* m4/java-runtime-library.m4: ...to here.
	[0c5b61d3cdea]

	* contrib/setenvinstalled.in, contrib/setenvsource.in:
	* contrib/setenvinstalled.in: Missed in renaming.
	* contrib/setenvsource.in: Likewise.
	[69c19a930578]

	* configure.ac, contrib/setenvinstalled.in, contrib/setenvsource.in,
	m4/classpath.m4, m4/hpi.m4, src/cacao/Makefile.am,
	src/cacaoh/cacaoh.c, src/classes/Makefile.am,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/native.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/reflect.c, src/native/vm/reflect.h,
	src/native/vm/sun_misc_Unsafe.c, src/threads/posix/thread-posix.c,
	src/threads/thread.c, src/vm/access.c, src/vm/assertion.c,
	src/vm/initialize.c, src/vm/jit/codegen-common.c, src/vm/jit/jit.c,
	src/vm/jit/stacktrace.c, src/vm/properties.c, src/vm/signal.c,
	src/vm/vm.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	* m4/classpath.m4: Renamed --with-classpath* options to
	--with-java-runtime-library* and the defines respectively.

	* configure.ac, contrib/setenvinstalled.in, contrib/setenvsource.in,
	m4/hpi.m4, src/cacao/Makefile.am, src/cacaoh/cacaoh.c,
	src/classes/Makefile.am, src/native/include/Makefile.am,
	src/native/jni.c, src/native/native.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/reflect.c, src/native/vm/reflect.h,
	src/native/vm/sun_misc_Unsafe.c, src/threads/posix/thread-posix.c,
	src/threads/thread.c, src/vm/access.c, src/vm/assertion.c,
	src/vm/initialize.c, src/vm/jit/codegen-common.c, src/vm/jit/jit.c,
	src/vm/jit/stacktrace.c, src/vm/properties.c, src/vm/signal.c,
	src/vm/vm.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/utf8.c,
	src/vmcore/utf8.h: Likewise.
	[ec4ce9fdb0b0]

2008-05-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (mainstring): Removed. (mainclass): Made static.
	(vm_create): Moved main-class argument handling from here...
	(vm_run): ...to here. (vm_compile_method): Pass class name to the
	function.
	* src/vm/vm.h (mainstring): Removed. (mainclass): Likewise.
	[0dc5ef768134]

	* src/threads/none/thread-none.h:
	* src/threads/none/thread-none.h (THREADINFO): Removed.
	[a68de3a1d5c6]

	* src/threads/none/thread-none.h, src/threads/posix/thread-posix.h:
	* src/threads/none/thread-none.h (THREADSPECIFIC): Removed because
	it's not used anymore.
	* src/threads/posix/thread-posix.h: Likewise.
	[5925f8258a23]

2008-05-11  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/x86_64/asmpart.S (asm_get_cycle_count): Repaired
	--enable-cycles-stats.
	[a63c117e1ebd]

	* src/mm/boehm-gc/pthread_stop_world.c, src/threads/posix/thread-
	posix.c:
	Merged cleanup -> gc7-branch
	[d12524409a9c]

	* configure.ac, src/lib/Makefile.am,
	src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/lib/gnu/gnu/classpath/VMStackWalker.java,
	src/lib/gnu/gnu/classpath/VMSystemProperties.java,
	src/lib/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/lib/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/lib/gnu/java/lang/VMString.java,
	src/lib/gnu/java/lang/VMThread.java,
	src/lib/gnu/java/lang/VMThrowable.java,
	src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/java/security/VMAccessController.java,
	src/lib/gnu/sun/misc/Unsafe.java,
	src/lib/gnu/sun/reflect/ConstantPool.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java, src/lib/gnu/
	sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java, sr
	c/lib/gnu/sun/reflect/annotation/EnumConstantNotPresentExceptionProx
	y.java, src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java, src/
	lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h,
	src/threads/native/Makefile.am, src/threads/native/generic-
	primitives.h, src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/threads.h, src/threads/posix/thread-posix.c,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/jit/m68k/linux/md-os.h, tests/A2.java, tests/AA.java,
	tests/AA1.java, tests/AA2.java, tests/BB.java, tests/C.java,
	tests/C2.java, tests/C3.java, tests/CC.java, tests/D.java,
	tests/DD.java, tests/EE.java, tests/GG.java, tests/HI2.java,
	tests/II.java, tests/IIAA.java, tests/IIBB.java, tests/IICC.java,
	tests/IIexample.java, tests/n.java,
	tests/regression/HelloWorld.java,
	tests/regression/clinitexception.2output,
	tests/regression/clinitexception.java,
	tests/regression/codepatching/Makefile.am,
	tests/regression/codepatching/aastoreconstClass.java,
	tests/regression/codepatching/checkcastC.java,
	tests/regression/codepatching/checkcastI.java,
	tests/regression/codepatching/getfieldD.java,
	tests/regression/codepatching/getfieldF.java,
	tests/regression/codepatching/getfieldI.java,
	tests/regression/codepatching/getfieldJ.java,
	tests/regression/codepatching/getfieldL.java,
	tests/regression/codepatching/getstaticD.java,
	tests/regression/codepatching/getstaticF.java,
	tests/regression/codepatching/getstaticI.java,
	tests/regression/codepatching/getstaticJ.java,
	tests/regression/codepatching/getstaticL.java,
	tests/regression/codepatching/instanceofC.java,
	tests/regression/codepatching/instanceofI.java,
	tests/regression/codepatching/invokespecial.java,
	tests/regression/codepatching/invokestatic.java,
	tests/regression/codepatching/multianewarray.java,
	tests/regression/codepatching/newarray.java,
	tests/regression/codepatching/putfieldD.java,
	tests/regression/codepatching/putfieldF.java,
	tests/regression/codepatching/putfieldI.java,
	tests/regression/codepatching/putfieldJ.java,
	tests/regression/codepatching/putfieldL.java,
	tests/regression/codepatching/putfieldconstC.java,
	tests/regression/codepatching/putfieldconstD.java,
	tests/regression/codepatching/putfieldconstF.java,
	tests/regression/codepatching/putfieldconstI.java,
	tests/regression/codepatching/putfieldconstJ.java,
	tests/regression/codepatching/putfieldconstL.java,
	tests/regression/codepatching/putstaticD.java,
	tests/regression/codepatching/putstaticF.java,
	tests/regression/codepatching/putstaticI.java,
	tests/regression/codepatching/putstaticJ.java,
	tests/regression/codepatching/putstaticL.java,
	tests/regression/codepatching/putstaticconstC.java,
	tests/regression/codepatching/putstaticconstD.java,
	tests/regression/codepatching/putstaticconstF.java,
	tests/regression/codepatching/putstaticconstI.java,
	tests/regression/codepatching/putstaticconstJ.java,
	tests/regression/codepatching/putstaticconstL.java,
	tests/regression/codepatching/test.java,
	tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j,
	tests/scribble.java:
	Clean merge -> gc7-branch
	[98fcc574613e]

	* src/mm/boehm-gc/pthread_stop_world.c, src/threads/posix/thread-
	posix.c, src/threads/posix/thread-posix.h:
	* src/mm/boehm-gc/pthread_stop_world.c: Cleaned up some old Boehm-
	based stop-the-world code.
	* src/threads/posix/thread-posix.c: Likewise.
	* src/threads/posix/thread-posix.h: Likewise.
	[f1539535de4a]

2008-05-10  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): For ICMD_LALOAD,
	ICMD_LASTORE, ICMD_DALOAD, fixed offset of first array element. This
	fixes the failing dacapo antlr benchmark.
	[6d6dc5996014]

2008-05-09  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/posix/lock.c:
	* src/threads/posix/lock.c: Replaced UTF-8 characters with ASCII.
	[d3272044b8ba]

2008-05-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc5.
	[487fdcb54770]

	* src/vm/jit/s390/md.c:
	* src/vm/jit/s390/md.c (md_executionstate_read): New function (stub
	only). (md_executionstate_write): Likewise.
	[1f78ff4da6c6]

2008-05-07  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* m4/cacaoh.m4, src/Makefile.am:
	* m4/cacaoh.m4 (AC_CHECK_WITH_CACAOH): Don't set ENABLE_CACAOH.
	* src/Makefile.am [ENABLE_CACAOH] (CACAOH_DIR): Removed. (SUBDIRS):
	Always build cacaoh because it's required e.g. when running make
	check on the target.
	[94ddb4bbdab5]

2008-05-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc4.
	[7eb41343fb41]

	* src/vmcore/system.h:
	* src/vmcore/system.h (system_scandir) [__IRIX__]: On IRIX the
	signature is a bit different. This prevents a lot of compiler
	warnings.
	[07aeecc03c14]

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (md_executionstate_read): New
	function. (md_executionstate_write): Likewise.
	[a0a153d01b3b]

	* src/vm/jit/mips/asmpart.S, src/vm/jit/mips/md-asm.h:
	* src/vm/jit/mips/asmpart.S: Replaced ldc1/sdc1 with l.d/s.d macros.
	* src/vm/jit/mips/md-asm.h: Likewise.
	[683df1b2eac0]

	* src/vm/jit/alpha/md-asm.h:
	* src/vm/jit/alpha/md-asm.h (SAVE_RETURN_REGISTERS): Removed, it's
	not used anymore. (RESTORE_RETURN_REGISTERS): Likewise.
	[e4ed14b8cf28]

	* src/mm/boehm.c, src/mm/gc-common.h:
	* src/mm/boehm.c: Use stdint-types.
	* src/mm/gc-common.h: Likewise.
	[ddc2fa158b02]

	* tests/regression/jasmin/Makefile.am:
	* tests/regression/jasmin/Makefile.am (build): Added cup.jar to
	classpath.
	[da35822eaaf4]

	* tests/regression/bugzilla/PR65.java:
	* tests/regression/bugzilla/PR65.java (test): Fixed compiler
	warning.
	[7f91d6142bfa]

2008-05-05  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/stacktrace.c:
	Merged with tip.
	[630215c2fbf8]

	* src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/stacktrace.c:
	* src/vm/jit/i386/darwin/md-asm.h: Repaired --enable-cycles-stats.
	* src/vm/jit/stacktrace.c: Likewise.
	[36b6519d4b72]

2008-05-03  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/threads/critical.h, src/vm/jit/i386/cygwin
	/md-asm.h, src/vm/jit/i386/darwin/md-asm.h,
	src/vm/jit/intrp/asmpart.c:
	* src/cacaoh/dummy.c: Removed asm_criticalsections and
	asm_getclassvalues_atomic. They have not been used anywhere in a
	long time.
	* src/threads/critical.h: Likewise.
	* src/vm/jit/i386/cygwin/md-asm.h: Likewise.
	* src/vm/jit/i386/darwin/md-asm.h: Likewise.
	* src/vm/jit/intrp/asmpart.c: Likewise.
	[dc465902bf87]

	* tests/regression/bugzilla/All.java,
	tests/regression/bugzilla/PR65.java:
	* tests/regression/bugzilla/All.java: Added test case for PR65.
	[c1ec27d0f8f0]

2008-05-02  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_descriptorscompatible): Experimental fix
	for bugzilla bug #65.
	[4436cc114a77]

2008-04-30  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* tests/threads/threadInterrupt.java,
	tests/threads/waitAndInterrupt.java:
	* tests/threads/threadInterrupt.java: Added brief comment explaining
	the purpose of this test.
	* tests/threads/waitAndInterrupt.java: Likewise.
	[9ca0035d4d04]

	* tests/weakref.java:
	* tests/weakref.java: New test for weak references.
	[6647d194cff1]

	* src/vm/jit/i386/machine-instr.h, src/vmcore/linker.c,
	tests/threads/threadInterrupt.java,
	tests/threads/waitAndInterrupt.java:
	Backed out changeset ecf451e74e7e
	[d0882f1633d5]

	* src/vm/jit/i386/machine-instr.h, src/vmcore/linker.c,
	tests/threads/threadInterrupt.java,
	tests/threads/waitAndInterrupt.java:
	* tests/threads/threadInterrupt.java: Added brief comment explaining
	the purpose of this test.
	* tests/threads/waitAndInterrupt.java: Likewise.
	[ecf451e74e7e]

2008-04-29  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* tests/regression/jasmin/Makefile.am,
	tests/regression/jasmin/runtest,
	tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j,
	tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j-no,
	tests/regression/jasmin/test_verify_fail_jsr_recursion.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion.j-no,
	tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j,
	tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j-
	no:
	* tests/regression/jasmin/Makefile.am (JAVA): Prefix
	LD_LIBRARY_PATH. (JASMIN_TESTS): Removed. (EXTRA_DIST): Removed
	JASMIN_TESTS, added $(srcdir)/*.j. (build): Target added. (run):
	Likewise.
	* tests/regression/jasmin/runtest: Removed compilation of the tests.

	* tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j:
	Moved from here...
	* tests/regression/jasmin/test_verify_fail_jsr_multiple_returns.j-no:
	... to here.

	* tests/regression/jasmin/test_verify_fail_jsr_recursion.j:
	Likewise.
	* tests/regression/jasmin/test_verify_fail_jsr_recursion.j-no:
	Likewise.

	*
	tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j:
	Likewise.
	* tests/regression/jasmin/test_verify_fail_jsr_recursion_terminates.j-
	no: Likewise.
	[845282affca0]

	* tests/regression/HelloWorld.java, tests/regression/Makefile.am:
	* tests/regression/Makefile.am (JAVACCMD): Added -source 1.5 -target
	1.5 -nowarn. (SOURCE_FILES): Removed HelloWorld.java.
	(SIMPLE_JAVA_TESTS): Removed. (run): Target added.
	* tests/regression/HelloWorld.java: Removed.
	[e91af259734b]

	* tests/regression/assertion/Makefile.am:
	* tests/regression/assertion/Makefile.am (JAVACCMD): Added -source
	1.5
	-target 1.5. (run): Target added.
	[4c49e26a4bd4]

	* tests/regression/bugzilla/Makefile.am:
	* tests/regression/bugzilla/Makefile.am (run): Target added.
	[d4377a3eef9c]

	* tests/regression/junit/Makefile.am:
	* tests/regression/junit/Makefile.am (JAVACCMD): Added -source 1.5
	-target 1.5 -nowarn (TODO: move this into a variable). (run): Target
	added.
	[46571e5bbf57]

2008-04-28  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc3.
	[c197b02ff123]

	* .hgignore:
	* .hgignore: Added m4/libtool.m4, m4/ltoptions.m4, m4/ltsugar.m4,
	m4/ltversion.m4, m4/lt~obsolete.m4.
	[ebbb6e7a1914]

	* configure.ac, m4/jre-layout.m4, src/cacao/cacao.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/vm/properties.c, src/vm/vm.c, src/vmcore/system.h:
	* m4/jre-layout.m4 (AC_CHECK_WITH_JRE_LAYOUT): Renamed to
	AC_CHECK_ENABLE_JRE_LAYOUT.
	* configure.ac: Likewise.

	* src/cacao/cacao.c: Renamed WITH_JRE_LAYOUT to ENABLE_JRE_LAYOUT.
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c: Likewise.
	* src/vm/properties.c: Likewise.
	* src/vm/vm.c: Likewise.
	* src/vmcore/system.h: Likewise.
	[59ee69e0f277]

	* .hgignore, configure.ac, doc/Makefile.am, doc/doxygen/Doxyfile,
	doc/doxygen/Makefile.am:
	* .hgignore: Added doc/doxygen/html, doc/doxygen/latex.
	* configure.ac (AC_CONFIG_FILES): Added doc/doxygen/Makefile.
	* doc/Makefile.am (SUBDIRS): Added doxygen.
	* doc/doxygen/Doxyfile: New file.
	* doc/doxygen/Makefile.am: Likewise.
	[809dfcaf02f9]

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c (md_executionstate_read): New
	function (but not implemted yet). (md_executionstate_write):
	Likewise.
	[0ad564b6fc63]

	* src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/linux/md-os.h,
	src/vm/jit/mips/linux/md-os.c, src/vm/vm.c:
	* Merged in new trap code (twisti-branch).
	[8a2df154e6e2]

	* src/vm/jit/sparc64/Makefile.am, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md-trap.h, src/vm/jit/sparc64/solaris/md-os.c:
	* src/vm/jit/sparc64/Makefile.am (libarch_la_SOURCES): Added md-
	trap.h.
	* src/vm/jit/sparc64/codegen.c: Use new trap stuff.
	* src/vm/jit/sparc64/emit.c: Likewise.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	* src/vm/jit/sparc64/md-trap.h: New file.
	* src/vm/jit/sparc64/solaris/md-os.c: Use new trap stuff.
	[55d40b03e4f4]

	* src/vm/jit/powerpc64/md.c:
	* src/vm/jit/powerpc64/md.c (md_patch_replacement_point): Use new
	trap stuff.
	[6b82b87fc058]

	* src/vm/jit/m68k/linux/Makefile.am, src/vm/jit/m68k/linux/md-os.h:
	* src/vm/jit/m68k/linux/md-os.h: Removed.
	* src/vm/jit/m68k/linux/Makefile.am (libmd_la_SOURCES): Removed md-
	os.h.
	[64717fad182b]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_handler): Fixed compiler
	warnings.
	[6e1285e13d18]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_handler)
	[ENABLE_DISASSEMBLER]: Use disassembler to print machine code.
	[f7850a0245ba]

	* src/vm/jit/m68k/Makefile.am, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/md-trap.h:
	* src/vm/jit/m68k/Makefile.am (libarch_la_SOURCES): Added md-trap.h.
	* src/vm/jit/m68k/codegen.c: Use new trap stuff.
	* src/vm/jit/m68k/emit.c: Likewise.
	* src/vm/jit/m68k/linux/md-os.c: Likewise.
	* src/vm/jit/m68k/md-trap.h: New file.
	[de0973a17a25]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	[__I386__]: Enable tracing native methods.
	(codegen_finish_native_call): Likewise.
	[784b956d8ecd]

	* * Merged with tip.
	[22e6633864b8]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call): Added
	__M68K__ to trace native methods. (codegen_finish_native_call):
	Likewise.
	[ee12606c51c1]

	* src/vm/jit/m68k/codegen.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit_stub_native): Removed old,
	deprecated stuff (patcher and call trace).
	[17c9c2559e52]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (trace_java_call_enter): Don't trace builtins,
	it does not work (because of the ABI). (trace_java_call_exit):
	Likewise.
	[928814cce084]

	* src/vmcore/method.h:
	* src/vmcore/method.h (method_is_builtin): New function.
	[137038362c4b]

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Added
	patch from http://bugs.debian.org/cgi-
	bin/bugreport.cgi?bug=441122#35.
	[4b1912970eac]

	* src/vm/jit/powerpc/Makefile.am, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/md-trap.h:
	* src/vm/jit/powerpc/Makefile.am (libarch_la_SOURCES): Added md-
	trap.h.
	* src/vm/jit/powerpc/codegen.c: Use new trap stuff.
	* src/vm/jit/powerpc/emit.c: Likewise.
	* src/vm/jit/powerpc/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc/md-trap.h: New file.
	[f2da4ab3dcba]

	* src/vm/jit/s390/Makefile.am, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-trap.h,
	src/vm/jit/s390/md.c:
	* src/vm/jit/s390/Makefile.am (libarch_la_SOURCES): Added md-trap.h.
	* src/vm/jit/s390/codegen.c: Use new trap stuff.
	* src/vm/jit/s390/emit.c: Likewise.
	* src/vm/jit/s390/md-trap.h: New file.
	* src/vm/jit/s390/md.c: Use new trap stuff.
	[e7b71db899d5]

	* src/vm/jit/mips/Makefile.am, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-trap.h:
	* src/vm/jit/mips/Makefile.am (libarch_la_SOURCES): Added md-trap.h.
	* src/vm/jit/mips/codegen.c: Use new trap stuff.
	* src/vm/jit/mips/emit.c: Likewise.
	* src/vm/jit/mips/linux/md-os.c: Likewise.
	* src/vm/jit/mips/md-trap.h: New file.
	[64f0215ce5fe]

	* src/vm/jit/arm/Makefile.am, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/arm/md-trap.h:
	* src/vm/jit/arm/Makefile.am (libarch_la_SOURCES): Added md-trap.h.
	* src/vm/jit/arm/emit.c: Use new trap stuff.
	* src/vm/jit/arm/linux/md-os.c: Likewise.
	* src/vm/jit/arm/md-trap.h: New file.
	[f7e39c89f923]

	* src/vm/jit/powerpc64/Makefile.am, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md-trap.h:
	* src/vm/jit/powerpc64/Makefile.am (libarch_la_SOURCES): Added md-
	trap.h.
	* src/vm/jit/powerpc64/codegen.c: Use new trap stuff.
	* src/vm/jit/powerpc64/emit.c: Likewise.
	* src/vm/jit/powerpc64/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc64/md-trap.h: New file.
	[a9eafa03d678]

	* src/vm/jit/alpha/Makefile.am, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md-trap.h, src/vm/jit/alpha/md.c:
	* src/vm/jit/alpha/Makefile.am (libarch_la_SOURCES): Added md-
	trap.h.
	* src/vm/jit/alpha/codegen.c: Use new trap stuff.
	* src/vm/jit/alpha/emit.c: Likewise.
	* src/vm/jit/alpha/linux/md-os.c: Likewise.
	* src/vm/jit/alpha/md-trap.h: New file.
	* src/vm/jit/alpha/md.c: Use new trap stuff.
	[f97606f11648]

2008-04-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_INIT): Bumped version to 0.99rc2.
	[e0c01948bb61]

	* * Merged with ea434f5851f4.
	[72249b4c9b1d]

	* .hgignore, configure.ac, tests/regression/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/codepatching/aastoreconstClass.java,
	tests/regression/codepatching/checkcastC.java,
	tests/regression/codepatching/checkcastI.java,
	tests/regression/codepatching/getfieldD.java,
	tests/regression/codepatching/getfieldF.java,
	tests/regression/codepatching/getfieldI.java,
	tests/regression/codepatching/getfieldJ.java,
	tests/regression/codepatching/getfieldL.java,
	tests/regression/codepatching/getstaticD.java,
	tests/regression/codepatching/getstaticF.java,
	tests/regression/codepatching/getstaticI.java,
	tests/regression/codepatching/getstaticJ.java,
	tests/regression/codepatching/getstaticL.java,
	tests/regression/codepatching/instanceofC.java,
	tests/regression/codepatching/instanceofI.java,
	tests/regression/codepatching/invokespecial.java,
	tests/regression/codepatching/invokestatic.java,
	tests/regression/codepatching/multianewarray.java,
	tests/regression/codepatching/newarray.java,
	tests/regression/codepatching/putfieldD.java,
	tests/regression/codepatching/putfieldF.java,
	tests/regression/codepatching/putfieldI.java,
	tests/regression/codepatching/putfieldJ.java,
	tests/regression/codepatching/putfieldL.java,
	tests/regression/codepatching/putfieldconstC.java,
	tests/regression/codepatching/putfieldconstD.java,
	tests/regression/codepatching/putfieldconstF.java,
	tests/regression/codepatching/putfieldconstI.java,
	tests/regression/codepatching/putfieldconstJ.java,
	tests/regression/codepatching/putfieldconstL.java,
	tests/regression/codepatching/putstaticD.java,
	tests/regression/codepatching/putstaticF.java,
	tests/regression/codepatching/putstaticI.java,
	tests/regression/codepatching/putstaticJ.java,
	tests/regression/codepatching/putstaticL.java,
	tests/regression/codepatching/putstaticconstC.java,
	tests/regression/codepatching/putstaticconstD.java,
	tests/regression/codepatching/putstaticconstF.java,
	tests/regression/codepatching/putstaticconstI.java,
	tests/regression/codepatching/putstaticconstJ.java,
	tests/regression/codepatching/putstaticconstL.java,
	tests/regression/codepatching/test.java,
	tests/regression/junit/All.java, tests/regression/junit/Makefile.am,
	tests/regression/junit/TestPatcher.java:
	* .hgignore: Removed tests/regression/codepatching/*.class.
	* configure.ac (AC_CONFIG_FILES): Removed
	tests/regression/codepatching/Makefile.
	* tests/regression/Makefile.am (SUBDIRS): Removed codepatching.
	* tests/regression/junit/All.java (suite): Added TestPatcher.
	* tests/regression/junit/Makefile.am (EXTRA_DIST): Added $(srcdir) to
	actually find the files.
	* tests/regression/junit/TestPatcher.java: New file.

	* tests/regression/codepatching/Makefile.am,
	tests/regression/codepatching/aastoreconstClass.java,
	tests/regression/codepatching/checkcastC.java,
	tests/regression/codepatching/checkcastI.java,
	tests/regression/codepatching/getfieldD.java,
	tests/regression/codepatching/getfieldF.java,
	tests/regression/codepatching/getfieldI.java,
	tests/regression/codepatching/getfieldJ.java,
	tests/regression/codepatching/getfieldL.java,
	tests/regression/codepatching/getstaticD.java,
	tests/regression/codepatching/getstaticF.java,
	tests/regression/codepatching/getstaticI.java,
	tests/regression/codepatching/getstaticJ.java,
	tests/regression/codepatching/getstaticL.java,
	tests/regression/codepatching/instanceofC.java,
	tests/regression/codepatching/instanceofI.java,
	tests/regression/codepatching/invokespecial.java,
	tests/regression/codepatching/invokestatic.java,
	tests/regression/codepatching/multianewarray.java,
	tests/regression/codepatching/newarray.java,
	tests/regression/codepatching/putfieldD.java,
	tests/regression/codepatching/putfieldF.java,
	tests/regression/codepatching/putfieldI.java,
	tests/regression/codepatching/putfieldJ.java,
	tests/regression/codepatching/putfieldL.java,
	tests/regression/codepatching/putfieldconstC.java,
	tests/regression/codepatching/putfieldconstD.java,
	tests/regression/codepatching/putfieldconstF.java,
	tests/regression/codepatching/putfieldconstI.java,
	tests/regression/codepatching/putfieldconstJ.java,
	tests/regression/codepatching/putfieldconstL.java,
	tests/regression/codepatching/putstaticD.java,
	tests/regression/codepatching/putstaticF.java,
	tests/regression/codepatching/putstaticI.java,
	tests/regression/codepatching/putstaticJ.java,
	tests/regression/codepatching/putstaticL.java,
	tests/regression/codepatching/putstaticconstC.java,
	tests/regression/codepatching/putstaticconstD.java,
	tests/regression/codepatching/putstaticconstF.java,
	tests/regression/codepatching/putstaticconstI.java,
	tests/regression/codepatching/putstaticconstJ.java,
	tests/regression/codepatching/putstaticconstL.java,
	tests/regression/codepatching/test.java: Removed.
	[c7fbe6cfa0d0]

	* tests/Makefile.am, tests/regression/bugzilla/Makefile.am:
	* tests/Makefile.am (EXTRA_DIST): Added $(srcdir) to actually find
	the files.
	* tests/regression/bugzilla/Makefile.am: Likewise.
	[574e4f244959]

2008-04-27  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/posix/lock.c:
	* src/threads/posix/lock.c (lock_record_notify): Skip the check for
	interrupted. It was data-race ridden anyway.
	[ea434f5851f4]

2008-04-26  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with f9adc5b4d7f0.
	[9e1c37400fc1]

	* .hgignore, configure.ac, tests/regression/Makefile.am,
	tests/regression/clinitexception.2output,
	tests/regression/clinitexception.java,
	tests/regression/junit/All.java, tests/regression/junit/Makefile.am,
	tests/regression/junit/TestExceptionInStaticClassInitializer.java:
	* .hgignore: Added tests/regression/junit/*.class.

	* configure.ac (AC_CONFIG_FILES): Added
	tests/regression/junit/Makefile.

	* tests/regression/Makefile.am (SUBDIRS): Added junit.
	(SOURCE_FILES): Removed clinitexceptions.java. (EXTRA_DIST): Removed
	clinitexceptions.2output. (OUTPUT_JAVA_TESTS): Removed
	clinitexception.

	* tests/regression/junit/All.java: Likewise.
	* tests/regression/junit/Makefile.am: Likewise
	* tests/regression/junit/TestExceptionInStaticClassInitializer.java:
	Likewise.

	* tests/regression/clinitexception.2output: Removed.
	* tests/regression/clinitexception.java: Likewise.
	[4201a6a37d6e]

	* tests/regression/bugzilla/Makefile.am:
	* tests/regression/bugzilla/Makefile.am (build): Changed -cp to
	-classpath so GCJ works too. (check): Likewise.
	[5a22603f6b24]

	* src/native/vm/gnu/java_lang_reflect_VMMethod.c:
	* src/native/vm/gnu/java_lang_reflect_VMMethod.c (getDefaultValue):
	Pass the correct method object to the Java method.
	[e2470ff85c70]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_get_mainclass_from_jar): Print error when Main-
	Class attribute not found.
	[d446954c2415]

	* m4/jre-layout.m4:
	* m4/jre-layout.m4 (AC_CHECK_WITH_JRE_LAYOUT): Fixed typo, used
	enableval instead of withval.
	[f9adc5b4d7f0]

2008-04-24  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: Added md-trap.h (same as
	42dc5863f378).
	[1c792ca003e4]

2008-04-24  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/i386/Makefile.am, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/md-trap.h:
	* src/vm/jit/i386/Makefile.am (libarch_la_SOURCES): Added md-trap.h.
	* src/vm/jit/i386/codegen.c: Use new trap stuff.
	* src/vm/jit/i386/emit.c: Likewise.
	* src/vm/jit/i386/linux/md-os.c: Likewise.
	* src/vm/jit/i386/md-trap.h: New file.
	[42dc5863f378]

	* src/vm/jit/x86_64/Makefile.am:
	* src/vm/jit/x86_64/Makefile.am (libarch_la_SOURCES): Added md-
	trap.h.
	[0db016f6b071]

	* src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c:
	* src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c: Use stdint-types.
	* src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c: Likewise.
	[208f94c92da1]

	* src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c:
	* src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c:
	Use stdint-types.
	[555b5c4eefa9]

	* src/cacaoh/dummy.c, src/mm/boehm.c, src/mm/gc-common.h:
	* src/cacaoh/dummy.c (heap_alloc_uncollectable): Use stdint-types.
	* src/mm/boehm.c: Likewise.
	* src/mm/gc-common.h: Likewise.
	[33887ab24ca7]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/Makefile.am,
	src/vm/jit/trap.c, src/vm/jit/trap.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md-trap.h, src/vm/signal.c, src/vm/signallocal.h,
	src/vm/vm.c:
	* src/vm/jit/trap.c: New file.
	* src/vm/jit/trap.h: Likewise.

	* src/vm/jit/Makefile.am [ENABLE_JIT] (TRAP_SOURCES): Added.
	(libjit_la_SOURCES): Added TRAP_SOURCES.

	* src/vm/exceptions.c (exceptions_init): Removed.
	* src/vm/exceptions.h (EXCEPTION_HARDWARE_*): Removed.

	* src/vm/signal.c (signal_handle): Removed.
	* src/vm/signallocal.h: Likewise.

	* src/vm/vm.c (vm_create): Removed exceptions_init call, added
	trap_init call.

	* src/vm/jit/x86_64/codegen.c: Use new trap stuff.
	* src/vm/jit/x86_64/emit.c: Likewise.
	* src/vm/jit/x86_64/linux/md-os.c: Likewise.
	* src/vm/jit/x86_64/md-trap.h: New file.
	[e1964528a1af]

	* src/cacaoh/dummy.c, src/mm/memory.c, src/mm/memory.h,
	src/vm/builtin.c, src/vm/builtin.h:
	* src/cacaoh/dummy.c: Use stdint-types.
	* src/mm/memory.c, src/mm/memory.h, src/vm/builtin.c,
	src/vm/builtin.h: Likewise.
	[3cf50ae219ef]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetHostName): Use TRACEJVMCALLSENTER
	and TRACEJVMCALLSEXIT.
	[999c2d2889c5]

	* src/vm/jit/arm/codegen.h:
	* src/vm/jit/arm/codegen.h (SPLIT_LOAD): Removed.
	[9affd9c7a536]

2008-04-23  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/abi.h, src/vm/jit/allocator/liveness.c,
	src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/lsra.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/md-abi.c, src/vm/jit/i386/asmpart.S, src/vm/jit/i386
	/md-abi.c, src/vm/jit/jit.h, src/vm/jit/loop/analyze.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/mips/md-abi.c,
	src/vm/jit/optimizing/lifetimes.h, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/parse.c, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/netbsd/md-
	abi.c, src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/s390/md-
	abi.c, src/vm/jit/sparc64/md-abi.c, src/vm/jit/stack.c,
	src/vm/jit/stack.h, src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/jit.h (stackptr): Removed. (stackelement): Moved from
	here...
	* src/vm/jit/stack.h (stackelement_t): ...to here.

	* src/vm/jit/abi.h, src/vm/jit/allocator/liveness.c,
	src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/lsra.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/md-abi.c, src/vm/jit/i386/asmpart.S, src/vm/jit/i386
	/md-abi.c, src/vm/jit/loop/analyze.c, src/vm/jit/m68k/linux/md-
	abi.c, src/vm/jit/mips/md-abi.c, src/vm/jit/optimizing/lifetimes.h,
	src/vm/jit/optimizing/lsra.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/powerpc/netbsd/md-abi.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/s390/md-abi.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/stack.c, src/vm/jit/x86_64
	/md-abi.c: Replaced stackptr with stackelement_t*.
	[ab0f521edd32]

2008-04-23  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMRuntime.c,
	src/vm/jit/executionstate.c:
	* src/native/vm/gnu/java_lang_VMRuntime.c: Compiler warning
	squashing.
	* src/vm/jit/executionstate.c (executionstate_println): Likewise.
	[d26a4fc535cd]

2008-04-23  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* autogen.sh:
	* autogen.sh: Fixed error output.
	[a00932f0646f]

	* autogen.sh:
	* autogen.sh: Support libtool-2.x.
	[3555026385e5]

	* src/vmcore/system.h:
	* src/vmcore/system.h (system_scandir) [__LINUX__]: The signature is
	different on various OSs.
	[f0e9ab27db0c]

2008-04-22  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/verify/typecheck.c:
	* src/vm/jit/verify/typecheck.c (typecheck): Fixed compiler warning.
	[f402b152d1f4]

	* src/cacaoh/dummy.c, src/native/jni.c, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/native/vm/java_lang_Class.c: Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Removed
	java_lang_Class.[ch].

	* src/cacaoh/dummy.c (builtin_instanceof): New function.
	(reflect_constructor_new, reflect_field_new, reflect_method_new):
	Likewise.

	* src/native/jni.c (_Jv_JNI_IsAssignableFrom): Use new class
	functions. (_Jv_JNI_IsInstanceOf): Likewise.

	* src/native/vm/cldc1.1/java_lang_Class.c (forName): Implemented
	directly. (isInstance): Use new class functions. (isAssignableFrom):
	Likewise. (getName): Likewise.

	* src/native/vm/gnu/java_lang_VMClass.c (isInstance): Likewise.
	(isAssignableFrom): Likewise. (getName): Likewise.
	(getDeclaredClasses): Likewise. (getDeclaredFields): Likewise.
	(getDeclaredMethods): Likewise. (getDeclaredConstructors): Likewise.
	(forName): Implemented directly. (getDeclaredAnnotations): Likewise.
	(getEnclosingConstructor): Use new class functions.
	(getEnclosingMethod): Likewise.
	* src/native/vm/gnu/java_lang_VMThrowable.c (getStackTrace): Likewise.

	* src/native/vm/reflect.h (_REFLECT_H): Added.

	* src/native/vm/sun/jvm.c (JVM_GetStackTraceElement): Use new class
	functions. (JVM_GetClassName): Likewise.
	(JVM_GetClassDeclaredFields): Likewise.
	(JVM_GetClassDeclaredMethods): Likewise.
	(JVM_GetClassDeclaredConstructors): Likewise. (JVM_LoadLibrary): Use
	TRACEJVMCALLSENTER and TRACEJVMCALLSEXIT. (JVM_FindLibraryEntry):
	Likewise.

	* src/vmcore/class.c (class_is_assignable_from): New function.
	(class_is_instance): Likewise. (class_get_declaredconstructors):
	Likewise. (class_get_declaredfields): Likewise.
	(class_get_declaredmethods): Likewise.
	(class_get_enclosingconstructor): Likewise.
	(class_get_enclosingmethod): Renamed to
	class_get_enclosingmethod_raw. class_get_enclosingmethod): Likewise.
	* src/vmcore/class.h (class_get_classname): New function.
	[dfe0c5810056]

	* src/vm/jit/code.h:
	* src/vm/jit/code.h (codeinfo): Moved stackframesize outside of
	ENABLE_REPLACEMENT.
	[5c10cc5e0dce]

	* * Merged twisti branch.
	[989bfa895cd1]

	* NEWS:
	Dummy commit to remove twisti branch.
	* NEWS: Useless.
	[8bc236b29952]

	* NEWS:
	Dummy commit to create twisti branch.
	* NEWS: Useless.
	[c153a9d8f8ce]

	* * Merged with tip.
	[30024dee3c14]

	* src/vm/jit/Makefile.am, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/replace.c,
	src/vm/jit/x86_64/linux/md-os.c:
	* Merged executionstate branch.
	[becec2dbe184]

	* src/native/vm/sun/jvm.c:
	Reverted 40d6392fb38f.
	* src/native/vm/sun/jvm.c (JVM_FindLibraryEntry): Using HPI function
	crashes.
	[8c0ddfb79909]

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c (md_replace_executionstate_read):
	Renamed to md_executionstate_read.
	(md_replace_executionstate_write): Renamed to
	md_executionstate_write.
	[9bb627fa59f1]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FindLibraryEntry): Use HPI.
	[40d6392fb38f]

	* src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/powerpc/linux/md-os.c (md_executionstate_write): Fixed
	comment typo.
	[3c102f278b7a]

	* src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/powerpc/linux/md-os.c (md_replace_executionstate_read):
	Renamed to md_executionstate_read.
	(md_replace_executionstate_write): Renamed to
	md_executionstate_write.
	[6f19ebc51c4c]

	* * Merged with tip.
	[d492fa9b3e05]

2008-04-20  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c (jni_GetPrimitiveArrayCritical): Implemented
	correcly. (jni_ReleasePrimitiveArrayCritical): Likewise.
	[9c681dc4dcc4]

2008-04-21  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.h:
	* src/native/jni.h (_Jv_jni_invokeNative): Removed.
	[50357bec0c1a]

2008-04-17  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/linenumbertable.c:
	* src/vm/jit/linenumbertable.c (linenumbertable_create): Changed the
	direction of the list. (linenumbertable_list_entry_add): Likewise.
	(linenumbertable_list_entry_add_inline_start): Likewise.
	(linenumbertable_list_entry_add_inline_end): Likewise.
	[2536b88d4f77]

	* src/vm/jit/emit-common.c:
	* src/vm/jit/emit-common.c (emit_label_bccz): Code restructured.
	(emit_label): Likewise.
	[770ec75a0101]

	* src/vm/jit/codegen-common.c, src/vm/jit/patcher-common.c, src/vm/jit
	/patcher-common.h:
	* src/vm/jit/patcher-common.c (patcher_resolve): New function.
	* src/vm/jit/patcher-common.h (patcher_resolve): Export.
	* src/vm/jit/codegen-common.c (codegen_finish): Use patcher_resolve.
	[4cc078f655ff]

2008-04-16  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/reg.h, src/vm/jit/verify/typecheck-builtins.inc,
	src/vm/jit/verify/typecheck-common.h, src/vm/jit/verify/typecheck-
	fields.inc, src/vm/jit/verify/typecheck-invoke.inc,
	src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/verify/typeinfo.h, src/vm/resolve.c, src/vm/resolve.h:
	* src/vm/jit/verify/typeinfo.h (typeinfo): Renamed to typeinfo_t.
	(typeinfo_mergedlist): Renamed to typeinfo_mergedlist_t.
	(typedescriptor): Renamed to typedescriptor_t.

	* src/vm/jit/reg.h, src/vm/jit/verify/typecheck-builtins.inc,
	src/vm/jit/verify/typecheck-common.h, src/vm/jit/verify/typecheck-
	fields.inc, src/vm/jit/verify/typecheck-invoke.inc,
	src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/resolve.c, src/vm/resolve.h: Likewise.
	[2b2ea4de2f79]

	* src/vmcore/descriptor.c, src/vmcore/references.h:
	* src/vmcore/references.h (parseddesc): Renamed to parseddesc_t.

	* src/vmcore/descriptor.c: Likewise.
	[8bf03b52775b]

	* src/native/jni.c, src/native/llni.h, src/vm/builtin.c,
	src/vm/exceptions.c, src/vm/jit/replace.c, src/vm/jit/trace.c,
	src/vm/jit/verify/typeinfo.c, src/vmcore/class.c,
	src/vmcore/linker.c, src/vmcore/linker.h:
	* src/vmcore/linker.h (_vftbl): Renamed class to clazz.

	* src/native/jni.c, src/native/llni.h, src/vm/builtin.c,
	src/vm/exceptions.c, src/vm/jit/replace.c, src/vm/jit/trace.c,
	src/vm/jit/verify/typeinfo.c, src/vmcore/class.c,
	src/vmcore/linker.c: Likewise.
	[b28587b87dba]

	* src/native/jni.c, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/classcache.c, src/vmcore/classcache.h,
	src/vmcore/loader.c, src/vmcore/loader.h:
	* src/vmcore/loader.h (classloader): Renamed to classloader_t.

	* src/native/jni.c, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/classcache.c, src/vmcore/classcache.h,
	src/vmcore/loader.c: Likewise.
	[76cd2f513c2e]

	* src/vmcore/annotation.c, src/vmcore/class.c, src/vmcore/field.c,
	src/vmcore/loader.c, src/vmcore/loader.h, src/vmcore/method.c,
	src/vmcore/stackmap.c, src/vmcore/suck.c, src/vmcore/zip.c:
	* src/vmcore/loader.h (classbuffer): Renamed class to clazz.

	* src/vmcore/annotation.c, src/vmcore/class.c, src/vmcore/field.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/stackmap.c,
	src/vmcore/suck.c, src/vmcore/zip.c: Likewise.
	[1386fb01ffaf]

2008-04-15  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/patcher.c (patcher_invokeinterface): Forgot to
	rename class to clazz.
	[c8a40a22ee20]

	* src/native/vm/reflect.c, src/vm/access.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/disass.c,
	src/vm/jit/intrp/patcher.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/python.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vm/resolve.c,
	src/vmcore/annotation.c, src/vmcore/field.c, src/vmcore/field.h,
	src/vmcore/references.h:
	* src/vmcore/field.h (fieldinfo): Renamed class to clazz.

	* src/native/vm/reflect.c, src/vm/access.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/disass.c,
	src/vm/jit/intrp/patcher.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/python.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vm/resolve.c,
	src/vmcore/annotation.c, src/vmcore/field.c,
	src/vmcore/references.h: Likewise.
	[5a14bfe129aa]

	* src/cacaoh/headers.c, src/native/native.c,
	src/native/vm/gnu/java_lang_VMThrowable.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/toolbox/logging.c, src/vm/access.c,
	src/vm/exceptions.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/disass.c,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/dominators.c,
	src/vm/jit/optimizing/lifetimes.c, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa3.c,
	src/vm/jit/optimizing/ssa_rename.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/python.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/trace.c,
	src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-common.c,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/verify/typecheck-
	invoke.inc, src/vm/jit/verify/typecheck-stackbased-gen.inc,
	src/vm/jit/verify/typecheck-stackbased.c, src/vm/jit/verify
	/typecheck-typeinferer-gen.inc, src/vm/jit/verify/typecheck-
	variablesbased-gen.inc, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vm/resolve.c,
	src/vmcore/annotation.c, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/references.h:
	* src/vmcore/method.h (methodinfo): Renamed class to clazz.

	* src/cacaoh/headers.c, src/native/native.c,
	src/native/vm/gnu/java_lang_VMThrowable.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/toolbox/logging.c, src/vm/access.c,
	src/vm/exceptions.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/disass.c,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/dominators.c,
	src/vm/jit/optimizing/lifetimes.c, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa3.c,
	src/vm/jit/optimizing/ssa_rename.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/python.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/trace.c,
	src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-common.c,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/verify/typecheck-
	invoke.inc, src/vm/jit/verify/typecheck-stackbased-gen.inc,
	src/vm/jit/verify/typecheck-stackbased.c, src/vm/jit/verify
	/typecheck-typeinferer-gen.inc, src/vm/jit/verify/typecheck-
	variablesbased-gen.inc, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vm/resolve.c,
	src/vmcore/annotation.c, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/references.h: Likewise.
	[d3299bba3c70]

2008-04-14  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/posix/thread-posix.c, src/threads/thread.c,
	src/threads/thread.h:
	Merging darwin compile fixes -> trunk.
	[9d2e729a6841]

	* src/threads/posix/thread-posix.c:
	Merging fixes.
	[d852f098fe45]

	* src/native/vm/gnu/java_lang_VMThread.c, src/threads/thread.c,
	src/threads/thread.h:
	* src/native/vm/gnu/java_lang_VMThread.c
	(Java_java_lang_VMThread_getState): Renamed thread_get_state because
	of a name conflict with mach headers.
	* src/threads/thread.c (thread_print_info, threads_thread_is_alive):
	Likewise.
	* src/threads/thread.h: Likewise.
	[dfe2ed3a1417]

	* src/threads/posix/thread-posix.c:
	Merging fixes.
	[61a938a77b77]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_startup_thread): Compile
	fix.
	[be94e07a636c]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (sem_*): Fixed compile errors.
	[bbaa09c52c9b]

2008-04-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/thread.c:
	* src/threads/thread.c (thread_set_state_runnable): Moved
	DEBUGTHREADS into if, so the output is correct.
	(thread_set_state_waiting): Likewise.
	(thread_set_state_timed_waiting): Likewise.
	[43d16d77d6e5]

	* src/threads/posix/thread-posix.c, src/threads/thread.c,
	src/threads/thread.h, src/vm/signal.c:
	* src/threads/thread.c (threads_thread_state_runnable): Renamed to
	thread_set_state_runnable. (threads_thread_state_waiting): Renamed
	to thread_set_state_waiting. (threads_thread_state_timed_waiting):
	Renamed to thread_set_state_timed_waiting.
	(thread_set_state_terminated): Renamed to
	thread_set_state_terminated.
	* src/threads/thread.h: Likewise.
	* src/threads/posix/thread-posix.c: Use new function names.
	* src/vm/signal.c: Likewise.
	[9e11431508ae]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_sleep): Clear
	interrupted flag in exception case.
	[39438e55e9d0]

	* src/native/vm/gnu/java_lang_VMThread.c, src/threads/thread.c,
	src/threads/thread.h:
	* src/threads/thread.h (thread_get_state): New function.
	(threads_thread_get_state): Removed.
	* src/threads/thread.c (thread_print_info): Use thread_get_state.
	(threads_thread_is_alive): Likewise. (threads_thread_get_state):
	Removed.
	* src/native/vm/gnu/java_lang_VMThread.c (getState): Implemented
	directly.
	[d6879d90499a]

	* src/threads/posix/thread-posix.c, src/threads/posix/thread-posix.h:
	* src/threads/posix/thread-posix.c (threads_sleep): Throw correct
	exceptions, use stdint.h types
	* src/threads/posix/thread-posix.h (threads_sleep): Use stdint.h
	types.
	[2a41965d0840]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_detach_thread): Reset
	threadgroup when thread has terminated.
	[d10959c776b1]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_IsInterrupted): Handle
	clear_interrupted.
	[865bf6ced98b]

	* src/threads/thread.c:
	* src/threads/thread.c (threads_attach_current_thread)
	[ENABLE_JAVASE]: Set group to NULL, as it might contain any value.
	[770449e5df5e]

	* src/threads/thread.c:
	* src/threads/thread.c (threads_attach_current_thread): Set the
	thread data-structure in the TSD.
	[c4f96b0c4d7d]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_startup_thread): Renamed
	variable thread to t.
	[fe21e42f3871]

	* src/native/jni.c:
	* src/native/jni.c (JNI_NEW_ARRAY): Fixed typo for short array.
	[ba3de48b4c29]

2008-04-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/access.c, src/vm/access.h:
	* src/vm/access.c [ENABLE_JAVASE] (access_check_field): Added
	#ifdef. [ENABLE_JAVASE] (access_check_method): Likewise.
	* src/vm/access.h: Likewise.
	[0d747a4b03c4]

	* src/native/vm/sun/hpi.c:
	* src/native/vm/sun/hpi.c (hpi_initialize): Fixed compiler warning.
	(hpi_initialize_socket_library): Likewise.
	[04c6c41e37cb]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_print_entry): Print newline
	for builtins.
	[3864e0d2176b]

2008-04-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Commited with tip.
	[f86b8b643b79]

	* src/threads/posix/thread-posix.c:
	* src/threads/posix/thread-posix.c (threads_sleep): Removed
	threads_check_if_interrupted_and_reset usage and use new functions.
	[afc6c05d1704]

	* src/native/vm/gnu/java_lang_reflect_VMField.c:
	* src/native/vm/gnu/java_lang_reflect_VMField.c
	(native/include/java_lang_reflect_Field.h): Added include.
	[655d7c04e703]

	* src/native/vm/gnu/java_lang_VMThread.c, src/threads/posix/thread-
	posix.c, src/threads/posix/thread-posix.h, src/threads/thread.h:
	* src/threads/thread.h (thread_set_interrupted): New function.
	* src/threads/posix/thread-posix.c
	(threads_check_if_interrupted_and_reset): Removed.
	* src/threads/posix/thread-posix.h: Likewise.
	* src/native/vm/gnu/java_lang_VMThread.c (interrupted): Use new
	function.
	[e33009dc3e7c]

	* src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c,
	src/threads/posix/thread-posix.c, src/threads/posix/thread-posix.h,
	src/threads/thread.h:
	* src/threads/thread.h (thread_is_interrupted): New function.
	* src/threads/posix/thread-posix.c
	(threads_thread_has_been_interrupted): Removed.
	* src/threads/posix/thread-posix.h: Likewise.
	* src/native/vm/gnu/java_lang_VMThread.c (isInterrupted): Use new
	function.
	* src/native/vm/sun/jvm.c (JVM_IsInterrupted): Likewise.
	[f7128be365f8]

	* src/threads/none/thread-none.h, src/threads/posix/thread-posix.h,
	src/threads/thread.h:
	* src/threads/none/thread-none.h: Fixed define name.
	* src/threads/posix/thread-posix.h: Likewise.
	* src/threads/thread.h: Likewise.
	[d3a4c83bd558]

2008-04-10  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/arm/asmpart.S:
	* src/vm/jit/arm/asmpart.S (asm_cacheflush) [__ARM_EABI__]: Use
	syscall number 0.
	[ec144df42ca1]

	* src/Makefile.am, src/cacao/Makefile.am, src/threads/Makefile.am,
	src/threads/none/Makefile.am, src/threads/none/thread-none.c,
	src/threads/none/thread-none.h, src/threads/posix/Makefile.am,
	src/threads/thread.c, src/threads/thread.h, src/vm/jit/methodtree.c,
	src/vm/jit/s390/md.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h:
	src/vm/jit/stacktrace.c (stacktrace_print_entry): New function.
	(stacktrace_print_current): Likewise. [ENABLE_THREADS]
	(stacktrace_print_of_thread): Likewise. [!ENABLE_THREADS]
	(_no_threads_stackframeinfo): Removed.
	* src/vm/jit/stacktrace.h: Likewise.

	* src/Makefile.am [ENABLE_THREADS] (THREADS_DIR): Removed.
	(SUBDIRS): Added threads.

	* src/cacao/Makefile.am [ENABLE_THREADS] (THREAD_LIB): Removed.
	(libjvm_la_LIBADD): Removed $(THREAD_LIB), added
	$(top_builddir)/src/threads/libthreads.la.
	* src/threads/Makefile.am [!ENABLE_THREADS]: Recurse into none/.
	* src/threads/none/Makefile.am (EXTRA_DIST): Removed. (AM_CPPFLAGS):
	Added. (LIBS): Likewise. (noinst_LTLIBRARIES): Likewise.
	(libthreadsnone_la_SOURCES): Likewise.

	* src/threads/none/thread-none.c: New file.
	* src/threads/none/thread-none.h (_no_threads_stackframeinfo): Export.

	* src/threads/posix/Makefile.am (noinst_LTLIBRARIES): Renamed
	library from libposix to libthreadsposix. (libposix_la_SOURCES):
	Renamed to libthreadsposix_la_SOURCES.

	* src/threads/thread.c (threads_dump): Use
	stacktrace_print_of_thread. (threads_thread_print_stacktrace):
	Removed. (threads_print_stacktrace): Likewise.
	* src/threads/thread.h (threads_thread_print_stacktrace): Likewise.
	(threads_print_stacktrace): Likewise.

	* src/vm/jit/methodtree.c (methodtree_find): Use
	stacktrace_print_current.
	* src/vm/jit/s390/md.c (md_dump_context): Likewise.
	[3457d7de230f]

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill): Use
	vm_abort instead of assert.
	[98fd037a7854]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_print_stacktrace) [!NDEBUG]:
	#ifdef'ed class_print.
	[6b3787897afb]

	* src/threads/thread.h:
	* src/threads/thread.h (thread_current_is_attached): Check if t is
	NULL and return false in this case.
	[79e7e22055fa]

2008-04-07  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/classes/Makefile.am,
	src/classes/gnu/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/VMCPStringBuilder.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/lang/reflect/Modifier.java,
	src/classes/gnu/java/lang/reflect/VMConstructor.java,
	src/classes/gnu/java/lang/reflect/VMField.java,
	src/classes/gnu/java/lang/reflect/VMMethod.java,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/gnu_java_lang_VMCPStringBuilder.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnu/java_lang_reflect_VMField.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/reflect.c, src/native/vm/sun_misc_Unsafe.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/classes/Makefile.am (VM_JAVA_FILES_GNU): Added new VM
	interface files.
	* src/native/include/Makefile.am (JAVASE_HEADER_FILES): Likewise.

	* src/classes/gnu/gnu/java/lang/CPStringBuilder.java,
	src/classes/gnu/gnu/java/lang/VMCPStringBuilder.java,
	src/classes/gnu/java/lang/reflect/Modifier.java: New file.

	* src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java: Updated.

	* src/classes/gnu/java/lang/reflect/VMConstructor.java,
	src/classes/gnu/java/lang/reflect/VMField.java,
	src/classes/gnu/java/lang/reflect/VMMethod.java: New file.

	* src/native/jni.c (FromReflectedMethod): Adapted to new VM
	interface. (FromReflectedField): Likewise.

	* src/native/vm/gnu/Makefile.am (libnativevmcore_la_SOURCES):
	Removed java_lang_reflect_Constructor.c, java_lang_reflect_Field.c,
	java_lang_reflect_Method.c, added gnu_java_lang_VMCPStringBuilder.c,
	java_lang_reflect_VMConstructor.c, java_lang_reflect_VMField.c,
	java_lang_reflect_VMMethod.c.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c: Removed.

	* src/native/vm/gnu/gnu_java_lang_VMCPStringBuilder.c,
	src/native/vm/gnu/java_lang_reflect_VMConstructor.c,
	src/native/vm/gnu/java_lang_reflect_VMField.c,
	src/native/vm/gnu/java_lang_reflect_VMMethod.c: New file.

	* src/native/vm/nativevm.c (nativevm_preinit): Added
	_Jv_gnu_java_lang_VMCPStringBuilder_init.
	* src/native/vm/nativevm.h: Likewise.

	* src/native/vm/reflect.c (reflect_constructor_new): Adapted to new
	VM interface. (reflect_field_new): Likewise. (reflect_method_new):
	Likewise.

	* src/native/vm/sun_misc_Unsafe.c (objectFieldOffset): Likewise.
	(staticFieldBase): Likewise.

	* src/vmcore/class.c [WITH_CLASSPATH_GNU]
	(class_java_lang_reflect_VMConstructor)
	(class_java_lang_reflect_VMField, class_java_lang_reflect_VMMethod):
	New global variable.
	* src/vmcore/class.h: Likewise.
	* src/vmcore/linker.c (linker_init): Added new classes.
	* src/vmcore/loader.c (loader_init): Likewise.

	* src/vmcore/utf8.c [WITH_CLASSPATH_GNU]
	(utf_java_lang_reflect_VMConstructor, utf_java_lang_reflect_VMField)
	(utf_java_lang_reflect_VMMethod): New global variable.
	* src/vmcore/utf8.h: Likewise.
	[1dba59001474]

	* src/native/jni.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c:
	* src/native/vm/java_lang_reflect_Constructor.c: Removed.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	* src/native/vm/java_lang_reflect_Method.c: Likewise.
	* src/native/vm/java_lang_reflect_Method.h: Likewise.

	* src/native/jni.c (_Jv_jni_invokeNative): Likewise.

	* src/native/vm/Makefile.am (JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES):
	Removed. (JAVA_LANG_REFLECT_METHOD_SOURCES): Likewise.
	(libnativevm_la_SOURCES): Removed
	JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES and
	JAVA_LANG_REFLECT_METHOD_SOURCES.

	* src/native/vm/reflect.c (reflect_invoke): New function.
	(reflect_constructor_newinstance): Likewise.
	(reflect_method_invoke): Likewise.
	* src/native/vm/reflect.h (reflect_constructor_newinstance): Export.
	(reflect_method_invoke): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Use reflect_constructor_newinstance.
	* src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative): Use
	reflect_method_invoke.
	* src/native/vm/sun/jvm.c (JVM_InvokeMethod): Use
	reflect_method_invoke. (JVM_NewInstanceFromConstructor): Use
	reflect_constructor_newinstance.
	[a3189e2fbd34]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c (getSignature):
	Implemented directly.
	* src/native/vm/java_lang_reflect_Constructor.c (getSignature):
	Removed.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	[d1ea50387ceb]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getExceptionTypes): Implemented directly.
	* src/native/vm/java_lang_reflect_Constructor.c (getExceptionTypes):
	Removed.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	[2bfcb5cbdd18]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getParameterTypes): Implemented directly.
	* src/native/vm/java_lang_reflect_Constructor.c (getParameterTypes):
	Removed.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	[5b6da046d461]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getModifiersInternal): Implemented directly.
	* src/native/vm/java_lang_reflect_Constructor.c (getModifiers):
	Removed.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	[f1da619c1b0b]

2008-04-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/posix/Makefile.am, src/threads/posix/threadlist-posix.c,
	src/threads/threadlist.c:
	* src/threads/posix/threadlist-posix.c: Removed.
	* src/threads/posix/Makefile.am (libposix_la_SOURCES): Removed
	threadlist-posix.c.
	* src/threads/threadlist.c (threads/mutex.h): Added.
	(threadlist_mutex): New global variable. (threadlist_init):
	Initialize mutex. (threadlist_lock, threadlist_unlock): New
	functions.
	[d8f389d4b3f7]

2008-04-02  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_new_class_utf): Check for c ==
	NULL when VM is initializing.
	[3ac1ce7dadb2]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (TRACEJVMCALLSENTER, TRACEJVMCALLSEXIT):
	New macro. (JVM_GetClassLoader): Trace return value.
	[c4ceb9518a19]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_get): Correctly skip
	Throwable.init() functions. (stacktrace_stackframeinfo_fill):
	Changed debugging messge.
	[18f868142155]

	* src/threads/thread.c, src/threads/thread.h:
	* src/threads/thread.c (threads_thread_print_info): Renamed to
	thread_print_info, removed assert on THREAD_STATE_NEW but print as
	much info as possible. (threads_dump): Use new functio name.
	* src/threads/thread.h: Likewise.
	[d6c927d2e029]

	* * Merged with tip.
	[da113f4ae466]

	* src/vm/string.c:
	* src/vm/string.c (javastring_safe_new_from_utf8): Don't assert on
	text is NULL, but return NULL. Checked with jconsole.
	[af3aa1b2e676]

	* src/mm/Makefile.am:
	* src/mm/Makefile.am: Changed copyright.
	[906626e18451]

2008-04-02  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/cacao/cacao.c, src/native/jvmti/cacaodbg.c,
	src/native/jvmti/cacaodbg.h, src/native/jvmti/jvmti.c,
	src/threads/Makefile.am, src/threads/mutex.h,
	src/threads/posix/Makefile.am, src/threads/posix/generic-
	primitives.h, src/threads/posix/lock.c, src/threads/posix/lock.h,
	src/threads/posix/mutex-posix.h, src/threads/posix/thread-posix.c,
	src/threads/posix/thread-posix.h, src/threads/posix/threadlist-
	posix.c, src/vm/vm.c:
	* src/threads/Makefile.am: Added mutex.h.
	* src/threads/posix/Makefile.am: Added mutex-posix.h.

	* src/threads/mutex.h: Added new file.
	* src/threads/posix/mutex-posix.h: Likewise. (mutex_init): Implemented
	inline wrapper function. (mutex_lock): Likewise. (mutex_unlock):
	Likewise. (mutex_destroy): Likewise.

	* src/cacao/cacao.c, src/native/jvmti/cacaodbg.c,
	src/native/jvmti/cacaodbg.h, src/native/jvmti/jvmti.c,
	src/threads/posix/generic-primitives.h, src/threads/posix/lock.c,
	src/threads/posix/lock.h, src/threads/posix/thread-posix.c,
	src/threads/posix/thread-posix.h, src/threads/posix/threadlist-
	posix.c, src/vm/vm.c: Included mutex.h and used wrapper functions
	throughout the whole file.
	[30bdc35a0486]

2008-04-01  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/none/thread-none.h, src/threads/none/threads.h,
	src/threads/thread.h:
	* src/threads/none/threads.h: Renamed from here...
	* src/threads/none/thread-none.h: ...to here.
	* src/threads/thread.h: Fixed include.
	[cce680c919ac]

	* src/native/jni.c, src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c,
	src/threads/none/threads.h, src/threads/posix/thread-posix.c,
	src/threads/thread.c, src/threads/thread.h, src/vm/exceptions.c:
	* src/native/jni.c (_Jv_JNI_FindClass): Renamed to jni_FindClass,
	call resolve_handle_pending_exception in exception case.
	(_Jv_JNI_ExceptionDescribe): Renamed to jni_ExceptionDescribe, use
	exceptions_print_stacktrace. (_Jv_JNI_ExceptionClear): Renamed to
	jni_ExceptionClear.

	* src/threads/thread.h (threads_thread_get_object): Renamed to
	thread_get_object. (threads_thread_set_object): Renamed to
	thread_set_object. (threads_get_current_object): Renamed to
	thread_get_current_object. (thread_is_attached): Use new function
	names. (thread_fprint_name): Export.

	* src/threads/none/threads.h (threads_get_current_object): Renamed
	to thread_get_current_object.

	* src/native/vm/cldc1.1/java_lang_Thread.c (currentThread): Use new
	function names.
	* src/native/vm/gnu/java_lang_VMThread.c (currentThread): Likewise.
	* src/native/vm/sun/jvm.c (JVM_CurrentThread): Likewise.
	* src/threads/posix/thread-posix.c (threads_startup_thread): Likewise.
	(threads_detach_thread): Likewise.
	* src/threads/thread.c (thread_create_object): Likewise.
	(thread_free): Likewise. (threads_thread_start): Likewise.
	(thread_fprint_name): New function. (threads_thread_print_info): Use
	thread_fprint_name.

	* src/vm/exceptions.c (exceptions_print_stacktrace): Implemented
	(mostly) as in HotSpot.
	[10f85b96a2de]

	* src/vm/string.c, src/vm/stringlocal.h:
	* src/vm/string.c (javastring_print): Renamed to javastring_fprint
	and added a stream argument.
	* src/vm/stringlocal.h: Likewise.
	[abde7ae98d1d]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_run) [ENABLE_THREADS]: #ifdef'ed threading stuff.
	[9d9bdfdef420]

	* configure.ac:
	* configure.ac (AC_CHECK_HEADERS): Added stdio.h.
	[68c3572dec69]

	* src/threads/thread.c, src/threads/thread.h,
	src/threads/threadlist.c:
	* src/threads/thread.c (thread_create_object): New function.
	(thread_method_init): Made static. (threadgroup_system,
	threadgroup_main): Changed type to java_handle_t.
	(thread_create_initial_threadgroup): Chnaged type of
	threadgroup_system and threadgroup_main.
	(thread_create_initial_thread): Use thread_create_object.
	(threads_thread_start_internal): Likewise.
	(threads_attach_current_thread): Likewise.
	(threads_thread_print_info): Use thread_is_daemon.
	* src/threads/thread.h (thread_method_init): Removed.
	(thread_is_daemon): New function.
	* src/threads/threadlist.c (threadlist_get_non_daemons): Use
	thread_is_daemon.
	[ea1ec101d6fe]

	* src/threads/posix/thread-posix.c, src/threads/thread.c,
	src/threads/thread.h:
	* src/threads/thread.c (threads_thread_new): Renamed to thread_new
	and made static. (threads_thread_free): Renamed to thread_free.
	(threads_thread_start_internal): Use new function names.
	(threads_thread_start): Likewise. (threads_attach_current_thread):
	Likewise.
	* src/threads/thread.h (threads_thread_new): Removed.
	(threads_thread_free): Renamed to thread_free.

	* src/threads/posix/thread-posix.c (threads_detach_thread): Use new
	function names.
	[e5e0b246a78b]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-
	gc/rootset.c, src/mm/cacao-gc/rootset.h, src/mm/codememory.c,
	src/mm/dumpmemory.c, src/mm/memory.c, src/native/jni.c,
	src/native/jvmti/cacaodbg.c, src/native/jvmti/cacaodbg.h,
	src/native/jvmti/jvmti.c, src/native/llni.c, src/native/llni.h,
	src/native/localref.c, src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c,
	src/threads/Makefile.am, src/threads/posix/Makefile.am,
	src/threads/posix/lock.c, src/threads/posix/thread-posix.c,
	src/threads/posix/thread-posix.h, src/threads/posix/threads.c,
	src/threads/posix/threads.h, src/threads/thread.c,
	src/threads/thread.h, src/threads/threadlist.c,
	src/threads/threadlist.h, src/threads/threads-common.c, src/threads
	/threads-common.h, src/toolbox/logging.c, src/vm/builtin.c,
	src/vm/exceptions.c, src/vm/finalizer.c, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/linux/md-os.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/engine.c, src/vm/jit/jit.c,
	src/vm/jit/methodtree.c, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/replace.c,
	src/vm/jit/s390/md.c, src/vm/jit/show.c, src/vm/jit/stacktrace.c,
	src/vm/jit/trace.c, src/vm/jit/x86_64/freebsd/md-os.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/signal.c, src/vm/vm.c:
	* src/threads/posix/threads.c: Renamed from here...
	* src/threads/posix/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h: Likewise.

	* src/threads/posix/thread-posix.c: ...to here.
	* src/threads/posix/thread-posix.h, src/threads/thread.c,
	src/threads/thread.h: Likewise.

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-
	gc/rootset.c, src/mm/cacao-gc/rootset.h, src/mm/codememory.c,
	src/mm/dumpmemory.c, src/mm/memory.c, src/native/jni.c,
	src/native/jvmti/cacaodbg.c, src/native/jvmti/cacaodbg.h,
	src/native/jvmti/jvmti.c, src/native/llni.c, src/native/llni.h,
	src/native/localref.c, src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c,
	src/threads/Makefile.am, src/threads/posix/lock.c,
	src/threads/posix/Makefile.am, src/threads/threadlist.c,
	src/threads/threadlist.h, src/toolbox/logging.c, src/vm/builtin.c,
	src/vm/exceptions.c, src/vm/finalizer.c, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/linux/md-os.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/engine.c, src/vm/jit/jit.c,
	src/vm/jit/methodtree.c, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/replace.c,
	src/vm/jit/s390/md.c, src/vm/jit/show.c, src/vm/jit/stacktrace.c,
	src/vm/jit/trace.c, src/vm/jit/x86_64/freebsd/md-os.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/signal.c, src/vm/vm.c:
	Changed filename occurrences.
	[38d26f1a1c95]

2008-03-31  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c, src/threads/posix/threads.c, src/threads/threads-
	common.c, src/threads/threads-common.h, src/vm/global.h,
	src/vm/vm.c:
	Fixes PR59.
	* src/native/jni.c (_Jv_JNI_Get##name##Field): Added TRACEJNICALLS.
	(_Jv_JNI_Set##name##Field): Likewise.
	(_Jv_JNI_CallStaticObjectMethod): Likewise.
	(_Jv_JNI_CallStaticObjectMethodV): Likewise.
	(_Jv_JNI_CallStaticObjectMethodA): Likewise.
	(_Jv_JNI_CallStaticVoidMethod): Likewise.
	(_Jv_JNI_CallStaticVoidMethodV): Likewise.
	(_Jv_JNI_CallStaticVoidMethodA): Likewise. (_Jv_JNI_GetArrayLength):
	Likewise. (_Jv_JNI_Get##name##ArrayElements): Likewise.
	(_Jv_JNI_Get##name##ArrayRegion): Likewise.
	(jni_attach_current_thread): Check correctly if current thread is
	already attached. (_Jv_JNI_DetachCurrentThread): Check if current
	thread is already detached.
	* src/threads/posix/threads.c (threads_detach_thread): Likewise.

	* src/threads/threads-common.c (threads_init) [WITH_CLASSPATH_SUN]:
	Resolve correct thread init method. (thread_create_object): New
	function, but not yet implemented. (thread_create_initial_thread):
	Lot of changes.

	* src/threads/threads-common.h (thread_is_attached): New function.
	(thread_current_is_attached): Likewise.

	* src/vm/global.h (STR): New macro, stolen from OpenJDK.

	* src/vm/vm.c (vm_run): Detach the main thread before calling
	vm_destroy. (vm_destroy): Attach the main thread again as
	DestroyJavaVM thread.
	[5b1738cbdeac]

	* src/native/jni.c, src/native/jvmti/cacaodbg.c,
	src/threads/posix/threads.c, src/threads/posix/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/posix/threads.c (threads_set_current_threadobject):
	Moved from here... (threads_get_current_threadobject): Likewise.
	* src/threads/posix/threads.h (thread_get_current): ...to here.
	(thread_set_current): Likewise.
	* src/threads/threads-common.h (threads_set_current_threadobject):
	Removed.

	* src/native/jni.c (jni_attach_current_thread): Use new function
	name. (_Jv_JNI_DetachCurrentThread): Likewise. (_Jv_JNI_GetEnv):
	Likewise.
	* src/native/jvmti/cacaodbg.c (jvmti_get_current_thread): Likewise.
	* src/threads/threads-common.c (threads_preinit): Likewise.
	[6bdc40cea36e]

	* configure.ac, m4/classpath.m4, m4/hpi.m4, src/native/vm/nativevm.c,
	src/native/vm/sun/Makefile.am, src/native/vm/sun/hpi.c,
	src/native/vm/sun/hpi.h, src/native/vm/sun/jvm.c,
	src/vmcore/options.c, src/vmcore/options.h:
	* configure.ac (AC_CHECK_WITH_HPI_MD_H): Added.
	(AC_CHECK_WITH_HPI_H): Likewise.
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Changed default
	for OpenJDK. (AC_CHECK_WITH_CLASSPATH_LIBDIR): Likewise.
	(AC_CHECK_WITH_JNI_MD_H): Likewise. (AC_CHECK_WITH_JNI_H): Likewise.

	* m4/hpi.m4: New file.
	* src/native/vm/nativevm.c (nativevm_preinit): Call hpi_initialize.
	* src/native/vm/sun/Makefile.am (libnativevmcore_la_SOURCES): Added
	hpi.[ch].
	* src/native/vm/sun/hpi.c: New file.
	* src/native/vm/sun/hpi.h: Likewise.

	* src/native/vm/sun/jvm.c (JVM_GetLastErrorString): Use HPI
	function. (JVM_NativePath): Likewise. (JVM_Open): Likewise.
	(JVM_Close): Likewise. (JVM_Read): Likewise. (JVM_Write): Likewise.
	(JVM_Available): Likewise. (JVM_Lseek): Likewise. (JVM_SetLength):
	Likewise. (JVM_Sync): Likewise. (JVM_InitializeSocketLibrary): Call
	hpi_initialize_socket_library.

	* src/vmcore/options.c (opt_TraceHPI): Added global variable.
	(options_xx): Handle new option.
	* src/vmcore/options.h: Likewise.
	[fceac7c38a1b]

	* src/native/vm/nativevm.c:
	* src/native/vm/nativevm.c (nativevm_preinit) [WITH_CLASSPATH_SUN]:
	Check for native_library_open error.
	[fc69ca6c9fbe]

2008-03-29  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Clean up: removed an obsolete
	assignment to copy->varkind. (It is set in SET_TEMPVAR anyway.)
	[da706966db7d]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Use the javaindex instead of
	the CACAO varindex for checking conflicts with local variables.
	While there is no real conflict between CACAO variables of different
	types, the register allocator makes the implicit assumption that
	variables corresponding to the same javaindex may be coalesced. As
	long as this assumption is made, we must consider variables with the
	same javaindex as conflicting (and also check against that in the
	verifier). This fixes [Bug 49] VerifyError with obfuscated classes.
	[08444c22b833]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Clean up the ICMD_IINC case so
	it uses the javaindex variable. (No functional change.)
	[18e1045d35f2]

	* src/vm/jit/jit.h, src/vm/jit/parse.c, src/vm/jit/verify/typecheck-
	common.h, src/vm/jit/verify/typecheck.c:
	* src/vm/jit/jit.h (jitdata): Added reverselocalmap.

	* src/vm/jit/parse.c (parse): Fill the reverselocalmap.

	* src/vm/jit/verify/typecheck-common.h (verifier_state): Removed the
	reverselocalmap.

	* src/vm/jit/verify/typecheck.c (typecheck_invalidate_locals): Use
	jd->reverselocalmap. (typecheck): Likewise.
	[8a9d9cd39976]

	* tests/regression/jasmin/Makefile.am,
	tests/regression/jasmin/test_load_store_conflict_different_types.j:
	*
	tests/regression/jasmin/test_load_store_conflict_different_types.j:
	New test exposing the bug in conflict checking for local variables
	([Bug 49] VerifyError with obfuscated classes).

	* tests/regression/jasmin/Makefile.am: Added new test.
	[e5dbef3898c1]

	* contrib/vmlog/vmlog_cacao.h:
	* contrib/vmlog/vmlog_cacao.h: Removed #include of a header that
	does not exist anymore.
	[5b8c6c097400]

2008-03-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/posix/threads.c, src/threads/posix/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/posix/threads.c (threads_attach_current_thread):
	Removed.
	* src/threads/posix/threads.h: Likewise.
	* src/threads/threads-common.c (threads_attach_current_thread): Added.
	* src/threads/threads-common.h: Likewise.
	[e1fa9148b033]

	* src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/sun/jvm.c, src/vm/global.h, src/vm/initialize.c,
	src/vm/initialize.h, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/native/vm/nativevm.c (nativevm_preinit): Changed signature,
	use system_* functions. (nativevm_init): Changed signature.
	* src/native/vm/nativevm.h: Likewise.

	* src/native/vm/sun/jvm.c (JVM_InitProperties): Added
	sun.nio.MaxDirectMemorySize handling.

	* src/vm/global.h (PRINTF_FORMAT_INT64_T): Added define for int64_t
	formater.

	* src/vm/initialize.c (initialize_init): New function.
	* src/vm/initialize.h: Likewise.

	* src/vm/vm.c (vm_create): Added initialize_init.

	* src/vmcore/options.c (opt_MaxDirectMemorySize): New global
	variable. (options_xx): Use system_* functions.
	* src/vmcore/options.h: Likewise.
	[bd1fba089d84]

	* configure.ac, src/vmcore/system.h:
	* configure.ac (AC_CHECK_FUNCS): Added strcat, strcpy.
	* src/vmcore/system.h (system_atoi): New function. (system_strcat):
	Likewise. (system_strcpy): Likewise.
	[3bc1e510dba5]

2008-03-26  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/loader.c, tests/regression/bugzilla/PR58.java:
	* src/vmcore/loader.c (load_class_from_classbuffer_intern): Also
	call resolve_handle_pending_exception for super interfaces.
	* tests/regression/bugzilla/PR58.java (test): Renamed to
	testSuperClass. (testSuperInterface): New method.
	[a9203003de40]

	* src/cacaoh/dummy.c, src/native/vm/sun/jvm.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/resolve.c, src/vm/resolve.h,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/utf8.c, src/vmcore/utf8.h,
	tests/regression/bugzilla/All.java,
	tests/regression/bugzilla/PR58.java:
	* src/cacaoh/dummy.c (resolve_handle_pending_exception): New
	function.

	* src/native/vm/sun/jvm.c (JVM_FindClassFromClassLoader): Added
	assert on throwError. (JVM_DoPrivileged): Throw
	PrivilegedActionException only if the exception is an instance of
	java.lang.Exception but not of java.lang.RuntimeException.

	* src/vm/exceptions.c (exceptions_new_class_utf): New function.
	(exceptions_throw_class_utf): Likewise.
	(exceptions_throw_classnotfoundexception): Use
	exceptions_throw_class_utf.
	(exceptions_classnotfoundexception_to_noclassdeffounderror):
	Removed.
	* src/vm/exceptions.h: Likewise.

	* src/vm/resolve.c (resolve_handle_pending_exception): New function.
	(resolve_class_from_name): Don't convert exception.
	* src/vm/resolve.h (resolve_handle_pending_exception): Added.

	* src/vmcore/class.c (class_java_lang_Exception): New global
	variable. (class_java_lang_ClassNotFoundException): Likewise.
	(class_java_lang_RuntimeException): Likewise.
	* src/vmcore/class.h: Likewise.

	* src/vmcore/linker.c (linker_init): Link new global classes.
	* src/vmcore/loader.c (loader_init): Load new global classes.

	* src/vmcore/utf8.c (utf_java_lang_RuntimeException): New global
	variable. (utf8_init): Initialize new global variable.
	* src/vmcore/utf8.h (utf_java_lang_RuntimeException): Export.

	* tests/regression/bugzilla/All.java: Added PR58.
	* tests/regression/bugzilla/PR58.java: New file.
	[4067fe3a3bee]

	* tests/A2.java, tests/AA.java, tests/AA1.java, tests/AA2.java,
	tests/BB.java, tests/C.java, tests/C2.java, tests/C3.java,
	tests/CC.java, tests/D.java, tests/DD.java, tests/EE.java,
	tests/GG.java, tests/HI2.java, tests/II.java, tests/IIAA.java,
	tests/IIBB.java, tests/IICC.java, tests/IIexample.java,
	tests/Makefile.am, tests/n.java, tests/scribble.java:
	* tests/Makefile.am: Cleanup, removed checkall, added build target.
	* tests/A2.java: Removed.
	* tests/AA.java, tests/AA1.java, tests/AA2.java, tests/BB.java,
	tests/C.java, tests/C2.java, tests/C3.java, tests/CC.java,
	tests/D.java, tests/DD.java, tests/EE.java, tests/GG.java,
	tests/HI2.java, tests/II.java, tests/IIAA.java, tests/IIBB.java,
	tests/IICC.java, tests/IIexample.java, tests/n.java,
	tests/scribble.java: Likewise.
	[91251aac4dec]

	* tests/regression/bugzilla/All.java,
	tests/regression/bugzilla/PR57.java:
	* tests/regression/bugzilla/All.java: Added PR57.
	* tests/regression/bugzilla/PR57.java: New file.
	[8a65518935cf]

	* tests/regression/bugzilla/Makefile.am:
	* tests/regression/bugzilla/Makefile.am (JAVA): Added
	LD_LIBRARY_PATH so we can really overrite JAVA. (build): Added
	$(srcdir) to find .java files. (check): Removed LD_LIBRARY_PATH.
	[dbf4b68b6d25]

2008-03-25  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/Makefile.am, src/threads/native/generic-
	primitives.h, src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threadlist-posix.c, src/threads/native/threads.c,
	src/threads/native/threads.h:
	* src/threads/native/Makefile.am: Removed.
	* src/threads/native/generic-primitives.h, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threadlist-posix.c,
	src/threads/native/threads.c, src/threads/native/threads.h:
	Likewise.
	[0337947f848f]

	* configure.ac, src/mm/cacao-gc/gc.h, src/mm/cacao-gc/rootset.h,
	src/native/jvmti/cacaodbg.c, src/native/jvmti/cacaodbg.h,
	src/native/jvmti/jvmti.c, src/native/llni.h,
	src/threads/Makefile.am, src/threads/lock-common.h,
	src/threads/posix/Makefile.am, src/threads/posix/generic-
	primitives.h, src/threads/posix/lock.c, src/threads/posix/lock.h,
	src/threads/posix/threadlist-posix.c, src/threads/posix/threads.c,
	src/threads/posix/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/builtintable.inc,
	src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/intrp/asmpart.c, src/vm/jit/intrp/dynamic-super.c,
	src/vm/jit/intrp/engine.c, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc64/linux/md-
	os.c, src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/show.c, src/vm/jit/stacktrace.c,
	src/vm/jit/x86_64/freebsd/md-os.c, src/vm/jit/x86_64/linux/md-os.c:
	* configure.ac (AC_CONFIG_FILES): Moved src/threads/native/Makefile
	to src/threads/posix/Makefile.

	* src/threads/posix/Makefile.am, src/threads/posix/generic-
	primitives.h, src/threads/posix/lock.c, src/threads/posix/lock.h,
	src/threads/posix/threadlist-posix.c, src/threads/posix/threads.c,
	src/threads/posix/threads.h: Moved from src/threads/native/.

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/rootset.h,
	src/native/jvmti/cacaodbg.c, src/native/jvmti/cacaodbg.h,
	src/native/jvmti/jvmti.c, src/native/llni.h,
	src/threads/Makefile.am, src/threads/lock-common.h, src/threads
	/threads-common.c, src/threads/threads-common.h,
	src/vm/builtintable.inc, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/dynamic-super.c, src/vm/jit/intrp/engine.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c, src/vm/jit/show.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/freebsd/md-os.c,
	src/vm/jit/x86_64/linux/md-os.c: Fixed header includes.
	[e852f2d0d4c4]

	* src/cacaoh/Makefile.am:
	* src/cacaoh/Makefile.am: Changed copyright.
	[5974a060a410]

2008-03-25  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/optimizing/ssa.h:
	Dummy push for testing.
	[484dcf446038]

	* src/vm/jit/optimizing/ssa.h:
	Dummy push for testing.
	[177737032317]

	* src/vm/jit/optimizing/ssa.h:
	Dummy push for testing.
	[119782e1ae60]

	* src/vm/jit/optimizing/ssa.h:
	Dummy push for testing.
	[0a173b247580]

2008-03-25  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/mark.c, src/mm/cacao-
	gc/rootset.c, src/threads/native/lock.c, src/threads/threadlist.c,
	src/toolbox/list.c, src/toolbox/list.h, src/vm/assertion.c,
	src/vm/jit/codegen-common.c, src/vm/jit/emit-common.c,
	src/vm/jit/linenumbertable.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/patcher-common.c, src/vm/jit/s390/codegen.c,
	src/vm/properties.c:
	* src/toolbox/list.c (list_add_first_unsynced): Removed.
	(list_add_last_unsynced): Likewise. (list_remove_unsynced):
	Likewise. (list_first_unsynced): Likewise. (list_last_unsynced):
	Likewise. (list_next_unsynced): Likewise. (list_prev_unsynced):
	Likewise.
	* src/toolbox/list.h: Likewise.

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/mark.c, src/mm/cacao-
	gc/rootset.c, src/threads/native/lock.c, src/threads/threadlist.c,
	src/vm/assertion.c, src/vm/jit/codegen-common.c, src/vm/jit/emit-
	common.c, src/vm/jit/linenumbertable.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/patcher-common.c,
	src/vm/jit/s390/codegen.c, src/vm/properties.c: Use normal list
	functions instead of the unsynced ones.
	[0795aaaa726c]

2008-03-22  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/cfg.c:
	* src/vm/jit/cfg.c (cfg_build): Fixed off by one in predecessorcount
	for exception handler blocks. See #53.
	[2065c6bdf8b7]

2008-03-21  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* .hgignore, configure.ac, src/vm/array.c,
	tests/regression/Makefile.am, tests/regression/bugzilla/All.java,
	tests/regression/bugzilla/Makefile.am,
	tests/regression/bugzilla/PR52.java:
	Fixes PR52.
	* src/vm/array.c (array_objectarray_element_set): Use
	builtin_canstore.

	* .hgignore (tests/regression/assertion/*.class)
	(tests/regression/assertion/packagetest/*.class)
	(tests/regression/bugzilla/*.class): Added.
	* configure.ac (AC_CONFIG_FILES): Added
	tests/regression/bugzilla/Makefile.
	* tests/regression/Makefile.am (SUBDIRS): Added bugzilla.
	* tests/regression/bugzilla/All.java: New file.
	* tests/regression/bugzilla/Makefile.am: Likewise.
	* tests/regression/bugzilla/PR52.java: Likewise.
	[a5fe9a36676e]

2008-03-20  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c, src/vm/array.c:
	* src/vm/array.c (array_length_get): Removed
	IllegalArgumentException check for size.
	* src/native/vm/sun/jvm.c (JVM_NewMultiArray): Explicitely check for
	exceptions.
	[c6ca807dc249]

	* src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c, src/vm/access.c,
	src/vm/access.h:
	* src/vm/access.c (access_check_field): Changed signature, use
	stacktrace_get_caller_class. (access_check_method): Likewise.
	* src/vm/access.h: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Field.c (_field_access_check):
	Adapted access_check_field call.
	* src/native/vm/java_lang_reflect_Constructor.c (newInstance):
	Likewise.
	* src/native/vm/java_lang_reflect_Method.c (invoke): Likewise.
	[b4a54e5c1918]

	* src/vm/array.c:
	* src/vm/array.c (array_element_get): Do a null-pointer check.
	(array_element_primitive_get): Likewise.
	(array_element_primitive_set): Likewise.
	(array_objectarray_element_set): Check if the object can be stored
	in the array.
	[5054ec21e133]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_NewArray): Check for error on
	primitive_arrayclass_get_by_name. (JVM_NewMultiArray): Check for
	error on array_length_get.
	[7d1278cb4b5c]

	* src/vm/array.c:
	* src/vm/array.c (array_##name##array_element_get): Fixed
	ArrayIndexOutOfBoundsException check.
	(array_objectarray_element_get): Likewise.
	(array_##name##array_element_set): Likewise.
	(array_objectarray_element_set): Likewise.
	[8dd39f5428c8]

	* src/vm/array.c:
	* src/vm/array.c (array_length_get): Check length and thrown an
	exception in case.
	[73b479b0dc93]

	* src/vm/primitive.c:
	* src/vm/primitive.c (primitive_unbox): Check for NULL values.
	[868526f93774]

	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/sun/jvm.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vm/vm.c, src/vmcore/method.c,
	src/vmcore/method.h, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vm/jit/stacktrace.c [ENABLE_JAVASE]
	(stacktrace_get_caller_class): New function.
	* src/vm/jit/stacktrace.h: Likewise.

	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c (getCallingClass):
	Use stacktrace_get_caller_class. (getCallingClassLoader): Likewise.
	(firstNonNullClassLoader): Use stacktrace_first_nonnull_classloader.

	* src/native/vm/sun/jvm.c (JVM_GetCallerClass): Use
	stacktrace_get_caller_class.

	* src/vm/vm.c (vm_create): Call method_init.

	* src/vmcore/method.c (method_java_lang_reflect_Method_invoke): New
	global variable. (method_init): New function.
	* src/vmcore/method.h: Likewise.

	* src/vmcore/utf8.c (utf_invoke): New global variable.
	* src/vmcore/utf8.h: Likewise.
	[fd282c9caa0b]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (trace_java_call_print_argument): Pass
	methodinfo, added sun.misc.Unsafe check. (trace_java_call_enter,
	trace_java_call_exit): Pass methodinfo to
	trace_java_call_print_argument.
	[b6cdad87ff4c]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (putIntVolatile): Implemented.
	(putLongVolatile): Likewise. (putOrderedObject): Likewise.
	(putOrderedInt): Likewise. (putOrderedLong): Likewise.
	(UNSAFE_GET_VOLATILE): Added macro. (UNSAFE_PUT_VOLATILE): Likewise.
	(getIntVolatile): Use UNSAFE_GET_VOLATILE. (getLongVolatile
	[10f08de2a96c]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (trace_java_call_exit): Workaround for
	sun.misc.Unsafe.staticFieldBase().
	[08b89131a6f0]

2008-03-19  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/lib/Makefile.am,
	src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/lib/gnu/gnu/classpath/VMStackWalker.java,
	src/lib/gnu/gnu/classpath/VMSystemProperties.java,
	src/lib/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/lib/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/lib/gnu/java/lang/VMString.java,
	src/lib/gnu/java/lang/VMThread.java,
	src/lib/gnu/java/lang/VMThrowable.java,
	src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/java/security/VMAccessController.java,
	src/lib/gnu/sun/misc/Unsafe.java,
	src/lib/gnu/sun/reflect/ConstantPool.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java, src/lib/gnu/
	sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java, sr
	c/lib/gnu/sun/reflect/annotation/EnumConstantNotPresentExceptionProx
	y.java, src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java, src/
	lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	tests/threadInterrupt.java:
	Merging 7971:887db7d64bc9 with 7970:21b063622472.
	[d870367cbe49]

	* src/vm/jit/cfg.c, src/vm/jit/jit.c, src/vm/jit/optimizing/ssa3.c,
	src/vm/jit/stack.c:
	* src/vm/jit/cfg.c (cfg_build): Support for strange basicblocks,
	where an IF can be followed by a NOP and GOTO.
	* src/vm/jit/jit.c (jit_compile_intern) [ENABLE_SSA]: Adapted for
	changes.
	* src/vm/jit/optimizing/ssa3.c: Changed a lot.
	* src/vm/jit/stack.c (stack_reach_next_block) [STACK_VERBOSE]: More
	verbosity to identify basicblocks where an IF can be followed by a
	GOTO.
	[887db7d64bc9]

2008-03-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/generic-primitives.h, src/vm/jit/alpha/machine-
	instr.h, src/vm/jit/arm/machine-instr.h, src/vm/jit/i386/machine-
	instr.h, src/vm/jit/m68k/machine-instr.h, src/vm/jit/mips/machine-
	instr.h, src/vm/jit/powerpc/machine-instr.h, src/vm/jit/powerpc64
	/machine-instr.h, src/vm/jit/s390/machine-instr.h,
	src/vm/jit/sparc64/machine-instr.h, src/vm/jit/x86_64/machine-
	instr.h:
	* src/threads/native/generic-primitives.h
	(MEMORY_BARRIER_BEFORE_ATOMIC): Removed.
	* src/vm/jit/alpha/machine-instr.h, src/vm/jit/arm/machine-instr.h,
	src/vm/jit/i386/machine-instr.h, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/mips/machine-instr.h, src/vm/jit/powerpc/machine-instr.h,
	src/vm/jit/powerpc64/machine-instr.h, src/vm/jit/s390/machine-
	instr.h, src/vm/jit/sparc64/machine-instr.h, src/vm/jit/x86_64
	/machine-instr.h: Likewise.
	[21b063622472]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (setMemory): Fixed compiler
	warning on 32-bit architectures. (copyMemory): Likewise.
	[a7e35749c949]

	* src/threads/native/generic-primitives.h,
	src/threads/native/threads.c, src/vm/jit/alpha/machine-instr.h,
	src/vm/jit/arm/machine-instr.h, src/vm/jit/i386/machine-instr.h,
	src/vm/jit/mips/machine-instr.h, src/vm/jit/powerpc/machine-instr.h,
	src/vm/jit/s390/machine-instr.h, src/vm/jit/sparc64/machine-instr.h,
	src/vm/jit/x86_64/machine-instr.h:
	* src/threads/native/generic-primitives.h (atomic_add): Removed.
	* src/threads/native/threads.c [USE_FAKE_ATOMIC_INSTRUCTIONS]
	(_atomic_add_lock): Removed.
	* src/vm/jit/alpha/machine-instr.h (atomic_add): Removed.
	* src/vm/jit/arm/machine-instr.h, src/vm/jit/i386/machine-instr.h,
	src/vm/jit/mips/machine-instr.h, src/vm/jit/powerpc/machine-instr.h,
	src/vm/jit/s390/machine-instr.h, src/vm/jit/sparc64/machine-instr.h,
	src/vm/jit/x86_64/machine-instr.h: Likewise.
	[c2f69cf3790e]

2008-03-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c:
	* src/native/vm/gnu/java_lang_VMThread.c (interrupt): Use
	thread_get_thread. (isInterrupted): Likewise. (nativeSetPriority):
	Likewise. (getState): Likewise.
	* src/native/vm/sun/jvm.c (threads/threadlist.h): Removed.
	(JVM_IsThreadAlive): Use thread_get_thread. (JVM_SetThreadPriority):
	Likewise. (JVM_Interrupt): Implemented. (JVM_IsInterrupted): Use
	thread_get_thread.
	[056edaebc79b]

	* src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c (thread_get_thread): New function.
	* src/threads/threads-common.h: Likewise.
	[ae7763ff1c13]

	* src/classes/gnu/sun/misc/Unsafe.java,
	src/native/vm/sun_misc_Unsafe.c:
	* src/classes/gnu/sun/misc/Unsafe.java: Imported the OpenJDK 6
	version.
	* src/native/vm/sun_misc_Unsafe.c (vmcore/system.h): Added.
	(setMemory, copyMemory): Changed to be OpenJDK 6 compatible.
	[162965872cfb]

	* contrib/setenvinstalled.in, contrib/setenvsource.in:
	* contrib/setenvinstalled.in: Updated BOOTCLASSPATH.
	* contrib/setenvsource.in: Likewise.
	[ccd8958ff259]

	* .hgignore:
	* .hgignore: Removed src/lib/classes/ and src/lib/vm.zip, added
	src/classes/classes/ and src/classes/vm.zip.
	[3b80e57be422]

	* configure.ac, m4/classpath.m4, src/Makefile.am,
	src/classes/Makefile.am,
	src/classes/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/classes/gnu/gnu/classpath/VMStackWalker.java,
	src/classes/gnu/gnu/classpath/VMSystemProperties.java,
	src/classes/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/classes/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/classes/gnu/java/lang/VMClassLoader.java,
	src/classes/gnu/java/lang/VMString.java,
	src/classes/gnu/java/lang/VMThread.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/security/VMAccessController.java,
	src/classes/gnu/sun/misc/Unsafe.java,
	src/classes/gnu/sun/reflect/ConstantPool.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationType.java, src/clas
	ses/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.
	java, src/classes/gnu/sun/reflect/annotation/EnumConstantNotPresentE
	xceptionProxy.java,
	src/classes/gnu/sun/reflect/annotation/ExceptionProxy.java, src/clas
	ses/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/lib/Makefile.am,
	src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/lib/gnu/gnu/classpath/VMStackWalker.java,
	src/lib/gnu/gnu/classpath/VMSystemProperties.java,
	src/lib/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/lib/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/lib/gnu/java/lang/VMString.java,
	src/lib/gnu/java/lang/VMThread.java,
	src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/java/security/VMAccessController.java,
	src/lib/gnu/sun/misc/Unsafe.java,
	src/lib/gnu/sun/reflect/ConstantPool.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java, src/lib/gnu/
	sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java, sr
	c/lib/gnu/sun/reflect/annotation/EnumConstantNotPresentExceptionProx
	y.java, src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java, src/
	lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/native/include/Makefile.am:
	* configure.ac (AC_CONFIG_FILES): Removed src/lib/Makefile, added
	src/classes/Makefile.
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Fixed
	BOOTCLASSPATH.
	* src/Makefile.am (DIST_SUBDIRS): Removed lib, added classes.
	(SUBDIRS): Likewise.

	* src/classes/Makefile.am,
	src/classes/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/classes/gnu/gnu/classpath/VMStackWalker.java,
	src/classes/gnu/gnu/classpath/VMSystemProperties.java,
	src/classes/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/classes/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/classes/gnu/java/lang/VMClassLoader.java,
	src/classes/gnu/java/lang/VMString.java,
	src/classes/gnu/java/lang/VMThread.java,
	src/classes/gnu/java/lang/reflect/Constructor.java,
	src/classes/gnu/java/lang/reflect/Field.java,
	src/classes/gnu/java/lang/reflect/Method.java,
	src/classes/gnu/java/security/VMAccessController.java,
	src/classes/gnu/sun/misc/Unsafe.java,
	src/classes/gnu/sun/reflect/ConstantPool.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/classes/gnu/sun/reflect/annotation/AnnotationType.java, src/clas
	ses/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.
	java, src/classes/gnu/sun/reflect/annotation/EnumConstantNotPresentE
	xceptionProxy.java,
	src/classes/gnu/sun/reflect/annotation/ExceptionProxy.java, src/clas
	ses/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/native/include/Makefile.am: Moved from lib.

	* src/lib/Makefile.am,
	src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/lib/gnu/gnu/classpath/VMStackWalker.java,
	src/lib/gnu/gnu/classpath/VMSystemProperties.java,
	src/lib/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/lib/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/lib/gnu/java/lang/VMString.java,
	src/lib/gnu/java/lang/VMThread.java,
	src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/java/security/VMAccessController.java,
	src/lib/gnu/sun/misc/Unsafe.java,
	src/lib/gnu/sun/reflect/ConstantPool.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java, src/lib/gnu/
	sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java, sr
	c/lib/gnu/sun/reflect/annotation/EnumConstantNotPresentExceptionProx
	y.java, src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java, src/
	lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java:
	Moved to lib.
	[79be8092620d]

	* m4/classpath.m4, tests/regression/Makefile.am,
	tests/regression/assertion/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am,
	tests/regression/resolving/Makefile.am:
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Set
	BOOTCLASSPATH for Makefiles.
	* tests/regression/Makefile.am,
	tests/regression/assertion/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am,
	tests/regression/resolving/Makefile.am (BOOTCLASSPATH): Removed.
	[c8c412f3563d]

2008-03-17  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/stacktrace.c:
	* Merged with 60f051a3c5ae.
	[66c52d0ae7d3]

	* * Merged with b78ab2bd233a.
	[60f051a3c5ae]

	* src/vm/jit/m68k/md.h:
	* src/vm/jit/m68k/md.h: Replaced codegen_get_pv_from_pc with
	methodtree_find.
	[17f63c532b66]

	* src/vm/jit/intrp/asmpart.c:
	* src/vm/jit/intrp/asmpart.c: Replaced codegen_get_pv_from_pc with
	methodtree_find.
	[b78ab2bd233a]

	* src/vm/jit/s390/md.c, src/vm/jit/s390/md.h:
	* src/vm/jit/s390/md.c: Replaced codegen_get_pv_from_pc with
	methodtree_find.
	* src/vm/jit/s390/md.h: Likewise.
	[ba13719a1aab]

	* src/vm/jit/methodtree.c:
	* src/vm/jit/methodtree.c (threads/threads-common.h): Added.
	(methodtree_find): Removed unnecessary assert.
	[929aa234977f]

	* src/vm/jit/i386/asmpart.S, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/i386/md.h:
	* src/vm/jit/i386/asmpart.S: Replaced codegen_get_pv_from_pc with
	methodtree_find.
	* src/vm/jit/i386/cygwin/md-asm.h src/vm/jit/i386/darwin/md-asm.h,
	src/vm/jit/i386/md.h: Likewise.
	[726425cd358a]

2008-03-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/Makefile.am, src/vm/jit/code.c, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/methodtree.c,
	src/vm/jit/methodtree.h, src/vm/jit/optimizing/profile.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/md.h, src/vm/signal.c, src/vm/vm.c:
	* src/vm/jit/methodtree.c: New file.
	* src/vm/jit/methodtree.h: Likewise.
	* src/vm/jit/Makefile.am (libjit_la_SOURCES): Added methodtree.[ch].

	* src/vm/jit/codegen-common.c (methodtree): Removed. (codegen_init):
	Removed methodtree stuff. (methodtree_comparator): Removed.
	(codegen_insertmethod): Likewise. (codegen_get_pv_from_pc):
	Likewise. (codegen_get_pv_from_pc_nocheck): Likewise.
	(codegen_finish): Call methodtree_insert.
	* src/vm/jit/codegen-common.h (methodtree_element): Removed.
	(codegen_insertmethod): Likewise. (codegen_get_pv_from_pc):
	Likewise. (codegen_get_pv_from_pc_nocheck): Likewise.

	* src/vm/vm.c (vm_create): Call methodtree_init.

	* src/vm/jit/code.c, src/vm/jit/optimizing/profile.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/md.h, src/vm/signal.c: Replaced
	codegen_get_pv_from_pc* with methodtree_find*.
	[414c5fa5f01e]

	* src/vm/jit/inline/inline.c, src/vm/jit/inline/inline_debug.inc:
	* src/vm/jit/inline/inline.c (inline_add_blocknr_reference):
	Commented as it's not used and produces a compiler warning.
	* src/vm/jit/inline/inline_debug.inc (debug_dump_inline_context):
	Likewise.
	[9c8901fcff0a]

	* src/lib/Makefile.am, src/lib/gnu/java/lang/VMThrowable.java,
	src/native/vm/gnu/java_lang_VMThrowable.c, src/vm/jit/stacktrace.c:
	* src/lib/gnu/java/lang/VMThrowable.java: Removed, as the local
	changes made years ago are not necessary.
	* src/lib/Makefile.am (VM_JAVA_FILES_GNU): Removed
	gnu/java/lang/VMThrowable.java.

	* src/native/vm/gnu/java_lang_VMThrowable.c (fillInStackTrace): Use
	vmdata instead of vmData. (getStackTrace): Likewise.
	* src/vm/jit/stacktrace.c (stacktrace_print_exception)
	[WITH_CLASSPATH_GNU]: Likewise.
	[ac9fca996d5e]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_detach_thread): Fixed
	compiler warning.
	[2f60b3f9a1da]

	* src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c (md_replace_executionstate_read):
	Renamed to md_executionstate_read.
	(md_replace_executionstate_write): Renamed to
	md_executionstate_write.
	[190dab35c7f0]

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_replace_executionstate_read):
	Renamed to md_executionstate_read.
	(md_replace_executionstate_write): Renamed to
	md_executionstate_write.
	[28eb425cbf17]

	* src/vm/jit/executionstate.c, src/vm/jit/executionstate.h:
	* src/vm/jit/executionstate.c: Fixed file comment.
	* src/vm/jit/executionstate.h: Fixed copyright.
	[d044bbdb3010]

	* src/vm/jit/Makefile.am, src/vm/jit/executionstate.c,
	src/vm/jit/executionstate.h, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/executionstate.c: New file.
	* src/vm/jit/executionstate.h: Likewise.
	* src/vm/jit/Makefile.am (libjit_la_SOURCES): Added
	executionstate.[ch].

	* src/vm/jit/replace.c (replace_executionstate_println): Moved to
	executionstate.[ch]. (replace_sanity_check_read_write): Likewise.
	* src/vm/jit/replace.h (executionstate_t): Likwise.
	(replace_executionstate_println): Likewise.
	(md_replace_executionstate_read): Likewise.
	(md_replace_executionstate_write): Likewise.

	* src/vm/jit/i386/linux/md-os.c (md_replace_executionstate_read):
	Renamed to md_executionstate_read.
	(md_replace_executionstate_write): Renamed to
	md_executionstate_write.
	[015609f9c237]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): Added thread unsafe
	comments.
	[fe0f7708d735]

	* src/threads/none/threads.h, src/threads/threads-common.h:
	* src/threads/none/threads.h (threads_get_current_object): Changed
	return type to java_handle_t.
	* src/threads/threads-common.h: Likewise.
	[ba1986e7117c]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (TRACEJVMCALLS): Changed to normal macro
	instead of a variadic one.
	[ac949484e6cd]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (PRINTJVMWARNINGS): Changed to normal
	macro instead of variadic. (JVM_GetStackTraceDepth): Fixed compiler
	warning. (JVM_GetStackTraceElement): Likewise. (JVM_IsThreadAlive):
	Likewise.
	[4a49aeff7fd7]

	* src/native/localref.c:
	* src/native/localref.c [!NDEBUG] (localref_check_uncleared): Fixed
	compiler warning.
	[4126ae263bbd]

2008-03-12  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/vm/jit/code.c, src/vm/jit/code.h,
	src/vm/jit_interface.h, src/vmcore/method.c:
	* src/vm/jit/code.c (code_find_codeinfo_for_pc): Use void* instead
	of u1*. (code_find_codeinfo_for_pc_nocheck): Likewise.
	(code_get_methodinfo_for_pv): Likewise.
	* src/vm/jit/code.h: Likewise.
	* src/cacaoh/dummy.c (vm/jit/code.h): Added.
	(code_get_methodinfo_for_pv): Likewise.
	* src/vm/jit_interface.h (code_get_methodinfo_for_pv): Removed.
	* src/vmcore/method.c (vm/jit/code.h): Added.
	[a2f65e9ce093]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_GetDirectBufferAddress): Fixed compiler
	warnings.
	[42e52f1166c9]

	* src/threads/none/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h:
	* src/threads/none/threads.h (threads_get_current_object): New
	function. (threads_get_current_stackframeinfo): Fixed name to
	threads_set_current_stackframeinfo.

	* src/threads/threads-common.c (threads_get_current_object):
	Removed.
	* src/threads/threads-common.h (threads_get_current_object): New
	function. (threads_get_current_object): Removed.

	* src/vm/jit/stacktrace.c: Small fix.
	* src/vm/jit/stacktrace.h [!ENABLE_THREADS]
	(_no_threads_stackframeinfo): Added.
	[2b9f0242d4f6]

	* src/native/vm/reflect.c:
	* src/native/vm/reflect.c (reflect_field_new): Fixed compiler
	warnings. (reflect_method_new): Likewise.
	[c71069a7c75a]

	* src/vm/jit/code.c, src/vm/jit/code.h, src/vm/vm.c:
	* src/vm/jit/code.c (code_init): Changed signature, use vm_abort
	instead of assert.
	* src/vm/jit/code.h (code_init): Change signature.
	* src/vm/vm.c (vm_create): Call code_init.
	[9f0c6db8a687]

2008-03-12  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/threads.c:
	Oh no, it worketh!

	* src/threads/native/threads.c: Include Boehm header on Darwin.
	[ac7444e86ffc]

2008-03-11  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* configure.ac, src/mm/boehm-gc/AmigaOS.c, src/mm/boehm-
	gc/BCC_MAKEFILE, src/mm/boehm-gc/ChangeLog, src/mm/boehm-
	gc/EMX_MAKEFILE, src/mm/boehm-gc/MacOS.c, src/mm/boehm-
	gc/Makefile.am, src/mm/boehm-gc/Makefile.direct, src/mm/boehm-
	gc/Makefile.dj, src/mm/boehm-gc/NT_MAKEFILE, src/mm/boehm-
	gc/NT_STATIC_THREADS_MAKEFILE, src/mm/boehm-gc/NT_THREADS_MAKEFILE,
	src/mm/boehm-gc/NT_X64_STATIC_THREADS_MAKEFILE, src/mm/boehm-
	gc/OS2_MAKEFILE, src/mm/boehm-gc/PCR-Makefile, src/mm/boehm-
	gc/README.QUICK, src/mm/boehm-gc/SMakefile.amiga, src/mm/boehm-
	gc/WCC_MAKEFILE, src/mm/boehm-gc/allchblk.c, src/mm/boehm-
	gc/alloc.c, src/mm/boehm-gc/autogen.sh, src/mm/boehm-gc/backgraph.c,
	src/mm/boehm-gc/bdw-gc.pc.in, src/mm/boehm-gc/blacklst.c, src/mm
	/boehm-gc/callprocs, src/mm/boehm-gc/checksums.c, src/mm/boehm-
	gc/configure.ac, src/mm/boehm-gc/configure.in, src/mm/boehm-
	gc/configure_atomic_ops.sh, src/mm/boehm-gc/cord/cord.am, src/mm
	/boehm-gc/cord/de_win.ICO, src/mm/boehm-gc/cord/de_win.c, src/mm
	/boehm-gc/darwin_stop_world.c, src/mm/boehm-gc/dbg_mlc.c, src/mm
	/boehm-gc/digimars.mak, src/mm/boehm-gc/doc/Makefile.am, src/mm
	/boehm-gc/doc/README, src/mm/boehm-gc/doc/README.Mac, src/mm/boehm-
	gc/doc/README.changes, src/mm/boehm-gc/doc/README.darwin, src/mm
	/boehm-gc/doc/README.environment, src/mm/boehm-gc/doc/README.linux,
	src/mm/boehm-gc/doc/README.macros, src/mm/boehm-
	gc/doc/README.solaris2, src/mm/boehm-gc/doc/README.win32, src/mm
	/boehm-gc/doc/README.win64, src/mm/boehm-gc/doc/doc.am, src/mm
	/boehm-gc/doc/gcdescr.html, src/mm/boehm-gc/doc/gcinterface.html,
	src/mm/boehm-gc/doc/leak.html, src/mm/boehm-gc/doc/overview.html,
	src/mm/boehm-gc/doc/porting.html, src/mm/boehm-gc/dyn_load.c, src/mm
	/boehm-gc/finalize.c, src/mm/boehm-gc/gc.mak, src/mm/boehm-
	gc/gc_cpp.cc, src/mm/boehm-gc/gc_dlopen.c, src/mm/boehm-
	gc/gcc_support.c, src/mm/boehm-gc/gcj_mlc.c, src/mm/boehm-
	gc/headers.c, src/mm/boehm-gc/if_mach.c, src/mm/boehm-
	gc/if_not_there.c, src/mm/boehm-gc/include/Makefile.am, src/mm
	/boehm-gc/include/gc.h, src/mm/boehm-gc/include/gc_alloc.h, src/mm
	/boehm-gc/include/gc_allocator.h, src/mm/boehm-
	gc/include/gc_config_macros.h, src/mm/boehm-gc/include/gc_cpp.h,
	src/mm/boehm-gc/include/gc_gcj.h, src/mm/boehm-gc/include/gc_inl.h,
	src/mm/boehm-gc/include/gc_inline.h, src/mm/boehm-
	gc/include/gc_local_alloc.h, src/mm/boehm-gc/include/gc_mark.h,
	src/mm/boehm-gc/include/gc_pthread_redirects.h, src/mm/boehm-
	gc/include/gc_tiny_fl.h, src/mm/boehm-gc/include/gc_typed.h, src/mm
	/boehm-gc/include/include.am, src/mm/boehm-
	gc/include/new_gc_alloc.h, src/mm/boehm-
	gc/include/private/dbg_mlc.h, src/mm/boehm-
	gc/include/private/gc_hdrs.h, src/mm/boehm-
	gc/include/private/gc_locks.h, src/mm/boehm-
	gc/include/private/gc_pmark.h, src/mm/boehm-
	gc/include/private/gc_priv.h, src/mm/boehm-
	gc/include/private/gcconfig.h, src/mm/boehm-
	gc/include/private/msvc_dbg.h, src/mm/boehm-
	gc/include/private/pthread_support.h, src/mm/boehm-
	gc/include/private/solaris_threads.h, src/mm/boehm-
	gc/include/private/specific.h, src/mm/boehm-
	gc/include/private/thread_local_alloc.h, src/mm/boehm-
	gc/libatomic_ops-1.2/AUTHORS, src/mm/boehm-
	gc/libatomic_ops-1.2/COPYING, src/mm/boehm-
	gc/libatomic_ops-1.2/ChangeLog, src/mm/boehm-
	gc/libatomic_ops-1.2/INSTALL, src/mm/boehm-
	gc/libatomic_ops-1.2/Makefile.am, src/mm/boehm-
	gc/libatomic_ops-1.2/NEWS, src/mm/boehm-gc/libatomic_ops-1.2/README,
	src/mm/boehm-gc/libatomic_ops-1.2/autogen.sh, src/mm/boehm-
	gc/libatomic_ops-1.2/configure.ac, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/COPYING, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/LICENSING.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/Makefile.am, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/README.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/README_malloc.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/README_stack.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/doc/README_win32.txt, src/mm/boehm-
	gc/libatomic_ops-1.2/mkinstalldirs, src/mm/boehm-
	gc/libatomic_ops-1.2/src/Makefile.am, src/mm/boehm-
	gc/libatomic_ops-1.2/src/Makefile.msft, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops.c, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/Makefile.am, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/generalize-small.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/generalize-
	small.template, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/generalize.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/Makefile.am, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/README, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/acquire_release_v
	olatile.h, src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/
	aligned_atomic_load_store.h, src/mm/boehm-gc/libatomic_ops-1.2/src/a
	tomic_ops/sysdeps/all_acquire_release_volatile.h, src/mm/boehm-gc/li
	batomic_ops-1.2/src/atomic_ops/sysdeps/all_aligned_atomic_load_store
	.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/all_atomic_load_store.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/ao_t_is_int.h, src/mm
	/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/atomic_load_store.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/char_acquir
	e_release_volatile.h, src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_o
	ps/sysdeps/char_atomic_load_store.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/emul_cas.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/alpha.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/arm.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/cris.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/hppa.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/ia64.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/m68k.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/powerpc.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/s390.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/sparc.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/x86.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/gcc/x86_64.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/generic_pthread.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/hpc/hppa.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/hpc/ia64.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/ibmc/powerpc.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/icc/ia64.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/int_acquire
	_release_volatile.h, src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_op
	s/sysdeps/int_aligned_atomic_load_store.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/int_atomic_load_store.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/msftc/x86.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/msftc/x86_64.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/ordered.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/ordered_except_wr.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/read_ordered.h, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/short_acquire_rel
	ease_volatile.h, src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sy
	sdeps/short_aligned_atomic_load_store.h, src/mm/boehm-gc/libatomic_o
	ps-1.2/src/atomic_ops/sysdeps/short_atomic_load_store.h, src/mm
	/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/standard_ao_double_t.h,
	src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/sunc/sparc.S, src/mm
	/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/sunc/sparc.h,
	src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysdeps/test_and_se
	t_t_is_ao_t.h, src/mm/boehm-gc/libatomic_ops-1.2/src/atomic_ops/sysd
	eps/test_and_set_t_is_char.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops_malloc.c, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops_malloc.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops_stack.c, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops_stack.h, src/mm/boehm-
	gc/libatomic_ops-1.2/src/atomic_ops_sysdeps.S, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/Makefile.am, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/list_atomic.c, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/list_atomic.template, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/run_parallel.inc, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/test_atomic.c, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/test_atomic.template, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/test_atomic_include.h, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/test_malloc.c, src/mm/boehm-
	gc/libatomic_ops-1.2/tests/test_stack.c, src/mm/boehm-gc/libtool.m4,
	src/mm/boehm-gc/ltconfig, src/mm/boehm-gc/mach_dep.c, src/mm/boehm-
	gc/malloc.c, src/mm/boehm-gc/mallocx.c, src/mm/boehm-gc/mark.c,
	src/mm/boehm-gc/mark_rts.c, src/mm/boehm-gc/misc.c, src/mm/boehm-
	gc/mkinstalldirs, src/mm/boehm-gc/msvc_dbg.c, src/mm/boehm-
	gc/new_hblk.c, src/mm/boehm-gc/obj_map.c, src/mm/boehm-gc/os_dep.c,
	src/mm/boehm-gc/pc_excludes, src/mm/boehm-gc/pcr_interface.c, src/mm
	/boehm-gc/powerpc_darwin_mach_dep.s, src/mm/boehm-
	gc/pthread_stop_world.c, src/mm/boehm-gc/pthread_support.c, src/mm
	/boehm-gc/ptr_chck.c, src/mm/boehm-gc/real_malloc.c, src/mm/boehm-
	gc/reclaim.c, src/mm/boehm-gc/setjmp_t.c, src/mm/boehm-
	gc/solaris_pthreads.c, src/mm/boehm-gc/solaris_threads.c, src/mm
	/boehm-gc/sparc_mach_dep.S, src/mm/boehm-gc/specific.c, src/mm
	/boehm-gc/stubborn.c, src/mm/boehm-gc/tests/leak_test.c, src/mm
	/boehm-gc/tests/middle.c, src/mm/boehm-gc/tests/test.c, src/mm
	/boehm-gc/tests/test_cpp.cc, src/mm/boehm-gc/tests/tests.am, src/mm
	/boehm-gc/tests/thread_leak_test.c, src/mm/boehm-
	gc/tests/trace_test.c, src/mm/boehm-gc/thread_local_alloc.c, src/mm
	/boehm-gc/threadlibs.c, src/mm/boehm-gc/typd_mlc.c, src/mm/boehm-
	gc/version.h, src/mm/boehm-gc/win32_threads.c, src/mm/boehm.c:
	Imported and merged Boehm GC 7.0
	[85f594678514]

	* src/mm/boehm.c:
	* src/mm/boehm.c: Define GC_DARWIN_THREADS.
	[6342939f5ec7]

	* Merge -> trunk
	[785419807437]

2008-03-05  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/mm/boehm-gc/BCC_MAKEFILE, src/mm/boehm-gc/digimars.mak:
	* src/mm/boehm-gc/BCC_MAKEFILE, src/mm/boehm-gc/digimars.mak:
	unix2dos'ed the way they were in gc6.8.
	[70786a061a3c]

2008-03-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_thread_start_internal): Code
	reworked. (threads_thread_start): Likewise.
	[28798cbb3598]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c [ENABLE_JAVASE] (threadgroup_system,
	(threadgroup_main): New variables. (threads_init): Call
	thread_create_initial_threadgroups and thread_create_initial_thread.
	(thread_create_initial_threadgroups): New function.
	(thread_create_initial_thread): Likewise.
	(threads_get_current_object): Removed empty-group hack.
	[4587829c96e0]

	* src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/utf8.c
	(utf_Ljava_lang_ThreadGroup_Ljava_lang_String__V): Added.
	* src/vmcore/utf8.h: Likewise.
	[11c519559b6e]

	* src/native/jni.c, src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_created): Added. (vm_create): Set vm_created.
	(vm_destroy): Unset vm_created.
	* src/vm/vm.h: (vm_created): Added.
	* src/native/jni.c (_Jv_JNI_DestroyJavaVM): Added vm_created check.
	(_Jv_JNI_AttachCurrentThread): Likewise. (_Jv_JNI_GetEnv): Likewise.
	(_Jv_JNI_AttachCurrentThreadAsDaemon): Likewise.
	[df45c6a94042]

	* src/cacaoh/cacaoh.c, src/vm/vm.c, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	* src/vmcore/utf8.c (utf_main): Added. (utf8_init): Changed
	signature.
	* src/vmcore/utf8.h: Likewise.
	* src/cacaoh/cacaoh.c (main): Removed return value check for
	utf8_init.
	* src/vm/vm.c (vm_create): Likewise.
	[b02fb9ce8032]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/vm.c:
	* src/threads/native/threads.c (method_thread_init): Removed.
	(threads_init): Removed. (threads_impl_init): New function.
	(threads_attach_current_thread): Renamed method_thread_init to
	thread_method_init.
	* src/threads/native/threads.h (threads_init): Removed

	* src/threads/threads-common.c (native/native.h): Added.
	[ENABLE_JAVASE] (native/include/java_lang_ThreadGroup.h): Likewise.
	[WITH_CLASSPATH_GNU] (native/include/java_lang_Throwable.h):
	Removed. (toolbox/list.h): Likewise. (vm/exceptions.h): Added.
	(vmcore/method.h): Likewise. (thread_method_init): Likewise.
	(threads_init): New function.
	* src/threads/threads-common.h (thread_method_init): Added.
	(threads_init): Likewise. (threads_impl_init): Likewise.

	* src/vm/vm.c (vm_create) [ENABLE_THREADS]: Removed return value
	check for threads_init.
	[a55398aa6b7a]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create) [!NDEBUG]: Removed conditional, as we want
	the config for production builds too.
	[634e86c4c855]

2008-03-10  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/Makefile.am, src/threads/native/lock.c,
	src/threads/native/threadlist-posix.c, src/threads/native/threads.c,
	src/threads/threadlist.c, src/threads/threadlist.h, src/threads
	/threads-common.c, src/threads/threads-common.h,
	src/vm/jit/optimizing/profile.c:
	* src/threads/native/threadlist-posix.c: New file.
	* src/threads/native/Makefile.am (libthreadsposix_la_SOURCES): Added
	threadlist-posix.c.

	* src/threads/native/threads.c (mutex_threads_list): Removed.
	(threads_impl_preinit): Removed mutex_threads_list initialization.
	(threads_list_lock, threads_list_unlock): Removed.

	* src/threads/threadlist.c (threadlist_init): Call
	threadlist_impl_init.

	* src/threads/threadlist.h (threadlist_impl_init, threadlist_lock)
	(threadlist_unlock): Added.

	* src/threads/threads-common.h (threads_list_lock)
	(threads_list_unlock): Removed.

	* src/threads/native/lock.c, src/threads/threads-common.c,
	src/vm/jit/optimizing/profile.c: Use new threadlist_{lock,unlock}
	functions.
	[f47de576dda1]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c [ENABLE_JAVASE]
	(native/include/java_lang_ThreadGroup.h): Only a temporary hack.
	[8ba3980d54fa]

	* src/vm/signal.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_TraceTraps): Added.
	* src/vmcore/options.h: Likewise.

	* src/vm/signal.c (signal_handle) [!NDEBUG]: Added opt_TraceTraps
	debug output. This is not finished yet.
	[ea6e9a832c48]

	* src/cacaoh/dummy.c, src/vmcore/options.c:
	* src/cacaoh/dummy.c (errno.h): Added. (vmcore/system.h): Likewise.
	(vm_abort_errno): New function. (vm_abort_errnum): Likewise.

	* src/vmcore/options.c (errno.h): Removed. (options_xx): Use
	vm_abort_errno.
	[96dddc7f5487]

	* src/vm/signal.c:
	* src/vm/signal.c (errno.h): Removed. (signal_init): Use
	vm_abort_errno. (signal_register_signal): Likewise. (signal_thread):
	Likewise.
	[b85835120e85]

	* NEWS:
	* NEWS: Added 0.99 news.
	[09791a7c5a1b]

2008-03-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (putObjectVolatile): OK, this time
	WITHOUT debug output. Damn.
	[f1757b2a1bb3]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (putObjectVolatile): Implemented.
	[a8989730157b]

2008-03-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/threadlist.c:
	* src/threads/threadlist.c (threadlist_index_add): Actually set the
	index in the structure.
	[70cea5d87e1a]

	* src/mm/cacao-gc/rootset.c, src/native/vm/sun/jvm.c,
	src/vm/jit/optimizing/profile.c:
	* src/mm/cacao-gc/rootset.c (threads/threadlist.h): Added.
	(rootset_readout): Use threadlist_* functions.

	* src/native/vm/sun/jvm.c (threads/threadlist.h): Added.
	(JVM_IsThreadAlive): Use threadlist_* functions.
	(JVM_SetThreadPriority): Likewise. (JVM_IsInterrupted): Likewise.

	* src/vm/jit/optimizing/profile.c (threads/threadlist.h): Added.
	(profile_thread): Use threadlist_* functions.
	[bfdd735b3ecb]

	* src/native/vm/Makefile.am, src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	src/native/vm/sun/jvm.c, src/threads/threads-common.c, src/threads
	/threads-common.h:
	* src/native/vm/java_lang_Thread.c: Removed.
	* src/native/vm/java_lang_Thread.h: Likewise.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Removed
	java_lang_Thread.[ch].

	* src/threads/threads-common.c (threads_get_current_object): New
	function.
	* src/threads/threads-common.h: Likewise.

	* src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/sun/jvm.c:
	Implemented thread functions directly.
	[e0404195c823]

	* configure.ac, m4/classpath.m4:
	* configure.ac (AM_CPPFLAGS): Set to CPPFLAGS.

	* m4/classpath.m4 (AC_CHECK_WITH_JNI_MD_H): Preserve CPPFLAGS.
	(AC_CHECK_WITH_JNI_H): Likewise.
	[285ff795b4ba]

	* src/Makefile.am:
	* src/Makefile.am: Changed copyright.
	[1c3bd7bb8db1]

	* src/threads/Makefile.am, src/threads/lock-common.h,
	src/threads/native/lock.c, src/threads/native/threads.c,
	src/threads/threadlist.c, src/threads/threadlist.h, src/threads
	/threads-common.c, src/threads/threads-common.h, src/vm/vm.c:
	* src/threads/threadlist.c: New file.
	* src/threads/threadlist.h: Likewise.

	* src/threads/Makefile.am (libthreads_la_SOURCES): Added
	threadlist.[ch].

	* src/threads/lock-common.h: Changed copyright.

	* src/threads/native/lock.c (threads/threadlist.h): Added.
	(threads_lookup_thread_id): Use threadlist_* functions.

	* src/threads/native/threads.c (threads/threadlist.h): Added.
	(threads_cast_sendsignals): Use threadlist_* functions.
	(threads_stopworld): Likewise. (threads_startworld): Likewise.
	(threads_init): Likewise. (threads_attach_current_thread): Likewise.
	(threads_join_all_threads): Likewise.

	* src/threads/threads-common.c (threads/threadlist.h): Added.
	(list_threads, list_free_threads, list_free_thread_index): Removed.
	(thread_index_t): Removed. (threads_preinit): Don't initialize the
	thread lists, moved lock_init and critical_init calls into
	vm_create. (threads_list_first, threads_list_next): Removed.
	(threads_list_get_non_daemons): Likewise. (threads_thread_new,
	threads_thread_free): Use threadlist_* functions.

	* src/threads/threads-common.h (threads_list_first): Removed.
	(threads_list_next): Likewise. (threads_list_get_non_daemons):
	Likewise.

	* src/vm/vm.c (threads/lock-common.h): Added.
	(threads/threadlist.h): Added. (vm_create) [ENABLE_THREADS]: Call
	threadlist_init, lock_init and critical_init.
	[88c7c1a68bda]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c [WITH_CLASSPATH_CLDC1_1]
	(native/include/java_lang_String.h): Added.
	[5856f0d523a2]

	* configure.ac, m4/classpath.m4, src/native/jni.h:
	* configure.ac (AC_CHECK_WITH_CLASSPATH_INCLUDEDIR): Removed.
	[!WITH_JRE_LAYOUT] (AC_CHECK_WITH_CLASSPATH_LIBDIR): Conditional.
	(AC_CHECK_WITH_JNI_MD_H): Added. (AC_CHECK_WITH_JNI_H): Likewise.
	(AM_CPPFLAGS): Added.

	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_INCLUDEDIR): Removed.
	(AC_CHECK_WITH_JNI_MD_H): New macro. (AC_CHECK_WITH_JNI_H):
	Likewise.

	* src/native/jni.h (__GCJ_JNI_MD_H__): Removed the quick hack.
	(CLASSPATH_JNI_MD_H): Removed. (CLASSPATH_JNI_H): Likewise.
	(INCLUDE_JNI_MD_H): Added. (INCLUDE_JNI_H): Likewise.
	[eab0c7885c52]

	* src/lib/Makefile.am:
	* src/lib/Makefile.am [WITH_CLASSPATH_GNU || WITH_CLASSPATH_CLDC1_1]
	(pkgdata_DATA): Only define it for GNU or CLDC-1.1 configurations.
	[1d15fd390244]

	* src/cacao/Makefile.am:
	* src/cacao/Makefile.am (libjvm_la_LDFLAGS): Use -version-info
	instead of -release, as the library interface of libjvm.so will not
	change.
	[46784cb01dc1]

2008-03-04  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* man/Makefile.am:
	* man/Makefile.am: Changed copyright.
	[46f2ae819ff5]

	* doc/Makefile.am:
	* doc/Makefile.am: Changed copyright.
	[6c354dd4fcd8]

	* contrib/Makefile.am:
	* contrib/Makefile.am: Changed copyright.
	[3f9fc73789e5]

	* Makefile.am:
	* Makefile.am: Changed copyright.
	[23e283b63784]

	* NEWS:
	* NEWS: Fixed month for 0.99.
	[0fc50ddc4a9f]

2008-03-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* NEWS:
	* NEWS: Added some 0.99 release notes.
	[5b338798aa0b]

2008-03-03  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* tests/threadInterrupt.java:
	Merge -> trunk.
	[2fa6a94596b0]

	* src/threads/native/lock.c, src/threads/native/threads.c,
	src/threads/native/threads.h:
	interrupt() / notify() fix.

	* src/threads/native/lock.c (lock_record_wait, lock_record_notify):
	Correctly handling the signaled and interrupted flags.

	* src/threads/native/threads.c (threads_wait_with_timeout)
	(threads_wait_with_timeout_relative): No return value, not touching
	flags. (threads_check_if_interrupted_and_reset): Now locking the
	waitmutex. (threads_sleep): Adapted to change.

	* src/threads/native/threads.h (threads_wait_with_timeout_relative):
	No return value.
	[9ffa63aa1415]

	* tests/threads/waitAndInterrupt.java:
	* tests/threads/waitAndInterrupt.java: New test hanging CACAO.
	[831d66c6b70a]

	* .hgignore, tests/threadInterrupt.java,
	tests/threads/threadInterrupt.java:
	* .hgignore: Ignoring class files.
	* tests/threads: New directory for thread tests.
	* tests/threads/threadInterrupt.java: Moved.
	[820a5859b970]

2008-03-01  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* .hgignore:
	* .hgignore: Ignoring latex output files.
	[c68604485dd4]

2008-03-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/lib/Makefile.am:
	* src/lib/Makefile.am (EXTRA_DIST): Removed VM_JAVA_FILES, added
	VM_JAVA_FILES_GNU, VM_JAVA_FILES_GNU_ANNOTATIONS,
	VM_JAVA_FILES_CLDC1_1. (VM_JAVA_FILES): Removed.
	(VM_JAVA_FILES_GNU): Added. (VM_JAVA_FILES_GNU_ANNOTATIONS):
	Likewise. (VM_JAVA_FILES_CLDC1_1): Likewise.
	[ec85f6c4026c]

2008-02-29  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	Reusing threadobjects.

	* src/threads/native/threads.c (threads_impl_thread_new): Removed
	and split up into three new functions. (threads_impl_thread_init,
	threads_impl_thread_clear) (threads_impl_thread_reuse): New
	functions. (threads_impl_thread_free): Disabled.

	* src/threads/native/threads.h (threadobject): Added field for free-
	list.

	* src/threads/threads-common.c (threads_preinit, threads_thread_new)
	(threads_thread_free): Reuse threadobjects.

	* src/threads/threads-common.h: New function declarations.
	[d73f6705d7ad]

2008-02-28  pm  <pm@c8.complang.tuwien.ac.at>

	* src/vm/jit/cfg.c:
	* src/vm/jit/cfg.c (cfg_add_exceptional_edges): Conditionally
	compiling (was forgotten).
	[97bbdfcfb666]

2008-02-28  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/jit.c:
	Merging 7888.
	[42ae5a01ac5a]

	* src/vm/jit/cfg.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa3.c:
	* src/vm/jit/cfg.c (cfg_add_exceptional_edges): New function
	* src/vm/jit/jit.c (jit_compile_intern) [ENABLE_SSA]: Adapted.
	* src/vm/jit/jit.h (struct basicblock) [ENABLE_SSA]: New fileds for
	exception handlers in cfg.
	* src/vm/jit/optimizing/ssa.c (ssa): Adapted.
	* src/vm/jit/optimizing/ssa3.c: Changed a lot, currenly broken.
	[5faec567ca14]

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md.c:
	* src/vm/jit/s390/asmpart.S (L_offsets): Removed references to
	unused functions.
	* src/vm/jit/s390/md.c: Including vm/jit/s390/md.h.
	[0d5247355a8c]

2008-02-27  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* tests/threadInterrupt.java:
	* tests/threadInterrupt.java: Added a test showing a bug in the pre-
	sable implementation.
	[048e4ed58d94]

	* src/threads/native/lock.c, src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_set_current_threadobject):
	Added a few vm_abort_errnum calls. (threads_get_current_thread):
	Likewise.

	* src/threads/native/lock.c (lock_record_new): Likewise.
	(lock_record_free): Likewise.
	[40e84a6ae6ea]

2008-02-21  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_replace_executionstate_read):
	Fix copy&paste mistake (for reading the PC).
	[8af912202925]

2008-02-20  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/replace.h (executionstate_t): Added 'ra' field for
	return address register. Otherwise replacement code for the PowerPC
	gets very ugly, as the LR is not part of the intregs on PowerPC.

	* src/vm/jit/replace.c (replace_executionstate_println): Added print
	statements. (replace_sanity_check_read_write): Check 'ra' field.

	* src/vm/jit/alpha/linux/md-os.c (md_replace_executionstate_read):
	Use new 'ra' field. (md_replace_executionstate_write): Likewise.

	* src/vm/jit/powerpc/linux/md-os.c (md_replace_executionstate_read):
	Implemented for PowerPC/Linux. (md_replace_executionstate_write):
	Likewise.
	[54cb4d152e6f]

	* src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c (md_replace_executionstate_read):
	Do not use the assignment operator for the float registers, as the
	type conversion messes up their values (they are not 'double' in the
	context). (md_replace_executionstate_write): Likewise.
	[9a2f257d4326]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_sanity_check_read_write): New
	function. Perform some basic sanity checks of the md_replacement_*
	implementations. (replace_me_wrapper): Call above function in
	debugging mode.
	[401ef412801a]

2008-02-20  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* Merged with tip
	[1c5d66f62119]

2008-02-19  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* Merged with cldc-branch
	[eb7a914bf640]

2008-02-19  tbfg  <tbfg@c1.complang.tuwien.ac.at>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h:
	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Do not overwrite
	return address with method to be invoked.

	* src/vm/jit/m68k/codegen.c (codegen_emit_stub_native): Removed call
	to trace function as seen in other archs.

	* src/vm/jit/m68k/codegen.h (COMPILERSTUB_CODESIZE): Fix size for
	new compiler trap.
	[3f6144729487]

2008-02-15  tbfg  <tbfg@c1.complang.tuwien.ac.at>

	* src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/linux/md-abi.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit_stub_native): Handle
	builtin correctly.
	* src/vm/jit/m68k/linux/md-abi.c (md_param_alloc_native): With 8 bytes
	stack slots internally natives need a 4 byte stack slot allocation.
	(md_param_alloc): Set index correctly.
	[c87ce21ccdf8]

2008-02-19  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_alu_imm_membase): Fix emit_rex
	call.
	[97f2df303ae7]

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_alul_imm_membase): Fix emit_rex
	call.
	[0eae2350805d]

2008-02-18  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/inline/inline.c, src/vmcore/options.c:
	* src/vmcore/options.h, src/vmcore/options.c,
	src/vm/jit/inline/inline.c: Trace levels for inlining.
	[a572dc07befb]

	* src/vm/jit/inline/inline.c:
	* src/vm/jit/inline/inline.c (inline_transform): Make semantics of
	opt_InlineCount less confusing.
	[02db2973e156]

	* src/vm/jit/inline/inline.c, src/vm/jit/jit.c, src/vm/vm.c,
	src/vmcore/linker.c, src/vmcore/method.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vmcore/options.h, src/vmcore/options.c, src/vmcore/method.c,
	src/vmcore/linker.c, src/vm/vm.c, src/vm/jit/jit.c,
	src/vm/jit/inline/inline.c: Changed inlining options to -XX options.
	[fcb2ea727c23]

2008-02-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc/linux/md-abi.c:
	* src/vm/jit/powerpc/linux/md-abi.c (md_return_alloc): Use switch-
	case.
	[0b1af4df6ef2]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Use switch-case to
	store return values for invokes.
	[016cdf940d81]

2008-02-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_native): Use
	switch-case for argument copying.
	[720c659e4ecc]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Removed variable a,
	added variable i.
	[bb4a72bd2d52]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Use switch-case when
	argument copying for invokes.
	[2e2c6db95e46]

	* src/vm/jit/powerpc/codegen.h:
	* src/vm/jit/powerpc/codegen.h: Grouped and alpha-sorted the code
	generating macros.
	[c280412cfc3b]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_gc_from_native): Fixed typo, again.
	[897943ebddcc]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_me): Fixed typo.
	[273027fcc0d0]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_me): Use
	threads_get_current_stackframeinfo(). (replace_gc_from_native):
	Likewise.
	[28d447c7b5f7]

	* src/mm/cacao-gc/gc.c, src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/java_lang_VMThrowable.c, src/native/vm/sun/jvm.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/threads/threads-common.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.c (stacktrace_get): Changed signature to
	take again a stackframeinfo_t. (stacktrace_get_current): New
	function. (stacktrace_stackframeinfo_add): Use
	threads_get_current_stackframeinfo.
	(stacktrace_stackframeinfo_remove): Likewise.
	(stacktrace_first_nonnull_classloader): Likewise.
	(stacktrace_getClassContext): Likewise.
	(stacktrace_get_current_class): Likewise. (stacktrace_get_stack):
	Likewise.
	* src/vm/jit/stacktrace.h (stacktrace_get): Changed signature.
	(stacktrace_get_current): New function.

	* src/mm/cacao-gc/gc.c (gc_collect): Replaced stacktrace_get with
	stacktrace_get_current.
	* src/native/vm/cldc1.1/java_lang_Throwable.c (fillInStackTrace):
	Likewise.
	* src/native/vm/gnu/java_lang_VMThrowable.c (fillInStackTrace):
	Likewise.
	* src/native/vm/sun/jvm.c (JVM_FillInStackTrace): Likewise.

	* src/threads/native/threads.h (STACKFRAMEINFO): Removed.
	(threads_get_current_stackframeinfo): New function.
	(threads_set_current_stackframeinfo): Likewise.
	* src/threads/none/threads.h: Likewise.

	* src/threads/threads-common.c (threads_dump) [ENABLE_GC_CACAO]:
	Added code to suspend and resume the thread (NOTE: Not tested!).
	(threads_thread_print_stacktrace): Rewritten to work again.
	[fa23c7f74264]

	* src/mm/boehm.c, src/mm/codememory.c, src/native/jni.c,
	src/native/localref.c, src/native/native.c,
	src/native/vm/nativevm.c, src/threads/native/threads.c, src/threads
	/threads-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/finalizer.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/recompile.c, src/vm/package.c,
	src/vm/primitive.c, src/vm/properties.c, src/vm/signal.c,
	src/vm/string.c, src/vmcore/classcache.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/options.c, src/vmcore/options.h,
	src/vmcore/primitivecore.c, src/vmcore/suck.c, src/vmcore/utf8.c:
	* src/vmcore/options.c (opt_TraceSubsystemInitialization): Added.
	* src/vmcore/options.h (TRACESUBSYSTEMINITIALIZATION): New macro.

	* src/mm/boehm.c, src/mm/codememory.c, src/native/jni.c,
	src/native/localref.c, src/native/native.c,
	src/native/vm/nativevm.c, src/threads/native/threads.c, src/threads
	/threads-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/finalizer.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/recompile.c, src/vm/package.c,
	src/vm/primitive.c, src/vm/properties.c, src/vm/signal.c,
	src/vm/string.c, src/vmcore/classcache.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/primitivecore.c, src/vmcore/suck.c,
	src/vmcore/utf8.c: Added TRACESUBSYSTEMINITIALIZATION to the *_init
	functions.
	[6d9f949cf40f]

	* src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c: Use int instead of int32_t for opt_*
	variables.
	* src/vmcore/options.h: Likewise.
	[4df71b1bfc9e]

2008-02-17  Edwin Steiner  <edwin.steiner@gmx.net>

	* contrib/vmlog/vmlog_cacao.c:
	* contrib/vmlog/vmlog_cacao.c (vmlog_cacao_do_log): Deal with
	m->class == NULL.
	[0bb3cb112e99]

	* Merged the "edwin-replacement" branch that I pushed accidentally.
	[a96003ee3eda]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_handle): vmlog signal type.
	[a73070c07207]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_handle): vmlog signal type.
	[4d5807b92748]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (md_pop_stackframe): New function.
	(md_push_stackframe): New function. (replace_pop_activation_record):
	Factored out popping of the stack frame into md_pop_stackframe.
	(replace_push_activation_record): Factored out pushing of the stack
	frame into md_push_stackframe.
	[32ee42dff4a2]

2008-02-16  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vm/jit/code.c, src/vm/jit/code.h:
	* src/vm/jit/code.h (code_codeinfo_println): New debugging helper.
	* src/vm/jit/code.c (code_codeinfo_println): Likewise.
	[97ae058719af]

	* contrib/vmlog/vmlog_cacao.c, contrib/vmlog/vmlog_cacao.h:
	* contrib/vmlog/vmlog_cacao.h (vmlog_cacao_signl_type): New
	function.
	* contrib/vmlog/vmlog_cacao.c (vmlog_cacao_signl_type): Likewise.
	[ae50a5fdf56f]

2008-02-15  Edwin Steiner  <edwin.steiner@gmx.net>

	* src/vmcore/options.c:
	* src/vmcore/options.c (TraceJavaCalls): Remove this option when
	vmlog is enabled. (It does not have the expected effect then).
	[2015ddd5c931]

	* contrib/vmlog/vmlog.c, contrib/vmlog/vmlog.h,
	contrib/vmlog/vmlog_cacao.c, contrib/vmlog/vmlog_cacao.h,
	src/cacaoh/dummy.c, src/vm/vm.c, src/vmcore/options.c:
	* src/vmcore/options.c (options_xx): Integrated vmlog options
	handling.
	* src/vm/vm.c (vm_create): Changed vmlog init interface.
	* src/cacaoh/dummy.c (vmlog_cacao_set_prefix,
	vmlog_cacao_set_stringprefix, vmlog_cacao_set_ignoreprefix): Dummies
	added.
	* contrib/vmlog/vmlog.h, contrib/vmlog/vmlog.c,
	contrib/vmlog/vmlog_cacao.h, contrib/vmlog/vmlog_cacao.c: Changed
	vmlog init interface.
	[921f7f0fd054]

	* contrib/vmlog/vmlog_cacao.c, contrib/vmlog/vmlog_cacao.h:
	* contrib/vmlog/vmlog_cacao.c, contrib/vmlog/vmlog_cacao.h: Replaced
	the old java_objectheader with java_object_t. Adapted lock function
	calls. This makes cacao compile with --enable-vmlog again.
	[e7178d529ced]

2008-02-15  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/jit.h, src/vm/jit/optimizing/Makefile.am,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa2.c,
	src/vm/jit/optimizing/ssa2.h, src/vm/jit/optimizing/ssa3.c,
	src/vm/jit/python.c:
	* src/vm/jit/jit.h (FOR_EACH_BASICBLOCK, FOR_EACH_SUCCESSOR,
	FOR_EACH_PREDECESSOR, FOR_EACH_INSTRUCTION, basicblock_reached): New
	symbols.
	* src/vm/jit/optimizing/Makefile.am (SSA_SOURCES) [ENABLE_SSA]: AddeAd
	ssa3.c
	* src/vm/jit/optimizing/ssa.c: Adapted for ssa3.c.
	* src/vm/jit/optimizing/ssa2.c: Added copyright header.
	* src/vm/jit/optimizing/ssa3.c: New file. Yet another SSA
	transofrmation algorithm prototype.
	* src/vm/jit/python.c: Removed wrappers for creating variables and
	instructions because they were misdesigned.
	* src/vm/jit/optimizing/ssa2.h: Removed.
	[ceb76d8a7b2b]

2008-02-15  twisti  <twisti@vulture.theobroma-systems.com>

	* src/vmcore/field.c:
	* src/vmcore/field.c (field_print): Print offset for non-static
	fields.
	[c77728b36b0d]

2008-02-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/codegen.h:
	* src/vm/jit/powerpc/codegen.h (MI_and, MI_anddot, MI_andi,
	MI_lwarx) (MI_or, MI_ordot, MI_ori, MI_subf, MI_subfdot,
	MI_stwcxdot, MI_sync): New macros, these machine instruction macros
	should make it easier to understand them.

	* src/vm/jit/powerpc/codegen.c: Use new MI macros.
	[96c26cc7065f]

2008-02-14  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/optimizing/dominators.c:
	* src/vm/jit/optimizing/dominators.c: Adapted for changes in
	src/mm/dumpmemory.h.
	[6a888becb172]

2008-02-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_impl_thread_free): Use
	vm_abort_errnum. (threads_list_lock): Likewise.
	(threads_list_unlock): Likewise. (threads_mutex_gc_lock): Likewise.
	(threads_mutex_gc_unlock): Likewise. (threads_mutex_join_lock):
	Likewise. (threads_mutex_join_unlock): Likewise.
	(threads_impl_thread_start): Likewise.
	[b6e1edd8c04e]

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_abort_errnum): New function. (vm_abort_errno): Use
	vm_abort_errnum.
	* src/vm/vm.h (vm_abort_errnum): Added.
	[60d2963cf5a0]

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_abort_errno): New function. (vmcore/system.h):
	Added. (vm_abort): Use system_abort.

	* src/vm/vm.h (stdint.h): Added. (vm_abort_errno): Likewise.
	[7437e7e4efd6]

	* configure.ac, src/vmcore/system.h:
	* configure.ac (AC_CHECK_FUNCS): Added abort.

	* src/vmcore/system.h (system_abort): New function.
	(system_strerror): Likewise.
	[fb6e241c3df9]

	* tests/regression/Makefile.am,
	tests/regression/assertion/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am,
	tests/regression/resolving/Makefile.am:
	* tests/regression/Makefile.am: Always use the same bootclasspath
	for different configurations, it does not matter.

	* tests/regression/assertion/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am,
	tests/regression/resolving/Makefile.am: Likewise
	[4574d7b390ca]

	* * Merged with 3683e6f66d90.
	[ac5846955a0b]

	* configure.ac, tests/regression/Makefile.am:
	* configure.ac (AC_CONFIG_FILES): Re-enabled resolving since Edwin
	fixed the tests.
	* tests/regression/Makefile.am: Likewise.
	[37af3c98ade8]

2008-02-11  Edwin Steiner  <edwin.steiner@gmx.net>

	* tests/regression/resolving/TestController.java,
	tests/regression/resolving/test_instance_subtype_violated.java, test
	s/regression/resolving/test_param_loading_constraint_violated.java, t
	ests/regression/resolving/test_param_loading_constraint_violated_der
	ived.java,
	tests/regression/resolving/test_param_subtype_violated.java,
	tests/regression/resolving/test_return_subtype_ok.java,
	tests/regression/resolving/test_return_subtype_violated.java, tests/
	regression/resolving/test_retval_loading_constraint_violated.java,
	tests/regression/resolving/test_simple_lazy_load.java:
	* tests/regression/resolving/TestController.java: Better error
	messages and more convenience methods (needed for following adaption
	of tests).
	[a6f28893a706]

2008-02-14  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/toolbox/Makefile.am, src/toolbox/bitvector.h, src/toolbox/set.c,
	src/toolbox/set.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/cfg.c, src/vm/jit/cfg.h, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/optimizing/Makefile.am,
	src/vm/jit/optimizing/dominators.c,
	src/vm/jit/optimizing/dominators.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa2.c, src/vm/jit/optimizing/ssa2.h,
	src/vm/jit/python.c, src/vm/jit/python.h, src/vm/jit/show.c:
	* src/toolbox/Makefile.am (libtoolbox_la_SOURCES): Added set.[ch]
	* src/toolbox/bitvector.h: Added missing include

	* src/toolbox/set.c, src/toolbox/set.h: New file. Set (of pointers)
	implementation.

	* src/vm/jit/allocator/simplereg.c [ENABLE_SSA]: Fix for SSA.

	* src/vm/jit/cfg.c, src/vm/jit/cfg.h (cfg_insert_successors,
	cfg_add_root): New functions. (cfg_build): Using controlflow
	constants rather than opcodes, fixed multiple
	predecessors/successors problem.

	* src/vm/jit/jit.c, src/vm/jit/jit.h: Added various inline accessors
	for varinfo and instruction. (basicblock [ENABLE_SSA]): Added new
	fields.

	* src/vm/jit/optimizing/Makefile.am (SSA_SOURCES): Added ssa2.c.
	* src/vm/jit/optimizing/dominators.c,
	src/vm/jit/optimizing/dominators.h: Added cleaned up dominator tree
	and dominance frontier implementation.

	* src/vm/jit/optimizing/ssa.c: Hooked in cleaned up ssa and
	dominators.

	* src/vm/jit/optimizing/ssa2.c, src/vm/jit/optimizing/ssa2.h: New
	(temporary) files. Added cleanead up ssa implementation. Currently
	renames only locals and passes all dacapo benchmarks.

	* src/vm/jit/python.c. src/vm/jit/python.h: Changed a lot.

	* src/vm/jit/show.c (show_basicblock): Support NULL
	bptr->javalocals.
	[3683e6f66d90]

2008-02-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with fd492236e7ac.
	[fb5bf733f6ef]

2008-02-10  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/native/vm/sun/jvm.c:
	* src/native/native.c (native_library_load): New function.
	* src/native/native.h: Likewise.

	* src/native/vm/java_lang_Runtime.c: Removed.
	* src/native/vm/java_lang_Runtime.h: Likewise.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Removed
	java_lang_Runtime.[ch].

	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c
	(native/vm/java_lang_Runtime.h): Removed. (loadLibrary): Implemented
	directly.

	* src/native/vm/cldc1.1/java_lang_Runtime.c (vm/types.h): Removed.
	(stdint.h): Added. (mm/gc-common.h): Likewise.
	(native/vm/java_lang_Runtime.h): Removed. (vm/vm.h): Added.
	(vmcore/utf8.h): Likewise. (exitInternal): Implemented directly.
	(freeMemory): Likewise. (totalMemory): Likewise. (gc): Likewise.

	* src/native/vm/gnu/java_lang_VMRuntime.c
	(native/vm/java_lang_Runtime.h): Removed. (finalizeOnExit): Added.
	(exit): Likewise. (freeMemory): Likewise. (totalMemory): Likewise.
	(gc): Likewise. (runFinalizersOnExit): Likewise. (nativeLoad):
	Likewise.

	* src/native/vm/sun/jvm.c (native/vm/java_lang_Runtime.h): Removed.
	(JVM_StartThread): Implemented directly. (JVM_SetThreadPriority):
	Likewise. (JVM_Sleep): Likewise. (JVM_IsInterrupted): Likewise.
	[ca8d8d2c5849]

2008-02-09  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* m4/annotations.m4:
	* m4/annotations.m4 (AC_CHECK_ENABLE_ANNOTATIONS): Changed default
	value for different configurations.
	(AC_CHECK_ENABLE_ANNOTATIONS_DEFAULT): New function.
	[4549e77186f0]

	* m4/jni.m4:
	* m4/jni.m4 (AC_CHECK_ENABLE_JNI): Changed the comment for the
	default value.
	[a447b8c5bb58]

	* src/vmcore/loader.h:
	* src/vmcore/loader.h (classbuffer): Use stdint data types.
	[1e47ce633f93]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_sigsuspend_handler):
	Commented.
	[d930c08c092e]

	* src/vmcore/options.c:
	* src/vmcore/options.c [HAVE_STRING_H] (string.h): Removed.
	(vmcore/system.h): Added. (options_get): Use system_* functions.
	(options_xxusage): Likewise.
	[f88473e0fdfb]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_NewLocalRef): Fixed compiler warning.
	(_Jv_JNI_GetObjectField): Likewise. (_Jv_JNI_GetStaticObjectField):
	Likewise. (_Jv_JNI_GetDirectBufferAddress): Likewise.
	[e101e1fc5cae]

	* src/mm/memory.c:
	* src/mm/memory.c (memory_thread): Fixed compiler warning.
	[17b0b5f95809]

2008-02-13  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* src/vm/jit/m68k/md.c, src/vm/jit/m68k/md.h:
	(src/vm/jit/m68k/md.c): md_stacktrace_get_returnaddress needs to be
	exported. (src/vm/jit/m68k/md.h): Likewise.
	[fd492236e7ac]

2008-02-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/vm.c:
	* src/vm/vm.c (version): Changed copyright message.
	[1e10765ce305]

2008-02-09  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* m4/ac_prog_javac.m4, src/lib/Makefile.am,
	tests/regression/Makefile.am,
	tests/regression/assertion/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/native/Makefile.am:
	* m4/ac_prog_javac.m4 (AC_PROG_JAVAC): Removed jikes and
	-bootclasspath.

	* src/lib/Makefile.am (BOOTCLASSPATH): Added.

	* tests/regression/Makefile.am (BOOTCLASSPATH): Likewise. (JAVACMD):
	Likewise. (JAVACCMD): Likewise.

	* tests/regression/assertion/Makefile.am: Likewise.
	* tests/regression/codepatching/Makefile.am: Likewise.
	* tests/regression/native/Makefile.am: Likewise.
	[3b3c3e5de94b]

2008-02-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac:
	* configure.ac (AC_CONFIG_FILES): Removed resolving.
	[aae21148aa9b]

	* src/vm/string.c:
	* src/vm/string.c (literalstring_free): Commented out, since it's
	currently not used.
	[3066b22b8c76]

	* configure.ac, src/vm/assertion.c, src/vmcore/system.h:
	* configure.ac (AC_CHECK_FUNCS): Added strlen.

	* src/vm/assertion.c [HAVE_STRING_H] (string.h): Removed.
	(vmcore/system.h): Added. (assertion_ea_da): Use system_* functions.
	Fixed crash: use list_add_last_unsynced instead of list_add_last.

	* src/vmcore/system.h (system_strdup): New function.
	(system_strlen): Likewise.
	[611f3dff023e]

	* src/vm/jit/arm/Makefile.am, src/vm/jit/i386/Makefile.am,
	src/vm/jit/m68k/Makefile.am, src/vm/jit/mips/Makefile.am,
	src/vm/jit/powerpc/Makefile.am, src/vm/jit/powerpc64/Makefile.am,
	src/vm/jit/s390/Makefile.am, src/vm/jit/sparc64/Makefile.am,
	src/vm/jit/x86_64/Makefile.am:
	* src/vm/jit/arm/Makefile.am (libarch_la_SOURCES): Added md.h.

	* src/vm/jit/i386/Makefile.am, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/mips/Makefile.am, src/vm/jit/powerpc/Makefile.am,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/s390/Makefile.am,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/x86_64/Makefile.am:
	Likewise.
	[a8894d776f9c]

	* src/vm/jit/intrp/Makefile.am:
	* src/vm/jit/intrp/Makefile.am ($(BUILT_SOURCES)): Use $(SHELL) to
	call vmgenx.
	[398ee2cea293]

	* tests/regression/native/Makefile.am:
	* tests/regression/native/Makefile.am (JAVAHFLAGS): Added.
	[b216ffaa1e84]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_call_method_objectarray): Fixed compiler warning.
	[4849299bd8de]

2008-02-07  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/native/lock.c: Fixed copyright message.

	* src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h: Likewise.
	[2f37becb4a5c]

	* src/threads/native/lock.c:
	* src/threads/native/lock.c (notify_flc_waiters): Another deadlock
	fix.
	[d283bd3bbb3d]

2008-02-06  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/lock.c:
	* src/threads/native/lock.c (lock_monitor_wait,
	lock_monitor_notify): Bugfix for previous commit, could cause
	threads to hang forever.
	[c2c8e3043369]

	* src/threads/native/lock.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/vm/global.h:
	* src/threads/native/lock.c: Implemented Sable extension to tasuki
	lock.
	* src/threads/native/threads.c: Likewise.
	* src/threads/native/threads.h: Likewise.

	* src/vm/global.h: Removed hdrflags.
	[2988182011bb]

	* Merge (tasuki lock modification backout)
	[a80e9dea4e55]

	* src/threads/native/lock.c, src/vm/global.h:
	Backed out changeset 9c85e9af47c9
	[f79e2f05c4a1]

2008-02-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (vm/exceptions.h): Added.
	(exceptions_throw_incompatibleclasschangeerror): Fixed signature.
	(exceptions_throw_verifyerror): Likewise.
	(exceptions_throw_unsupportedclassversionerror): Likewise.
	[37ec16a94863]

	* src/vm/jit/codegen-common.c, src/vm/jit/x86_64/emit.c:
	* src/vm/jit/codegen-common.c (codegen_reg_of_var): Removed unused
	conditional move code. This will not be implemented in the baseline
	compiler.
	* src/vm/jit/x86_64/emit.c (emit_store): Likewise.
	[458d51359eac]

	* tests/regression/TestAnnotations.java:
	* tests/regression/TestAnnotations.java: Fixed copyright header.
	[e1d371396063]

2008-02-04  Gregor Kaufmann  <tdn@inode.at>

	* configure.ac, src/vm/vm.c, tests/regression/Makefile.am,
	tests/regression/assertion/Makefile.am,
	tests/regression/assertion/Test.sh,
	tests/regression/assertion/disabled.output,
	tests/regression/assertion/enabled.output,
	tests/regression/assertion/packagetest/testassertions.java,
	tests/regression/assertion/testassertions.java:
	* configure.ac (AC_CONFIG_FILES): Added
	tests/regression/assertion/Makefile

	* src/vm/vm.c (opts): Added OPT_EA_NOARG, OPT_EA_NOARG (vm_create):
	Handle OPT_EA_NOARG, OPT_EA_NOARG

	* tests/regression/Makefile.am (SUBDIRS): Added assertion

	* tests/regression/assertion/Makefile.a: New file

	* tests/regression/assertion/Test.sh: New file

	* tests/regression/assertion/disabled.output: New file

	* tests/regression/assertion/enabled.output: New file

	* tests/regression/assertion/packagetest/testassertions.java: New
	file

	* tests/regression/assertion/testassertions.java: New file
	[f00e0894e74b]

2008-02-04  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* m4/annotations.m4:
	* m4/annotations.m4: Build annotations support by default.
	[76cce852d53a]

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_collect) [!NDEBUG]: Fixed compilation.
	[5cba4c25093b]

	* * Merged with 9c85e9af47c9.
	[8f3fbc9270d5]

2008-01-30  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (native/vm/java_lang_ClassLoader.h):
	Removed.
	[7b1c5b9fe819]

	* src/native/jni.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h:
	* src/native/vm/java_lang_ClassLoader.c: Removed.
	* src/native/vm/java_lang_ClassLoader.h: Likewise.

	* src/native/vm/Makefile.am (CLASSLOADER_SOURCES): Removed.
	(libnativevm_la_SOURCES): Removed CLASSLOADER_SOURCES.

	* src/native/jni.c [ENABLE_JAVASE]
	(native/vm/java_lang_ClassLoader.h): Removed.

	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(native/vm/java_lang_ClassLoader.h): Removed. (defineClass): Moved
	implementation here.
	[e02ee62bf5fe]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_DefineClassWithSource): Made data
	argument non-const.
	[7c595dadbd5f]

	* src/native/jni.c, src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/sun_misc_Unsafe.c, src/vmcore/class.c,
	src/vmcore/class.h:
	* src/vmcore/class.c (class_define): Made data argument non-const.
	* src/vmcore/class.h: Likewise.
	* src/native/jni.c (_Jv_JNI_DefineClass): Likewise.
	* src/native/vm/java_lang_ClassLoader.c (defineClass): Likewise.
	* src/native/vm/sun_misc_Unsafe.c (defineClass): Likewise.
	[6495c4982eec]

	* src/vm/properties.c, src/vmcore/system.h:
	* src/vm/properties.c (properties_set): Use system_access.
	* src/vmcore/system.h (system_access): New function.
	[1b6a824c642d]

	* configure.ac, src/vmcore/suck.c, src/vmcore/system.h:
	* configure.ac (AC_CHECK_FUNCS): Added fclose, fread, stat.

	* src/vmcore/suck.c (dirent.h): Removed. (sys/stat.h): Likewise.
	(vmcore/system.h): Added. (suck_add_from_property): Use
	system_scandir. (suck_start): Use system_fopen, system_stat,
	system_fread, system_fclose.

	* src/vmcore/system.h [HAVE_DIRENT_H] (dirent.h): Added.
	[HAVE_STDIO_H] (stdio.h): Likewise. [HAVE_SYS_STAT_H] (sys/stat.h):
	Likewise. (system_fopen): New function. (system_fclose): Likewise.
	(system_fread): Likewise. (system_scandir): Likewise. (system_stat):
	Likewise.
	[d36156ecb50a]

	* src/vm/properties.c, src/vmcore/system.h:
	* src/vm/properties.c [WITH_JRE_LAYOUT] (libgen.h): Removed.
	(vmcore/system.h): Added. (properties_set): Use system_dirname.

	* src/vmcore/system.h [WITH_JRE_LAYOUT && HAVE_LIBGEN_H] (libgen.h):
	Added. [WITH_JRE_LAYOUT] (system_dirname): New function.
	[9c7fe3420ab9]

	* src/native/jni.c:
	* src/native/jni.c: Pre-define java_lang_ClassLoader to prevent a
	compiler warning for Sun configurations.
	[a91f4c3437d5]

2008-02-03  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/lock.c, src/vm/global.h:
	* src/threads/native/lock.c: Modified tasuki lock such that the FLC
	bit can be placed in the lockword. Requires atomic instruction at
	monitor_exit (slower!).

	* src/vm/global.h: Removed useless hdrflags and FLC bit value.
	[9c85e9af47c9]

2008-02-02  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/machine-instr.h, src/vm/jit/x86_64/machine-instr.h:
	* src/vm/jit/i386/machine-instr.h (MEMORY_BARRIER_AFTER_ATOMIC): Can
	become a real NOP. (MEMORY_BARRIER_BEFORE_ATOMIC): Likewise.

	* src/vm/jit/x86_64/machine-instr.h (MEMORY_BARRIER_AFTER_ATOMIC):
	Can become a real NOP. (MEMORY_BARRIER_BEFORE_ATOMIC): Likewise.
	[fe3e80ca2479]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_init): Disable CrashReporter on Darwin.
	[9bc8277affc1]

2008-02-01  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/threads/native/lock.c:
	* src/threads/native/lock.c (lock_monitor_enter): Adjusted memory
	barrier. (lock_monitor_exit): Likewise.
	[f31015208523]

2008-01-30  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/cacao-gc/gc.c, src/native/native.c,
	src/native/vm/gnu/java_lang_VMRuntime.c, src/vm/builtin.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa_rename.c,
	src/vm/jit/patcher-common.c, src/vm/jit/replace.c,
	src/vm/jit/show.c, src/vm/jit/trace.c, src/vm/vm.c,
	src/vmcore/class.c, tests/regression/Makefile.am:
	* src/mm/cacao-gc/gc.c: Fixed copyright message.

	* src/native/native.c, src/native/vm/gnu/java_lang_VMRuntime.c,
	src/vm/builtin.c, src/vm/jit/intrp/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa_rename.c,
	src/vm/jit/patcher-common.c, src/vm/jit/replace.c,
	src/vm/jit/show.c, src/vm/jit/trace.c, src/vm/vm.c,
	src/vmcore/class.c, tests/regression/Makefile.am: Likewise.
	[c6a257150aa2]

	* src/mm/dumpmemory.c, src/mm/dumpmemory.h, src/mm/memory.h,
	src/vm/jit/ir/bytecode.c, src/vm/jit/ir/bytecode.h:
	* Merged with 0da121c758b9.
	[b3689d718218]

2008-01-22  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 03e39cff22db.
	[61bb218662ef]

	* m4/assertion.m4, m4/dump.m4, src/mm/codememory.c,
	src/mm/codememory.h, src/mm/dumpmemory.c, src/mm/dumpmemory.h,
	src/mm/memory.c, src/mm/memory.h, src/native/vm/sun_misc_Unsafe.c,
	src/vm/array.c, src/vm/array.h, src/vm/assertion.c,
	src/vm/assertion.h, src/vm/jit/exceptiontable.c,
	src/vm/jit/exceptiontable.h, src/vm/jit/ir/Makefile.am,
	src/vm/jit/ir/bytecode.c, src/vm/jit/ir/bytecode.h,
	src/vm/jit/linenumbertable.c, src/vm/jit/linenumbertable.h,
	src/vmcore/system.c, src/vmcore/system.h:
	* m4/assertion.m4: Fixed copyright header.

	* m4/dump.m4, src/mm/codememory.c, src/mm/codememory.h,
	src/mm/dumpmemory.c, src/mm/dumpmemory.h, src/mm/memory.c,
	src/mm/memory.h, src/native/vm/sun_misc_Unsafe.c, src/vm/array.c,
	src/vm/array.h, src/vm/assertion.c, src/vm/assertion.h,
	src/vm/jit/exceptiontable.c, src/vm/jit/exceptiontable.h,
	src/vm/jit/ir/Makefile.am, src/vm/jit/ir/bytecode.c,
	src/vm/jit/ir/bytecode.h, src/vm/jit/linenumbertable.c,
	src/vm/jit/linenumbertable.h, src/vmcore/system.c,
	src/vmcore/system.h: Likewise.
	[a8a8474e33d1]

2008-01-29  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_EEXIST): Defined. (JVM_Open):
	Implemented correctly.
	[0da121c758b9]

	* src/vm/properties.c:
	* src/vm/properties.c (properties_set) [WITH_JRE_LAYOUT]: Set
	java.home as HotSpot does, applications like Ant depend on it.
	[f517570c02d6]

2008-01-25  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (native/include/java_lang_Object.h):
	Added. [WITH_CLASSPATH_GNU]
	(native/include/gnu_classpath_Pointer.h): Likewise.
	(stacktrace_print_exception): Fixed compiler warning.
	[d129a9a3bd48]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call): Fixed
	compiler warning.
	[bac5c4672afa]

2008-01-23  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 03e39cff22db.
	[2e553378876c]

2008-01-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/ir/bytecode.c, src/vm/jit/ir/bytecode.h,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa_rename.c, src/vm/jit/parse.c:
	* src/vm/jit/ir/bytecode.c (bytecode): New table.
	* src/vm/jit/ir/bytecode.h (bytecode_t): New structure.

	* src/vm/jit/jit.c (stackreq, jcommandsize, opcode_names): Removed.
	* src/vm/jit/jit.h: Likewise.

	* src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa_rename.c,
	src/vm/jit/parse.c: Use new bytecode table.
	[292ffaab432c]

	* src/vm/jit/codegen-common.c, src/vm/jit/jit.c, src/vm/jit/show.c,
	src/vm/vm.c:
	* Merged with df1b780317c3.
	[63d86c604330]

	* src/cacaoh/dummy.c, src/mm/cacao-gc/gc.c, src/mm/dumpmemory.c,
	src/mm/dumpmemory.h, src/mm/memory.h, src/native/native.c,
	src/native/vm/gnu/java_lang_VMRuntime.c, src/vm/builtin.c,
	src/vm/jit/codegen-common.c, src/vm/jit/intrp/codegen.c,
	src/vm/jit/jit.c, src/vm/jit/replace.c, src/vm/jit/show.c,
	src/vm/jit/trace.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/loader.c:
	* src/mm/dumpmemory.c (dump_release): Renamed to dumpmemory_release.
	(dump_size): Renamed to dumpmemory_marker.

	* src/mm/dumpmemory.h: Likewise. (DMARKER, DRELEASE): New macros.

	* src/cacaoh/dummy.c, src/mm/cacao-gc/gc.c, src/mm/memory.h,
	src/native/native.c, src/native/vm/gnu/java_lang_VMRuntime.c,
	src/vm/builtin.c, src/vm/jit/codegen-common.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/jit.c, src/vm/jit/replace.c,
	src/vm/jit/show.c, src/vm/jit/trace.c, src/vm/vm.c,
	src/vmcore/class.c, src/vmcore/loader.c: Use new macros.
	[12502d070d2d]

	* tests/regression/Makefile.am:
	* tests/regression/Makefile.am (SUBDIRS): Removed resolving. These
	test are broken.
	[f9ffd12e7a9f]

2008-01-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/mm/dumpmemory.c, src/mm/dumpmemory.h,
	src/vm/jit/verify/typeinfo.h:
	* src/mm/dumpmemory.c (dump_alloc): Renamed to dumpmemory_get.
	(dumpmemory_alloc): New function. (dump_realloc): Renamed to
	dumpmemory_realloc.

	* src/mm/dumpmemory.h (dump_allocation_t): Renamed useddumpsize to
	used. (dumpinfo_t): Renamed currentdumpblock to block,
	allocateddumpsize to allocated, useddumpsize to used. (DNEW, DMNEW,
	DMREALLOC): Defined to new function names.

	* src/cacaoh/dummy.c (dump_alloc): Renamed to dumpmemory_get.

	* src/vm/jit/verify/typeinfo.h (DNEW_TYPEVECTOR): Use DMNEW.
	(DMNEW_TYPEVECTOR): Likewise. (TYPEINFO_ALLOCMERGED): Likewise.
	[cee30280dee5]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_handler): Fixed compiler
	warning.
	[c4732ead00cc]

2008-01-22  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/arm/md.c:
	* src/vm/jit/arm/md.c (md_asm_codegen_get_pv_from_pc): Removed.
	[03e39cff22db]

2008-01-17  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/codegen-common.c,
	src/vm/jit/jit.c, src/vm/jit/optimizing/Makefile.am,
	src/vm/jit/optimizing/graph.c, src/vm/jit/optimizing/lifetimes.c,
	src/vm/jit/optimizing/lsra.c, src/vm/jit/optimizing/lsra.h,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/optimizing/ssa.h,
	src/vm/jit/optimizing/ssa_phi.c, src/vm/jit/optimizing/ssa_phi.h,
	src/vm/jit/optimizing/ssa_rename.c,
	src/vm/jit/optimizing/ssa_rename.h, src/vm/jit/show.c, src/vm/vm.c,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/alpha/codegen.c, src/vm/jit/codegen-common.c,
	src/vm/jit/jit.c, src/vm/jit/show.c, src/vm/vm.c,
	src/vmcore/options.c, src/vmcore/options.h: Integrated Christian
	Ullrichs changes related to SSA and LSRA. The diff against SVN
	version 8144 was carefully integrated.

	* src/vm/jit/optimizing/Makefile.am, src/vm/jit/optimizing/graph.c,
	src/vm/jit/optimizing/lifetimes.c, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/lsra.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa.h, src/vm/jit/optimizing/ssa_phi.c,
	src/vm/jit/optimizing/ssa_phi.h, src/vm/jit/optimizing/ssa_rename.c,
	src/vm/jit/optimizing/ssa_rename.h: Integrated Christian Ullrichs
	changes related to SSA and LSRA. Those files were just COPYED and
	adapted from his modified SVN 8144 working copy.

	NOTE: Christian Ullrichs SSA+LSRA related changes to the x86_64
	codegenerator are NOT MERGED in this commit.
	[df1b780317c3]

	* src/vm/jit/python.c:
	* src/vm/jit/python.c: Wrapped control flow and data flow fields and
	respective constants for instruction.
	[24dc79f2508c]

2008-01-16  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (getChar, putChar): Implemented.
	(copyMemory): Likewise.
	[5265504cc4bf]

2008-01-10  Gregor Kaufmann  <tdn@inode.at>

	* doc/Makefile.am, doc/assertions.tex:
	* doc/Makefile.am (dist_noinst_DATA): Added assertions.tex.
	(assertions): New target, creates assertions.dvi. (CLEANFILES):
	Added assertions.aux/.dvi/.log/.toc.

	* doc/assertions.tex: New file, documentation of the assertion
	implementation.
	[eb342d685856]

2008-01-10  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/jit.c, src/vm/jit/python.c:
	* src/vm/jit/python.c: (python_global_lock) added, (pythonpass_init)
	creating python lock, (pythonpass_run) locking python lock.
	* src/vm/jit/jit.c [ENABLE_PYTHON]: Changed name of hardcoded
	function.
	[18d4cf443b7a]

2008-01-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/Makefile.am, src/mm/codememory.c, src/mm/codememory.h,
	src/mm/dumpmemory.c, src/mm/dumpmemory.h, src/mm/memory.c,
	src/mm/memory.h, src/vm/vm.c:
	* src/mm/Makefile.am (libmm_la_SOURCES): Added codememory.[ch],
	dumpmemory.[ch].

	* src/mm/codememory.c: New file.
	* src/mm/codememory.h: Likewise.
	* src/mm/dumpmemory.c: Likewise.
	* src/mm/dumpmemory.h: Likewise.

	* src/mm/memory.c: Moved code and dump memory related stuff into
	their respective files.
	* src/mm/memory.h: Likewise.

	* src/vm/vm.c (mm/codememory.h): Added. (vm_create): Call
	codememory_init instead of memory_init.
	[183c2868c78a]

	* m4/dump.m4:
	* m4/dump.m4: Smaller changes.
	[98cf8bd43450]

2008-01-05  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/jit.c, src/vm/jit/python.c:
	* src/vm/jit/jit.c [ENABLE_PYTHON]: Changed name of hardcoded
	script.
	* src/vm/jit/python.c: Changed a lot.
	[72c42e1989b2]

	* src/vm/jit/s390/asmpart.S:
	* src/vm/jit/s390/asmpart.S (asm_vm_call_method): Fixed stack
	pointer corruption in case there are stack arguments and an
	exception escapes.
	[915392590cd3]

2008-01-04  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/asmpart.S:
	* src/vm/jit/i386/asmpart.S (asm_handle_exception): Correct offsets
	for 16 byte aligned stack.
	[0566e94f095d]

2008-01-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/mips/asmpart.S:
	* src/vm/jit/alpha/asmpart.S (asm_vm_call_method): Restore SP also
	in exception case.
	* src/vm/jit/mips/asmpart.S: Likewise.
	[17282b574f08]

	* src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/x86_64/asmpart.S (asm_vm_call_method): Restore SP also
	in exception case.
	[846bcfaf0675]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FillInStackTrace): Fixed warning.
	(JVM_GetSystemPackage): Likewise. (JVM_NewMultiArray): Likewise.
	[e7ab12ab545e]

	* src/native/vm/sun/jvm.c, src/vmcore/system.h:
	* changed src/vmcore/system.h [HAVE_SYS_SOCKET_H] (sys/socket.h):
	Added. [HAVE_SYS_TYPES_H] (sys/types.h): Likewise. (system_accept):
	New function. (system_connect, system_fsync, system_ftruncate,
	system_gethostname) (system_getsockname, system_getsockopt,
	system_listen, system_lseek) (system_setsockopt, system_shutdown,
	system_socket): Likewise.

	* changed src/native/vm/sun/jvm.c: Use new system_* functions.
	[f6eb3507d28b]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c: Added return values to all functions.
	[bc6940061b57]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (PRINTJVM): Removed.
	(native/include/java_lang_Integer.h,
	native/include/java_lang_Long.h, native/include/java_lang_Short.h,
	native/include/java_lang_Byte.h,
	native/include/java_lang_Character.h,
	native/include/java_lang_Boolean.h,
	native/include/java_lang_Float.h,
	native/include/java_lang_Double.h): Likewise.
	(JVM_RawMonitorCreate): Fixed typo.
	[d296cb58df1c]

	* configure.ac, src/native/vm/sun/jvm.c, src/vmcore/system.h:
	* configure.ac (AC_CHECK_FUNCS): Added read, write.

	* src/native/vm/sun/jvm.c (fcntl.h): Removed. (JVM_Open, JVM_Close,
	JVM_Read, JVM_Write): Use system_* function.

	* src/vmcore/system.h [HAVE_FCNTL_H] (fcntl.h): Added.
	(system_close, system_open, system_read, system_write): New
	function.
	[eb3186f90670]

	* src/native/vm/sun/jvm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_TraceJVMCallsVerbose): Added.
	* src/vmcore/options.h: Likewise.

	* src/native/vm/sun/jvm.c (TRACEJVMCALLSVERBOSE): New macro. Use
	TRACEJVMCALLS in all functions.
	[7ac7dbdbce71]

