2007-12-30  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac, src/vm/jit/Makefile.am, src/vm/jit/ir/Makefile.am,
	src/vm/jit/ir/bytecode.c, src/vm/jit/ir/bytecode.h,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/parse.c:
	* configure.ac (AC_CONFIG_FILES): Added src/vm/jit/ir/Makefile.

	* src/vm/jit/Makefile.am (DIST_SUBDIRS): Added ir. (SUBDIRS):
	Likewise. (libjit_la_LIBADD): Added ir/libir.la.

	* src/vm/jit/ir/Makefile.am: New file.
	* src/vm/jit/ir/bytecode.c: Likewise.
	* src/vm/jit/ir/bytecode.h: Likewise.

	* src/vm/jit/jit.c (vm/jit/ir/bytecode.h): Added.
	* src/vm/jit/jit.h (vm/jit/ir/bytecode.h): Likewise. Use new BC_*
	constants in the ICMD-enum.

	* src/vm/jit/parse.c (vm/jit/ir/bytecode.h): Added. (parse): Use new
	BC_* constants.
	[d8fe2c3ba284]

2007-12-29  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/memory.c, src/vmcore/system.h:
	* src/vmcore/system.h (system_mprotect): New function.
	[HAVE_SYS_MMAN_H] (sys/mman.h): Added.

	* src/mm/memory.c (vmcore/system.h): Added. (memory_mprotect): Use
	system_mprotect.
	[3c67f686355c]

2007-12-28  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc/disass.c:
	* src/vm/jit/powerpc/disass.c: Fixed copyright header. (stdint.h):
	Added. (vm/types.h): Removed.
	[4b313b978a51]

2007-12-20  Peter Molnar  <pm@complang.tuwien.ac.at>

	* configure.ac, m4/az_python.m4, src/cacao/Makefile.am,
	src/vm/jit/Makefile.am, src/vm/jit/jit.c, src/vm/jit/python.c,
	src/vm/jit/python.h, src/vm/vm.c:
	* configure.ac: Added tests for python.
	* m4/az_python.m4: New file.
	* src/cacao/Makefile.am src/vm/jit/Makefile.am: [ENABLE_PYTHON]
	Building python module and linking with python libs.
	* src/vm/jit/jit.c [ENABLE_PYTHON] Calling some python function.
	* src/vm/jit/python.c, src/vm/jit/python.h: New files.
	* src/vm/vm.c [ENABLE_PYTHON] Initializing python module.
	[a54c7d83c58a]

2007-12-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetManagement): Implemented (only
	returning NULL).
	[4206fab51a24]

	* src/native/native.c, src/native/native.h, src/native/vm/sun/jvm.c:
	* src/native/native.c [ENABLE_LTDL] (native_library_close): New
	function.
	* src/native/native.h: Likewise.

	* src/native/vm/sun/jvm.c (JVM_UnloadLibrary): Implemented.
	[59330b2047b9]

2007-12-16  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* m4/debug.m4, m4/dump.m4:
	* m4/debug.m4: Changed wording to make some defaults less confusing
	(forgot those in previous commit).
	* m4/dump.m4: Likewise.
	[c06d42a7d559]

2007-12-10  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/cldc1.1/java_lang_Throwable.c:
	* src/native/vm/cldc1.1/java_lang_Throwable.c (vm/types.h): Removed.
	(stdint.h): Added. (native/llni.h): Added. (printStackTrace): Use
	new stacktrace functions. (fillInStackTrace): Likewise.
	[ca9ac6d29332]

2007-12-07  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* configure.ac, m4/jit.m4, m4/libjvm.m4, m4/ltdl.m4, m4/zlib.m4:
	* configure.ac: Changed wording to make some defaults less
	confusing.
	* m4/jit.m4: Likewise.
	* m4/libjvm.m4: Likewise.
	* m4/ltdl.m4: Likewise.
	* m4/zlib.m4: Likewise.
	[9ee28b82c23e]

2007-12-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c, src/vmcore/class.c, src/vmcore/class.h:
	* src/native/vm/sun/jvm.c (JVM_GetEnclosingMethodInfo): Implemented.
	* src/vmcore/class.c (class_get_enclosingmethod): New function.
	* src/vmcore/class.h: Likewise.
	[85ece229beb6]

2007-11-24  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c:
	* src/vm/jit/i386/codegen.c (codegen_emit,
	codegen_emit_stub_native): Repaired 16 byte stack alignment.

	* src/vm/jit/i386/emit.c (emit_verbosecall_enter): Likewise.
	[fb2f760c6d47]

2007-11-21  Peter Molnar  <pm@complang.tuwien.ac.at>

	* doc/handbook/cacao.tex, doc/handbook/java.bib,
	doc/handbook/s390.tex:
	* doc/handbook/s390.tex: New file, docs for the s390 port.
	* doc/handbook/cacao.tex, doc/handbook/java.bib: Added support for
	s390.tex.
	[1e17747d8ae4]

2007-11-13  Stefan Ring  <stefan@complang.tuwien.ac.at>

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: Synched with linux version.
	Compiles but doesn't work yet.
	[7a9776c7f769]

2007-11-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/stacktrace.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin):
	Unflag leafmethod. (codegen_generate_stub_native): Likewise.

	* src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_native): Added
	leafmethod sanity check.

	* src/vm/jit/stacktrace.c (stacktrace_stackframeinfo_add): Use
	code_is_leafmethod.
	[91f7709c62de]

	* src/vm/jit/m68k/arch.h, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/s390/arch.h:
	* src/vm/jit/m68k/arch.h: Removed commented HAS_4BYTE_STACKSLOT.
	* src/vm/jit/powerpc64/arch.h: Likewise.
	* src/vm/jit/s390/arch.h: Likewise.
	[adc81880df67]

	* src/native/jni.c:
	* src/native/jni.c (TRACEJNICALLS): Don't use a variadic macro but
	pass the text to log in parentheses. This also fixes a bug when
	only one argument is passed.
	[1b6cd680d55a]

	* src/vm/jit/cfg.c, src/vm/jit/cfg.h:
	* src/vm/jit/cfg.c: Fixed copyright header. (vm/types.h): Removed.
	(vm/global.h): Added.
	* src/vm/jit/cfg.h: Likewise.
	[568ba9fdd84b]

2007-11-07  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c, src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/sun/jvm.c, src/threads/threads-common.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/native/jni.c (_Jv_JNI_FindClass): Renamed
	stacktrace_getCurrentClass to stacktrace_get_current_class.

	* src/native/vm/gnu/java_lang_VMThrowable.c (vm/jit/code.h): Added.
	(vm/jit/linenumbertable.h): Likewise. (fillInStackTrace): Renamed
	stacktrace_fillInStackTrace to stacktrace_get. (getStackTrace):
	Rewritten for new stacktrace code.

	* src/native/vm/gnu/java_security_VMAccessController.c (vm/types.h):
	Removed. (stdint.h): Added. (vm/builtin.h): Removed. (vm/global.h):
	Added. (vmcore/class.h): Removed. (vmcore/options.h): Likewise.
	(vmcore/utf8.h): Added. (getStack): Renamed stacktrace_getStack to
	stacktrace_get_stack.

	* src/native/vm/sun/jvm.c (JVM_FillInStackTrace): Renamed
	stacktrace_fillInStackTrace to stacktrace_get.
	(JVM_GetStackTraceDepth): Rewritten for new stacktrace code and
	added critical section. (JVM_GetStackTraceElement): Rewritten for
	new stacktrace code. (JVM_LatestUserDefinedLoader): Implemented.

	* src/threads/threads-common.c (threads_thread_print_stacktrace):
	Rewritten for new stacktrace code and added critical section.

	* src/vm/jit/stacktrace.c (stacktrace_entry_add): Removed.
	(stacktrace_method_add): Likewise. (stacktrace_stackframeinfo_fill)
	[!NDEBUG]: Added debug output. (stacktrace_stackframeinfo_next):
	Likewise. (stacktrace_stackframeinfo_end_check): Likewise.
	(stacktrace_create): Removed. (stacktrace_fillInStackTrace):
	Removed. (stacktrace_depth): New function. (stacktrace_get):
	Likewise. (stacktrace_first_nonnull_classloader): Likewise.
	(stacktrace_getClassContext): Rewritten.
	(stacktrace_getCurrentClass): Renamed to
	stacktrace_get_current_class and rewritten. (stacktrace_getStack):
	Renamed to stacktrace_get_stack and rewritten.
	(stacktrace_print_trace_from_buffer): Renamed to stacktrace_print
	and rewritten. (stacktrace_print_exception): Rewritten.

	* src/vm/jit/stacktrace.h (stacktracebuffer): Removed.
	(stacktrace_entry): Likewise. (stacktrace_t): New structure.
	(stacktrace_entry_t): Likewise.
	[6ca3d885a0c3]

2007-11-07  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (md_replace_executionstate_read):
	Implemented. (md_replace_executionstate_write): Likewise.
	[be521f46a80f]

2007-11-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FillInStackTrace): Use LLNI macro.
	(JVM_GetStackTraceDepth): Likewise and added a comment about missing
	critical sections. (JVM_GetStackTraceElement): Likewise.
	[3d10f5692560]

2007-11-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/Makefile.am, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/linux/md-os.c, src/vm/jit/alpha/md.c,
	src/vm/jit/alpha/md.h, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/md.c, src/vm/jit/arm/md.h, src/vm/jit/arm/patcher.c,
	src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/md.c, src/vm/jit/i386/md.h, src/vm/jit/jit.c,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/md.h,
	src/vm/jit/m68k/patcher.c, src/vm/jit/md.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/md.h, src/vm/jit/mips/patcher.c, src/vm/jit/patcher-
	common.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/md-asm.h,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc/md.h, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/md.h, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/replace.c, src/vm/jit/s390/md.c, src/vm/jit/s390/md.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/md.h,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/md.h:
	* src/vm/jit/md.h: Removed.
	* src/vm/jit/Makefile.am (noinst_HEADERS): Removed md.h.

	* src/vm/jit/asmpart.h (md_asm_codegen_get_pv_from_pc): Added
	temporarily.

	* src/vm/jit/codegen-common.c (md.h): Added. (vm/jit/md.h): Removed.
	(md_asm_codegen_get_pv_from_pc): Added temporarily.

	* src/vm/jit/codegen-common.h (md_codegen_get_pv_from_pc): Removed.

	* src/vm/jit/jit.c (stdint.h): Added. (md.h): Likewise.

	* src/vm/jit/patcher-common.c (md.h): Added. (vm/jit/md.h): Removed.
	* src/vm/jit/replace.c: Likewise.

	* src/vm/jit/stacktrace.c (md.h): Added.
	* src/vm/jit/stacktrace.h (md_stacktrace_get_returnaddress): Removed.

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md.c, src/vm/jit/alpha/md.h,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md.c, src/vm/jit/arm/md.h,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/md.c, src/vm/jit/i386/md.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/md.h,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md.c, src/vm/jit/mips/md.h,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/md-asm.h,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc/md.h, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/md.h, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/md.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/md.h, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/md.h (md_stacktrace_get_returnaddress): Made
	inline function. (md_codegen_get_pv_from_pc): Likewise.
	(md_cacheflush): Likewise. (md_icacheflush): Likewise.
	(md_dcacheflush): Likewise.
	[d81d9dc006c9]

	* src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/patcher.c: Fixed header.
	[60fd68b8284c]

2007-10-27  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/linenumbertable.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md.c:
	* src/vm/jit/linenumbertable.c (linenumbertable_create,
	linenumbertable_linenumber_for_pc_intern) [__S390__]: Use 31 bits of
	addresses as lookup keys.
	* src/vm/jit/s390/codegen.c (codegen_emit_stub_native): In case of
	exception, use branch (not following) instruction as XPC.
	* src/vm/jit/s390/md.c (md_signal_handler_sigill): Fixes to scenario
	where JIT compiler fails.
	[1a453b2390aa]

2007-10-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/code.c, src/vm/jit/code.h:
	* src/vm/jit/code.c (vm/jit/methodheader.h): Removed.
	(code_get_codeinfo_for_pv): Likewise.

	* src/vm/jit/code.h (assert.h): Added. (vm/jit/methodheader.h):
	Likewise. (code_get_codeinfo_for_pv): New function.
	[c3b950a4ea8b]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (vm/jit/code.h): Added.
	(codegen_finish_native_call): Use code_get_codeinfo_for_pv.
	[18a312bfca4b]

2007-10-26  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Removed codegen_init call, jit_init does
	that.
	[c5a79c1e4123]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit_stub_native): Removed
	emit_patcher_traps call.
	[704dd3fd06bd]

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[4b58514e5dab]

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[0d991b1b2a50]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[5ed32ddf5dcb]

2007-10-25  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (vm/jit/md.h): Removed (accidentally
	commited). (md_signal_handler_sigsegv): Removed some code.
	[279a6a754037]

	* src/vm/jit/mips/arch.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/arch.h (JIT_COMPILER_VIA_SIGNAL): Temporarily
	added.

	* src/vm/jit/mips/asmpart.S (asm_call_jit_compiler): Removed.
	* src/vm/jit/mips/codegen.c (codegen_emit_stub_compiler): Likewise.

	* src/vm/jit/mips/codegen.h (COMPILERSTUB_CODESIZE): Adapted size.

	* src/vm/jit/mips/emit.c (emit_trap_compiler): New function.

	* src/vm/jit/mips/linux/md-os.c (vm/exceptions.h): Added.
	(md_signal_handler_sigsegv): Added compiler-by-signals code.
	[3e911e512e84]

	* src/vm/jit/alpha/md.c:
	* src/vm/jit/alpha/md.c (md_init): Smaller changes.
	(md_codegen_get_pv_from_pc): Rewritten.
	[8484b2af9cb0]

	* src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/md.h, src/vm/vm.c:
	* src/vm/jit/jit.c (vm/jit/md.h): Removed. (jit_init): Call md_init.

	* src/vm/jit/jit.h [ENABLE_JIT] (md_init): Added. [ENABLE_INTRP]
	(intrp_md_init): Likewise.

	* src/vm/jit/md.h [ENABLE_JIT] (md_init): Removed. [ENABLE_INTRP]
	(intrp_md_init): Likewise.

	* src/vm/vm.c (vm/jit/md.h): Removed. (vm_create): Don't call
	md_init.
	[86d5f80749fa]

	* src/vm/primitive.c, src/vm/signal.c:
	* src/vm/primitive.c (primitive_box): Fixed -O2 wanrings.
	* src/vm/signal.c (signal_handle): Likewise.
	[e7c1d45ac1cb]

	* src/native/include/Makefile.am:
	* src/native/include/Makefile.am (COMMON_HEADER_FILES): Removed
	java_util_HashMap and java_util_Map. (JAVASE_HEADER_FILES): Added
	java_util_HashMap and java_util_Map.
	[775bed4b55e1]

2007-10-24  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c:
	* src/vm/jit/s390/arch.h (JIT_COMPILER_VIA_SIGNAL): defined.
	* src/vm/jit/s390/asmpart.S (asm_call_jit_compiler): removed.
	* src/vm/jit/s390/codegen.c (codegen_emit_stub_compiler): removed.
	* src/vm/jit/s390/emit.c (emit_trap_compiler): new function.
	* src/vm/jit/s390/md.c (md_signal_handler_sigill): adapted for
	compiler call via signal.
	[c49cadfbd476]

2007-10-24  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/exceptions.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.c (stacktrace_print_trace): Renamed to
	stacktrace_print_exception.
	* src/vm/jit/stacktrace.h: Likewise.

	* src/vm/exceptions.c (exceptions_handle_exception): Likewise.
	[8bc0a90cd4f0]

	* src/native/vm/gnu/java_lang_VMThrowable.c:
	* src/native/vm/gnu/java_lang_VMThrowable.c (getStackTrace): Removed
	unused resolving of the init method.
	[d9b947897586]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FillInStackTrace): Use TRACEJVMCALLS.
	(JVM_GetStackTraceElement): Likewise. (JVM_IHashCode): Likewise.
	[369b6cfa58a6]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_stackframeinfo_fill): New
	function. (stacktrace_stack_walk): Renamed to
	stacktrace_stackframeinfo_next.
	(stacktrace_stackframeinfo_end_check): New function.
	(stacktrace_create): Use new stackframeinfo functions.
	[111e59248e76]

	* src/native/include/Makefile.am:
	* src/native/include/Makefile.am [ENABLE_ANNOTATIONS]
	(JAVASE_HEADER_FILES): Removed java_util_Map.h.
	[d5242eb43dbf]

2007-10-23  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (linker_preinit): Define
	LINKER_ALIGNMENT_LONG_DOUBLE. (link_class_intern): Added a compile
	time check for LINKER_ALIGNMENT_LONG_DOUBLE.
	[c8300b439942]

	* src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h:
	* src/native/vm/java_lang_Thread.c (interrupt): Removed.
	* src/native/vm/java_lang_Thread.h: Likewise.

	* src/native/vm/gnu/java_lang_VMThread.c (interrupt): Use
	threads_thread_interrupt.
	[9921ebdac86b]

	* src/vm/jit/argument.c:
	* src/vm/jit/argument.c (argument_vmarray_from_jvalue): Fixed
	warning when compiling with Sun's jni.h.
	[9e21a19e371f]

2007-10-22  Gregor Kaufmann  <tdn@inode.at>

	* configure.ac, m4/assertion.m4,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/native/include/Makefile.am, src/native/jni.h,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/sun/jvm.c, src/vm/Makefile.am, src/vm/assertion.c,
	src/vm/assertion.h, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/linker.c, src/vmcore/loader.c:
	* configure.ac (AC_CHECK_ENABLE_ASSERTION): Added

	* src/lib/gnu/java/lang/VMClassLoader.java
	(packageAssertionStatus0): New function (classAssertionStatus0):
	Likewise (defaultUserAssertionStatus): Likewise
	(defaultAssertionStatus): Implemented (packageAssertionStatus):
	Likewise (classAssertionStatus): Likewise

	* src/native/include/Makefile.am (COMMON_HEADER_FILES): Added
	java_util_HashMap.h, java_util_Map.h

	* /src/native/jni.h
	(_Jv_JavaVM->Java_java_lang_VMClassLoader_defaultAssertionStatus):
	Removed

	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(native/include/java_util_HashMap.h): Added
	(native/include/java_util_Map.h): Likewise
	(native/include/java_lang_Boolean.h): Likewise (toolbox/list.h):
	Likewise (vm/assertion.h): Likewise (methods): Added information for
	defaultUserAssertionStatus, packageAssertionStatus0,
	classAssertionStatus0
	(Java_java_lang_VMClassLoader_defaultAssertionStatus): Implemented
	(Java_java_lang_VMClassLoader_defaultUserAssertionStatus): New
	function (Java_java_lang_VMClassLoader_packageAssertionStatus0):
	Likewise (Java_java_lang_VMClassLoader_classAssertionStatus0):
	Likewise

	* src/native/vm/sun/jvm.c (toolbox/list.h): Added (vm/assertion.h):
	Likewise (JVM_DesiredAssertionStatus): Implemented
	(JVM_AssertionStatusDirectives): Now returns a usable
	java.lang.AssertionStatusDirectives object

	* src/vm/Makefile.am (libvm_la_SOURCES): Added assertion.c,
	assertion.h

	* src/vm/vm.c (vm/assertion.h): Added (OPT_EA, OPT_DA, OPT_ESA,
	OPT_DSA): Now handled by assertion module

	* src/vmcore/class.c (class_java_util_HashMap): Added

	* src/vmcore/class.h (class_java_util_HashMap): Added

	* src/vmcore/linker.c (linker_init): Added linking of
	class_java_util_HashMap

	* src/vmcore/loader.c (loader_init): Added loading of
	class_java_util_HashMap

	* m4/assertion.m4: New file

	* src/vm/assertion.c: New file

	* src/vm/assertion.h: New file
	[dfc311608cdb]

2007-10-22  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (unistd.h): Removed.
	[c55e286b6453]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (vmcore/system.h): Added. (exceptions_init):
	Use system_getpagesize and system_mmap_anonymous.
	[87916090c0dd]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_handle_exception): Changed
	signature to use void*.
	[0787c3ba398d]

	* src/vm/jit/show.c:
	* src/vm/jit/show.c (stdint.h): Added. (SHOW_INT_CONST): Fixed
	compiler warnings.
	[cf051a1d440f]

	* src/vm/jit/show.c:
	* src/vm/jit/show.c (show_basicblock): Pass correct arguments to
	linenumbertable_linenumber_for_pc.
	[5a06e321fc5b]

2007-10-22  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/patcher.c:
	* changed src/vm/jit/m68k/emit.c (builtin_verbosecall_exit): Use
	trace_java_call_exit.

	* changed src/vm/jit/m68k/linux/md-os.c (emit_trap): Fixed a bug.

	* changed src/vm/jit/m68k/patcher.c (md_signal_handler_sigill): Bug.
	(PATCH_BACK_ORIGINAL_MCODE): Bug.
	[6b8e93fdc96b]

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/system.c, src/vm/system.h:
	* changed src/vm/jit/m68k/asmpart.S: Removed unused method header
	entries.

	* changed src/vm/jit/m68k/codegen.c (codegen_emit): New
	linenumbertables code.
	[c76ff711720f]

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/m68k/md.c,
	src/vm/signal.c, src/vm/signallocal.h, src/vmcore/linker.c:
	* changed src/vm/jit/m68k/arch.h (JIT_COMPILER_VIA_SIGNAL): Added.

	* changed src/vm/jit/m68k/asmpart.S (asm_call_jit_compiler):
	Removed.

	* changed src/vm/jit/m68k/codegen.c (codegen_emit): All
	codegen_addpatchref replaced by patcher_add_patch_ref.

	(codegen_emit_stub_native): Use 8 byte stack slots.

	* changed src/vm/jit/m68k/emit.c (emit_verbosecall_enter): New
	tracer. (emit_trap_compiler): Added. (emit_trap): Likewise.

	* changed src/vm/jit/m68k/linux/md-abi.c (md_param_alloc): Use 8
	byte stackslots.

	* changed src/vm/jit/m68k/linux/md-os.c (md_init_linux): Removed.
	(md_signal_handler_sigsegv): Support for patchers and compiler via
	signal added.

	* changed src/vm/jit/m68k/linux/md-os.h (md_init_linux): Removed.

	* changed src/vm/jit/m68k/md.c (md_init): Call to md_init_linux
	removed.

	* changed src/vm/signal.c (signal_init): Register sigill for M68K.

	* changed src/vm/signallocal.h (md_signal_handler_sigill): Enabled
	for M68K.

	* changed src/vmcore/linker.c (link_class_intern): Enable long 4
	byte alignment.
	[a1dc04786217]

2007-10-22  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/none/threads.h:
	* src/threads/none/threads.h (stackframeinfo): Removed.
	(_no_threads_stackframeinfo): Likewise.
	[267fff05a72b]

	* src/vm/jit/show.c:
	* src/vm/jit/show.c (show_basicblock): Forgot to use
	linenumbertable_linenumber_for_pc.
	[b24a7f31a843]

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_jitdata_new) [!ENABLE_THREADS]: Fixed
	compilation.
	[a8d348dbea79]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (trace_java_call_enter): Removed unused
	variable.
	[4e2ba2f7e85d]

	* src/vm/jit/linenumbertable.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.c (count_linenumbertable): New variable.
	(size_linenumbertable): Likewise. (statistics_print_memory_usage):
	Adapted.
	* src/vmcore/statistics.h: Likewise.

	* src/vm/jit/linenumbertable.c [ENABLE_STATISTICS]
	(vmcore/options.h): Added [ENABLE_STATISTICS] (vmcore/statistics.h):
	Likewise. (linenumbertable_create) [ENABLE_STATISTICS]: Added
	statistics calculation.
	[6727b0adf84a]

	* src/vm/jit/Makefile.am, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/code.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/dseg.c,
	src/vm/jit/dseg.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/linenumbertable.c,
	src/vm/jit/linenumbertable.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/methodheader.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/linenumbertable.c: New file.
	* src/vm/jit/linenumbertable.h: Likewise.
	* src/vm/jit/Makefile.am (libjit_la_SOURCES): Added
	linenumbertable.[ch].

	* src/vm/jit/code.h (vm/jit/linenumbertable.h): Added. (codeinfo):
	Added linenumbertable.

	* src/vm/jit/codegen-common.c (vm/jit/linenumbertable.h): Added.
	(codegen_setup): Create linenumbers list. (codegen_reset): Likewise.
	(codegen_finish): Removed old linenumber-resolving code and call
	linenumbertable_create instead.

	* src/vm/jit/codegen-common.h (codegendata): Removed
	linenumberreferences, linenumbertablesizepos,
	linenumbertablestartpos, linenumbertab, added linenumbers.

	* src/vm/jit/dseg.c (dseg_addlinenumbertablesize): Removed.
	(dseg_addlinenumber): Likewise. (dseg_addlinenumber_inline_start):
	Likewise. (dseg_addlinenumber_inline_end): Likewise.
	(dseg_createlinenumbertable): Likewise.
	(dseg_get_linenumber_from_pc_intern): Likewise.
	(dseg_get_linenumber_from_pc): Likewise.

	* src/vm/jit/dseg.h: Likewise (linenumbertable_entry): Removed.

	* src/vm/jit/methodheader.h (LineNumberTableSize)
	(LineNumberTableStart): Removed.

	* src/vm/jit/stacktrace.c (vm/jit/linenumbertable.h): Added.
	(stacktrace_method_add): Renamed dseg_get_linenumber_from_pc to
	linenumbertable_linenumber_for_pc.

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S
	(asm_vm_call_method): Removed obsolete method-header entries.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(vm/jit/linenumbertable.h): Added. (codegen_emit): Removed
	dseg_addlinenumbertablesize call, use new linenumbertable functions,
	removed dseg_createlinenumbertable. (codegen_emit_stub_native):
	Removed obsolete method-header entries.
	[d992be0f02d6]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit): Moved ICMD_POP and
	ICMD_POP2 to ICMD_NOP case.
	[093ed0794c43]

	* src/vm/array.c, src/vm/array.h:
	* src/vm/array.c: Changed copyright.
	* src/vm/array.h: Likewise.
	[9b71c7a705e9]

2007-10-20  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/md.c:
	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/md.c: Fixed compile warnings.
	[2a39b1f8c18d]

2007-10-19  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/x86_64/md-abi.c (abi_registers_integer_saved): Fixed
	severe typo.
	[f3c3d927ba54]

2007-10-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/properties.c:
	* src/vm/properties.c (properties_set) [ENABLE_JAVASE &&
	WITH_CLASSPATH_GNU]: Fixed endorseddirs length.
	[fba8f04fd91f]

2007-10-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac, src/vmcore/system.c, src/vmcore/system.h:
	* configure.ac (AC_CHECK_HEADERS): Added assert.h, errno.h.
	(AC_CHECK_FUNCS): Added memcpy, memset, realloc.

	* src/vmcore/system.c (errno.h): Added. (stdint.h): Likewise.
	(string.h): Likewise. (unistd.h): Likewise. (sys/mman.h): Likewise.
	(system_mmap_anonymous): New function.

	* src/vmcore/system.h (stdint.h): Added. (stdlib.h): Likewise.
	(string.h): Likewise. (unistd.h): Likewise. (system_calloc): New
	function. (system_free): Likewise. (system_getpagesize): Likewise.
	(system_malloc): Likewise. (system_memcpy): Likewise.
	(system_memset): Likewise. (system_realloc): Likewise.
	(system_mmap_anonymous): Likewise.
	[cfa50d0a150e]

2007-10-18  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_dump): Ignore NEW threads
	while dumping.
	[65dc1b64848f]

2007-10-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMRuntime.c, src/native/vm/sun/jvm.c,
	src/vm/Makefile.am, src/vm/system.c, src/vm/system.h,
	src/vmcore/Makefile.am, src/vmcore/system.c, src/vmcore/system.h:
	* src/vm/system.c: Removed.
	* src/vm/system.h: Likewise.
	* src/vm/Makefile.am (libvm_la_SOURCES): Removed system.[ch].

	* src/vmcore/system.c: Added.
	* src/vmcore/system.h: Likewise.
	* src/vmcore/Makefile.am (libvmcore_la_SOURCES): Added system.[ch].

	* src/native/vm/gnu/java_lang_VMRuntime.c (vm/system.h): Renamed to
	vmcore/system.h.
	* src/native/vm/sun/jvm.c: Likewise.
	[28c2716784ad]

2007-10-18  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_handle_exception): Use LLNI macro
	for unlocking synchronized methods during stack unwinding.
	[6bd290291ff9]

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc64/linux/md-
	os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/builtin.h (builtin_retrieve_exception): Added prototype.
	* src/vm/builtin.c (builtin_retrieve_exception): Implemented.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv): Use
	above builtin.
	* src/vm/jit/i386/linux/md-os.c,
	* src/vm/jit/powerpc/darwin/md-os.c,
	* src/vm/jit/powerpc/linux/md-os.c,
	* src/vm/jit/powerpc64/linux/md-os.c,
	* src/vm/jit/x86_64/linux/md-os.c: Likewise.
	[20827c0dbb8e]

2007-10-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 5c4efabb7787.
	[4e1e7758b87a]

2007-10-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/dseg.h:
	* src/vm/jit/dseg.h (dseg_exception_entry): Removed.
	[35647a987380]

2007-10-18  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_create_replacement_points): Removed
	bogus flag tampering of codeinfo.
	[5c4efabb7787]

2007-10-17  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/patcher.c, src/vm/jit
	/patcher-common.h, src/vmcore/linker.c:
	* changed src/vm/jit/m68k/asmpart.S (asm_patcher_wrapper): Removed.
	* changed src/vm/jit/m68k/codegen.c (patcher.h): Include removed.
	(emit_codegen): Replaced emit_patcher_stubs by emit_patcher_trap.
	(codegen_emit_stub_native): Likewise.

	* changed src/vm/jit/m68k/emit.c (emit_patcher_stubs): Removed.

	* changed src/vm/jit/m68k/patcher.c
	(patcher_resolve_classref_to_classinfo): Ported to new patcher
	signature.

	* changed src/vm/jit/patcher-common.h: Enabled new patchers for
	__M68K__.

	* changed src/vmcore/linker.c (linker_preinit): __M68K__ has 4 byte
	long alignment.
	[b1e5181f9e58]

2007-10-17  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/properties.c:
	* src/vm/properties.c (properties_set) [ENABLE_JAVASE &&
	WITH_CLASSPATH_SUN]: Set java.ext.dirs and java.ext.endorsed
	properly.
	[455021c09495]

2007-10-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/intrp/codegen.c:
	* src/vm/jit/intrp/codegen.c (intrp_codegen): Ported methodheader
	changes (IsSync, exception table).
	[b19e41db4eca]

	* src/native/vm/gnu/java_lang_VMThrowable.c, src/native/vm/sun/jvm.c,
	src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_stack_walk): Changed return
	type to bool, fill the temporary stackframe info with the values
	from the stackframe info chain, if available. (stacktrace_create):
	Don't include fillInStackTrace and init methods in the trace (as
	HotSpot does).

	* src/native/vm/gnu/java_lang_VMThrowable.c (getStackTrace): Removed
	fillInStackTrace and init checks.

	* src/native/vm/sun/jvm.c (JVM_GetStackTraceDepth): Use
	TRACEJVMCALLS, check for NPE, check if backtrace is NULL.
	[e2c1b1f539de]

	* src/vm/system.c, src/vm/system.h:
	* src/vm/system.c: Changed copyright to CACAOVM.
	* src/vm/system.h: Likewise.
	[5db6925c6843]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Removed unused
	variable ex.
	[1a1bf81aba73]

	* src/vm/exceptions.c, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/dseg.c,
	src/vm/jit/exceptiontable.c, src/vm/jit/exceptiontable.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/methodheader.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/exceptiontable.c: New file.
	* src/vm/jit/exceptiontable.h: Likewise.

	* src/vm/jit/Makefile.am (libjit_la_SOURCES): Added
	exceptiontable.[ch].

	* src/vm/exceptions.c (exceptions_handle_exception): Use new
	exception table.

	* src/vm/jit/code.h (vm/jit/exceptiontable.h): Added. (codeinfo):
	Added exceptiontable.

	* src/vm/jit/codegen-common.c (codegen_finish): Call
	exceptiontable_create.

	* src/vm/jit/dseg.c (dseg_addlinenumbertablesize): Removed padding.

	* src/vm/jit/methodheader.h (ExTableSize, ExTableStart): Removed.

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S
	(asm_vm_call_method): Removed exception table stuff.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(codegen_emit): Likewise.
	[33a0fdfa4121]

2007-10-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin): Use
	jit_jitdata_new, this is more safe. (codegen_generate_stub_native):
	Likewise.
	[cd5057db2ddd]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_handle_exception): Handle the
	asm_vm_call_method special case outside the loop checking for code
	== NULL.
	[63c8a32690c6]

	* src/vm/exceptions.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/i386/codegen.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/exceptions.c (exceptions_handle_exception): Use
	code->synchronizedoffset directly for all architectures.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(codegen_emit): Set code->synchronizedoffset to rd->memuse * 8.
	[16ddb27b00ef]

	* src/vm/exceptions.c, src/vm/jit/arm/codegen.c:
	* src/vm/exceptions.c (exceptions_handle_exception) [__ARM__]: Added
	#ifdef to the -8 path.

	* src/vm/jit/arm/codegen.c (codegen_emit): Added +1 to rd->memuse
	for synchronizedoffset.
	[303bfaab95ac]

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/md.c, src/vm/jit/dseg.c, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/methodheader.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/methodheader.h (IsSync): Removed.

	* src/vm/jit/dseg.c (dseg_addlinenumbertablesize): Removed one of
	the paddings.

	* src/vm/jit/arm/md.c (md_codegen_get_pv_from_pc): Commented the
	IsLeaf-check (this should be removed).

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S
	(asm_vm_call_method): Removed IsSync from method-header.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(codegen_emit): Removed IsSync-dummy entry.
	[b9a4396d7410]

	* src/vm/exceptions.c, src/vm/jit/allocator/lsra.c,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/code.c, src/vm/jit/code.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/code.h (codeinfo): Added synchronizedoffset
	(temporarily).

	* src/vm/exceptions.c (exceptions_handle_exception): Don't use
	IsSync but code->synchronizedoffset.

	* src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/code.c: Use code_is_synchronized.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c: Use
	code_is_synchronized and set code->synchronizedoffset.
	[b2916cc961d6]

2007-10-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/Makefile.am:
	* src/vm/jit/Makefile.am (noinst_HEADERS): Removed patcher.h
	[29b2f2887b40]

	* src/threads/lock-common.h, src/threads/native/lock.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h, src/vm/jit/emit-
	common.h, src/vm/jit/patcher-common.h, src/vm/jit/patcher.h:
	* src/threads/lock-common.h (lock_get_initial_lock_word): Removed
	prototype.
	* src/threads/native/lock.c (lock_get_initial_lock_word): Removed.

	* src/vm/jit/codegen-common.c (codegen_add_patch_ref): Removed.
	* src/vm/jit/codegen-common.h (patchref) Removed structure.
	(codegendata): Removed patchrefs. (codegen_add_patch_ref): Removed
	prototype.

	* src/vm/jit/emit-common.h (emit_patcher_stubs): Removed prototype.

	* src/vm/jit/patcher-common.h: Removed ifdefs around patcher
	function macros.

	* src/vm/jit/patcher.h: Removed file.
	[1fe0cccd3f9e]

2007-10-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit_stub_native): Removed
	patcher stub.
	[fb92cc407e44]

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[a85035fe3af1]

2007-10-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_call_method_objectarray): Moved primitive_box into
	the native world.
	[daaf716e707f]

2007-10-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_stack_walk): Use the flags in
	codeinfo to check for leaf-methods.<
	[88cf8bfaa9ae]

	* src/native/jvmti/jvmti.c, src/vm/jit/replace.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.h (stackframeinfo_t): Removed method, added
	code.

	* src/native/jvmti/jvmti.c, src/vm/jit/replace.c,
	src/vm/jit/stacktrace.c: Likewise.
	[5ac994bd30b6]

	* src/mm/cacao-gc/gc.c, src/native/jvmti/jvmti.c,
	src/threads/native/threads.h, src/threads/threads-common.c,
	src/vm/exceptions.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/replace.c,
	src/vm/jit/replace.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/x86_64/codegen.c, src/vm/signal.c:
	* src/vm/jit/stacktrace.h (stackframeinfo): Renamed to
	stackframeinfo_t.

	* src/mm/cacao-gc/gc.c, src/native/jvmti/jvmti.c,
	src/threads/native/threads.h, src/threads/threads-common.c,
	src/vm/exceptions.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/replace.c,
	src/vm/jit/replace.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/codegen.c,
	src/vm/signal.c: Likewise.
	[cff7e69a6d3e]

2007-10-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/native/threads.c, src/threads/threads-common.c:
	* src/threads/native/threads.c: Fixed some compiler warnings.
	* src/threads/threads-common.c: Likewise.
	[ddee8a127826]

	* tests/gc/LockRecords.java, tests/gc/Makefile,
	tests/gc/NativeWeakRef.java, tests/gc/native.c:
	* tests/gc/LockRecords.java: Added additional cleanup pass after
	waiting.
	* tests/gc/Makefile: Added NativeWeakRef testcase.
	* tests/gc/NativeWeakRef.java: Added new testcase.
	* tests/gc/native.c: Added native methods for NativeWeakRef testcase.
	[eb85b412deb5]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h,
	src/threads/native/threads.c, src/threads/threads-common.h:
	* src/mm/cacao-gc/gc.c (gc_global_lock): Removed obsolete global
	lock. (gc_collect): Use GC mutex as global gc lock.
	(gc_reference_register_intern, gc_reference_unregister_intern): Use
	GC mutex to lock the reference lists.

	* src/mm/cacao-gc/gc.h (GC_MUTEX_LOCK, GC_MUTEX_UNLOCK): Added
	macros.

	* src/threads/native/threads.c [ENABLE_GC_CACAO] (mutex_gc): Added
	GC mutex. [ENABLE_GC_CACAO] (threads_mutex_gc_lock,
	threads_mutex_gc_unlock): Implemented.

	* src/threads/threads-common.h [ENABLE_GC_CACAO]
	(threads_mutex_gc_lock, threads_mutex_gc_unlock): Added prototypes.
	[49eb4810d097]

	* src/vm/string.c:
	* src/vm/string.c (javastring_toutf): Added check for empty strings.
	[8c1dc97f1d6a]

2007-10-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/parse.c, src/vm/jit/parse.h,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/replace.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/show.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/stack.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/jit.h (jitdata): Removed isleafmethod.

	* src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/ssa.c, src/vm/jit/parse.c, src/vm/jit/parse.h,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/replace.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/show.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/stack.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c: Replaced jd->isleafmethod with
	code_is_leafmethod.
	[14e3f40c0673]

2007-10-12  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-gc/mark.c,
	src/mm/cacao-gc/rootset.c, src/mm/gc-common.h,
	src/threads/native/lock.c:
	* src/mm/cacao-gc/gc.c (gc_reflist_weak): Added list for weak
	references. (gc_weakreference_register,
	gc_weakreference_unregister): Implemented. (gc_collect): Added
	preliminary call to lock_hashtable_cleanup.

	* src/mm/cacao-gc/gc.h (gc_reflist_weak): Added.

	* src/mm/cacao-gc/mark.c (mark_post): Added postprocessing function.

	* src/mm/cacao-gc/rootset.c (rootset_from_globals): Add weak
	references. (reftype_names): Adapted to new enumeration.

	* src/mm/gc-common.h: Reference types are now enumerated.
	(gc_weakreference_register, gc_weakreference_unregister): Added
	prototypes.

	* src/threads/native/lock.c [ENABLE_GC_CACAO]
	(lock_hashtable_cleanup): Added. (lock_record_new, lock_record_free)
	[ENABLE_GC_CACAO]: Register and unregister references to lock object
	with the GC (as weak references).
	[fb2f8cea78af]

	* src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/replace.c:
	* src/vm/jit/code.c (code_get_codeinfo_for_pv): Added new function.
	(code_find_codeinfo_for_pc): Use above function.
	(code_get_methodinfo_for_pv): Likewise.

	* src/vm/jit/code.h (code_get_codeinfo_for_pv): Added prototype.

	* src/vm/jit/replace.c (replace_pop_activation_record): Use above
	function. (replace_patch_method_pointer): Likewise.
	(replace_pop_native_frame): Skip native stubs with new sfi
	correctly. (replace_push_native_frame): Likewise.
	[8a4d773ffcee]

	* * Merged with rev 974c36a815eb.
	[7a0bc326262a]

	* src/cacaoh/headers.h, src/vm/string.c, src/vm/stringlocal.h:
	* src/cacaoh/headers.h (literalstring_free): Removed obsolete
	prototype.

	* src/vm/stringlocal.h (literalstring_u2, literalstring_free):
	Likewise.

	* src/vm/string.c (heapstring_t): Added typedef.
	(stringtable_update): Adapted for handles. (javastring_tochar): Code
	cleanup. (javastring_toutf): Code cleanup. (literalstring_u2): Made
	static and adapted for handles. (literalstring_free): Likewise.
	(javastring_intern): Code cleanup and added comments.
	[f52d56ea383b]

2007-10-12  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac, src/native/vm/sun/jvm.c:
	* configure.ac (AC_CHECK_FUNCS): Added ftruncate.

	* src/native/vm/sun/jvm.c (JVM_DefineClassWithSource): Handle when
	name is NULL properly. (JVM_Lseek): Use TRACEJVMCALLS.
	(JVM_SetLength): Implemented.
	[974c36a815eb]

2007-10-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_detach_thread): Fixed CLDC
	build.
	[03703b6d4855]

2007-10-09  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[8d1744a5a128]

	* * Merged with b23caa4282a5.
	[8f008c01aec4]

	* tests/regression/Makefile.am:
	* tests/regression/Makefile.am (SOURCE_FILES): Removed
	extest_clinit.java.
	[e9d81d59eea6]

	* * Merged with 3b6c3b177749.
	[b23caa4282a5]

	* tests/regression/extest_clinit.java:
	* Merged with 59ff46a9e236.
	[d6f8c68e5b5f]

	* src/vm/jit/code.h:
	* src/vm/jit/code.h (stdint.h): Added. (CODE_FLAG_SYNCHRONIZED): New
	flag. (code_is_synchronized): New function.
	(code_flag_synchronized): Likewise. (code_unflag_synchronized):
	Likewise.
	[eed84225afd7]

2007-10-09  Roland Lezuo  <tbfg@complang.tuwien.ac.at>

	* tests/regression/extest_clinit.java:
	Merged?
	[3b6c3b177749]

	* src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c, src/vm/jit/patcher-
	common.h:
	(codegen_emit_stub_builtin): Removed. (codegen_emit_stub_native):
	Ported to new interface.

	Ported to new interface, removed warnings.
	(md_signal_handler_sigill): Likewise.

	(offset.h): Removed.

	(PATCH_BACK_ORIGINAL_MCODE): Added. (patcher_patch_back): Removed.
	(patcher_patch_code): Added. (patcher_*): Use patchref_t instead of
	void *sp everywhere.
	[1f374ab123d9]

2007-10-09  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/system.c:
	* src/vm/system.c [__DARWIN__]: Fixed includes.
	[3fc50ec37a00]

	* src/threads/native/lock.c, src/vm/finalizer.c, src/vmcore/options.c,
	src/vmcore/options.h, tests/gc/LockRecords.java:
	* src/vm/finalizer.c (finalizer_run): Fixed for handles and added
	boehm-hack. (finalizer_thread, finalizer_notify): Added debug
	output.

	* src/vmcore/options.c (opt_DebugFinalizer): Added debug switch.
	* src/vmcore/options.h (opt_DebugFinalizer): Likewise.

	* src/threads/native/lock.c (lock_hashtable_remove): Also frees the
	lock record. (lock_record_finalizer): Same as for finalizer_run
	above. (lock_hashtable_get) [ENABLE_GC_BOEHM]: Fixed registration of
	finalizer.

	* tests/gc/LockRecords.java: Added new testcase for lock records
	cleanup.
	[59ff46a9e236]

	* src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Field.c
	(cacao_get_field_address) Removed. (_field_access_check,
	_field_get_type, _field_set_type): Added new functions.
	(Java_java_lang_reflect_Field_XXX): Adapted to above changes and
	thereby fixing it for handles.

	* src/native/vm/gnu/java_lang_reflect_Method.c: Just removed bogus
	casting.
	[2ba3107ae158]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_DeleteLocalRef): Fixed compiler warning.
	(_Jv_JNI_GetXXXField, _Jv_JNI_SetXXXField): Fixed for handles.
	(_Jv_JNI_GetStaticObjectField, _Jv_JNI_SetStaticObjectField):
	Likewise. (_Jv_JNI_SetObjectArrayElement): Adapted to new
	builtin_canstore. (_Jv_JNI_NewGlobalRef): Made LLNI critical
	sections smaller to avoid deadlock.
	[5e87139265f5]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_detach_thread): Fixed debug
	output and compiler warning.
	[06ec3216cf7d]

2007-10-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc/darwin/md-asm.h, src/vm/jit/powerpc/darwin/md-
	os.c, src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/powerpc/arch.h (JIT_COMPILER_VIA_SIGNAL): Temporarily
	added.

	* src/vm/jit/powerpc/asmpart.S (asm_call_jit_compiler): Removed.
	(L_jit_asm_compile$stub): Likewise.
	(L_exceptions_get_and_clear_exception$stub): Likewise.

	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_compiler):
	Removed.

	* src/vm/jit/powerpc/codegen.h (COMPILERSTUB_CODESIZE): Adapted
	size.

	* src/vm/jit/powerpc/darwin/md-asm.h (asm_call_jit_compiler):
	Removed. (exceptions_get_and_clear_exception): Likewise.
	(jit_asm_compile): Likewise.

	* src/vm/jit/powerpc/emit.c (emit_trap_compiler): New function.

	* src/vm/jit/powerpc/darwin/md-os.c (md_signal_handler_sigsegv):
	Added compiler-by-signals code.
	* src/vm/jit/powerpc/linux/md-os.c: Likewise.
	[598cc626e0ee]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[e4601e449e45]

	* tests/regression/extest.2output, tests/regression/extest.java,
	tests/regression/extest_clinit.java:
	* tests/regression/extest.java: Updated a bit and added another
	testcase.
	* tests/regression/extest.2output: Updated.
	* tests/regression/extest_clinit.java: Removed.
	[a95b70c0cad9]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_stackframeinfo_add) [!NDEBUG]:
	Added DebugStackFrameInfo output.
	(stacktrace_stackframeinfo_remove): Likewise.
	(stacktrace_stack_walk): Bugfix when a patcher in a leaf-method
	causes an exception.
	[cdbe094feb17]

2007-10-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/builtin.c, src/vm/builtin.h:
	* src/vm/builtin.c: Major cleanup of code and commentes, to much to
	list here, please accept my apologies for this short commit message.
	Everything is Handles-ready now.

	* src/vm/builtin.h: Adapted signatures of builtins and added vim
	boilerplate.
	[da567e175ac6]

	* src/native/llni.h, src/threads/native/lock.h, src/vm/finalizer.c,
	src/vm/jit/optimizing/recompile.c:
	* src/native/llni.h (LLNI_QUICKWRAP): Added new macro.

	* src/threads/native/lock.h: Use above macro for internal locking.
	(LOCK_WAIT_FOREVER, LOCK_NOTIFY): Added new macros.

	* src/vm/finalizer.c: Use internal locking macros throughout the
	code.
	* src/vm/jit/optimizing/recompile.c: Likewise.
	[6d2627458877]

2007-10-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_create_replacement_points): Use new
	code inline functions. (replace_pop_activation_record): Likewise.
	(replace_push_activation_record): Likewise.
	[cd0843508cff]

2007-10-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_verbosecall_exit): Fixed comments.
	[fbf41207864f]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Moved localref_table_init from
	vm_createjvm.
	[b924c9f5250c]

	* src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMObject.c, src/native/vm/sun/jvm.c:
	* src/native/vm/cldc1.1/java_lang_Object.c
	(Java_java_lang_Object_notify): Adapted to new locking function
	signatures. (Java_java_lang_Object_notifyAll): Likewise.
	(Java_java_lang_Object_wait): Likewise.

	* src/native/vm/gnu/java_lang_VMObject.c
	(Java_java_lang_VMObject_notify): Adapted to new locking function
	signatures. (Java_java_lang_VMObject_notifyAll): Likewise.
	(Java_java_lang_VMObject_wait): Likewise.

	* src/native/vm/sun/jvm.c (JVM_MonitorWait): Adapted to new locking
	function signatures. (JVM_MonitorNotify): Likewise.
	(JVM_MonitorNotifyAll): Likewise.
	[6540073cf5a9]

2007-10-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with ad640e81c710.
	[890fd7ef3d91]

	* src/vm/jit/code.h, src/vm/jit/jit.c:
	* src/vm/jit/code.h (codeinfo): Renamed codeflags to flags.
	(CODE_IS_VALID, CODE_IS_INVALID, CODE_IS_LEAFMETHOD)
	(CODE_SETFLAG_INVALID, CODE_SETFLAG_LEAFMETHOD): Removed.
	(code_is_invalid, code_flag_invalid, code_unflag_invalid): New
	inline function. (code_is_leafmethod, code_flag_leafmethod,
	code_unflag_leafmethod): Likewise.

	* src/vm/jit/jit.c (jit_invalidate_code): Use new inline functions.
	(jit_get_current_code): Likewise.
	[79af8d668a13]

2007-10-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/threads/lock-common.h,
	src/threads/native/lock.c:
	* src/threads/lock-common.h: Changed signature of most locking
	functions to take handles as arguments.

	* src/cacaoh/dummy.c: Adapted to new signatures.

	* src/threads/native/lock.c: Adapted to new signatures and added
	LLNI critical sections. Will slow down locking for [ENABLE_HANDLES
	&& ENABLE_GC_CACAO]. (lock_lockword_get). Implemented.
	(lock_lockword_set): Implemented.
	[ad640e81c710]

	* src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.h:
	* src/vm/jit/alpha/emit.c (emit_verbosecall_enter): Adapted to use
	new tracer. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/alpha/md-abi.h (TRACE_ARGS_NUM): Removed.
	[9e38d84cc222]

	* src/native/llni.c, src/native/llni.h:
	* src/native/llni.h (LLNI_CRITICAL_START_THREAD): Added faster
	macro. (LLNI_CRITICAL_END_THREAD): Likewise.

	* src/native/llni.c (llni_critical_start_thread): Implemented faster
	function. (llni_critical_end_thread): Likewise.
	[8cbaddb63fe3]

	* src/native/llni.h:
	* src/native/llni.h (LLNI_field_set_ref): Fixed problem with NULL
	references.
	[c765f13d96ff]

2007-10-07  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_print_argument): Removed obsolete
	function. (builtin_verbosecall_enter): Made a dummy function, use
	new tracer. (builtin_verbosecall_exit): Likewise.
	[88b3f386c93a]

	* src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-abi.h:
	* src/vm/jit/powerpc64/emit.c (emit_verbosecall_enter): Adapted to
	use new tracer. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/powerpc64/linux/md-abi.h (TRACE_ARGS_NUM): Removed.
	[53674e362433]

	* src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.h:
	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Adapted to use new
	tracer. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/arm/md-abi.h (TRACE_ARGS_NUM): Removed.
	[b630de06148c]

	* src/vm/jit/i386/emit.c, src/vm/jit/i386/md-abi.h:
	* src/vm/jit/i386/emit.c (emit_verbosecall_enter): Adapted to use
	new tracer. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/i386/md-abi.h (TRACE_ARGS_NUM): Removed.
	[14c64bfb5899]

	* src/vm/jit/powerpc/darwin/md-abi.h, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/powerpc/netbsd/md-
	abi.h, src/vm/jit/s390/md-abi.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.h:
	* src/vm/jit/x86_64/emit.c (emit_verbosecall_enter): Adapted to use
	new tracer. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/x86_64/md-abi.h (TRACE_ARGS_NUM): Removed.

	* src/vm/jit/s390/md-abi.h (TRACE_ARGS_NUM): Removed, already uses
	new tracer.

	* src/vm/jit/powerpc/darwin/md-abi.h (TRACE_ARGS_NUM): Likewise.
	* src/vm/jit/powerpc/linux/md-abi.h (TRACE_ARGS_NUM): Likewise.
	* src/vm/jit/powerpc/netbsd/md-abi.h (TRACE_ARGS_NUM): Likewise.

	* src/vm/jit/powerpc/emit.c (vm/builtin.h): Removed obsolete
	include.
	[274bd505a69b]

2007-10-06  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/java_lang_Thread.c, src/threads/native/threads.c,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.h (threads_thread_get_object): Added.
	(threads_thread_set_object): Added.

	* src/threads/threads-common.c: Use above functions throughout the
	code.

	* src/threads/native/threads.c: Likewise.

	* src/native/vm/java_lang_Thread.c: Likewise.
	(_Jv_java_lang_Thread_start): Fixed compiler warning.
	(_Jv_java_lang_Thread_currentThread) [ENABLE_JAVASE]: Fixed for
	handles.
	[01272c7b7f7e]

	* src/native/jni.c, src/native/llni.h, src/vm/builtin.c:
	* src/native/llni.h (LLNI_objectarray_element_set) Removed.
	(LLNI_objectarray_element_get) Removed.

	* src/native/jni.c: Use array_objectarray functions throughout the
	code.
	* src/vm/builtin.c: Likewise.
	[841ec0d005f8]

	* src/native/jni.c, src/native/localref.c:
	* src/native/jni.c (_Jv_JNI_DeleteLocalRef): Handle NULL references
	correctly.
	* src/native/localref.c (localref_add, localref_del): Added assertion.
	[1b879af9b08e]

2007-10-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/jit.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/jit.c (jit_compile_intern): Use native_method_resolve
	and check for exception.

	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Removed
	patcher stuff.
	[3fceed4e5c71]

	* src/native/native.c, src/native/native.h, src/vm/jit/patcher-
	common.c:
	* src/native/native.c (native_resolve_function): Renamed to
	native_method_resolve.
	* src/native/native.h: Likewise.

	* src/vm/jit/patcher-common.c (patcher_resolve_native_function):
	Likewise.
	[fd16ab5d87f1]

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/jit.h,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/show.c, src/vm/jit/stack.c, src/vm/jit/verify/icmds.c:
	* src/vm/jit/allocator/simplereg.c (ICMD_IF_FCMPxx,
	ICMD_IF_FCMPL_xx): Removed.
	* src/vm/jit/jit.h: Likewise.
	* src/vm/jit/powerpc/codegen.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/show.c: Likewise.
	* src/vm/jit/stack.c: Likewise.
	* src/vm/jit/verify/icmds.c: Likewise.
	[ba6af13783a8]

2007-10-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/vm/array.c, src/vm/jit/argument.c,
	src/vm/jit/stacktrace.c:
	* src/vm/array.c (array_objectarray_element_set): Fixed for handles.
	(array_objectarray_element_get): Likewise.

	* src/cacaoh/dummy.c (array_objectarray_element_set): Do not use
	LLNI_objectarray macros. (array_objectarray_element_get): Likewise.

	* src/vm/jit/argument.c: Use array_objectarray functions instead of
	LLNI_objectarray.

	* src/vm/jit/stacktrace.c: Likewise.
	[a4856d5695d8]

2007-10-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/exceptions.c, src/vm/jit/codegen-common.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h, src/vm/signal.c:
	* src/vm/jit/stacktrace.c (stacktrace_create_stackframeinfo):
	Removed. (stacktrace_create_extern_stackframeinfo): Renamed to
	stacktrace_stackframeinfo_add. (stacktrace_remove_stackframeinfo):
	Renamed to stacktrace_stackframeinfo_remove.
	* src/vm/jit/stacktrace.h: Likewise.

	* src/vm/exceptions.c, src/vm/jit/codegen-common.c,
	src/vm/jit/jit.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/sparc64/patcher.c, src/vm/signal.c: Renamed functions as
	above.
	[25cf57814a88]

2007-10-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Fixed
	stackframesize for (md->paramcount == 0 && md->returntype !=
	TYPE_VOID) cases.
	[a7482a807f1e]

	* src/native/localref.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/native/localref.c: Improved debug output with
	-XX:+DebugLocalReferences. (localref_check_uncleared): Implemented.

	* src/vmcore/options.c (opt_DebugLocalReferences): Added.
	* src/vmcore/options.h (opt_DebugLocalReferences): Likewise.
	[8e0d054d7791]

2007-10-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/stacktrace.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call): Renamed
	currentsp to sp, removed javara, use
	stacktrace_create_extern_stackframeinfo instead of
	stacktrace_create_native_stackframeinfo.
	(codegen_finish_native_call): Renamed currentsp to sp.

	* src/vm/jit/stacktrace.c (stdint.h): Added.
	(stacktrace_create_extern_stackframe): Always get methodinfo and
	store it in stackframeinfo.
	(stacktrace_create_native_stackframeinfo): Removed.
	(stacktrace_add_entry): Renamed to stacktrace_entry_add, made
	inline. (stacktrace_add_method): Renamed to stacktrace_method_add,
	made inline. (stacktrace_stack_walk): New function.
	(stacktrace_create): Completely rewritten.
	[e61772b09f4d]

2007-10-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/java_lang_VMThrowable.c, src/native/vm/sun/jvm.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.c (stacktrace_fillInStackTrace): Returns a
	bytearray. (stacktrace_print_trace): Does not use
	stacktracecontainer anymore.

	* src/vm/jit/stacktrace.h (stacktracecontainer): Removed.
	(stacktrace_fillInStackTrace): Adapted prototype to above change.

	* src/native/vm/cldc1.1/java_lang_Throwable.c: Adapted to above
	changes.
	* src/native/vm/gnu/java_lang_VMThrowable.c: Likewise.
	* src/native/vm/sun/jvm.c: Likewise.
	[d528eb08966a]

2007-10-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_compile_handle): Removed unused variable.
	[417ec2928806]

	* src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/codegen.h,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c:
	* src/vm/jit/powerpc64/arch.h (JIT_COMPILER_VIA_SIGNAL): Temporarily
	added.

	* src/vm/jit/powerpc64/asmpart.S (asm_call_jit_compiler): Removed.
	* src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_compiler):
	Likewise.

	* src/vm/jit/powerpc64/codegen.h (COMPILERSTUB_CODESIZE): Adapted
	size.

	* src/vm/jit/powerpc64/emit.c (emit_trap_compiler): New function.

	* src/vm/jit/powerpc64/linux/md-os.c (md_signal_handler_sigsegv):
	Added compiler-by-signals code.
	[f7859b7aea62]

	* src/vm/jit/alpha/arch.h, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/codegen.h,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/arch.h (JIT_COMPILER_VIA_SIGNAL): Temporarily
	added.

	* src/vm/jit/alpha/asmpart.S (asm_call_jit_compiler): Removed.
	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_compiler): Likewise.

	* src/vm/jit/alpha/codegen.h (COMPILERSTUB_CODESIZE): Adapted size.

	* src/vm/jit/alpha/emit.c (emit_trap_compiler): New function.

	* src/vm/jit/alpha/linux/md-os.c (vm/exceptions.h): Added.
	(md_signal_handler_sigsegv): Added compiler-by-signals code.
	[41acab1bbc53]

2007-10-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/java_lang_Class.c, src/vm/vm.c:
	* src/vm/vm.c: Use array_objectarray functions instead of
	LLNI_objectarray.
	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c: Likewise.
	* src/native/vm/gnu/java_lang_VMThrowable.c: Likewise.
	* src/native/vm/java_lang_Class.c: Likewise.
	[dfd4ba44560b]

2007-10-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/m68k/md.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/s390/md.c:
	* src/vm/jit/m68k/md.c (md_codegen_patch_branch): Removed.
	* src/vm/jit/powerpc64/md.c: Likewise.
	* src/vm/jit/s390/md.c: Likewise.
	[74debb2c5834]

2007-10-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/builtintable.inc:
	* src/vm/builtintable.inc (builtintable_internal): Added preliminary
	entry for builtin_multianewarray.
	[4728593261f4]

	* src/mm/memory.h, src/native/localref.c, src/vmcore/class.c,
	src/vmcore/field.c:
	* src/mm/memory.h [ENABLE_GC_BOEHM]: GCNEW macros are available for
	boehm only.

	* src/native/localref.c: Adapted ifdefs to above change.

	* src/vmcore/class.c: Adapted ifdefs to above change. (class_free):
	Fixed, fields array get freed properly.

	* src/vmcore/field.c: Adapted ifdefs to above change. (field_free):
	Implemented, field value memory gets freed.
	[c33e0df79652]

2007-10-01  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/reflect.c:
	* src/native/vm/reflect.c [ENABLE_ANNOTATIONS]: Fixed includes.
	[fc72108d11a3]

	* doc/Makefile.am, doc/handbook/Makefile.am:
	* doc/Makefile.am: Fixed clean target to work properly.
	* doc/handbook/Makefile.am: Likewise.
	[a380a08533a3]

2007-10-01  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/i386/md.c:
	* src/vm/jit/i386/md.c (vm/vm.h): Added.
	(md_jit_method_patch_address): Rewritten to new proposed version.
	[ec8797d1e6e4]

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigsegv): Set PV
	and XPC correctly.
	[6a09e13f9f75]

	* src/vm/jit/i386/emit.c:
	* src/vm/jit/i386/emit.c (emit_verbosecall_enter): Use M_CLTD.
	[c476a916878f]

	* src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/signal.c:
	* src/vm/jit/jit.c (jit_compile_handle): Changed signature.
	* src/vm/jit/jit.h: Likewise.

	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv): Set
	PV and XPC correctly.

	* src/vm/signal.c (signal_handle): Get the methodinfo pointer and
	pass it to jit_compile_handle.
	[005f80121869]

	* src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/emit.h,
	src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/arch.h (JIT_COMPILER_VIA_SIGNAL): Temporarily
	added.

	* src/vm/jit/i386/asmpart.S (asm_call_jit_compiler): Removed.

	* src/vm/jit/i386/codegen.c (codegen_emit_stub_compiler): Likewise.

	* src/vm/jit/i386/codegen.h (COMPILERSTUB_CODESIZE): Adapted size.
	(M_BYTE1, M_BYTE2): New macros. (M_CLTD, M_RET, M_NOP): Use M_BYTE1.
	(M_UD2): Use M_BYTE2.

	* src/vm/jit/i386/emit.c (emit_trap_compiler): New function.
	(emit_trap): Use macros. (emit_cltd, emit_ret, emit_nop): Removed.
	* src/vm/jit/i386/emit.h (emit_cltd, emit_ret, emit_nop): Likewise.

	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigsegv): Added
	JIT compiler code.
	[67dda8c1dc3d]

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_trap_compiler): Fixed comment.
	[a3ff74c5b8b0]

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv):
	Removed debug output.
	[79001d4e5c15]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_InitProperties): Fixed warning.
	[f91157763a26]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (vm/system.h): Added.
	(JVM_ActiveProcessorCount): Implemented.
	[121bbaac9f59]

	* src/native/vm/gnu/java_lang_VMRuntime.c, src/vm/Makefile.am,
	src/vm/system.c, src/vm/system.h:
	* src/native/vm/gnu/java_lang_VMRuntime.c (vm/system.h): Added.
	(availableProcessors): Use system_processors_online.

	* src/vm/Makefile.am (libvm_la_SOURCES): Added system.[ch].

	* src/vm/system.c: New file.
	* src/vm/system.h: Likewise.
	[3215b4903941]

	* src/vm/jit/jit.c, src/vm/vm.c:
	* src/vm/jit/jit.c (jit_compile_handle): Fixed warning.
	* src/vm/vm.c (vm_abort_disassemble): Likewise.
	[294eb7f45035]

	* src/native/vm/sun/jvm.c, src/vmcore/class.h:
	* src/native/vm/sun/jvm.c (JVM_SetClassSigners): Implemented.
	* src/vmcore/class.h (classinfo) [WITH_CLASSPATH_SUN]: Added signers.
	[3fd887e6e438]

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_compile_intern) [WITH_CLASSPATH_SUN]: Don't
	verify sub-classes of sun/reflect/MagicAccessorImpl.
	[51ab7abeebc5]

2007-09-29  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/patcher.c
	(patcher_checkcast_instanceof_interface): Fix error introduced in
	changeset 7586.
	[d5b33f1afb30]

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/codegen.h: Added functions for instruction parsing
	and manipulation, added opcode defines.
	* src/vm/jit/s390/codegen.c (codegen_emit): Replaced handcrafted
	machined code patching by marco.
	* src/vm/jit/s390/emit.c (emit_branch): Likewise.
	* src/vm/jit/s390/md.c (md_jit_method_patch_address,
	md_signal_handler_sigsegv, md_signal_handler_sigill,
	md_signal_handler_sigfpe): Replaced handcrafted machine code parsing
	and patching by calls to new functions.
	* src/vm/jit/s390/patcher.c (patcher_invokeinterface,
	patcher_invokevirtual, patcher_get_putfield): Likewise.
	[4a9b0a8de18b]

2007-09-29  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/emit-common.h, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/x86_64/arch.h,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/signal.c:
	* src/vm/jit/asmpart.h [!JIT_COMPILER_VIA_SIGNAL]
	(asm_call_jit_compiler): Added #ifdef.

	* src/vm/jit/codegen-common.c (codegen_generate_stub_compiler)
	[JIT_COMPILER_VIA_SIGNAL]: Added new code.

	* src/vm/jit/codegen-common.h [!JIT_COMPILER_VIA_SIGNAL]
	(codegen_emit_stub_compiler): Added #ifdef.

	* src/vm/jit/emit-common.h (emit_trap_compiler): Added.

	* src/vm/jit/jit.c [!JIT_COMPILER_VIA_SIGNAL] (jit_asm_compile):
	Added #ifdef. (jit_compile_handle): New function.

	* src/vm/jit/jit.h (vm/jit/stacktrace.h): Added.
	[!JIT_COMPILER_VIA_SIGNAL] (jit_asm_compile): Added #ifdef.

	* src/vm/jit/x86_64/arch.h (JIT_COMPILER_VIA_SIGNAL): Added
	temporarily.

	* src/vm/jit/x86_64/asmpart.S (asm_call_jit_compiler): Removed.

	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_compiler): Removed.
	* src/vm/jit/x86_64/codegen.h (COMPILERSTUB_CODESIZE): Adapted.

	* src/vm/jit/x86_64/emit.c (emit_trap_compiler): New function.

	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv): Added
	JIT compiler handling code.
	* src/vm/signal.c (signal_handle): Likewise.
	[1625eb0b4231]

	* src/vm/jit/alpha/md.c, src/vm/jit/arm/md.c, src/vm/jit/i386/md.c,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/m68k/md.c,
	src/vm/jit/md.h, src/vm/jit/mips/md.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/replace.c,
	src/vm/jit/s390/md.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/x86_64/md.c:
	* src/vm/jit/md.h (md_get_method_patch_address): Removed.
	* src/vm/jit/jit.h (md_jit_method_patch_address): Added.

	* src/vm/jit/jit.c (jit_asm_compile): Call
	md_jit_method_patch_address with new signature.

	* src/vm/jit/replace.c (replace_patch_future_calls): Likewise.

	* src/vm/jit/alpha/md.c, src/vm/jit/arm/md.c, src/vm/jit/i386/md.c,
	src/vm/jit/m68k/md.c, src/vm/jit/mips/md.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/s390/md.c,
	src/vm/jit/sparc64/md.c, src/vm/jit/x86_64/md.c: Tried to fix the
	includes. (md_get_method_patch_address): Renamed to
	md_jit_method_patch_address and changed the signature.
	[5a0a7be1c61c]

	* src/vm/jit/alpha/codegen.h, src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/codegen.h (M_MEM_GET_Opcode): New macro.
	(M_MEM_GET_A): Renamed to M_MEM_GET_Ra to be consistent with
	handbook. (M_MEM_GET_B): Renamed to M_MEM_GET_Rb. (M_MEM_GET_DISP):
	Renamed to M_MEM_GET_Memory_disp.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv): Use
	new macro names.
	[01d55d426e53]

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c [ENABLE_DISASSEMBLER] (vm/jit/disass.h): Added.
	(vm_abort_disassemble): New function.
	* src/vm/vm.h (vm_abort_disassemble): Likewise.
	[3666493a0162]

2007-09-28  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c: Merged with 93595e0b477d.
	[e03e02f0135d]

	* src/vm/jit/powerpc/asmpart.S:
	* src/vm/jit/powerpc/asmpart.S (asm_vm_call_method): Don't fake a
	Java call, because we don't patch this call anymore (TODO: all other
	architectures as well).
	[93595e0b477d]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_GetEnv): Use jni_version_check.
	[4194e7194975]

	* src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/darwin/md-asm.h:
	* src/vm/jit/powerpc/asmpart.S
	(L_stacktrace_create_extern_stackframeinfo$stub): Removed.
	(L_stacktrace_remove_stackframeinfo$stub): Likewise.
	(L_replace_me$stub): Likewise.
	(L_replace_build_execution_state$stub): Likewise.
	(L_replace_free_safestack$stub): Likewise.

	* src/vm/jit/powerpc/darwin/md-asm.h (jumptable_int,
	jumptable_long): Removed. (asm_patcher_wrapper): Likewise.
	(patcher_wrapper): Likewise. (replace_me): Likewise.
	(replace_build_execution_state): Likewise. (replace_free_safestack):
	Likewise. (stacktrace_create_extern_stackframeinfo): Likewise.
	(stacktrace_remove_stackframeinfo): Likewise.
	[1eea65d453be]

2007-09-28  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/mm/cacao-gc/rootset.c, src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_gc_into_native): Implemented.
	* src/mm/cacao-gc/rootset.c (rootset_writeback): Use above function.
	[f324661aa9c8]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/mark.c:
	* src/mm/cacao-gc/compact.c (compact_thread_classes): Removed
	obsolete function.
	* src/mm/cacao-gc/mark.c (mark_classes): Likewise.
	[70164b6b8eac]

	* src/vm/jit/argument.c, src/vm/vm.c:
	* src/vm/jit/argument.c: Added missing method comments.
	(vm/exceptions.h): Removed include.
	(argument_vmarray_from_objectarray): Do not throw exceptions, but
	return NULL.

	* src/vm/vm.c (vm_call_method_objectarray): Adapted to above changes
	and fixed nativeworld sections.
	[d7d6dadc37c5]

2007-09-28  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/jit.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/jit.c (TRACECOMPILERCALLS): New macro. (jit_compile):
	Use TRACECOMPILERCALLS. (jit_compile_intern): Removed some
	DEBUG_JIT_COMPILEVERBOSE.

	* src/vmcore/options.c (opt_TraceCompilerCalls): New variable.
	(options_xx): Handle opt_TraceCompilerCalls.
	* src/vmcore/options.h (opt_TraceCompilerCalls): Added.
	[0d92a96dd835]

2007-09-27  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/codegen.h:
	* src/vm/jit/s390/codegen.h (N_BRANCH_MIN, N_BRANCH_MAX): Fix
	(muliply by 2).
	[b2999afc3d91]

2007-09-27  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/argument.c, src/vm/vm.c:
	* src/vm/jit/argument.c (argument_vmarray_store_adr): Fixed for
	handles.
	* src/vm/vm.c (vm_call_array): Likewise.
	[ced954316377]

	* src/native/jni.c, src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_call_array): Made static, removed compiler call.
	(vm_call_method_objectarray): Added. (vm_call_method_valist): Added
	nativeworld macros, added compiler call. (vm_call_method_jvalue):
	Likewise.

	* src/vm/vm.h (vm_call_array): Removed prototypes.
	(vm_call_method_objectarray): Added prototype.

	* src/native/jni.c (_Jv_jni_invokeNative): Moved parts to vm.c for
	clearness.
	[a39b92f53b6a]

2007-09-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/code.c:
	* src/vm/jit/code.c (code_get_methodinfo_for_pv): Return NULL if
	code is NULL (asm_vm_call_method).
	[351e6063c865]

2007-09-27  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (vmcore/options.h): Fixed include.
	[d1a28f42c379]

2007-09-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/mm/memory.c, src/mm/memory.h:
	* src/mm/memory.c (memory_mprotect): Fixed signature, manpage is
	wrong about the signature of mprotect.
	* src/mm/memory.h: Likewise.
	[06d06747d56c]

2007-09-27  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/jni.c, src/vm/jit/argument.c, src/vm/jit/argument.h,
	src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/argument.c (argument_vmarray_store_int),
	(argument_vmarray_store_lng), (argument_vmarray_store_flt),
	(argument_vmarray_store_dbl), (argument_vmarray_store_adr),
	(argument_vmarray_from_valist), (argument_vmarray_from_jvalue),
	(argument_vmarray_from_objectarray): Moved from vm.c to this file.

	* src/vm/jit/argument.h (argument_vmarray_from_valist): Added
	prototype. (argument_vmarray_from_jvalue): Likewise.
	(argument_vmarray_from_objectarray): Likewise.

	* src/vm/vm.c: See above!

	* src/vm/vm.h (vm_array_from_objectarray): Removed prototype.

	* src/native/jni.c (_Jv_jni_invokeNative): Adapted to above changes.
	[cac920852cf7]

2007-09-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_is_primitive, class_is_anonymousclass,
	class_is_array, class_is_interface, class_is_localclass,
	class_is_memberclass, class_get_classloader, class_get_superclass):
	Moved to class.h and made them static inline.
	* src/vmcore/class.h: Likewise.
	[42bf0070c359]

2007-09-27  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/lock-common.h, src/toolbox/logging.c:
	* src/threads/lock-common.h: Removed obsolete comment.
	* src/toolbox/logging.c (threads/threads-common.h): Added include.
	[efd01191b1ee]

	* src/mm/gc-common.h, src/native/jni.c,
	src/native/vm/gnu/java_lang_VMSystem.c, src/threads/native/lock.c,
	src/vmcore/loader.c:
	* src/mm/gc-common.h (heap_hashcode): Added inline function.

	* src/native/jni.c: Use above function throughout file.
	* src/native/vm/gnu/java_lang_VMSystem.c: Likewise.
	* src/threads/native/lock.c: Likewise.
	* src/vmcore/loader.c: Likewise.
	[7e2d5fdf3012]

2007-09-26  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/lock.c, src/vm/global.h:
	* src/threads/native/lock.c: Renamed monitorPtr to lockword in the
	whole file. (stdint.h): Added.

	* src/vm/global.h (stdint.h): Added. (java_object_t): Renamed
	monitorPtr to lockword and changed the type to uintptr_t.
	[853865d3df15]

2007-09-26  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/native/threads.c, src/threads/threads-common.c:
	* src/threads/native/threads.c (threads_init): Removed obsolete call
	to register references with the GC.

	* src/threads/threads-common.c (threads_thread_new): Also register
	reference to exception object with the GC.
	[019681a01270]

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/threads/native/threads.c: Improved debug output.
	* src/threads/threads-common.c: Likewise.

	* src/threads/threads-common.h (DEBUGTHREADS): Added.

	* src/vm/vm.c (vm_create): Removed -verbose:threads option.

	* src/vmcore/options.c (opt_DebugThreads): Added -XX:+DebugThreads
	option.
	* src/vmcore/options.h (opt_DebugThreads): Likewise.
	[4ab0c57483a9]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/native/threads.h (native/include/java_lang_Thread.h):
	Removed. (threadobject): The object pointer is of type java_object_t
	now.

	* src/threads/native/threads.c: Adapted to above changes and use
	LLNI macros.

	* src/threads/threads-common.h (threads_thread_start): Changed
	signature to not use java_lang_Thread anymore.

	* src/threads/threads-common.c: Adapted to above changes and use
	LLNI macros. (threads_preinit): Fixed corruption of
	mainthread->flags.
	[26e085a276e8]

2007-09-25  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/md.c, src/vm/jit/i386/md.c, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/replace.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/x86_64/md.c:
	* src/vm/jit/alpha/md.c (md_patch_replacement_point): Removed debug
	code.
	* src/vm/jit/i386/md.c: Likewise.
	* src/vm/jit/mips/md.c: Likewise.
	* src/vm/jit/powerpc/md.c: Likewise.
	* src/vm/jit/powerpc64/md.c: Likewise.
	* src/vm/jit/sparc64/md.c: Likewise.
	* src/vm/jit/x86_64/md.c: Likewise.

	* src/vm/jit/replace.c (replace_activate_replacement_points)
	[ENABLE_DISASSEMBLER]: Improved debug.
	(replace_deactivate_replacement_points) [ENABLE_DISASSEMBLER]:
	Likewise.
	[778ca7b0994f]

	* src/native/localref.c, src/native/localref.h, src/vm/jit/argument.c,
	src/vm/jit/argument.h, src/vm/jit/codegen-common.c:
	* src/native/localref.c [ENABLE_HANDLES] (localref_native_exit):
	Implemented. (localref_native_enter): Renamed from localref_fill.

	* src/native/localref.h (localref_native_exit): Added prototype.
	(localref_native_enter): Renamed from localref_fill.

	* src/vm/jit/argument.c (argument_jitreturn_store): Implemented.

	* src/vm/jit/argument.h (argument_jitreturn_store): Added prototype.

	* src/vm/jit/codegen-common.c (codegen_start_native_call): Improved
	comments and adapted to above changes. (codegen_finish_native_call):
	Likewise.
	[cb9745650425]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (llni_critical_start, llni_critical_end):
	Removed aborts.
	[e73922f2480c]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_handle): Wrap and unwrap references
	correctly.
	[a9c206e70c58]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_find_replacement_point_for_pc):
	Fixed assertion. (replace_me_wrapper): Simplified search for
	replacement point.
	[fd550f06fd83]

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c (md_replace_executionstate_write):
	Fixed compiler warning.

	* src/vm/jit/x86_64/linux/md-os.c (md_replace_executionstate_read):
	Implemented. (md_replace_executionstate_write): Likewise.
	[437c4ce74de8]

	* src/vm/jit/i386/arch.h, src/vm/jit/x86_64/arch.h:
	* src/vm/jit/i386/arch.h (REPLACEMENT_PATCH_SIZE): Adapted to new
	trap mcode.
	* src/vm/jit/x86_64/arch.h (REPLACEMENT_PATCH_SIZE): Likewise.
	[cdd632019391]

	* src/vm/jit/codegen-common.c, src/vm/jit/replace.c,
	src/vm/jit/replace.h, src/vm/signal.c:
	* src/vm/jit/codegen-common.c (codegen_set_replacement_point): Add
	NOPs if replacement testing mode is enabled.

	* src/vm/jit/replace.c (replace_me_wrapper): Finished
	implementation. (replace_me): Major code cleanup. Removed safestack
	stuff. (replace_build_execution_state): Likewise.
	(replace_activate_replacement_points): Adapted changes from previous
	rev. (replace_deactivate_replacement_points): Likewise.
	(replace_alloc_safestack): Removed. (replace_free_safestack):
	Removed.

	* src/vm/jit/replace.h (replace_safestack_t): Removed.
	(md_replace_executionstate_read): Added prototype.
	(md_replace_executionstate_write): Likewise.

	* src/vm/signal.c (signal_handle): Adapted to new
	replace_me_wrapper.
	[a97a8699e3f3]

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc64/linux/md-
	os.c, src/vm/jit/s390/md.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/signallocal.h (signal_handle): Changed signature.

	* src/vm/signal.c (signal_handles): Create stackframeinfo here.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv):
	Adapted to new signature and removed stackframeinfo creation.

	* src/vm/jit/arm/linux/md-os.c: Likewise.
	* src/vm/jit/i386/darwin/md-os.c: Likewise.
	* src/vm/jit/i386/linux/md-os.c: Likewise.
	* src/vm/jit/m68k/linux/md-os.c: Likewise.
	* src/vm/jit/mips/irix/md-os.c: Likewise.
	* src/vm/jit/mips/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc/darwin/md-os.c: Likewise.
	* src/vm/jit/powerpc/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc64/linux/md-os.c: Likewise.
	* src/vm/jit/s390/md.c: Likewise.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	* src/vm/jit/sparc64/solaris/md-os.c: Likewise.
	* src/vm/jit/x86_64/linux/md-os.c: Likewise.
	[60c0ebbe4e43]

2007-09-24  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/i386/asmpart.S, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/darwin/md-asm.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/i386/asmpart.S (asm_replacement_in,
	asm_replacement_out): Removed obsolete functions.

	* src/vm/jit/i386/cygwin/md-asm.h: Likewise.
	* src/vm/jit/i386/darwin/md-asm.h: Likewise.
	* src/vm/jit/mips/asmpart.S: Likewise.
	* src/vm/jit/powerpc/asmpart.S: Likewise.
	* src/vm/jit/powerpc/darwin/md-asm.h: Likewise.
	* src/vm/jit/powerpc64/asmpart.S: Likewise.
	* src/vm/jit/s390/asmpart.S: Likewise.
	* src/vm/jit/x86_64/asmpart.S: Likewise.
	[b740aa39a6b3]

	* src/vm/jit/i386/linux/md-os.c, src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c (emit_replacement_stubs): Removed obsolete
	function.
	* src/vm/jit/i386/linux/md-os.c: Reordered functions in file.
	[ee8508729ad0]

	* src/vm/jit/alpha/md.c, src/vm/jit/i386/md.c, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/s390/md.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/x86_64/md.c:
	* src/vm/jit/alpha/md.c (md_patch_replacement_point): Changed
	signature.

	* src/vm/jit/i386/md.c: Likewise.
	* src/vm/jit/mips/md.c: Likewise.
	* src/vm/jit/powerpc/md.c: Likewise.
	* src/vm/jit/powerpc64/md.c: Likewise.
	* src/vm/jit/s390/md.c: Likewise.
	* src/vm/jit/sparc64/md.c: Likewise.
	* src/vm/jit/x86_64/md.c: Likewise.
	[8607a4e4bab5]

	* src/vm/jit/jit.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/jit.c (jit_compile_intern) [ENABLE_REPLACEMENT]:
	Activate replacement points after code generation if testing option
	is given.

	* src/vmcore/options.c [ENABLE_REPLACEMENT] (opt_TestReplacement):
	Added replacement testing option.

	* src/vmcore/options.h [ENABLE_REPLACEMENT] (opt_TestReplacement):
	Likewise.
	[b4b8349d4df5]

2007-09-23  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/statistics.c, src/vmcore/statistics.h:
	* src/vmcore/statistics.c (size_stacksize): New variable.
	(statistics_print_memory_usage): Print new variable.
	* src/vmcore/statistics.h (size_stacksize): Added.
	[9ffe8678ac20]

	* src/mm/memory.c, src/mm/memory.h:
	* src/mm/memory.c (memory_mprotect): New function.
	* src/mm/memory.h: Likewise.
	[9b7a3aee74a4]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_handle): Fixed debug output.
	[18e1db4a4dd2]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_impl_thread_start): Print
	error of return value (errno is not set by pthread functions).
	[1735a75ea91f]

	* src/threads/threads-common.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/threads/threads-common.c (list_threads_free): Renamed to
	list_free_thread_index. (thread_index_t): New type.
	(threads_preinit): Initialize list_free_thread_index.
	(threads_thread_new): Use list_free_thread_index
	(threads_thread_free): Likewise and free the threadobject.

	* src/vmcore/statistics.c (stdint.h): Added. (size_thread_index_t):
	Likewise. (statistics_print_memory_usage): Print
	size_thread_index_t.
	* src/vmcore/statistics.h (stdint.h): Added. (size_thread_index_t):
	Likewise.
	[7938bddb23fe]

2007-09-22  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md-abi.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call,
	codegen_finish_native_call) [__S390__]: Adapted for s390.
	 * src/vm/jit/s390/codegen.c (codegen_emit_stub_native): Adapted for
	builtin stubs.
	 * src/vm/jit/s390/md-abi.c (md_param_alloc_native): On stack arguments
	are now already set off by the linkage area size.
	[cdba3e10f470]

	* src/vm/jit/s390/emit.c:
	* src/vm/jit/s390/emit.c (emit_verbosecall_enter,
	emit_verbosecall_exit): Adapted to modified trace_java_call_enter
	and trace_jave_call_exit.
	[b0b2a8ecfb7e]

2007-09-21  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac, src/native/vm/sun/jvm.c:
	* configure.ac (AC_CHECK_FUNCS): Added getsockopt.

	* src/native/vm/sun/jvm.c (stdint.h): Added. (sys/types.h):
	Likewise. (JVM_HoldsLock): Implemented. (JVM_SocketAvailable):
	Likewise. (JVM_GetSockOpt): Likewise. (JVM_SetSockOpt)
	[HAVE_SETSOCKOPT]: Added #ifdef.
	[808f939f7d6c]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Save and
	restore floats as float so the trace functions can print them
	correctly.
	[08f6e263bf88]

	* src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_DebugStackTrace): Changed type to int.
	(options_xx): Forgot to handle opt_DebugStackTrace.
	* src/vmcore/options.h (opt_DebugStackTrace): Changed type to int.
	[c6701c057d02]

2007-09-20  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/class.c:
	* src/vmcore/class.c [!NDEBUG]
	(class_classref_or_classinfo_println): Added missing #ifdef.
	[0216ea4e581b]

2007-09-19  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/loader.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/loader.c (loader_init): Don't use utf_java_lang_System.

	* src/vmcore/utf8.c (utf_java_lang_System): Removed. (utf8_init):
	Likewise.
	* src/vmcore/utf8.h: Likewise.
	[3c0f5dc5dd40]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/vm.c:
	* src/vm/exceptions.c (exceptions_init): Changed return value to
	void, removed class_java_lang_Throwable loading and linking.
	(exceptions_throw_linkageerror): Removed unused variable o.

	* src/vm/exceptions.h (exceptions_init): Changed return value to
	void. (new_exception_utfmessage): Removed.

	* src/vm/vm.c (vm_create): Don't check return value of
	exceptions_init.
	[c91eb1105dd8]

	* src/cacaoh/dummy.c, src/vm/exceptions.c, src/vm/initialize.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/cacaoh/dummy.c (vm_initializing): Added.

	* src/vm/exceptions.c (exceptions_init): Removed all class loads and
	links. (exceptions_abort): New function. (exceptions_new_class):
	Removed. (exceptions_throw_class): Likewise.
	(exceptions_new_class_utf): Likewise. (exceptions_throw_class_utf):
	Likewise. (exceptions_throw_classnotfoundexception): Use
	exceptions_throw_utf_utf. (exceptions_throw_noclassdeffounderror):
	Likewise. (exceptions_throw_linkageerror): Likewise.
	(exceptions_throw_nosuchmethoderror): Likewise.
	(exceptions_throw_unsatisfiedlinkerror: Likewise.
	(exceptions_new_classcastexception): Use exceptions_new_utf_utf.
	(exceptions_throw_outofmemoryerror): Use exceptions_throw_utf.
	(exceptions_throw_nullpointerexception): Likewise.
	(exceptions_new_nullpointerexception): Use exceptions_new_utf.
	(exceptions_classnotfoundexception_to_noclassdeffounderror): Load
	java/lang/ClassNotFoundException explicitly.

	* src/vm/initialize.c (initialize_class_intern): Load
	java/lang/Exception explicitly.

	* src/vmcore/class.c (class_java_lang_Error): Removed.
	(class_java_lang_LinkageError): Likewise.
	(class_java_lang_NoClassDefFoundError): Likewise.
	(class_java_lang_OutOfMemoryError): Likewise.
	(class_java_lang_VirtualMachineError): Likewise.
	(class_java_lang_Exception): Likewise.
	(class_java_lang_ClassCastException): Likewise.
	(class_java_lang_ClassNotFoundException): Likewise.
	* src/vmcore/class.h: Likewise.

	* src/vmcore/linker.c (linker_init): Added class_java_lang_Throwable
	and class_java_lang_VMThrowable.

	* src/vmcore/loader.c (loader_preinit): Don't check for error on
	load_class_bootstrap, this is now done in the exception functions.
	(loader_init): Likewise. (load_class_bootstrap): Removed
	utf_java_lang_Object check.

	* src/vmcore/utf8.c (utf_java_lang_VMThrowable): Removed.
	* src/vmcore/utf8.h: Likewise.
	[f6e46b5abdac]

	* src/vm/properties.c, src/vm/properties.h:
	* src/vm/properties.c (properties_dump): New function.
	* src/vm/properties.h: Likewise.
	[3fe0447f57b7]

2007-09-18  Mathias Panzenboeck  <panzi@complang.tuwien.ac.at>

	* doc/Makefile.am, doc/annotations.tex, doc/jsr.bib:
	* doc/Makefile.am (dist_noinst_DATA): Added annotations.tex and
	jsr.bib (annotations): New target which creates annotations.dvi
	(clean): Clean the annotations.aux/.bbl/.dvi/... files.

	* doc/annotations.tex: New file. This is the documentation of the
	annotations support implementation.

	* doc/jsr.bib: New file. Contains bibtex reference for JSR202.
	[cbc7fae03947]

2007-09-18  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/cacaoh.c, src/vm/vm.c, src/vm/vm.h, src/vmcore/linker.c,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/cacaoh/cacaoh.c (main): Removed linkverbose.

	* src/vm/vm.c (vm_printconfig): Made static. (vm_create): Call
	vm_printconfig after the VM is initialized.
	* src/vm/vm.h (vm_printconfig): Removed.

	* src/vmcore/linker.c (TRACELINKCLASS): New macro.
	(link_class_intern): Use TRACELINKCLASS.

	* src/vmcore/options.c (linkverbose): Removed. (opt_TraceLinkClass):
	Added. (options_xx): OPT_PrintConfig: Don't call vm_printconfig,
	OPT_TraceLinkClass: Added.
	* src/vmcore/options.h (linkverbose): Removed. (opt_TraceLinkClass):
	Added.
	[b6b94c056c1d]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_handler) [!NDEBUG]: #ifdef'ed
	debug output.
	[c61a9af5c9b5]

	* src/threads/native/lock.c:
	* src/threads/native/lock.c (lock_record_notify): Ignore already
	signaled threads.
	[2c60bb7d3a11]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetClassAccessFlags): Use
	TRACEJVMCALLS.
	[6d11c71489c9]

2007-09-17  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* configure.ac, src/native/vm/sun/jvm.c:
	* configure.ac (AC_CHECK_FUNCS): Added fsync.
	* src/native/vm/sun/jvm.c (JVM_Sync): Implemented.
	[3bd273a402ef]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (staticFieldOffset): Return 0.
	(staticFieldBase): Return the pointer to value.
	[0e6f95db8141]

2007-09-16  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/sun/jvm.c, src/vmcore/class.c, src/vmcore/class.h:
	* src/native/vm/gnu/java_lang_VMClass.c (getModifiers): Use
	class_get_modifiers.
	* src/native/vm/sun/jvm.c (JVM_GetClassModifiers): Likewise.

	* src/native/vm/java_lang_Class.c (class_get_modifiers): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.

	* src/vmcore/class.c (class_get_modifiers): New function.
	* src/vmcore/class.h: Likewise.
	[3438316160b3]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetStackAccessControlContext): Use
	TRACEJVMCALLS. (JVM_AssertionStatusDirectives): Likewise.
	[3fcf29d58b0f]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_IsThreadAlive): Use LLNI_equals.
	[86b85d556a58]

	* * Merged with 5a268f292149.
	[07d1c81692ee]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_NewWeakGlobalRef): Use TRACEJNICALLS.
	(_Jv_JNI_DeleteWeakGlobalRef): Likewise.
	[741ac9cf4529]

2007-09-16  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/native/llni.h:
	* src/native/llni.h (LLNI_equals): Added macro.
	[5a268f292149]

2007-09-16  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/dummy.c, src/native/vm/sun/jvm.c, src/vm/Makefile.am,
	src/vm/package.c, src/vm/package.h, src/vm/vm.c,
	src/vmcore/loader.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/cacaoh/dummy.c (package_add): New function.

	* src/native/vm/sun/jvm.c (vm/package.h): Added.
	(JVM_GetSystemPackage): Implemented.

	* src/vm/Makefile.am (libvm_la_SOURCES): Added package.[ch].

	* src/vm/package.c: New file.
	* src/vm/package.h: Likewise.

	* src/vm/vm.c (vm/package.h): Added. (vm_create): Call package_init.

	* src/vmcore/loader.c (vm/package.h): Added. (load_class_bootstrap):
	Call package_add.

	* src/vmcore/options.c (opt_DebugPackage): Added. (options_xx):
	Likewise.
	* src/vmcore/options.h (opt_DebugPackage): Added.
	[e91bea6d1b62]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_detach_thread): Notify all
	threads waiting on the Java thread-object.
	[db035cf768f7]

	* src/mm/nogc.c:
	* src/mm/nogc.c [HAVE_SYS_MMAN_H] (sys/mman.h): Added #ifdef.
	(heap_alloc_uncollectable): Added additional parameter for
	heap_alloc. (gc_init) [HAVE_MMAP]: Added #ifdef.
	[231910498e40]

2007-09-15  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/class.c:
	* src/vmcore/class.c (class_set_packagename): Added '/' to the
	internal package name.
	[44ff14c3e9a6]

	* src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	src/native/vm/sun/jvm.c:
	* src/native/vm/java_lang_Thread.c (isAlive): Removed.
	* src/native/vm/java_lang_Thread.h: Likewise.

	* src/native/vm/cldc1.1/java_lang_Thread.c (stdint.h): Added.
	(isAlive): Use threads_thread_is_alive.

	* src/native/vm/sun/jvm.c (JVM_IsThreadAlive): Likewise.
	[bc11be8a1e7c]

2007-09-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_array_from_objectarray): TYPE_LNG: Added missing
	primitive_type_get_by_wrapperclass to get type (fixes JBoss).
	[395643eaf5e9]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_array_from_objectarray): Removed illegal_arg label
	and throw exception directly. This makes it easier for debugging
	and newer compilers can optimize that.
	[2b62829628e6]

	* src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_thread_state_runnable):
	Don't change the state if the current state is
	THREAD_STATE_TERMINATED. (threads_thread_state_waiting): Likewise.
	(threads_thread_state_timed_waiting): Likewise.
	(threads_thread_is_alive): Smaller changes.
	* src/threads/threads-common.h (threads_thread_is_alive): Likewise.
	[1307fac97706]

	* src/threads/native/lock.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/threads/native/lock.c (LOCK_LOG): Removed. (DEBUGLOCKS): New
	macro. (lock_record_new): Added DEBUGLOCKS. (lock_record_free):
	Likewise. (lock_hashtable_grow): Likewise. (lock_hashtable_get):
	Likewise. (lock_inflate): Likewise. (lock_monitor_enter): Likewise.
	(lock_monitor_exit): Likewise. (lock_record_wait): Likewise.
	(lock_record_notify): Likewise.

	* src/vmcore/options.c (opt_DebugLocks): Added. (options_xx):
	Likewise.
	* src/vmcore/options.h (opt_DebugLocks): Added.
	[ab953b0c5ac1]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (getShort): New function.
	(putLong): Likewise. (getDouble): Likewise. (putDouble): Likewise.
	[d4deff26f6d1]

	* src/threads/native/lock.c, src/threads/native/lock.h:
	* src/threads/native/lock.c (toolbox/list.h): Added.
	(lock_record_t): Create waiters list. (lock_record_free): Free
	waiters list. (lock_record_add_waiter): Use list.
	(lock_record_remove_waiter): Likewise. (lock_record_notify):
	Likewise.

	* src/threads/native/lock.h (toolbox/list.h): Added.
	(lock_waiter_t): Removed next, added linkage. (lock_record_t):
	Changed waiters to a list_t.
	[ff6d5c593e7f]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c [WITH_CLASSPATH_SUN]
	(native/include/java_lang_Object.h,
	native/include/java_lang_String.h,
	native/include/java_nio_ByteBuffer.h,
	native/include/java_lang_ClassLoader.h): Added.
	[d04eadb70c7f]

2007-09-14  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/vmcore/annotation.c:
	* src/vmcore/annotation.c: Fixed comment.
	[3bc1be6d9164]

2007-09-14  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_wait_with_timeout): Renamed
	thread to t.
	[00f8940164ee]

2007-09-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/toolbox/list.c, src/toolbox/list.h:
	* src/toolbox/list.c (list_free): New function. (list_lock):
	Likewise. (list_unlock): Likewise.
	* src/toolbox/list.h: Likewise.
	[70f5642b3e83]

	* src/vm/exceptions.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/exceptions.c (exceptions_get_exception): Simplyfied.
	(exceptions_set_exception): Added debug output.
	(exceptions_clear_exception): Use explicit implementation and added
	debug output. (exceptions_get_and_clear_exception): Only clear when
	an exception is set.

	* src/vmcore/options.c (opt_DebugExceptions): Added. (options_xx):
	Likewise.
	* src/vmcore/options.h: Likewise.
	[8456a18d18be]

2007-09-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/native/lock.c:
	* src/threads/native/lock.c (lock_record_wait): No longer throws and
	exception but returns a boolean value indicating the interruption.
	(lock_monitor_enter): Ignore interruption of lock_record_wait.
	(lock_monitor_wait): Throw an exception if interrupted.
	[3433056d2e6e]

2007-09-13  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/cacaoh/headers.h, src/threads/native/threads.h,
	src/threads/none/threads.h, src/vm/exceptions.c,
	src/vm/jit/inline/inline.c:
	* src/cacaoh/headers.h (_exceptionptr): Removed.

	* src/threads/native/threads.h (exceptionptr): Removed.
	* src/threads/none/threads.h: Likewise.

	* src/vm/exceptions.c (exceptions_get_exception): Rewritten to use
	threadobject directly. (exceptions_set_exception): Likewise.

	* src/vm/jit/inline/inline.c (inline_transform)
	[INLINE_VERIFY_RESULT]: Use exceptions_clear_exception.
	[3bd4728a8c59]

2007-09-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/arm/asmpart.S:
	* src/vm/jit/arm/asmpart.S (asm_exceptionptr): Removed.
	[f6cbcaf2f4fc]

2007-09-13  tbfg  <tbfg@localhost.localdomain>

	* src/vm/jit/powerpc64/asmpart.S:
	Removed misleading comment about copying stuff from linux kernel.
	This was true, but the implementation has been removed and the ppc
	solution was adapted for pp64.
	[5f48da04a418]

2007-09-13  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/show.c, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vm/vm.c (vm_create): Removed obsolete -se option.
	* src/vm/jit/show.c (show_method): No longer show exception stubs.
	* src/vmcore/options.c (opt_showexceptionstubs): Removed.
	* src/vmcore/options.h (opt_showexceptionstubs): Likewise.
	[76dad440809f]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h:
	* src/vm/jit/arm/codegen.h: Major code cleanup and support VFP
	instructions.
	* src/vm/jit/arm/codegen.c: Adapted to above changes.
	[979eaad7469b]

	* src/native/vm/sun/jvm.c, src/vm/jit/s390/codegen.c, src/vm/vm.c,
	src/vmcore/options.c, src/vmcore/options.h:
	* Merged with michi branch at rev 21fd42e049a3.
	[4d32767b4c1d]

	* src/vm/builtintable.inc:
	* src/vm/builtintable.inc (builtintable_internal): Create builtin
	stubs for LOCK_monitor_enter and LOCK_monitor_exit, because they
	throw exceptions. This will slow down Cacao, we need the fast-path
	or inline those builtins!
	[21fd42e049a3]

	* src/vm/jit/arm/asmpart.S:
	* src/vm/jit/arm/asmpart.S (asm_cacheflush): Code cleanup and
	support for EABI syscall calling conventions.
	[4933a3684852]

2007-09-12  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen_emit_stub_native): Replaced N_*
	code generation macros by alpha-like M_* ones.
	[5a4e35cb3ab5]

2007-09-12  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/vmcore/annotation.c:
	* src/vmcore/annotation.c (LLNI_objectarray_copy): Removed macro.
	(annotation_bytearrays_resize): Use MCOPY instead of my own macro.
	[86a989abbdea]

2007-09-12  Peter Molnar  <pm@complang.tuwien.ac.at>

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/md.c:
	* src/vm/jit/s390/asmpart.S src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/md.c: Changed
	JIT ABI on s390: R0 is now REG_ITMP3, R12 is a saved register,
	REG_ITMPs are reordered, REG_ITMP1_XPTR is now REG_ITMP3_XPTR,
	REG_ITMP2_XPC is now REG_ITMP1_XPC.
	[75ecbbddead3]

2007-09-12  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/native/llni.h, src/vmcore/annotation.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/field.c, src/vmcore/method.c:
	* src/native/llni.h (LLNI_classinfo_field_get): New macro.
	(LLNI_classinfo_field_set): Likewise.

	* src/vmcore/annotation.c (LLNI_objectarray_copy): New macro. This
	macro will be replaced by a appropriate array_* function once such a
	function exists. (annotation_bytearrays_resize): Use above macro and
	improved variable naming. (annotation_bytearrays_insert): Changed
	type of parameter 1 and return type and improved variable naming.
	(annotation_load_attribute_body): Use LLNI_CRITICAL_START and
	LLNI_CRITICAL_END.
	(annotation_load_method_attribute_annotationdefault): Use
	LLNI_classinfo_field_get and LLNI_classinfo_field_set macros. (annot
	ation_load_method_attribute_runtimevisibleparameterannotations):
	Likewise.
	(annotation_load_method_attribute_runtimevisibleannotations):
	Likewise.
	(annotation_load_field_attribute_runtimevisibleannotations):
	Likewise.
	(annotation_load_class_attribute_runtimevisibleannotations): Use
	LLNI_classinfo_field_set macro.

	* src/vmcore/class.c (class_get_annotations): Use
	LLNI_classinfo_field_get macro.

	* src/vmcore/class.h (classinfo.annotations),
	(classinfo.method_annotations),
	(classinfo.method_parameterannotations),
	(classinfo.method_annotationdefaults),
	(classinfo.field_annotations): Changed type to java_object_t*.

	* src/vmcore/field.c (native/llni.h): Added include.
	(field_get_annotations): Use LLNI_classinfo_field_get macro.

	* src/vmcore/method.c (method_get_annotations): Use
	LLNI_classinfo_field_get macro. (method_get_parameterannotations):
	Likewise. (method_get_annotationdefault): Likewise.
	[b49f32206108]

2007-09-12  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c, src/native/jni.h, src/native/vm/sun/jvm.c,
	src/vm/vm.c:
	* src/native/jni.c (jni_version_check): New function.
	* src/native/jni.h: Likewise.

	* src/native/vm/sun/jvm.c (JVM_IsSupportedJNIVersion): Use
	jni_version_check.
	* src/vm/vm.c (vm_create): Likewise.
	[6b9b172f7f02]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Initialize properties list before
	handling
	-XX options handling.
	[066d4ccbfde9]

	* src/vm/properties.c, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vm/properties.c (properties_add) [!NDEBUG]: Added debug
	output.

	* src/vm/vm.c (opts): Removed XX. (vm_create): Call options_xx
	almost as first function, so we can enable debugging from all stuff.

	* src/vmcore/options.c (opt_DebugProperties): New option.
	(options_xx): Changed signature and parse all options in the array.
	* src/vmcore/options.h (opt_DebugProperties): Added. (options_xx):
	Changed signature.
	[313f2b9ea69f]

2007-09-12  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/native/threads.c, src/vm/jit/mips/codegen.c:
	* src/threads/native/threads.c: Renamed bogus __MIPS__ ifdefs to
	__IRIX__.

	* src/vm/jit/mips/codegen.c (codegen_emit): Fixed ICMD_BUILTIN stub
	calling. (codegen_emit_stub_native): Adapted to new signature and
	builtin stubs.
	[3e3a6881ae1e]

2007-09-12  Peter Molnar  <pm@complang.tuwien.ac.at>

	* Merged 7484:52fc709fd248.
	[ab50703b66af]

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390
	/md-asm.h:
	* src/vm/jit/s390/codegen.c (codegen_emit_stub_native): Changed some
	N_MOV to M_MOV.
	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md-asm.h, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md-abi.c: Reverted [7237:9a2ce00b716e]
	where f4 and f6 were made callee saved.
	[2842827952fd]

2007-09-12  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/patcher-common.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vm/jit/patcher-common.c: Improved comments. (patcher_handler):
	Enabled use of -XX:+DebugPatcher.

	* src/vmcore/options.c (opt_DebugPatcher): Added and set by above
	debug flag.
	* src/vmcore/options.h (opt_DebugPatcher): Added.
	[52fc709fd248]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c, src/vm/jit
	/codegen-common.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_builtin): Removed.
	(codegen_emit_stub_native): Adapted to new signature and builtins.

	* src/vm/jit/arm/codegen.c (codegen_emit_stub_native): Adapted to
	new signature.

	* src/vm/jit/alpha/codegen.c (codegen_start_native_call)
	[__ALPHA__]: Call tracing is done from here now.
	(codegen_finish_native_call) [__ALPHA__]: Likewise.
	[75ee30764b92]

2007-09-12  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/Makefile.am,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.h,
	src/native/vm/sun/jvm.c:
	* src/native/vm/Makefile.am
	(JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES): Removed.
	(libnativevm_la_SOURCES): Removed
	JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES.

	* src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c
	(native/vm/java_util_concurrent_atomic_AtomicLong.h): Removed.
	(native/include/java_util_concurrent_atomic_AtomicLong.h): Added.
	(methods): VMSupportsCS8: Use
	Java_java_util_concurrent_atomic_AtomicLong_VMSupportsCS8.
	(Java_java_util_concurrent_atomic_AtomicLong_VMSupportsCS8): New
	function.

	* src/native/vm/sun/jvm.c
	(native/vm/java_util_concurrent_atomic_AtomicLong.h): Removed.
	(JVM_SupportsCX8): Just return 0 for now.

	* src/native/vm/java_util_concurrent_atomic_AtomicLong.c: Removed.
	* src/native/vm/java_util_concurrent_atomic_AtomicLong.h: Likewise.
	[063194d7fa99]

	* src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h:
	* src/native/vm/cldc1.1/java_lang_Class.c (methods): isInterface:
	Use Java_java_lang_Class_isInterface. (isInterface): New function.

	* src/native/vm/gnu/java_lang_VMClass.c (vm/exceptions.h): Added.
	(vm/stringlocal.h): Likewise. (isInterface): Use class_is_interface.
	(getInterfaces): Use class_get_interfaces. (getDeclaredClasses): Use
	class_get_declaredclasses. (throwException): Use
	exceptions_set_exception. (getClassSignature): Implemented directly.

	* src/native/vm/java_lang_Class.c (isInterface): Removed.
	(getInterfaces): Likewise. (getDeclaredClasses): Likewise.
	(throwException): Likewise. (getClassSignature): Likewise.
	* src/native/vm/java_lang_Class.h: Likewise.
	[7b4ace71939e]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetClassSignature): Use
	LLNI_classinfo_unwrap and java_handle_t.
	[e95f6b9676ca]

2007-09-12  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/native/vm/java_lang_Class.c:
	* Merged with default branch at rev 8806c9bebf3e.
	[f30b107daf01]

	* src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/vmcore/annotation.c,
	src/vmcore/class.c, src/vmcore/field.c, src/vmcore/method.c,
	src/vmcore/utf8.c, tests/regression/MinimalClassReflection.java:
	* src/vmcore/annotation.c: Improved comments.
	(annotation_bytearrays_resize), (annotation_bytearrays_insert),
	(annotation_load_method_attribute_annotationdefault), (annotation_lo
	ad_method_attribute_runtimevisibleparameterannotations),
	(annotation_load_class_attribute_runtimevisibleannotations),
	(annotation_load_method_attribute_runtimevisibleannotations),
	(annotation_load_field_attribute_runtimevisibleannotations):
	Restructured so that when it comes to the point when I have to use
	LLNI macros for accessing the java objects I store in classinfo I
	will have not much to do.

	* src/lib/gnu/java/lang/reflect/Constructor.java: Improved comments.
	* src/lib/gnu/java/lang/reflect/Field.java: Likewise.
	* src/lib/gnu/java/lang/reflect/Method.java: Likewise.
	* src/lib/gnu/sun/reflect/annotation/AnnotationParser.java: Likewise.
	* src/lib/gnu/sun/reflect/annotation/AnnotationType.java: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Constructor.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Method.c: Likewise.
	* src/native/vm/gnu/sun_reflect_ConstantPool.c: Likewise.
	* src/native/vm/java_lang_Class.c: Likewise.
	* src/native/vm/reflect.c: Likewise.
	* src/native/vm/sun/jvm.c: Likewise.
	* src/vmcore/class.c: Likewise.
	* src/vmcore/field.c: Likewise.
	* src/vmcore/method.c: Likewise.
	* src/vmcore/utf8.c: Likewise.
	* tests/regression/MinimalClassReflection.java: Likewise.
	[ddc0f25c5fad]

2007-09-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h:
	* src/native/vm/gnu/java_lang_VMClass.c (getSuperclass): Use
	class_get_superclass.
	* src/native/vm/java_lang_Class.c (getSuperclass): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	[8806c9bebf3e]

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h:
	* src/native/vm/gnu/java_lang_VMClass.c (isPrimitive): Use
	class_is_primitive.
	* src/native/vm/java_lang_Class.c (isPrimitive): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	[11d19ca12473]

2007-09-11  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/vm/properties.c:
	* src/vm/properties.c (properties_set) [WITH_JRE_LAYOUT]: Fixed old
	variable.
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c
	(Java_gnu_classpath_VMSystemProperties_postInit) [WITH_JRE_LAYOUT]:
	Likewise.
	[bbd10f4c3e87]

	* src/vm/jit/arm/patcher.c, src/vm/jit/mips/codegen.c:
	* Merged with default branch at rev bac772081960.
	[26f4007804bb]

	* src/vm/jit/arm/disass.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/disass.h:
	* src/vm/jit/disass.h (global.h): Added.

	* src/vm/jit/arm/disass.c (disass_pseudo_instr): Implemented.
	(disassinstr): Call above function.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill): Better
	debug output.
	[c41a6282ec30]

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_compiler):
	Stubs are generated for all archs now. [__POWERPC64__]: Enabled
	tracing of native and builtin stubs.

	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_native): Adapted
	to new signature.

	* src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_native):
	Likewise. Removed tracing code. Rewrote argument register saving and
	restoring code.
	[808d21867a99]

2007-09-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit_stub_native): Fixed offset
	of result saving and restoring (hint: MIPS32 has a PA).
	[bac772081960]

2007-09-11  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/sparc64/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): ICMD_BUILTIN no longer
	checks for exceptions, this is done by the stub itself. Stubs are
	called now.

	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	[cc75afc2b563]

2007-09-11  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin): Set
	skipparams and pass it to codegen_emit_stub_native.
	(codegen_generate_stub_native): Likewise.
	* src/vm/jit/codegen-common.h (codegen_emit_stub_native): Changed
	signature.

	* src/vm/jit/i386/codegen.c (codegen_emit): ICMD_BUILTIN: Removed
	emit_exception_check. (codegen_emit_stub_builtin): Removed.
	(codegen_emit_stub_native): Changed signature.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	[001bda7ec5c8]

2007-09-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/x86_64/patcher.c:
	* src/vm/jit/x86_64/patcher.c (patcher_resolve_native_function):
	Removed.
	[fc26f752bd43]

	* src/vm/jit/patcher-common.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/patcher.c, src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/jit/patcher-common.h: Added __X86_64__ ifdef.
	* src/vm/signal.c (signal_init): Likewise.
	* src/vm/signallocal.h: Likewise.

	* src/vm/jit/x86_64/asmpart.S (asm_patcher_wrapper): Removed.

	* src/vm/jit/x86_64/codegen.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (codegen_emit): Implemented patchers-by-
	signal and load data from data segment instead of moving inline.
	(codegen_emit_stub_native): Likewise. (codegen_emit_stub_compiler):
	Quick hack for ALD.

	* src/vm/jit/x86_64/codegen.h (PATCHER_CALL_SIZE): Changed to 2.
	(PATCHER_NOPS): Likewise. (M_ALD): Handle RIP properly.

	* src/vm/jit/x86_64/emit.c (vm/jit/patcher-common.h): Added.
	(emit_patcher_stubs): Removed. (emit_trap): Emit UD2.

	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigill): New
	function.

	* src/vm/jit/x86_64/patcher.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (patcher_wrapper): Removed.
	(PATCH_BACK_ORIGINAL_MCODE): New macro. (patcher_patch_code): New
	function. (patcher_resolve_classref_to_classinfo): Likewise.
	(patcher_resolve_classref_to_vftbl): Likewise.
	(patcher_resolve_classref_to_flags): Likewise.
	(patcher_resolve_native_function): Likewise. (patcher_aconst):
	Removed. (patcher_builtin_multianewarray): Likewise.
	(patcher_builtin_arraycheckcast): Likewise.
	(patcher_checkcast_instanceof_flags): Likewise.
	(patcher_checkcast_class): Likewise. (patcher_instanceof_class):
	Likewise. (patcher_clinit): Likewise. (patcher_athrow_areturn):
	Likewise. (patcher_resolve_native): Likewise.
	[1aca46b07127]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_add_patch_ref): Added
	lastmcodeptr code. This can be removed when we don't use UD2 on i386
	and x86_64 anymore.
	[3adba9571bcd]

2007-09-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/patcher-common.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Loads
	function pointer from data segment now.

	* src/vm/jit/patcher-common.c (patcher_resolve_native_function):
	Implemented generalized version.

	* src/vm/jit/alpha/patcher.c (patcher_resolve_native_function):
	Removed obsolete function.

	* src/vm/jit/arm/patcher.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/mips/patcher.c: Likewise.
	* src/vm/jit/powerpc/patcher.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	[18dcc80c8e9e]

	* src/vm/jit/alpha/md.c, src/vm/jit/arm/md.c:
	* src/vm/jit/alpha/md.c (md_dcacheflush): Added dummy function.
	* src/vm/jit/arm/md.c (md_dcacheflush): Does nothing now.
	[4fff503b29e5]

2007-09-07  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/mips/patcher.c, src/vm/jit
	/patcher-common.c, src/vm/jit/patcher-common.h,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/patcher-common.h (patcher_patch_code): Added prototype.

	* src/vm/jit/patcher-common.c (patcher_handle) [TRACE_PATCHER]:
	Improved debug. (patcher_initialize_class): Implemented generalized
	version. (patcher_resolve_class): Likewise.

	* src/vm/jit/alpha/patcher.c (patcher_patch_code): Implemented.
	(patcher_initialize_class): Removed obsolete patcher function.
	(patcher_resolve_class): Likewise.

	* src/vm/jit/arm/patcher.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/mips/patcher.c: Likewise.
	* src/vm/jit/powerpc/patcher.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	[876be29c51a6]

2007-09-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c:
	* src/vm/jit/arm/codegen.c: Removed patcher NOPs creation, this is
	done by the patcher_add_patch_ref function itself.

	* src/vm/jit/arm/patcher.c: Patcher NOPs are triggered by the
	opt_shownops flag.
	[2855f422cb84]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit_stub_builtin): Removed.
	(codegen_emit_stub_native): Deals with builtin stubs as well now.
	[5914becb88b2]

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/vm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/codegen-common.c (codegen_disassemble_stub): Renamed
	and works with builtin stubs as well.
	(codegen_generate_stub_builtin) [ENABLE_DISASSEMBLER]: Stub gets
	disassembled. (codegen_generate_stub_native) [ENABLE_DISASSEMBLER]:
	Likewise.

	* src/vm/jit/codegen-common.h (codegen_disassemble_stub): Renamed.

	* src/vm/vm.c: Removed old option flag opt_shownativestub.

	* src/vmcore/options.h [ENABLE_DISASSEMBLER] (opt_DisassembleStubs):
	Added.

	* src/vmcore/options.c [ENABLE_DISASSEMBLER] (opt_DisassembleStubs):
	Added and included into options list.
	[cc83f2f16624]

2007-09-08  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/x86_64/patcher.c:
	* src/vm/jit/x86_64/patcher.c (patcher_resolve_native_function):
	Removed.
	[bbee0a3c3f34]

	* src/vm/jit/patcher-common.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/patcher.c, src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/jit/patcher-common.h: Added __X86_64__ ifdef.
	* src/vm/signal.c (signal_init): Likewise.
	* src/vm/signallocal.h: Likewise.

	* src/vm/jit/x86_64/asmpart.S (asm_patcher_wrapper): Removed.

	* src/vm/jit/x86_64/codegen.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (codegen_emit): Implemented patchers-by-
	signal and load data from data segment instead of moving inline.
	(codegen_emit_stub_native): Likewise. (codegen_emit_stub_compiler):
	Quick hack for ALD.

	* src/vm/jit/x86_64/codegen.h (PATCHER_CALL_SIZE): Changed to 2.
	(PATCHER_NOPS): Likewise. (M_ALD): Handle RIP properly.

	* src/vm/jit/x86_64/emit.c (vm/jit/patcher-common.h): Added.
	(emit_patcher_stubs): Removed. (emit_trap): Emit UD2.

	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigill): New
	function.

	* src/vm/jit/x86_64/patcher.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (patcher_wrapper): Removed.
	(PATCH_BACK_ORIGINAL_MCODE): New macro. (patcher_patch_code): New
	function. (patcher_resolve_classref_to_classinfo): Likewise.
	(patcher_resolve_classref_to_vftbl): Likewise.
	(patcher_resolve_classref_to_flags): Likewise.
	(patcher_resolve_native_function): Likewise. (patcher_aconst):
	Removed. (patcher_builtin_multianewarray): Likewise.
	(patcher_builtin_arraycheckcast): Likewise.
	(patcher_checkcast_instanceof_flags): Likewise.
	(patcher_checkcast_class): Likewise. (patcher_instanceof_class):
	Likewise. (patcher_clinit): Likewise. (patcher_athrow_areturn):
	Likewise. (patcher_resolve_native): Likewise.
	[0d8acddb33d2]

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_add_patch_ref): Added
	lastmcodeptr code. This can be removed when we don't use UD2 on i386
	and x86_64 anymore.
	[5f39dedf7b68]

2007-09-08  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/patcher-common.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Loads
	function pointer from data segment now.

	* src/vm/jit/patcher-common.c (patcher_resolve_native_function):
	Implemented generalized version.

	* src/vm/jit/alpha/patcher.c (patcher_resolve_native_function):
	Removed obsolete function.

	* src/vm/jit/arm/patcher.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/mips/patcher.c: Likewise.
	* src/vm/jit/powerpc/patcher.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	[8586d2a077ef]

	* src/vm/jit/alpha/md.c, src/vm/jit/arm/md.c:
	* src/vm/jit/alpha/md.c (md_dcacheflush): Added dummy function.
	* src/vm/jit/arm/md.c (md_dcacheflush): Does nothing now.
	[8b25e9581736]

	* * Merged with default branch at rev ce451bbfaf18.
	[a001beae1804]

2007-09-07  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/mips/patcher.c, src/vm/jit
	/patcher-common.c, src/vm/jit/patcher-common.h,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/patcher-common.h (patcher_patch_code): Added prototype.

	* src/vm/jit/patcher-common.c (patcher_handle) [TRACE_PATCHER]:
	Improved debug. (patcher_initialize_class): Implemented generalized
	version. (patcher_resolve_class): Likewise.

	* src/vm/jit/alpha/patcher.c (patcher_patch_code): Implemented.
	(patcher_initialize_class): Removed obsolete patcher function.
	(patcher_resolve_class): Likewise.

	* src/vm/jit/arm/patcher.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/mips/patcher.c: Likewise.
	* src/vm/jit/powerpc/patcher.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	[5912fd263053]

	* src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/codegen.h, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/patcher.c, src/vm/jit
	/patcher-common.h, src/vm/jit/patcher.h, src/vm/signal.c,
	src/vm/signallocal.h:
	* src/vm/jit/i386/emit.c (emit_patcher_stubs): Removed, this is
	obsolete. (emit_trap): Fixed trap instruction.

	* src/vm/jit/i386/asmpart.S (asm_patcher_wrapper): Removed, this is
	obsolete.

	* src/vm/jit/i386/patcher.c: Adapted patchers to new signature for
	traps. (patcher_wrapper): Removed, this is obsolete.

	* src/vm/jit/i386/codegen.h (PATCHER_CALL_SIZE, PATCHER_NOPS):
	Adapted to new trap instruction.

	* src/vm/jit/i386/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions via traps
	and adapted to above change.

	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigill):
	Implemented.

	* src/vm/jit/patcher-common.h [__I386__]: Enabled new patcher stuff.

	* src/vm/jit/patcher.h [__I386__]: Defined away old patcher stuff.

	* src/vm/signal.c (signal_init) [__I386__]: Install SIGILL handler
	now.

	* src/vm/signallocal.h [__I386__] (md_signal_handler_sigill):
	Enabled prototype.
	[ce451bbfaf18]

2007-09-07  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 79e3a1932e59.
	[7d26a3fdc72c]

	* src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h:
	* src/vm/jit/x86_64/codegen.h (M_BYTE1, M_BYTE2): New macros.
	(M_UD2): Added. (M_RET, M_NOP): Use M_BYTE1.

	* src/vm/jit/x86_64/emit.c (emit_ret): Removed. (emit_nop):
	Likewise.
	* src/vm/jit/x86_64/emit.h: Likewise.
	[5f0db0ae7ffe]

2007-09-07  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vmcore/loader.c:
	* src/vmcore/loader.c (load_class_from_classloader): Fixed
	classloader issues.
	[79e3a1932e59]

	* src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/gnu/java_lang_VMSystem.c, src/native/vm/sun/jvm.c,
	src/vm/builtin.c, src/vm/builtin.h:
	* src/vm/builtin.c (builtin_arraycopy): Returns void instead of bool
	now.
	* src/vm/builtin.h (builtin_arraycopy): Adapted signature.
	* src/native/vm/cldc1.1/java_lang_System.c: Removed obsolete void
	case.
	* src/native/vm/gnu/java_lang_VMSystem.c: Likewise.
	* src/native/vm/sun/jvm.c: Likewise.
	[e8610bdc4cd2]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Removed exception
	check for ICMD_BUILTIN because of the new stubs.
	(codegen_emit_stub_builtin): Removed obsolete function.
	(codegen_emit_stub_native): Checks for m->flags instead of nmd being
	NULL.
	[29c6007441f2]

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_compiler): Pass
	bte->md to native stub emmiter. (codegen_stub_builtin_enter):
	Removed. (codegen_stub_builtin_exit): Likewise.

	* src/vm/jit/codegen-common.h: Removed obsolete prototypes.
	[c4eab7fd33e2]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_native): Ported
	for builtins.
	[9fd540662096]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (trace_java_call_enter): Can handle m->class ==
	NULL now and prints flag for builtin method stubs.
	(trace_java_call_exit): Likewise.
	[d5d8d96798c5]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin): Calls
	same emmiter function as for native methods now.
	(codegen_stub_builtin_enter): Disabled. (codegen_stub_builtin_exit):
	Disabled.
	[3a5220bcb252]

	* src/vmcore/method.h:
	* src/vmcore/method.h (method_new_builtin): Fixed typo in function
	prototype.
	[63861f87010d]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_create): Skip entries for
	builtin stubs.
	[4e96d91ad089]

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vmcore/method.c,
	src/vmcore/method.h:
	* src/vm/builtin.c (builtintable_init): Create methodinfos for
	builtins.
	* src/vm/builtin.h (builtintable_entry): Added forward typedef.
	* src/vmcore/method.h (method_new_builtin): Added prototype.
	* src/vmcore/method.c (method_new_builtin): Implemented.
	* src/vm/jit/codegen-common.h (codegen_generate_stub_builtin): Changed
	sig.
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin): Pass
	methodinfo.
	[e3cc0027dbdd]

2007-09-06  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/localref.c, src/vm/jit/Makefile.am,
	src/vm/jit/argument.c, src/vm/jit/argument.h, src/vm/jit/trace.c:
	* src/vm/jit/argument.c: Added file for argument array handling.
	* src/vm/jit/argument.h: Likewise.

	* src/vm/jit/Makefile.am (libjit_la_SOURCES): Added above two files.

	* src/vm/jit/trace.c: Moved array handling functions to argument.c
	and adapted to new name and signature.

	* src/native/localref.c (localref_fill): Likewise.
	[f596a20dd95f]

	* src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/patcher.c: Removed obsolete patcher
	functions.
	[90715e4cfa31]

	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c, src/vmcore/class.c,
	src/vmcore/loader.c, src/vmcore/loader.h:
	* src/vmcore/loader.h (classloader) [!ENABLE_HANDLES]: Classloader
	is a object.

	* src/vmcore/loader.c (loader_hashtable_classloader_add)
	[!ENABLE_HANDLES]: Return classloader object instead of entry. Added
	some debug output. (loader_hashtable_classloader_find): Likewise.

	* src/vmcore/class.c (class_get_classloader): No need to
	differentiate between handles or not-handles.

	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c: Fixed bogus
	classloader usages.
	[0b269fbf04cd]

2007-09-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/native.c:
	* src/native/native.c (native_resolve_function): Use
	class_get_classloader.
	[7d5cec8c47b8]

2007-09-06  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/patcher-common.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/patcher.c:
	* src/vm/jit/patcher-common.h: Removed obsolete patcher function
	defines.

	* src/vm/jit/powerpc64/codegen.c: Used newer patcher function names.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	[81ec7f8de378]

	* src/vm/jit/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/emit.c (emit_patcher_stubs): Removed, this is
	obsolete. (emit_trap): Fixed trap instruction:

	* src/vm/jit/powerpc64/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	* src/vm/jit/powerpc64/patcher.c: Adapted patchers to new signature
	for traps. (patcher_wrapper): Removed, this is obsolete.

	* src/vm/jit/powerpc64/asmpart.S (asm_patcher_wrapper): Removed,
	this is obsolete.

	* src/vm/jit/powerpc64/linux/md-os.c (md_signal_handler_sigsegv):
	Only calls the exception handling if exception object present.

	* src/vm/jit/patcher-common.h [__POWERPC64__]: Enabled new patcher
	stuff.

	* src/vm/jit/patcher.h [__POWERPC64__]: Defined away old patcher
	stuff.
	[6bc2f1d20c58]

2007-09-06  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 269162803388.
	[5cb77df28b85]

	* src/native/vm/Makefile.am, src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Object.h,
	src/native/vm/sun/jvm.c:
	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Removed
	java_lang_Object.[ch].

	* src/native/vm/java_lang_Object.c: Removed.
	* src/native/vm/java_lang_Object.h: Likewise.

	* src/native/vm/cldc1.1/java_lang_Object.c
	(native/vm/java_lang_Object.h): Removed. (threads/lock-common.h):
	Added. (vm/exceptions.h): Likewise. (getClass): Use LLNI_class_get.
	(notify): Use lock_notify_object. (notifyAll): Use
	lock_notify_all_object. (wait): Use lock_wait_for_object.

	* src/native/vm/gnu/java_lang_VMObject.c (native/llni.h): Added.
	(native/vm/java_lang_Object.h): Removed. (threads/lock-common.h):
	Added. (vm/builtin.h): Likewise. (vm/exceptions.h): Likewise.
	(getClass): Use LLNI_class_get. (clone): Use builtin_clone.
	(notify): Use lock_notify_object. (notifyAll): Use
	lock_notify_all_object. (wait): Use lock_wait_for_object.

	* src/native/vm/sun/jvm.c (native/vm/java_lang_Object.h): Removed.
	(JVM_MonitorWait): Use lock_wait_for_object. (JVM_MonitorNotify):
	Use lock_notify_object. (JVM_MonitorNotifyAll): Use
	lock_notify_all_object.
	[483fb5dd71d3]

2007-09-05  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	[__X86_64__]: Tracer for native methods is called from here now.
	(codegen_finish_native_call) [__X86_64__]: Likewise.

	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Removed
	verbosecall tracer.
	[269162803388]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/codegen-common.h (codegen_finish_native_call): Changes
	signature.

	* src/vm/jit/codegen-common.c (codegen_finish_native_call): Takes
	the same arguments as the enter pendant now.

	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Adapted to
	new signature mentioned above.

	* src/vm/jit/arm/codegen.c: Likewise.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/powerpc/codegen.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	[3d7dd4ddb484]

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/trace.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	[__POWERPC__]: Tracer for native methods is called from here now.

	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_native): Removed
	verbosecall enter tracer.

	* src/vm/jit/powerpc/emit.c (emit_verbosecall_enter,
	emit_verbosecall_exit): Adapted to new tracer functions.

	* src/vm/jit/trace.c (_array_load_param, _array_load_return_value):
	Optimized passing of register arguments.
	[75c295a0dd45]

2007-09-05  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/sun/jvm.c, tests/regression/jasmin/runtest,
	tests/regression/jasmin/show:
	* changed src/native/vm/sun/jvm.c: Throw IllegalArgumentException in
	all ConstantPool.get*At(int) methods as expected by OpenJDK.

	* changed src/native/vm/gnu/sun_reflect_ConstantPool.c: Likewise.
	[614a7af9d894]

2007-09-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h:
	* src/native/vm/java_lang_Class.c (getDeclaringClass): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	* src/native/vm/gnu/java_lang_VMClass.c (getDeclaringClass): Use
	class_get_declaringclass.
	[4481d9c381a3]

	* src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h:
	* src/native/vm/java_lang_Class.c (isArray): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	* src/native/vm/cldc1.1/java_lang_Class.c (isArray): New function.
	* src/native/vm/gnu/java_lang_VMClass.c (isArray): Use class_is_array.
	[10a1c5e2a7ca]

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (mm/memory.h): Added. (md_init): Use
	int instead of u1 for GCNEW.
	[88289982f1fd]

	* configure.ac, m4/debug.m4, m4/dump.m4, m4/gc.m4, m4/intrp.m4:
	* configure.ac (AC_CHECK_ENABLE_INTRP): Added. (AC_CHECK_ENABLE_GC):
	Likewise. (AC_CHECK_ENABLE_DEBUG): Likewise. (AC_CHECK_ENABLE_DUMP):
	Likewise.

	* m4/debug.m4: New file.
	* m4/dump.m4: Likewise.
	* m4/gc.m4: Likewise.
	* m4/intrp.m4: Likewise.
	[9af6482b9325]

	* configure.ac, src/cacao/Makefile.am, src/cacao/cacao.c,
	src/native/Makefile.am, src/native/include/Makefile.am,
	src/native/native.c, src/native/native.h,
	src/native/tools/Makefile.am, src/native/tools/gennativetable.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/intrp/java.vmg, src/vm/jit/intrp/patcher.c,
	src/vm/jit/jit.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/patcher-common.h,
	src/vm/jit/patcher.h, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vm/properties.c:
	* configure.ac (static-classpath): Removed.

	* src/cacao/Makefile.am, src/native/Makefile.am,
	src/native/include/Makefile.am: Removed WITH_STATIC_CLASSPATH if's.

	* src/native/native.c (native_findfunction): Removed.
	* src/native/native.h (nativeref, nativecompref): Removed.
	(native_findfunction): Removed.

	* src/native/tools/Makefile.am: Removed.
	* src/native/tools/gennativetable.c: Likewise.

	* src/cacao/cacao.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/intrp/java.vmg,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/patcher.c, src/vm/jit
	/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/patcher.c,
	src/vm/properties.c: Removed WITH_STATIC_CLASSPATH #ifdef's.
	[d2a378158a66]

2007-09-05  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/rootset.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/mm/cacao-gc/rootset.c (rootset_readout): Ignore threads in
	state new.

	* src/mm/cacao-gc/heap.c (heap_alloc): Wrap reference befor
	returning. (heap_alloc_intern): Respect stress-test option flag.

	* src/mm/cacao-gc/gc.c (gc_collect): Respect debug rootset option
	flag.

	* src/vmcore/options.h [ENABLE_GC_CACAO] (opt_GCDebugRootSet):
	Added. [ENABLE_GC_CACAO] (opt_GCStress): Likewise.

	* src/vmcore/options.c (options_xx) [ENABLE_GC_CACAO]: Parse above
	two options.
	[2e34e2e4d7ce]

2007-09-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 3aaaa9f60c5d.
	[ec7e530caf47]

	* * Merge with 405cda264bce.
	[9216d09f671d]

	* * Not sure what this commit should do, let's see.
	[8a98984ca196]

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/sun/jvm.c, src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_get_classloader): New function.
	* src/vmcore/class.h: Likewise.
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getClassLoader): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.
	* src/native/vm/gnu/java_lang_VMClass.c (getClassLoader): Use
	class_get_classloader.
	* src/native/vm/sun/jvm.c (JVM_GetClassLoader): Likewise.
	[bd4ae591dcc4]

2007-09-05  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/llni.h, src/native/vm/reflect.c, src/vm/builtin.c:
	* src/native/llni.h: Fixed a lot of compiler warnings.

	* src/native/vm/reflect.c (reflect_field_new): Removed bogus cast.
	(reflect_method_new): Likewise.

	* src/vm/builtin.c (builtin_multianewarray): Fixed compiler warning.
	[3aaaa9f60c5d]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call): Return
	class argument for static native methods.

	* src/vm/jit/codegen-common.h (codegen_start_native_call): Adapted
	signature.

	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Class
	argument is no longer placed onto the data segment.

	* src/vm/jit/arm/codegen.c: Likewise.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/powerpc/codegen.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	[405cda264bce]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_handle_exception): Restructured to
	create sfi.
	[f23b2db94198]

	* src/mm/cacao-gc/heap.h, src/mm/cacao-gc/mark.c:
	* src/mm/cacao-gc/heap.h (FOREACH_OBJECT_REF): Adapted to new
	classinfo->super.
	* src/mm/cacao-gc/mark.c (mark_recursive): Likewise.
	[ba936361b758]

	* src/native/localref.c, src/native/localref.h, src/vm/jit/codegen-
	common.c, src/vm/jit/trace.c:
	* src/native/localref.h (localref_fill): Added prototype.

	* src/native/localref.c (localref_fill): Implemented.
	(localref_frame_push): Fixed compiler warning. (_array_store_param):
	Added temporarily.

	* src/vm/jit/trace.c (_array_load_param): Made non-static.

	* src/vm/jit/codegen-common.c (codegen_start_native_call): Call
	localref_fill.
	[ded869549a11]

2007-09-05  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* * Merged with 291b838f1aed.
	[575e21f5ffea]

	* tests/regression/jasmin/runtest, tests/regression/jasmin/show:
	* tests/regression/jasmin/runtest: Make executable.
	* tests/regression/jasmin/show: Likewise.
	[a1b55f522e0d]

2007-09-04  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin): Added
	workaround for builtins returning booleans to indicate exceptions.

	* src/vm/jit/powerpc/codegen.c (codegen_emit_stub_builtin):
	Workaround was moved to codegen-common.c to keep codegens clean.
	[291b838f1aed]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (Java_sun_misc_Unsafe_defineClass)
	[ENABLE_HANDLES]: Fixed array access.
	(Java_sun_misc_Unsafe_allocateInstance): Fixed compiler warning.
	[37c9348bdbe5]

2007-09-04  edwin  <edwin@localhost.localdomain>

	* src/vmcore/class.c:
	* src/vmcore/class.c (classref_or_classinfo_println): Fixed infinite
	recursion.
	[4c27eb92e935]

2007-09-04  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* tests/regression/native/testarguments.c:
	* tests/regression/native/testarguments.c: Adapted testcase to
	support handles.
	[59b815ba5555]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/codegen-common.h (codegen_start_native_call): Changed
	signature.

	* src/vm/jit/codegen-common.c (codegen_start_native_call): Takes
	less arguments now and computes values by itself. This makes the
	codegens simpler.

	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Adapted to
	new signature mentioned above.

	* src/vm/jit/arm/codegen.c: Likewise.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/powerpc/codegen.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	[109ce828d62d]

	* tests/gc/NativeGlobalRef.java, tests/gc/native.c:
	* tests/gc/NativeGlobalRef.java: Improved testcase.
	* tests/gc/native.c: Likewise.
	[12a8c1a6d1a7]

2007-09-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/localref.c:
	* src/native/localref.c (localref_del): Go through all local frames.
	[c492fcf2fcc8]

	* src/vm/exceptions.c:
	src/vm/exceptions.c (exceptions_asm_new_abstractmethoderror): Unwrap
	exception.
	[72076f9da934]

	* src/vm/jit/stacktrace.c, src/vmcore/options.c:
	* src/vm/jit/stacktrace.c (stacktrace_create): Enabled
	-XX:+DebugStackTrace.
	* src/vmcore/options.c (options_XX): Added some descriptions.
	[d2642fe48c1d]

2007-09-03  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_DetachCurrentThread): We need to pop all
	frames before we can destroy the table.
	[07bc83b81257]

	* src/vm/jit/trace.c:
	* src/vm/jit/trace.c (native/jni.h): Added.
	[6f33e8199e8a]

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin)
	[__POWERPC__]: Define added.
	* src/vm/jit/powerpc/codegen.c (codegen_emit): ICMD_BUILTIN: Use stub.
	(codegen_emit_stub_builtin): New function.
	(codegen_emit_stub_native): Fixed some offsets.
	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigusr1): New
	function.
	[60976e6fae32]

2007-09-03  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* merge with branch e6c59621d39a
	[3912aedf3af4]

	* tests/regression/TestAnnotations.java:
	* tests/regression/TestAnnotations.java: Removed umlauts.
	[55d7d537bef0]

2007-09-03  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FindClassFromClassLoader): Add CL to
	hashtable. (JVM_DefineClassWithSource): Likewise.
	(JVM_FindLoadedClass): Likewise.
	[e6c59621d39a]

	* src/vm/builtin.c, src/vm/exceptions.c, src/vm/jit/trace.c,
	src/vm/jit/trace.h:
	* src/vm/builtin.c (methodindent, callcount): Removed static
	variables. (builtin_throw_exception): Use trace_exception_builtin.
	(builtin_verbosecall_enter): Use thread-specific variables.
	(builtin_verbosecall_exit): Likewise.

	* src/vm/exceptions.c (exceptions_handle_exception): Fixed
	methodindent for java call traces.

	* src/vm/jit/trace.c: Added comments and minor cleanups.
	(trace_exception_builtin): Implemented (moved from builtin.c).

	* src/vm/jit/trace.h (trace_exception_builtin): Added prototype.
	[9e9d2b28cfea]

	* src/vm/jit/powerpc/emit.c:
	* src/vm/jit/powerpc/emit.c (emit_verbosecall_exit) [__DARWIN__]:
	Fixed passing of methodinfo argument.
	[a64cbc7fdf34]

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/builtintable.inc,
	src/vm/exceptions.h, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/emit-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/stack.c, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/signal.c:
	* src/vm/builtin.c (builtin_canstore): Throw an ArrayStoreException.
	(builtin_fast_canstore): Do not throw any exceptions.

	* src/vm/builtin.h (BUILTIN_canstore): Removed.

	* src/vm/builtintable.inc: Adapted entry for builtin_canstore.

	* src/vm/exceptions.h (EXCEPTION_HARDWARE_ARRAYSTORE): Added.

	* src/vm/signal.c (signal_handle): Added case for
	ArrayStoreException.

	* src/vm/jit/emit-common.h (emit_arraystore_check): Added prototype.

	* src/vm/jit/stack.c (stack_analyse): ICMD_AASTORE now uses fast
	canstore.

	* src/vm/jit/alpha/codegen.c (codegen_emit): ICMD_AASTORE uses fast
	canstore.
	* src/vm/jit/alpha/emit.c (emit_arraystore_check): Implemented.

	* src/vm/jit/arm/codegen.c: Likewise.
	* src/vm/jit/arm/emit.c: Likewise.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/i386/emit.c: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/m68k/emit.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/mips/emit.c: Likewise.
	* src/vm/jit/powerpc/codegen.c: Likewise.
	* src/vm/jit/powerpc/emit.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/powerpc64/emit.c: Likewise.
	* src/vm/jit/s390/codegen.c: Likewise.
	* src/vm/jit/s390/emit.c: Likewise.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	* src/vm/jit/sparc64/emit.c: Likewise.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	* src/vm/jit/x86_64/emit.c: Likewise.
	[e87c6675ff29]

	* src/vm/array.c:
	* src/vm/array.c (array_length_get): Better use LLNI_class_get here.
	[4076f8bfb9f5]

2007-09-03  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* THIRDPARTY, src/lib/Makefile.am, src/lib/gnu/sun/reflect/annotation/
	EnumConstantNotPresentExceptionProxy.java,
	src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java:
	* THIRDPARTY: Added copyright notice for newly imported files.

	* src/lib/Makefile.am (VM_JAVA_FILES) [ENABLE_ANNOTATIONS]: Added
	$(top_srcdir)/src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java
	and $(top_srcdir)/src/lib/gnu/sun/reflect/annotation/EnumConstantNot
	PresentExceptionProxy.java (VM_CLASS_FILES) [ENABLE_ANNOTATIONS]:
	Added classes/sun/reflect/annotation/ExceptionProxy.class and classe
	s/sun/reflect/annotation/EnumConstantNotPresentExceptionProxy.class

	* src/lib/gnu/sun/reflect/annotation/EnumConstantNotPresentException
	Proxy.java: Imported from OpenJDK. This file was only an
	unimplemented stub in GNU Classpath.

	* src/lib/gnu/sun/reflect/annotation/ExceptionProxy.java: Likewise.
	[0ac069bf6d22]

2007-09-02  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_FindClass) [ENABLE_JAVAME_CLDC1_1]:
	Implemented.
	[737aa9376ba1]

	* src/cacaoh/headers.c, src/vm/initialize.c, src/vm/jit/verify
	/typecheck-invoke.inc, src/vm/jit/verify/typeinfo.c,
	src/vm/resolve.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/primitivecore.c:
	* src/vmcore/class.h (classinfo): Changed type of super and
	interfaces to classinfo*.
	* src/cacaoh/headers.c (printfields): Removed .cls for super class
	and/or interfaces.
	* src/vm/initialize.c (initialize_class_intern): Likewise.
	* src/vm/jit/verify/typecheck-invoke.inc: Likewise.
	* src/vm/jit/verify/typeinfo.c (interface_extends_interface):
	Likewise. (typeinfo_merge_nonarrays): Likewise.
	* src/vm/resolve.c (resolve_method_invokespecial_lookup): Likwise.
	* src/vmcore/class.c (class_free): Likewise. (class_resolvemethod):
	Likewise. (class_resolveinterface_intern): Likewise.
	(class_resolveclassmethod): Likewise. (class_findfield): Likewise.
	(class_resolvefield_int): Likewise. (class_get_interfaces):
	Likewise. (class_issubclass): Likewise. (class_get_superclass):
	Likewise. (class_showmethods): Likewise. (class_showmethods):
	Likewise. (class_resolve_superclass): Removed.
	* src/vmcore/linker.c (linker_init): Removed .cls for super class
	and/or interfaces. (linker_compute_subclasses): Likewise.
	(linker_addinterface): Likewise. (link_class_intern): Moved verifier
	checks into classfile parsing stage.
	* src/vmcore/loader.c (vm/resolve.h): Added.
	(load_class_from_classbuffer_intern): Resolve super class and super
	interfaces during loading. This is also done by the RI.
	(load_newly_created_array): Removed .cls for super class and/or
	interfaces.
	* src/vmcore/primitivecore.c (primitive_init): Likewise.
	[6a2784fb3be7]

	* .hgignore:
	* .hgignore: Ignore files in tests/.
	[0d0a9bd7bf72]

2007-09-01  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (llni.h): Added.
	(codegen_stub_builtin_exit): Use stacktrace function to remove
	stackframeinfo. (codegen_finish_native_call): Likewise. Unwrap
	exception object before return.
	[cc6e8e021e70]

	* src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	tests/StackTraceBig.java:
	* src/vm/jit/stacktrace.h (stacktracebuffer): Entries are stored
	inside stb now. (stacktracecontainer): Removed data field.

	* src/vm/jit/stacktrace.c (stacktrace_add_entry) Adapted to above
	changes. (stacktrace_add_method): Likewise. (stacktrace_create):
	Likewise. (stacktrace_fillInStackTrace): Stacktracebuffer can be
	copied at once.

	* tests/StackTraceBig.java: Added testcase for large stacktraces.
	[42b041b8ea05]

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_canstore): Fixed severe typo.
	[fc721266fcd8]

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/exceptions.c,
	src/vm/jit/trace.c, src/vm/jit/trace.h:
	* src/vm/builtin.c: Use LLNI macros throughout the file.
	(builtin_fast_canstore): Previously builtin_canstore.
	(builtin_canstore): Implemented. (builtin_trace_exception): Moved to
	trace.c.

	* src/vm/builtin.h: Fixed prototypes.

	* src/vm/exceptions.c (exceptions_handle_exception): Use
	trace_exception instead of builtin.

	* src/vm/jit/trace.c (trace_exception): Added (moved from
	builtin.c).

	* src/vm/jit/trace.h (trace_exception): Added prototype.
	[e2c8ed46c130]

2007-08-31  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/trace.c,
	src/vm/vm.c:
	* src/vm/jit/trace.c (trace_java_call_print_argument): Deals with
	java_object_t.

	* src/vm/exceptions.h (exceptions_asm_new_abstractmethoderror):
	Fixed prototype.

	* src/vm/exceptions.c: Use LLNI_class_get throughout file.
	(exceptions_get_exception): Wrap exception object.
	(exceptions_set_exception): Unwrap exception object.

	* src/vm/vm.c: Use LLNI_class_get throughout file.
	[f7ad5f22979c]

	* src/cacaoh/dummy.c, src/native/include/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/cacaoh/dummy.c (array_objectarray_element_set): Fixed for
	handles. (array_objectarray_element_get): Likewise.
	(builtin_anewarray): Likewise. (builtin_newarray_byte): Likewise.
	(localref_add): Added.

	* src/native/include/Makefile.am [ENABLE_ANNOTATIONS]: Create
	java_util_Map.h.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c: Use above
	header.
	* src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Method.c: Likewise.
	[aaaac3a75526]

	* src/native/vm/java_lang_ClassLoader.c:
	* src/native/vm/java_lang_ClassLoader.c
	(_Jv_java_lang_ClassLoader_defineClass): Removed bugging assertion.
	It seems defineClass can take NULL as classloader.
	[058fbd6b9a45]

	* src/native/jni.c, tests/regression/native/checkjni.c,
	tests/regression/native/checkjni.java,
	tests/regression/native/checkjni.output:
	* src/native/jni.c (_Jv_JNI_GetObjectField): Fixed implementation
	for handles. (_Jv_JNI_SetObjectField): Likewise.

	* tests/regression/native/checkjni.c: Added testcase for above
	change.
	* tests/regression/native/checkjni.java: Likewise.
	* tests/regression/native/checkjni.output: Adapted output to above
	changes.
	[f2aaccf82e27]

	* src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_builtin): Removed
	obsolete assertion.

	* src/vm/jit/m68k/codegen.c (codegen_emit_stub_builtin): Likewise.
	[245c495034d6]

	* * Merged with exact-gc branch at rev 2d4098fc2ea4.
	[70720e99787f]

	* src/lib/Makefile.am, src/native/vm/Makefile.am,
	src/native/vm/java_lang_String.c, src/native/vm/java_lang_String.h:
	* src/lib/Makefile.am: Fixed another merge problem.
	* src/native/vm/Makefile.am: Removed resurrected files.
	* src/native/vm/java_lang_String.c: Removed resurrected file.
	* src/native/vm/java_lang_String.h: Likewise.
	[2d4098fc2ea4]

	* src/vmcore/class.c:
	* src/vmcore/class.c (class_free): Fixed another merge problem (thx
	to panzi).
	[0ff8641a2a6d]

	* src/native/vm/gnu/java_lang_VMClassLoader.c:
	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(Java_java_lang_VMClassLoader_findLoadedClass): Add classloader to
	hashtable instead of searching for it.
	[7789ad4e3f25]

	* src/threads/native/threads.c, src/vm/jit/codegen-common.c:
	* src/threads/native/threads.c (threads_stopworld) [__DARWIN__]:
	Disabled. (threads_startworld) [__DARWIN__]: Likewise.

	* src/vm/jit/codegen-common.c (codegen_generate_stub_builtin):
	Disabled for archs where codegen_emit_stub_builtin is not yet
	implemented.
	[123b52988611]

	* tests/gc/ClassUnload.java:
	* tests/gc/ClassUnload.java: Added testcase for class unloading.
	[7ef9d758714e]

	* src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_String.c, src/vm/access.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_invokeNative): Fixed LLNI macro
	usage.

	* src/native/vm/java_lang_String.c (_Jv_java_lang_String_intern):
	Wrap interned strings into a handle.

	* src/vm/access.c (access_check_field): Use LLNI macro for array
	access. (access_check_method): Likewise.

	* src/vm/jit/stacktrace.c (stacktrace_getClassContext): Likewise.
	(stacktrace_getStack): Likewise.

	* src/vm/jit/stacktrace.h (md-abi.h): Added missing include.
	[2bda8b53eb85]

	* src/mm/cacao-gc/heap.c, src/vm/jit/codegen-common.c:
	* src/mm/cacao-gc/heap.c (heap_alloc_intern) [!NDEBUG]: Added sanity
	check.

	* src/vm/jit/codegen-common.c (codegen_stub_builtin_enter): Removed
	native-world flag manipulation. (codegen_stub_builtin_exit):
	Likewise. (codegen_start_native_call): Likewise.
	(codegen_finish_native_call): Likewise.
	[f561e7cc5606]

	* configure.ac, src/native/jni.c,
	src/native/vm/java_lang_ClassLoader.c, src/native/vm/nativevm.c,
	src/vmcore/loader.c:
	* configure.ac: Added missing newline.
	* src/native/jni.c: Fixed some merge problems
	* src/native/vm/java_lang_ClassLoader.c: Likewise.
	* src/native/vm/nativevm.c: Likewise.
	* src/vmcore/loader.c: Likewise.
	[3a5cad64b925]

	* tests/regression/native/checkjni.c,
	tests/regression/native/checkjni.java,
	tests/regression/native/checkjni.output:
	* tests/regression/native/checkjni.java: Added some new JNI
	testcases.
	* tests/regression/native/checkjni.c: Likewise.
	* tests/regression/native/checkjni.output: Adapted output to new
	testcases.
	[45a390db1fc6]

2007-08-30  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/mm/cacao-gc/copy.c, src/mm/cacao-gc/copy.h, src/mm/cacao-
	gc/final.c, src/mm/cacao-gc/final.h, src/mm/cacao-gc/heap.c, src/mm
	/cacao-gc/heap.h, src/mm/cacao-gc/mark.h, src/mm/cacao-gc/region.c,
	src/mm/cacao-gc/region.h, src/mm/cacao-gc/rootset.c, src/mm/cacao-
	gc/rootset.h, src/native/llni.c, src/native/vm/java_lang_String.c,
	src/native/vm/java_lang_String.h, src/vm/jit/m68k/codegen.h:
	* Removed leftover Id tags.
	[6b7f509fc859]

	* AUTHORS, ChangeLog, NEWS, configure.ac, contrib/log2xml.pl,
	m4/classpath.m4, src/Makefile.am, src/cacaoh/cacaoh.c,
	src/cacaoh/dummy.c, src/cacaoh/headers.c, src/lib/Makefile.am,
	src/mm/boehm-gc/callprocs, src/mm/boehm-gc/cord/de_win.ICO, src/mm
	/boehm-gc/doc/README.arm.cross, src/mm/boehm-
	gc/pthread_stop_world.c, src/mm/boehm-gc/win32_threads.c,
	src/mm/boehm.c, src/mm/cacao-gc/Makefile.am, src/mm/cacao-
	gc/compact.c, src/mm/cacao-gc/compact.h, src/mm/cacao-gc/gc.c,
	src/mm/cacao-gc/gc.h, src/mm/cacao-gc/mark.c, src/mm/gc-common.h,
	src/mm/memory.c, src/mm/memory.h, src/mm/nogc.c,
	src/native/Makefile.am, src/native/include/Makefile.am,
	src/native/jni.c, src/native/jni.h, src/native/llni.h,
	src/native/localref.c, src/native/localref.h, src/native/native.c,
	src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/threads/critical.c, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/toolbox/avl.c, src/toolbox/avl.h, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/Makefile.am, src/vm/access.c,
	src/vm/access.h, src/vm/builtin.c, src/vm/builtin.h,
	src/vm/builtintable.inc, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/finalizer.c, src/vm/global.h, src/vm/jit/Makefile.am,
	src/vm/jit/abi.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/arch.h, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/codegen.h,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/alpha/md.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/md.c, src/vm/jit/arm/patcher.c, src/vm/jit/asmpart.h,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vm/jit/disass-common.c,
	src/vm/jit/disass.h, src/vm/jit/dseg.c, src/vm/jit/dseg.h,
	src/vm/jit/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/i386/md.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/intrp.h, src/vm/jit/intrp/patcher.c,
	src/vm/jit/intrp/peephole-gen, src/vm/jit/intrp/vmgenx,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/arch.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/parse.h, src/vm/jit/patcher.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/codegen.h, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/codegen.h,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/Makefile.am,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/linux/md-
	abi.h, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/reg.c, src/vm/jit/replace.c, src/vm/jit/replace.h,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/disass.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/s390/tests/dacapo.status,
	src/vm/jit/s390/tests/tests.java.pp, src/vm/jit/show.c,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/stack.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/trace.c, src/vm/jit/trace.h,
	src/vm/jit/verify/generate.pl, src/vm/jit/verify/typecheck-
	stackbased.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/arch.h,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/jit_interface.h,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/properties.c,
	src/vm/resolve.c, src/vm/resolve.h, src/vm/signal.c,
	src/vm/signallocal.h, src/vm/string.c, src/vm/stringlocal.h,
	src/vm/vm.c, src/vm/vm.h, src/vmcore/Makefile.am,
	src/vmcore/annotation.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/classcache.c, src/vmcore/classcache.h,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.c,
	src/vmcore/linker.h, src/vmcore/loader.c, src/vmcore/loader.h,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/rt-timing.c, src/vmcore/rt-
	timing.h, src/vmcore/statistics.c, src/vmcore/statistics.h,
	src/vmcore/utf8.c, src/vmcore/utf8.h, src/vmcore/zip.c,
	tests/regression/Makefile.am, tests/regression/jasmin/runtest,
	tests/regression/jasmin/show, tests/regression/native/Makefile.am,
	tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.java,
	tests/regression/resolving/Makefile.am:
	* Merged with default branch at rev 16f3633aaa5a.
	[5580183476bc]

	* * Dummy commit to fix conversion problems with some files.
	[2a3f176c1847]

2007-08-30  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/jni.c:
	* src/native/jni.c (native/include/java_lang_Byte.h,
	native/include/java_lang_Character.h,
	native/include/java_lang_Short.h,
	native/include/java_lang_Integer.h,
	native/include/java_lang_Boolean.h, native/include/java_lang_Long.h,
	native/include/java_lang_Float.h,
	native/include/java_lang_Double.h): Removed. [WITH_CLASSPATH_SUN]
	(class_sun_nio_ch_DirectBuffer) (class_java_nio_DirectByteBuffer,
	dbb_init): Added. (jni_init) [WITH_CLASSPATH_SUN]: Added direct-
	buffer stuff. (_Jv_JNI_ExceptionOccurred): Added TRACEJNICALLS.
	(_Jv_JNI_ToReflectedMethod): Likewise. (_Jv_JNI_GetStaticMethodID):
	Likewise. (_Jv_JNI_DestroyJavaVM): Likewise.
	(_Jv_JNI_ExceptionDescribe): Fixed bug.
	(_Jv_JNI_NewDirectByteBuffer) [WITH_CLASSPATH_SUN]: Implemented.
	(_Jv_JNI_GetDirectBufferAddress): Likewise.
	[16f3633aaa5a]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (getFloat): Implemented.
	(getShort): Likewise. (getFloat): Likewise.
	[e93f7beb4914]

	* src/native/jni.c, src/native/vm/sun/jvm.c:
	* src/native/jni.c (_Jv_JNI_GetVersion): Return JNI_VERSION_1_6.
	(GetObjectRefType): New function. (_Jv_JNINativeInterface): Added
	jni_GetObjectRefType.
	* src/native/vm/sun/jvm.c (JVM_IsSupportedJNIVersion): Added
	JNI_VERSION_1_6.
	[1f464780e928]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (getLong): Implemented. (putByte):
	Likewise. (putShort): Likewise. (setMemory): Likewise.
	[6543e757c0dd]

2007-08-29  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* merge with b3167e4ef780
	[6ca1619ca330]

	* merge branch
	[b3167e4ef780]

	* src/vmcore/annotation.c:
	* src/vmcore/annotations.c (vmcore/loader.h): Added include.
	[b15974c0c943]

2007-08-28  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/native/vm/java_lang_Class.c, src/vmcore/annotation.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredAnnotations): Removed unnecessary
	exceptions_get_exception() check.

	* src/vmcore/annotation.c (annotation_bytearrays_resize): Fixed
	comment.
	[487da8dcec58]

2007-08-29  Michael Starzinger  <michi@complang.tuwien.ac.at>

	* src/threads/native/threads.h, src/threads/none/threads.h,
	src/vm/jit/stacktrace.c:
	* src/threads/native/threads.h: Added THREAD_NATIVEWORLD macros.
	* src/threads/none/threads.h: Likewise.
	* src/vm/jit/stacktrace.c (stacktrace_remove_stackframeinfo): Use
	above macros. (stacktrace_create_extern_stackframe): Likewise.
	(stacktrace_create_native_stackframe): Likewise.
	[3cf6b87e4849]

2007-08-29  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_NewArray): Added NPE check.
	(JVM_NewMultiArray): Implemented, but needs review at a later point.
	[dc9b6899f051]

	* src/vmcore/loader.c:
	* src/vmcore/loader.c (load_class_from_classbuffer): Renamed to
	load_class_from_classbuffer_intern. (load_class_from_classbuffer):
	New function.
	[812cc24606bb]

	* src/vmcore/loader.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/loader.c (load_class_from_classloader)
	[WITH_CLASSPATH_SUN]: Call loadClassInternal.
	* src/vmcore/utf8.c (utf_loadClassInternal): Added. (utf8_init):
	Initialize utf_loadClassInternal.
	* src/vmcore/utf8.h (utf_loadClassInternal): Added.
	[7065d8389571]

	* src/cacaoh/cacaoh.c, src/vm/primitive.h, src/vm/vm.c,
	src/vmcore/linker.c, src/vmcore/linker.h, src/vmcore/loader.c,
	src/vmcore/loader.h, src/vmcore/primitivecore.c:
	* src/cacaoh/cacaoh.c (main): Added loader_preinit call.

	* src/vm/primitive.h (primitive_init): Changed return type to void.
	(primitive_postinit): New function.

	* src/vm/vm.c (vm_create): Use new init functions.

	* src/vmcore/linker.c (stdint.h): Added. (linker_preinit): New
	function. (linker_init): Moved basic stuff into linker_preinit, call
	vm_abort if error occurred.

	* src/vmcore/linker.h (linker_preinit): New function. (linker_init):
	Changed return type to void.

	* src/vmcore/loader.c (loader_preinit): New function. (loader_init):
	Moved basic stuff into loader_preinit, call vm_abort if error
	occurred.

	* src/vmcore/loader.h (loader_preinit): New function. (loader_init):
	Changed return type to void.

	* src/vmcore/primitivecore.c (vm/vm.h): Added. (primitive_init):
	Load and link primitive-type classes and array-class ASAP, this is
	important for annotations. (primitive_postinit): New function.
	[b562aa714e92]

2007-08-28  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vmcore/annotation.c:
	* src/vmcore/annotation.c (stdint.h): Added.
	[0dbc39d08b63]

2007-08-28  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/vmcore/field.c, src/vmcore/method.c:
	* src/vmcore/field.c (vm/array.h): Added include. (mm/memory.h):
	Removed doubled include. (field_get_annotations): Added cast for
	array_length_get()s parameter.

	* src/vmcore/method.c (vm/array.h): Added include.
	(method_get_annotations): Added cast for array_length_get()s
	parameter. (method_get_parameterannotations): Added cast for
	array_length_get()s parameter. (method_get_annotationdefault): Added
	cast for array_length_get()s parameter.
	[d6a85336983a]

2007-08-27  Mathias Panzenboeck  <e0427417@student.tuwien.ac.at>

	* src/vmcore/annotation.c, src/vmcore/annotation.h:
	* src/vmcore/annotation.c (annotation_bytearrays_resize): Removed
	unused variables.

	* src/vmcore/annotation.h: Sorted includes. (vmcore/utf8.h): Removed
	include.
	[6aee3768a843]

	* autogen.sh, src/cacaoh/dummy.c, src/mm/boehm-gc/autogen.sh,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/vmcore/annotation.c,
	src/vmcore/annotation.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/loader.c, src/vmcore/method.c,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* autogen.sh: Made executeable.

	* src/cacaoh/dummy.c (mm/memory.h): Added include. (native/llni.h):
	Added include. (array_objectarray_element_get): Added dummy
	implementation. (array_objectarray_element_set): Added dummy
	implementation. (array_length_get): Added dummy implementation.
	(builtin_anewarray): Added dummy implementation using MNEW.
	(builtin_newarray_byte): Added dummy implementation using MNEW.
	(primitive_arrayclass_get_by_type): Added dummy implementation.

	* src/mm/boehm-gc/autogen.sh: Made executeable.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(Java_java_lang_reflect_Constructor_declaredAnnotations): Removed
	unused variable o.
	(Java_java_lang_reflect_Constructor_getParameterAnnotations):
	Removed unused variable o.

	* src/native/vm/gnu/java_lang_reflect_Field.c
	(Java_java_lang_reflect_Field_declaredAnnotations): Removed unused
	variable o.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue): Removed unused
	variable o. (Java_java_lang_reflect_Method_declaredAnnotations):
	Removed unused variable o.
	(Java_java_lang_reflect_Method_getParameterAnnotations): Removed
	unused variable o.

	* src/native/vm/gnu/sun_reflect_ConstantPool.c
	(_Jv_sun_reflect_ConstantPool_init): Removed usage of global string
	utf_sun_reflect_ConstantPool.

	* src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS]: Sorted includes.
	(_Jv_java_lang_Class_getDeclaredAnnotations): Fixed comment.

	* src/vmcore/annotation.c (native/llni.h): Added include.
	(vm/array.h): Added include. (vm/builtin.h): Added include.
	(vm/primitive.h): Added include. (annotation_bytearray_new):
	Removed. (annotation_bytearray_free): Removed.
	(annotation_bytearrays_new): Removed. (annotation_bytearrays_free):
	Removed. (annotation_bytearrays_resize): Made static and now
	java_handle_objectarray_t is used instead of my own array type.
	(annotation_bytearrays_insert): Made static and now
	java_handle_objectarray_t is used instead of my own array type.
	(annotation_load_attribute_body): Using java_handle_bytearray_t
	instead of my own array type.
	(annotation_load_method_attribute_annotationdefault): Using
	java_handle_bytearray_t and java_handle_objectarray_t instead of my
	own array types. (annotation_load_method_attribute_runtimevisiblepar
	ameterannotations): Using java_handle_bytearray_t and
	java_handle_objectarray_t instead of my own array types.
	(annotation_load_method_attribute_runtimevisibleannotations): Using
	java_handle_bytearray_t and java_handle_objectarray_t instead of my
	own array types.
	(annotation_load_field_attribute_runtimevisibleannotations): Using
	java_handle_bytearray_t and java_handle_objectarray_t instead of my
	own array types.

	* src/vmcore/annotation.h (annotation_bytearray_t): Removed.
	(annotation_bytearrays_t): Removed. (annotation_bytearray_new):
	Removed. (annotation_bytearray_free): Removed.
	(annotation_bytearrays_new): Removed.
	(annotation_bytearrays_resize): Removed.
	(annotation_bytearrays_insert): Removed.
	(annotation_bytearrays_free): Removed.

	* src/vmcore/class.c
	(class_sun_reflect_annotation_AnnotationParser): Is only declared
	when WITH_CLASSPATH_GNU is defined. (class_free)
	[ENABLE_ANNOTATIONS]: Removed usage of annotation_bytearray*_free()
	functions. (class_get_annotations): Don't have to copy anything now,
	just return the java_handle_bytearray_t.

	* src/vmcore/class.h (classinfo): Fixed comments. (classinfo)
	[ENABLE_ANNOTATIONS]: Now using java_handle_bytearray_t and
	java_handle_objectarray_t instead of my own array types.

	* src/vmcore/loader.c (loader_init): Removed usage of global string
	utf_sun_reflect_ConstantPool and
	utf_sun_reflect_annotation_AnnotationParser.

	* src/vmcore/field.c (vm/array.h): Added include.
	(field_get_annotations): Don't have to copy anything now, just
	return the java_handle_bytearray_t.

	* src/vmcore/method.c (vm/array.h): Added include.
	(method_get_annotations): Don't have to copy anything now, just
	return the java_handle_bytearray_t.
	(method_get_parameterannotations): Don't have to copy anything now,
	just return the java_handle_bytearray_t.
	(method_get_annotationdefault): Don't have to copy anything now,
	just return the java_handle_bytearray_t.

	* src/vmcore/utf8.c (utf_sun_reflect_ConstantPool): Removed.
	(utf_sun_reflect_annotation_AnnotationParser): Removed.

	* src/vmcore/utf8.h (utf_sun_reflect_ConstantPool): Removed.
	(utf_sun_reflect_annotation_AnnotationParser): Removed.
	[3e20268e098e]

2007-08-27  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* src/vm/jit/show.c:
	* src/vm/jit/show.c (show_icmd): ICMD_MULTIANEWARRAY: Print class
	name.
	[1d28f69443d0]

	* Makefile.am, autogen.sh, configure.ac, contrib/Makefile.am,
	contrib/log2xml.pl, doc/Makefile.am, doc/handbook/Makefile.am,
	m4/annotations.m4, m4/cacaoh.m4, m4/java.m4, m4/jit.m4, m4/jni.m4,
	m4/jre-layout.m4, m4/libjvm.m4, m4/ltdl.m4, m4/soft.m4,
	m4/staticvm.m4, m4/threads.m4, m4/zlib.m4, man/Makefile.am,
	src/Makefile.am, src/cacao/Makefile.am, src/cacao/cacao.c,
	src/cacaoh/Makefile.am, src/cacaoh/cacaoh.c, src/cacaoh/dummy.c,
	src/cacaoh/headers.c, src/cacaoh/headers.h, src/fdlibm/Makefile.am,
	src/lib/Makefile.am, src/lib/gnu/java/lang/VMClassLoader.java,
	src/mm/Makefile.am, src/mm/boehm-gc/autogen.sh, src/mm/boehm-
	gc/callprocs, src/mm/boehm-gc/cord/de_win.ICO, src/mm/boehm-
	gc/doc/README.arm.cross, src/mm/boehm-gc/win32_threads.c,
	src/mm/boehm.c, src/mm/cacao-gc/Makefile.am, src/mm/cacao-
	gc/compact.c, src/mm/cacao-gc/compact.h, src/mm/cacao-gc/gc.c,
	src/mm/cacao-gc/gc.h, src/mm/cacao-gc/mark.c, src/mm/gc-common.h,
	src/mm/memory.c, src/mm/memory.h, src/mm/nogc.c,
	src/native/Makefile.am, src/native/include/Makefile.am,
	src/native/jni.c, src/native/jni.h, src/native/jvmti/Makefile.am,
	src/native/jvmti/cacaodbg.c, src/native/jvmti/cacaodbg.h,
	src/native/jvmti/cacaodbgserver.c,
	src/native/jvmti/cacaodbgserver.h, src/native/jvmti/dbg.h,
	src/native/jvmti/jvmti.c, src/native/jvmti/jvmti.h,
	src/native/llni.h, src/native/localref.c, src/native/localref.h,
	src/native/native.c, src/native/native.h,
	src/native/tools/Makefile.am, src/native/tools/gennativetable.c,
	src/native/vm/Makefile.am, src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/Makefile.am, src/native/vm/gnu/VMjdwp.c,
	src/native/vm/gnu/VMjdwp.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMFrame.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMMethod.c,
	src/native/vm/gnu/gnu_classpath_jdwp_VMVirtualMachine.c, src/native/
	vm/gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Object.h,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_Thread.h,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.h,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/reflect.c, src/native/vm/reflect.h,
	src/native/vm/sun/Makefile.am, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/scripts/Makefile.am,
	src/scripts/java.in, src/threads/Makefile.am,
	src/threads/critical.c, src/threads/critical.h, src/threads/lock-
	common.h, src/threads/native/Makefile.am, src/threads/native
	/generic-primitives.h, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/Makefile.am,
	src/threads/none/lock.h, src/threads/none/threads.h, src/threads
	/threads-common.c, src/threads/threads-common.h,
	src/toolbox/Makefile.am, src/toolbox/avl.c, src/toolbox/avl.h,
	src/toolbox/bitvector.c, src/toolbox/bitvector.h,
	src/toolbox/chain.c, src/toolbox/chain.h, src/toolbox/hashtable.c,
	src/toolbox/hashtable.h, src/toolbox/list.c, src/toolbox/list.h,
	src/toolbox/logging.c, src/toolbox/logging.h, src/toolbox/tree.c,
	src/toolbox/tree.h, src/toolbox/util.c, src/toolbox/util.h,
	src/toolbox/worklist.c, src/toolbox/worklist.h, src/vm/Makefile.am,
	src/vm/access.c, src/vm/access.h, src/vm/array.c, src/vm/array.h,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/builtintable.inc, src/vm
	/cycles-stats.c, src/vm/cycles-stats.h, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/finalizer.c, src/vm/finalizer.h,
	src/vm/global.h, src/vm/initialize.c, src/vm/initialize.h,
	src/vm/jit/Makefile.am, src/vm/jit/abi-asm.h, src/vm/jit/abi.h,
	src/vm/jit/allocator/Makefile.am, src/vm/jit/allocator/liveness.c,
	src/vm/jit/allocator/liveness.h, src/vm/jit/allocator/lsra.c,
	src/vm/jit/allocator/lsra.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/allocator/simplereg.h, src/vm/jit/alpha/Makefile.am,
	src/vm/jit/alpha/arch.h, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/codegen.h,
	src/vm/jit/alpha/disass.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/freebsd/Makefile.am, src/vm/jit/alpha/freebsd/md-
	os.c, src/vm/jit/alpha/linux/Makefile.am, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/alpha/md-abi.c, src/vm/jit/alpha/md-abi.h,
	src/vm/jit/alpha/md-asm.h, src/vm/jit/alpha/md.c,
	src/vm/jit/alpha/md.h, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/Makefile.am, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/disass.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/Makefile.am,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/md-abi.h, src/vm/jit/arm/md-asm.h,
	src/vm/jit/arm/md.c, src/vm/jit/arm/patcher.c, src/vm/jit/asmpart.h,
	src/vm/jit/cfg.c, src/vm/jit/cfg.h, src/vm/jit/code.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/codegen-
	common.h, src/vm/jit/disass-common.c, src/vm/jit/disass.h,
	src/vm/jit/dseg.c, src/vm/jit/dseg.h, src/vm/jit/emit-common.c,
	src/vm/jit/emit-common.h, src/vm/jit/i386/Makefile.am,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/cygwin/Makefile.am, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/cygwin/md-os.c, src/vm/jit/i386/darwin/Makefile.am,
	src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/i386/darwin/md-os.c,
	src/vm/jit/i386/disass.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/emit.h, src/vm/jit/i386/freebsd/Makefile.am,
	src/vm/jit/i386/freebsd/md-asm.h, src/vm/jit/i386/freebsd/md-os.c,
	src/vm/jit/i386/linux/Makefile.am, src/vm/jit/i386/linux/md-asm.h,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/i386/md-abi.h, src/vm/jit/i386/md.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/inline/Makefile.am,
	src/vm/jit/inline/inline.c, src/vm/jit/inline/inline.h,
	src/vm/jit/intrp/Makefile.am, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/codegen.h,
	src/vm/jit/intrp/disass.c, src/vm/jit/intrp/dynamic-super.c,
	src/vm/jit/intrp/engine.c, src/vm/jit/intrp/engine1.c,
	src/vm/jit/intrp/engine2.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/md.c, src/vm/jit/intrp/patcher.c, src/vm/jit/intrp
	/peephole-gen, src/vm/jit/intrp/vmgenx, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/loop/Makefile.am,
	src/vm/jit/loop/analyze.c, src/vm/jit/loop/analyze.h,
	src/vm/jit/loop/graph.c, src/vm/jit/loop/graph.h,
	src/vm/jit/loop/loop.c, src/vm/jit/loop/loop.h,
	src/vm/jit/loop/tracing.c, src/vm/jit/loop/tracing.h,
	src/vm/jit/m68k/Makefile.am, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/disass.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/emit.h,
	src/vm/jit/m68k/linux/Makefile.am, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c, src/vm/jit/md.h,
	src/vm/jit/methodheader.h, src/vm/jit/mips/Makefile.am,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/mips/disass.c, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/Makefile.am, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/Makefile.am, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md-abi.h, src/vm/jit/mips
	/md-asm.h, src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/mips/uclinux/Makefile.am, src/vm/jit/mips/uclinux/md-
	os.c, src/vm/jit/optimizing/Makefile.am,
	src/vm/jit/optimizing/dominators.c,
	src/vm/jit/optimizing/dominators.h, src/vm/jit/optimizing/graph.c,
	src/vm/jit/optimizing/graph.h, src/vm/jit/optimizing/ifconv.c,
	src/vm/jit/optimizing/ifconv.h, src/vm/jit/optimizing/lifetimes.c,
	src/vm/jit/optimizing/lifetimes.h, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/lsra.h, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/profile.h, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/optimizing/recompile.h, src/vm/jit/optimizing/reorder.c,
	src/vm/jit/optimizing/reorder.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa.h, src/vm/jit/parisc/Makefile.am,
	src/vm/jit/parisc/arch.h, src/vm/jit/parisc/linux/Makefile.am,
	src/vm/jit/parisc/md-abi.h, src/vm/jit/parisc/md.c,
	src/vm/jit/parse.c, src/vm/jit/parse.h, src/vm/jit/patcher-common.c,
	src/vm/jit/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/Makefile.am, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/codegen.h, src/vm/jit/powerpc/darwin/Makefile.am,
	src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	abi.h, src/vm/jit/powerpc/darwin/md-asm.h, src/vm/jit/powerpc/darwin
	/md-os.c, src/vm/jit/powerpc/disass.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/Makefile.am, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/powerpc/linux
	/md-asm.h, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/netbsd/Makefile.am,
	src/vm/jit/powerpc/netbsd/md-abi.c, src/vm/jit/powerpc/netbsd/md-
	abi.h, src/vm/jit/powerpc/netbsd/md-asm.h, src/vm/jit/powerpc/netbsd
	/md-os.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/powerpc64/disass.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/Makefile.am,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/linux/md-
	abi.h, src/vm/jit/powerpc64/linux/md-asm.h,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/reg.c, src/vm/jit/reg.h,
	src/vm/jit/replace.c, src/vm/jit/replace.h,
	src/vm/jit/s390/Makefile.am, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/schedule/Makefile.am, src/vm/jit/schedule/schedule.c,
	src/vm/jit/schedule/schedule.h, src/vm/jit/show.c,
	src/vm/jit/show.h, src/vm/jit/sparc64/Makefile.am,
	src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/disass.c, src/vm/jit/sparc64/emit-arch.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/emit.h,
	src/vm/jit/sparc64/linux/Makefile.am, src/vm/jit/sparc64/linux/md-
	os.c, src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/md-asm.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c,
	src/vm/jit/sparc64/solaris/Makefile.am, src/vm/jit/sparc64/solaris
	/md-os.c, src/vm/jit/stack.c, src/vm/jit/stack.h,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/trace.c, src/vm/jit/trace.h,
	src/vm/jit/verify/Makefile.am, src/vm/jit/verify/generate.pl,
	src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-builtins.inc,
	src/vm/jit/verify/typecheck-common.c, src/vm/jit/verify/typecheck-
	common.h, src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/verify
	/typecheck-invoke.inc, src/vm/jit/verify/typecheck-
	multianewarray.inc, src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck-typeinferer.c, src/vm/jit/verify
	/typecheck-typeinferer.h, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typecheck.h, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/verify/typeinfo.h, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/disass.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h, src/vm/jit/x86_64/freebsd/Makefile.am,
	src/vm/jit/x86_64/freebsd/md-os.c,
	src/vm/jit/x86_64/linux/Makefile.am, src/vm/jit/x86_64/linux/md-
	os.c, src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/md-abi.h,
	src/vm/jit/x86_64/md-asm.h, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/jit_interface.h,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/properties.c,
	src/vm/properties.h, src/vm/resolve.c, src/vm/resolve.h,
	src/vm/signal.c, src/vm/signallocal.h, src/vm/string.c,
	src/vm/stringlocal.h, src/vm/types.h, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/Makefile.am, src/vmcore/annotation.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/classcache.h, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/field.c, src/vmcore/field.h,
	src/vmcore/linker.c, src/vmcore/linker.h, src/vmcore/loader.c,
	src/vmcore/loader.h, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h,
	src/vmcore/primitivecore.c, src/vmcore/references.h, src/vmcore/rt-
	timing.c, src/vmcore/rt-timing.h, src/vmcore/stackmap.c,
	src/vmcore/stackmap.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/suck.c, src/vmcore/suck.h,
	src/vmcore/utf8.c, src/vmcore/utf8.h, src/vmcore/zip.c,
	src/vmcore/zip.h, tests/Makefile.am, tests/regression/Makefile.am,
	tests/regression/MinimalClassReflection.java,
	tests/regression/TestAnnotations.java,
	tests/regression/codepatching/Makefile.am,
	tests/regression/fptest.java, tests/regression/jasmin/Makefile.am,
	tests/regression/jasmin/runtest, tests/regression/jasmin/show,
	tests/regression/jctest.java, tests/regression/native/Makefile.am,
	tests/regression/native/checkjni.c,
	tests/regression/native/checkjni.java,
	tests/regression/native/test.c, tests/regression/native/test.java,
	tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.java,
	tests/regression/native/testgetobjectclass0.c,
	tests/regression/native/testgetobjectclass0.java,
	tests/regression/resolving/Makefile.am,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/Makefile.am:
	* Removed all Id tags.
	[777633d18b4c]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_printconfig): Better and correct output.
	[660822b1af20]

	* .hgignore:
	* Added *~.
	[c8678806a55c]

2007-08-25  Christian Thalinger  <twisti@complang.tuwien.ac.at>

	* .hgignore:
	* .hgignore: New file.
	[42382aa1e7b5]

2007-08-22  twisti  <twisti>

	* src/vm/vm.c, src/vmcore/suck.c:
	* src/vm/vm.c (vm_create) [ENABLE_JAVASE]: Removed #ifdef for
	setting sun.boot.class.path and java.boot.class.path.
	* src/vmcore/suck.c (suck_add_from_property): Likewise.
	[69da96539daa]

	* src/vm/properties.c, src/vm/vm.c, src/vmcore/suck.c:
	* src/vm/vm.c (vm_create): Free properties after they have been
	replaced.
	* src/vmcore/suck.c (suck_add_from_property): Likewise.

	* src/vm/properties.c (properties_set): Smaller changes.
	[c92f5716cba2]

	* src/threads/native/threads.c, src/vm/properties.c:
	* src/vm/properties.c (properties_set): Fixed build for CLDC-1.1,
	removed getenv of JAVA_HOME.

	* src/threads/native/threads.c (threads_detach_thread): Fixed build
	for CLDC-1.1.
	[b8e9f732a292]

	* src/native/vm/nativevm.c, src/vm/properties.c, src/vm/vm.c:
	* src/vm/vm.c [WITH_JRE_LAYOUT] (libgen.h, unistd.h): Removed.

	* src/vm/properties.c (errno.h): Added. [WITH_JRE_LAYOUT]
	(libgen.h): Likewise. (properties_set) [WITH_CLASSPATH_SUN]: Set
	sun.boot.library.path property.

	* src/native/vm/nativevm.c (vm/properties.h): Added.
	(nativevm_preinit) [WITH_CLASSPATH_SUN]: Use properties_get to get
	sun.boot.library.path.
	[a764c454c91c]

2007-08-22  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c:
	* src/vm/jit/s390/codegen.h: Cleanup.
	* src/vm/jit/s390/codegen.c (codegen_emit): Tryed to improove ACONST.
	* src/vm/jit/s390/emit.c (emit_copy): Use MVC (memcpy instruction) for
	memory to memory copy.
	[870ff292761c]

2007-08-22  twisti  <twisti>

	* src/vm/properties.c, src/vm/properties.h, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/suck.c:
	* src/vm/properties.c (list_properties_entry): Renamed to
	list_properties_entry_t. (properties_init): Only initialize the
	list. (properties_set): New function to set default properties
	(don't use JAVA_HOME to set java.home).

	* src/vm/properties.h (vm/types.h): Removed. (stdint.h): Added.
	(properties_init): Changed signature. (properties_set): New
	function.

	* src/vm/vm.c (cacao_prefix): Removed. (cacao_libjvm): Likewise.
	(classpath_libdir): Likewise. (_Jv_bootclasspath): Likewise.
	(_Jv_classpath): Likewise. (_Jv_java_library_path): Likewise.
	(specificmethodname): Likewise. (specificsignature): Likewise.
	(startit): Likewise. (vm_printconfig): Use properties_get to get
	properties. (vm_create): Moved properties stuff into properties_set.

	* src/vm/vm.h (cacao_prefix): Removed. (cacao_libjvm): Likewise.
	(classpath_libdir): Likewise. (_Jv_bootclasspath): Likewise.
	(_Jv_classpath): Likewise. (_Jv_java_library_path): Likewise.

	* src/vmcore/suck.c (suck_add_from_property): Use properties_get to
	manipulate bootclasspath.
	[b0bc14174f72]

	* m4/classpath.m4:
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Fixed typo.
	[232c19c34670]

	* src/vm/vm.c:
	* src/vm/vm.c (native/include/java_lang_Byte.h,
	native/include/java_lang_Character.h,
	native/include/java_lang_Short.h,
	native/include/java_lang_Integer.h,
	native/include/java_lang_Boolean.h, native/include/java_lang_Long.h,
	native/include/java_lang_Float.h,
	native/include/java_lang_Double.h): Removed.
	[aab3d93b5630]

	* configure.ac:
	* configure.ac (AC_CHECK_HEADERS): Added libgen.h. (AC_CHECK_FUNCS):
	Added dirname, readlink.
	[0cbbe3bcc3cd]

2007-08-22  panzi  <panzi>

	* src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.h (class_get_annotations): Added. This function
	encapsulates the access to the annotations field of the classinfo
	struct. It is defined even if ENABLE_ANNOTATIONS is not, but just
	returns NULL in that case.

	* src/vmcore/class.c (class_get_annotations): Added.

	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredAnnotations): Now uses
	class_get_annotations().

	* src/native/vm/sun/jvm.c (JVM_GetClassAnnotations): Now uses
	class_get_annotations().
	[ae07ae0272eb]

	* m4/annotations.m4:
	* m4/annotations.m4: Fixed comment.
	[38e9d135d38d]

	* src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/reflect.c, src/native/vm/sun/jvm.c,
	src/vmcore/annotation.h, src/vmcore/class.h:
	* src/lib/gnu/java/lang/reflect/Method.java (declaredAnnotations):
	Added generic type parameters to Class.

	* src/lib/gnu/java/lang/reflect/Field.java (declaredAnnotations):
	Added generic type parameters to Class.

	* src/lib/gnu/java/lang/reflect/Constructor.java
	(declaredAnnotations): Added generic type parameters to Class.

	* src/lib/gnu/sun/reflect/annotation/AnnotationParser.java: Fixed
	formatting.
	* src/native/vm/gnu/sun_reflect_ConstantPool.c
	(Java_sun_reflect_ConstantPool_getMemberRefInfoAt0): Fixed
	formatting of log output.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue),
	(Java_java_lang_reflect_Method_declaredAnnotations),
	(Java_java_lang_reflect_Method_getParameterAnnotations): Use
	LLNI_class_get macro.

	* src/native/vm/gnu/java_lang_reflect_Field.c
	(Java_java_lang_reflect_Method_declaredAnnotations): Use
	LLNI_class_get macro.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(Java_java_lang_reflect_Method_declaredAnnotations),
	(Java_java_lang_reflect_Method_getParameterAnnotations): Use
	LLNI_class_get macro.

	* src/native/vm/sun/jvm.c (JVM_GetClassConstantPool): Fixed
	formatting of log output.

	* src/native/vm/reflect.c (reflect_get_declaredannotatios): Fixed
	comment.

	* src/vmcore/class.h (classinfo): Added comments for annottation
	fields.

	* src/vmcore/annotation.h (annotation_t), (element_value_t): Removed
	unused structs.
	[81a831b87f1b]

2007-08-21  michi  <michi>

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_init) [ENABLE_HANDLES]: Added offset
	check for global reference entries.
	[759632de7c01]

	* src/native/jni.c, src/native/localref.c, src/native/localref.h:
	* src/native/jni.c (_Jv_JNI_DeleteLocalRef): Moved code to
	localref_del.

	* src/native/localref.c (localref_add): Minor code cleanup.
	(localref_del): Moved from jni.c and adapted to work with handles.

	* src/native/localref.h (localref_del): Minor signature change.
	[356dbd0bd1d9]

	* src/native/jni.c:
	* src/native/jni.c: Used LLNI_classinfo_wrap to return classes.
	(_Jv_JNI_IsSameObject): Fixed implementation for handles.
	(_Jv_JNI_NewLocalRef): Likewise. (_Jv_JNI_SetObjectArrayElement):
	Use builtin_canstore correctly. (_Jv_JNI_NewGlobalRef): Correct
	implementation for handles. (_Jv_JNI_DeleteGlobalRef): Likewise.
	[5efc6830b6ab]

2007-08-21  twisti  <twisti>

	* src/vm/properties.c:
	* src/vm/properties.c (properties_init): Moved setting java.home
	into WITH_CLASSPATH_GNU, otherwise it's done twice for
	WITH_CLASSPATH_SUN.
	[46d825b9cb5f]

2007-08-21  michi  <michi>

	* src/native/jni.c, src/vm/access.c:
	* src/native/jni.c: Fixed LLNI macro usage.
	[1293d58652ab]

2007-08-21  twisti  <twisti>

	* src/native/jni.c, src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_define): Added protection domain to
	signature. (class_resolve_superclass): Some changes (not yet
	correct). (class_issubclass): Added assert to see if super is
	resolved.

	* src/vmcore/class.h (classinfo) [ENABLE_JAVASE &&
	WITH_CLASSPATH_SUN]: Added protectiondomain.

	* src/native/jni.c (_Jv_JNI_DefineClass): Pass protection domain to
	class_define.
	* src/native/vm/java_lang_ClassLoader.c (defineClass): Likewise.

	* src/native/vm/sun_misc_Unsafe.c (unistd.h): Added. (vm/builtin.h):
	Likewise. (putShort__Ljava_lang_Object_2JS): Implemented.
	(putFloat__Ljava_lang_Object_2JF): Likewise (putInt__JI): Likewise
	(pageSize): Likewise (allocateInstance): Likewise (getLongVolatile):
	Likewise (defineClass__Ljava_lang_String_2_3BIILjava_lang_ClassLoade
	r_2Ljava_security_ProtectionDomain_2): Pass protection domain to
	class_define.

	* src/native/vm/sun/jvm.c (threads/threads-common.h): Added.
	(vm/signallocal.h): Likewise. (PRINTJVMWARNINGS): New macro (not
	enabled yet). (JVM_MaxMemory): Implemented. (JVM_EnableCompiler):
	Likewise. (JVM_DisableCompiler): Likewise. (JVM_ResolveClass):
	Likewise. (JVM_GetClassSignature): Likewise. (JVM_Yield): Likewise.
	(JVM_GetThreadStateValues): Likewise. (JVM_GetThreadStateNames):
	Likewise. (JVM_RegisterSignal): Likewise. (JVM_FindSignal):
	Likewise. (JVM_DefineClassWithSource): Pass protection domain to
	class_define. (JVM_DesiredAssertionStatus): Return false for now.
	(JVM_Available): Only ioctl is a correct implementation.
	[2f9138ad6203]

	* src/vm/access.c:
	* src/vm/access.c (access_is_accessible_class) [WITH_CLASSPATH_SUN]:
	Check for referer, not cls. (access_is_accessible_member)
	[WITH_CLASSPATH_SUN]: Check for referer, not declarer.
	[ea54fff4a82a]

	* src/native/vm/java_lang_Object.c:
	* src/native/vm/java_lang_Object.c (wait): Check for ms < 0.
	[e1591b347c35]

2007-08-21  panzi  <panzi>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetArrayLength): Now using function
	array_length_get(). (JVM_GetArrayElement): Now using function
	array_element_get(). (JVM_SetArrayElement): Implemented by using
	function array_element_set().
	[debb26635ceb]

2007-08-21  twisti  <twisti>

	* src/vm/array.c, src/vm/array.h:
	* src/vm/array.c (vm/exceptions.h): Added. (vm/primitive.h):
	Likewise. (array_element_get): New function. (array_element_set):
	Likewise. (array_element_primitive_get): Cast to specific array-
	type. (array_element_primitive_set): New function.
	(ARRAY_TYPEARRAY_ELEMENT_GET): Added NPE and AIOOBE checks.
	(ARRAY_TYPEARRAY_ELEMENT_SET): New macro. (array_length_get): New
	function.

	* src/vm/array.h (array_element_get): New function.
	(array_element_set): Likewise. (array_booleanarray_element_get,
	array_bytearray_element_get, array_chararray_element_get,
	array_shortarray_element_get, array_intarray_element_get,
	array_longarray_element_get, array_floatarray_element_get,
	array_doublearray_element_get, array_objectarray_element_get):
	Changed signature. (array_booleanarray_element_set,
	array_bytearray_element_set, array_chararray_element_set,
	array_shortarray_element_set, array_intarray_element_set,
	array_longarray_element_set, array_floatarray_element_set,
	array_doublearray_element_set, array_objectarray_element_set): New
	function. (array_length_get): Likewise.
	[49c86ae5ddb0]

	* src/vm/properties.c:
	* src/vm/properties.c (properties_init) [WITH_CLASSPATH_SUN]:
	Removed debug output.
	[e229dd128d49]

	* configure.ac, src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/vm/properties.c:
	* configure.ac (AC_CHECK_FUNCS): Added access.
	* src/vm/properties.c (unistd.h): Added. (properties_init)
	[WITH_CLASSPATH_SUN]: Find correct java.home.
	[927d02909913]

2007-08-21  michi  <michi>

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_Thread.c, src/vm/primitive.c,
	src/vm/properties.c:
	* src/vm/properties.c (properties_system_add): Use LLNI macros.
	(properties_system_add_all): Likewise.

	* src/vm/primitive.c (primitive_unbox): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c: Fixed
	assertion.

	* src/native/vm/java_lang_Thread.c: Fixed LLNI macro usage.
	[11f7b49dda5d]

2007-08-21  panzi  <panzi>

	* THIRDPARTY:
	* THIRDPARTY (src/lib/gnu/sun/reflect/ConstantPool.java),
	(src/lib/gnu/sun/reflect/annotation/AnnotationParser.java),
	(src/lib/gnu/sun/reflect/annotation/AnnotationType.java), (src/lib/g
	nu/sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java)
	, (src/lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.j
	ava): These files are licensed by sun under the GPLv2.
	[8073f3ac70ea]

2007-08-21  twisti  <twisti>

	* src/native/vm/nativevm.c:
	* src/native/vm/nativevm.c [WITH_CLASSPATH_SUN] (string.h): Added.
	[WITH_CLASSPATH_SUN] (mm/memory.h): Likewise. (nativevm_preinit)
	[WITH_CLASSPATH_SUN]: Use classpath_libdir variable instead of
	CLASSPATH_LIBDIR. This is correct for WITH_JRE_LAYOUT.
	[44950c9ac1f3]

2007-08-21  michi  <michi>

	* m4/classpath.m4, src/cacaoh/headers.c:
	* src/cacaoh/headers.c (HEAP_PREFIX): Added define. (printtype):
	Added arguments prefix and infix. (printfields): Pass correct prefix
	for reference types. (printmethod): Pass correct infix for array
	types. (headerfile_generate): Print correct prefix for heap object.
	(headerfile_generate) [ENABLE_HANDLES]: Also create struct typedef
	for handle.
	[1cde84324121]

2007-08-21  twisti  <twisti>

	* m4/classpath.m4:
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_LIBDIR): Set
	CLASSPATH_LIBDIR correctly for OpenJDK.
	[f59871a923da]

	* configure.ac, m4/staticvm.m4:
	* configure.ac (AC_CHECK_ENABLE_STATICVM): Added.
	* m4/staticvm.m4: New file.
	[575b17df5444]

2007-08-21  michi  <michi>

	* src/cacaoh/dummy.c, src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h,
	src/mm/cacao-gc/rootset.c, src/mm/cacao-gc/rootset.h, src/mm/gc-
	common.h, src/native/jni.c, src/threads/native/threads.c,
	src/threads/threads-common.c, src/vmcore/loader.c:
	* src/mm/cacao-gc/gc.h (list_gcref_entry_t): Renamed type to
	reftype. [!ENABLE_HANDLES]: Added development break.

	* src/mm/cacao-gc/gc.c (gc_reference_register): Added reftype to
	arguments.

	* src/mm/gc-common.h: Added reftype defines.
	* src/mm/cacao-gc/rootset.h: Removed reftype defines.

	* src/mm/cacao-gc/rootset.c: Adapted to changes.

	* src/vmcore/loader.c (loader_hashtable_classloader_add): Pass
	reftype to GC.
	* src/native/jni.c (_Jv_JNI_NewGlobalRef): Likewise.
	* src/threads/native/threads.c (threads_init): Likewise.
	* src/threads/threads-common.c (threads_thread_new): Likewise.
	(threads_thread_print_info) [WITH_CLASSPATH_GNU]: Fixed thread name
	printing.

	* src/cacaoh/dummy.c (gc_reference_register): Adapted dummy function
	to new sig.
	[3c38a2ccdc4f]

2007-08-20  twisti  <twisti>

	* m4/jre-layout.m4:
	* m4/jre-layout.m4: Set Id keyword.
	[187bc2030109]

	* configure.ac, m4/jre-layout.m4:
	* configure.ac (AC_CHECK_WITH_JRE_LAYOUT): Added.
	* m4/jre-layout.m4: New file.
	[29b158e22fc7]

2007-08-20  michi  <michi>

	* src/mm/boehm.c, src/vm/jit/replace.h:
	* src/mm/boehm.c (heap_alloc_uncollectable): Fixed typo.
	* src/vm/jit/replace.h [!ENABLE_REPLACEMENT]: Added missing defines.
	[95bd9c1f25ad]

2007-08-20  twisti  <twisti>

	* src/native/llni.h, src/vm/signal.c:
	* src/vm/signal.c (signal_thread): Removed debug output.
	(signal_thread_handler): Likewise.
	[1cb05b99b528]

2007-08-20  michi  <michi>

	* src/vmcore/loader.c:
	* src/vmcore/loader.c: Fixed typos, LLNI_direct is called
	LLNI_DIRECT.
	[0def6a684fde]

	* src/cacaoh/dummy.c, src/native/Makefile.am, src/native/llni.c,
	src/native/llni.h, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/native/Makefile.am: Added llni.c.

	* src/native/llni.c: Added new file. (llni_critical_start,
	llni_critical_end): Implemented.

	* src/native/llni.h: Major cleanup of LLNI macros
	(LLNI_CRITICAL_START, LLNI_CRITICAL_END): Added.

	* src/cacaoh/dummy.c (llni_critical_start, llni_critical_end): Added
	dummies.
	[af75957ea4fa]

2007-08-20  twisti  <twisti>

	* src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/utf8.c (utf_uncaughtException): Added.
	(utf_java_lang_Thread_java_lang_Throwable__V): Likewise.
	(utf8_init): Initialize new variables.
	* src/vmcore/utf8.h: Likewise.
	[3ab11f4e0235]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_init) [WITH_CLASSPATH_SUN]:
	Added code to initialize the thread. (threads_startup_thread):
	Ignore the return value of threads_detach_thread.
	(threads_detach_thread) [ENABLE_JAVASE]: Implemented
	UncaughtExceptionHandler stuff.
	[65df7c9c179f]

2007-08-20  michi  <michi>

	* src/native/localref.c:
	* src/native/localref.c (localref_add): Disabled debug output.
	[97af6afc71f6]

	* src/native/jni.c, src/native/localref.c, src/native/localref.h:
	* src/native/localref.c (localref_add): Implemented (moved parts
	from jni.c). [!NDEBUG] (localref_dump): Improved debug output.

	* src/native/localref.h: Added prototypes.

	* src/native/jni.c (_Jv_JNI_NewLocalRef): Now uses localref_add.
	[e792a0c22d3d]

	* src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getClassLoader) [ENABLE_HANDLES]: Fixed
	implementation.

	* src/native/vm/gnu/java_lang_VMSystem.c
	(Java_java_lang_VMSystem_identityHashCode) [ENABLE_GC_CACAO]:
	Likewise.
	[3d0ca306dc19]

	* src/native/jni.c, src/native/localref.c, src/native/localref.h,
	src/vm/vm.c:
	* src/native/localref.c (localref_table_destroy): Added (moved from
	jni.c). Improved documentation.

	* src/native/localref.h: Likewise.

	* src/native/jni.c (jni_free_localref_table): Removed.

	* src/vm/vm.c (vm_createjvm): Added comment about localreftable.
	[329d0c1a2734]

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_builtin): Fixed bug
	in stackframesize calculation.
	[d759d431071b]

	* src/cacaoh/dummy.c, src/mm/cacao-gc/heap.h,
	src/threads/native/threads.c, src/threads/threads-common.c,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/signal.c:
	* src/vm/signal.c (signal_init): Use signal_register_signal to
	register SIGUSR1.

	* src/vm/builtin.c: Adapted to changes on trunk.
	* src/vm/builtin.h: Likewise.
	* src/mm/cacao-gc/heap.h: Likewise.
	* src/threads/threads-common.c: Likewise.
	* src/threads/native/threads.c: Likewise.
	* src/cacaoh/dummy.c: Likewise.
	[173e158ebcbc]

	* configure.ac, src/mm/cacao-gc/gc.c, src/vm/global.h,
	src/vmcore/loader.c:
	* configure.ac: Checks for --enable-handles and sets define
	accordingly.

	* src/vm/global.h (java_handle_t): Changed ifdef to use
	ENABLE_HANDLES.

	* src/vmcore/loader.c (load_class_from_classloader): Likewise

	* src/mm/cacao-gc/gc.c (gc_init) [ENABLE_HANDLES]: Ifdefed offset
	check of indirection cells.
	[78bdf2b86dea]

	* configure.ac, src/Makefile.am, src/lib/Makefile.am,
	src/native/include/Makefile.am,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/java_lang_String.c, src/native/vm/java_lang_String.h,
	src/threads/threads-common.h, src/vm/builtin.c,
	src/vm/builtintable.inc, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c, src/vm/jit/trace.c,
	src/vm/jit/trace.h, src/vm/properties.c, src/vm/stringlocal.h,
	src/vmcore/zip.c:
	* src/vm/builtin.c (builtintable_init): Create builtin stubs for
	builtintable_function as well.

	* src/vm/builtintable.inc (builtintable_function): Create stubs for
	arraycopy.
	[2120e8901106]

2007-08-19  twisti  <twisti>

	* src/native/vm/Makefile.am, src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_String.c,
	src/native/vm/java_lang_String.h, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/vm/string.c, src/vm/stringlocal.h:
	* src/vm/string.c (javastring_intern): New function.
	(javastring_print): Likewise.
	* src/vm/stringlocal.h

	* src/native/vm/java_lang_String.c: Removed.
	* src/native/vm/java_lang_String.h: Likewise.

	* src/native/vm/cldc1.1/java_lang_String.c (intern): Use
	javastring_intern.

	* src/native/vm/java_lang_Class.c (native/vm/java_lang_String.h):
	Removed.

	* src/native/vm/gnu/java_lang_VMString.c
	(native/vm/java_lang_String.h): Removed. (intern): Use
	javastring_intern.

	* src/native/vm/sun/jvm.c (native/vm/java_lang_String.h): Removed.
	(JVM_GetSystemPackage): Added debug output.

	* src/native/vm/reflect.c (native/vm/java_lang_String.h): Removed.
	(reflect_field_new): Use javastring_intern. (reflect_method_new):
	Likewise.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Removed
	java_lang_String.[ch].
	[92115007d820]

	* src/threads/threads-common.h:
	* src/threads/threads-common.h (THREAD_STATE_*): Changed to be
	compatible with OpenJDK (range 1-6).
	[c0232448e92f]

	* src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/signal.c (signal_init) [!WITH_CLASSPATH_SUN]: Only block
	SIGINT for non-Sun configurations. (signal_thread): Use
	signal_thread_handler. (signal_thread_handler): New function.

	* src/vm/signallocal.h (signal_thread_handler): New function.
	[35c1b5347341]

	* src/vm/primitive.c:
	* src/vm/primitive.c (primitive_box): Handle PRIMITIVETYPE_VOID
	type. (primitive_unbox): Likewise.
	[076fc6bc3012]

2007-08-19  pm  <pm>

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/emit.c:
	* src/vm/jit/s390/asmpart.S: Made all function calls PIC (see bug
	41), general cleanup.
	* src/vm/jit/s390/emit.c (emit_verbosecall_enter): Save and restore
	temporary registers for leaf methods.
	[0ab89839950f]

2007-08-19  twisti  <twisti>

	* configure.ac, src/vm/properties.c, src/vm/vm.c:
	* configure.ac (JAVA_ARCH): Added.

	* src/vm/vm.c (opts): Added Xverify:none (should be handled better).
	(vm_create) [WITH_JRE_LAYOUT && WITH_CLASSPATH_SUN]: Implemented.

	* src/vm/properties.c (properties_init) [WITH_CLASSPATH_GNU]: Use
	JAVA_ARCH.
	[1e132391622d]

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (link_class): Check for CLASS_LINKING.
	(link_class_intern): Removed CLASS_LINKED check, but added an
	assert.
	[986a66aea815]

2007-08-19  panzi  <panzi>

	* src/native/vm/sun/jvm.c, tests/regression/Makefile.am,
	tests/regression/TestAnnotations.java,
	tests/regression/TestAnnotations.output:
	* src/native/vm/sun/jvm.c (JVM_GetArrayElement): Using
	array_xxxarray_element_get functions now.

	* tests/regression/TestAnnotations.output: Added.

	* tests/regression/Makefile.am (SOURCE_FILES): Added
	TestAnnotations.java. (EXTRA_DIST): Added TestAnnotations.output.
	(OUTPUT_JAVA_TESTS): Added TestAnnotations.

	* tests/regression/TestAnnotations.java: Added detailed test cases
	for annotations support.
	[23f039edde88]

2007-08-19  pm  <pm>

	* src/vm/builtin.c, src/vm/jit/s390/md.c, src/vm/jit/trace.c,
	src/vm/jit/trace.h:
	* vm/builtin.c (builtin_trace_exception) [__s390__]: Decrement
	TRACEJAVACALLINDENT instead of methodindent.
	* vm/jit/trace.h: Adapted file to coding conventions.
	* vm/jit/trace.c: Likewise.
	* vm/jit/s390/md.c (md_dump_context) Fixed printing of java method at
	failing address, (md_signal_handler_sigsegv) added missing default
	branch to switch.
	[512e17a366d4]

2007-08-18  twisti  <twisti>

	* src/Makefile.am, src/lib/Makefile.am,
	src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java,
	src/native/include/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c, src/vmcore/zip.c,
	src/vmcore/zip.h:
	* src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c
	(zip_read_resource, file_read_resource,
	Java_com_sun_cldc_io_ResourceInputStream_open,
	Java_com_sun_cldc_io_ResourceInputStream_bytesRemain,
	Java_com_sun_cldc_io_ResourceInputStream_readByte,
	Java_com_sun_cldc_io_ResourceInputStream_readBytes,
	Java_com_sun_cldc_io_ResourceInputStream_clone): Used LLNI macros,
	implemented missing methods

	* src/native/vm/cldc1.1/java_lang_Object.c (native/llni.h): Added
	* src/native/vm/cldc1.1/java_lang_Class.c: Likewise

	* src/native/vm/cldc1.1/java_lang_String.c
	(Java_java_lang_String_hashCode, Java_java_lang_String_indexOf__I,
	Java_java_lang_String_indexOf__II,
	Java_java_lang_String_lastIndexOf__I
	Java_java_lang_String_lastIndexOf__II, Java_java_lang_String_equals,
	Java_java_lang_String_intern): Used LLNI macros
	* src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c
	(Java_com_sun_cldc_io_j2me_socket_Protocol_open0,
	Java_com_sun_cldc_io_j2me_socket_Protocol_readBuf,
	Java_com_sun_cldc_io_j2me_socket_Protocol_writeBuf): Likewise

	* src/native/vm/cldc1.1/java_lang_System.c
	(Java_java_lang_System_arraycopy): Replaced java_arrayheader by
	java_handle_t.

	* src/vmcore/zip.c: Moved LFH struct to zip.h.
	* src/vmcore/zip.h: Likewise.

	* src/lib/cldc1.1/com/sun/cldchi/jvm/FileDescriptor.java: New file.

	* src/lib/Makefile.am: Changed to build vm.zip for cldc1.1.
	* src/native/include/Makefile.am: Likewise.
	* src/Makefile.am: Likewise.
	[2fc98ecf203f]

2007-08-17  twisti  <twisti>

	* src/native/vm/gnu/sun_reflect_ConstantPool.c:
	* src/native/vm/gnu/sun_reflect_ConstantPool.c: Added Id keyword.
	[3d57b610af51]

	* src/native/vm/gnu/sun_reflect_ConstantPool.c:
	* src/native/vm/gnu/sun_reflect_ConstantPool.c (native/llni.h):
	Added. (boilerplate): Likewise.
	[71fc7522fbbd]

	* src/native/llni.h, src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/reflect.c, src/native/vm/sun/jvm.c,
	src/vm/Makefile.am, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/string.c, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.h,
	src/vmcore/method.c, src/vmcore/method.h,
	tests/regression/Makefile.am:
	* src/vmcore/class.h (classinfo): Removed ENABLE_JAVASE for
	enclosingclass and enclosingmethod. I don't think we can save that
	much memory for CLDC configurations and it keeps the codebase
	cleaner.
	[6845be9d4d5c]

2007-08-17  michi  <michi>

	* NEWS, src/native/jni.c, src/native/llni.h,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/vm/Makefile.am, src/vm/array.c, src/vm/array.h,
	src/vm/builtin.c, src/vm/global.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/verify/typecheck-
	stackbased.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/string.c,
	src/vm/vm.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.c,
	src/vmcore/linker.h, src/vmcore/loader.c, src/vmcore/method.c,
	src/vmcore/method.h, tests/regression/Makefile.am,
	tests/regression/MinimalClassReflection.java,
	tests/regression/MinimalClassReflection.output:
	Merged revisions 8321-8342 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8322 | twisti | 2007-08-16 17:54:38 +0200 (Thu, 16 Aug
	2007) | 16 lines

	 * src/vmcore/method.c (method_get_annotations): Always enable the
	method, but return NULL for !ENABLE_ANNOTATIONS. This keeps code
	calling this function simpler. (method_get_parameterannotations):
	Likewise. (method_get_annotationdefault): Likewise.

	 * src/vmcore/method.h (method_get_annotations): Removed
	ENABLE_ANNOTATIONS. (method_get_parameterannotations): Likewise.
	(method_get_annotationdefault): Likewise.

	 * src/native/vm/reflect.c (reflect_constructor_new): Always call
	method-annotations functions. (reflect_field_new): Likewise.
	(reflect_method_new): Likewise. ........ r8323 | twisti |
	2007-08-16 18:01:05 +0200 (Thu, 16 Aug 2007) | 3 lines

	 * src/native/vm/sun/jvm.c (JVM_FindPrimitiveClass): Use
	TRACEJVMCALLS and a better implementation. ........ r8325 |
	twisti | 2007-08-16 19:25:47 +0200 (Thu, 16 Aug 2007) | 7 lines

	 * src/vmcore/field.c (field_get_annotations): Always enable the
	method, but return NULL for !ENABLE_ANNOTATIONS. This keeps code
	calling this function simpler.

	 * src/vmcore/field.h (field_get_annotations): Removed
	ENABLE_ANNOTATIONS. ........ r8326 | twisti | 2007-08-16 19:45:49
	+0200 (Thu, 16 Aug 2007) | 12 lines

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(declaredAnnotations): Use byte-array handle. Don't check for this
	== NULL , this cannot happen. (getParameterAnnotations):
	Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Field.c
	(declaredAnnotations): Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	(declaredAnnotations): Likewise. (getParameterAnnotations):
	Likewise. ........ r8327 | twisti | 2007-08-16 19:52:48 +0200
	(Thu, 16 Aug 2007) | 8 lines

	 * src/vm/primitive.c (primitive_type_get_by_wrapperclass): New
	function. (primitive_unbox): Changed signature.
	  * src/vm/primitive.h: Likewise.

	 * src/vm/vm.c (vm_array_from_objectarray): Rewritten to use
	primitive-unbox function. ........ r8328 | twisti | 2007-08-16
	19:56:19 +0200 (Thu, 16 Aug 2007) | 3 lines

	 * src/vm/vm.c (vm_array_from_objectarray): Use
	primitive_type_get_by_wrapperclass (typo). Removed debug output.
	........ r8329 | twisti | 2007-08-16 19:57:27 +0200 (Thu, 16 Aug
	2007) | 3 lines

	 * src/vm/vm.c (XXusage): Commented. We don't use it anymore but
	we keep it to know which switches still need to be converted.
	........ r8330 | twisti | 2007-08-16 20:15:51 +0200 (Thu, 16 Aug
	2007) | 25 lines

	 * src/vm/array.c: New file.
	  * src/vm/array.h: Likewise.

	 * src/vm/Makefile.am (libvm_la_SOURCES): Added array.[ch].

	 * src/vm/builtin.c, src/vm/string.c, src/vm/jit/verify
	/typecheck-typeinferer.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typeinfo.c, src/vmcore/linker.c (vm/array.h):
	Added.

	 * src/vm/primitive.h (ARRAYTYPE_*): Moved to vm/array.h

	 * src/vmcore/class.c (class_get_componenttype): New function.
	  * src/vmcore/class.h: Likewise.

	 * src/native/vm/java_lang_Class.c (getComponentType): Removed.
	  * src/native/vm/java_lang_Class.h: Likewise.

	 * src/native/vm/gnu/java_lang_VMClass.c (getComponentType): Call
	class_get_componenttype.
	  * src/native/vm/sun/jvm.c (JVM_GetComponentType): Likewise. ........
	r8331 | panzi | 2007-08-16 21:21:39 +0200 (Thu, 16 Aug 2007) | 16
	lines

	 * src/native/vm/sun/jvm.c (vm/array.h): Added include.
	(vm/global.h): Added include. (JVM_FindPrimitiveClass): Parameter
	name shadowed type utf. (JVM_GetComponentType): Missing variable
	classinfo* c. (JVM_GetClassAnnotations): java_bytearray ->
	java_handle_bytearray_t. (JVM_GetFieldAnnotations): java_bytearray
	-> java_handle_bytearray_t. (JVM_GetMethodAnnotations):
	java_bytearray -> java_handle_bytearray_t.
	(JVM_GetMethodDefaultAnnotationValue): java_bytearray ->
	java_handle_bytearray_t. (JVM_GetMethodParameterAnnotations):
	java_bytearray -> java_handle_bytearray_t. (JVM_GetArrayLength):
	java_arrayheader -> java_array_t. (JVM_GetArrayElement): Updated
	types, renamed wrong named variable.

	 * src/vmcore/linker.h: (_vftbl): Fixed formatting of comment.
	........ r8332 | panzi | 2007-08-16 21:29:42 +0200 (Thu, 16 Aug
	2007) | 5 lines

	 * src/native/vm/sun/jvm.c (JVM_GetArrayElement): Used
	exceptions_new_arrayindexoutofboundsexception where
	exceptions_throw_arrayindexoutofboundsexception should have been
	used. ........ r8333 | pm | 2007-08-16 23:46:32 +0200 (Thu, 16 Aug
	2007) | 2 lines

	 * src/native/vm/sun/jvm.c (JVM_GetProtectionDomain): Return NULL
	as default. ........ r8334 | ajordan | 2007-08-17 00:10:43 +0200
	(Fri, 17 Aug 2007) | 5 lines

	 * src/vm/jit/sparc64/codegen.h: Improved overflow checking.

	 * src/vm/jit/sparc64/codegen.c (check_13bit_imm): Likewise.
	(codegen_emit): Fixed ICDM_TABLESWITCH for large negative values.
	........ r8338 | panzi | 2007-08-17 22:03:06 +0200 (Fri, 17 Aug
	2007) | 10 lines

	 * tests/regression/MinimalClassReflection.output: New file.
	  * tests/regression/MinimalClassReflection.java: New file. This adds
	tests for some reflection methods like
	java.lang.Class.isLocal/.isMember/.isAnonymous/.getDeclaringClass
	etc.

	 * tests/regression/Makefile.am (SOURCE_FILES): Added
	MinimalClassReflection.java. (EXTRA_DIST): Added
	MinimalClassReflection.output. (OUTPUT_JAVA_TESTS): Added
	MinimalClassReflection. ........ r8339 | twisti | 2007-08-17
	23:21:51 +0200 (Fri, 17 Aug 2007) | 37 lines

	 * src/vm/global.h (ACC_CLASS_MEMBER): New define.
	(ACC_CLASS_ANONYMOUS): Likewise.

	 * src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getEnclosingClass): Removed.
	(_Jv_java_lang_Class_getEnclosingMethod_intern): Use
	class_get_enclosingclass.

	 * src/native/vm/java_lang_Class.h
	(_Jv_java_lang_Class_getEnclosingClass): Removed.

	 * src/native/vm/gnu/java_lang_VMClass.c (stdint.h): Added.
	(vmcore/class.h): Likewise. (methods): Enabled isAnonymousClass,
	isLocalClass and isMemberClass.
	(Java_java_lang_VMClass_getEnclosingClass): Use
	class_get_enclosingclass. (isAnonymousClass): Implemented.
	(isLocalClass): Likewise. (isMemberClass): Likewise.

	 * src/vmcore/class.c (class_load_attributes): Set ACC_CLASS_MEMBER
	and ACC_CLASS_ANONYMOUS flags. (class_is_anonymousclass): New
	function. (class_is_localclass): Likewise.
	(class_is_memberclass): Likewise. (class_get_declaredclasses):
	Check if outer is NULL. (class_get_declaringclass): Rewritten to
	use c->declaringclass. (class_get_enclosingclass): New function.

	 * src/vmcore/class.h (classinfo): Added declaringclass.(
	(class_is_anonymousclass): New function. (class_is_localclass):
	Likewise. (class_is_memberclass): Likewise.
	(class_get_enclosingclass): Likewise.

	 * NEWS: Added news. ........ r8340 | twisti | 2007-08-17
	23:28:29 +0200 (Fri, 17 Aug 2007) | 2 lines

	 * src/native/vm/gnu/java_lang_VMClass.c (getEnclosingClass): Typo.
	........ r8341 | michi | 2007-08-17 23:32:01 +0200 (Fri, 17 Aug
	2007) | 21 lines

	 * src/native/llni.h (LLNI_classinfo_wrap, LLNI_classinfo_unwrap):
	Added new macros.

	 Used above two LLNI macros throughout the codebase:
	  * src/native/jni.c
	  * src/native/vm/java_lang_ClassLoader.c
	  * src/native/vm/cldc1.1/java_lang_Class.c
	  * src/native/vm/cldc1.1/java_lang_Object.c
	  * src/native/vm/java_lang_Class.c
	  * src/native/vm/java_lang_Object.c
	  * src/native/vm/gnu/java_lang_VMClassLoader.c
	  * src/native/vm/gnu/java_lang_VMClass.c
	  * src/native/vm/gnu/sun_reflect_ConstantPool.c
	  * src/native/vm/gnu/java_lang_reflect_Method.c
	  * src/native/vm/gnu/java_lang_reflect_Field.c
	  * src/native/vm/gnu/java_lang_VMThrowable.c
	  * src/native/vm/sun_misc_Unsafe.c
	  * src/native/vm/sun/jvm.c
	  * src/native/vm/reflect.c
	  * src/vmcore/loader.c ........
	[240844a0096e]

	* src/mm/cacao-gc/heap.c, src/mm/cacao-gc/heap.h, src/mm/cacao-
	gc/mark.c, src/native/llni.h,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	tests/regression/Makefile.am:
	* src/mm/cacao-gc/heap.c: Adapted to changes on trunk.
	* src/mm/cacao-gc/heap.h: Likewise.
	* src/mm/cacao-gc/mark.c: Likewise.
	[494586254561]

	* src/native/jni.c, src/native/llni.h,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/vmcore/loader.c:
	* src/native/llni.h (LLNI_classinfo_wrap, LLNI_classinfo_unwrap):
	Added new macros.

	Used above two LLNI macros throughout the codebase:
	* src/native/jni.c
	* src/native/vm/java_lang_ClassLoader.c
	* src/native/vm/cldc1.1/java_lang_Class.c
	* src/native/vm/cldc1.1/java_lang_Object.c
	* src/native/vm/java_lang_Class.c
	* src/native/vm/java_lang_Object.c
	* src/native/vm/gnu/java_lang_VMClassLoader.c
	* src/native/vm/gnu/java_lang_VMClass.c
	* src/native/vm/gnu/sun_reflect_ConstantPool.c
	* src/native/vm/gnu/java_lang_reflect_Method.c
	* src/native/vm/gnu/java_lang_reflect_Field.c
	* src/native/vm/gnu/java_lang_VMThrowable.c
	* src/native/vm/sun_misc_Unsafe.c
	* src/native/vm/sun/jvm.c
	* src/native/vm/reflect.c
	* src/vmcore/loader.c
	[4ad817520fb4]

2007-08-17  twisti  <twisti>

	* src/native/vm/gnu/java_lang_VMClass.c:
	* src/native/vm/gnu/java_lang_VMClass.c (getEnclosingClass): Typo.
	[2ef182095ae1]

	* NEWS, src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/vm/global.h, src/vmcore/class.c, src/vmcore/class.h:
	* src/vm/global.h (ACC_CLASS_MEMBER): New define.
	(ACC_CLASS_ANONYMOUS): Likewise.

	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getEnclosingClass): Removed.
	(_Jv_java_lang_Class_getEnclosingMethod_intern): Use
	class_get_enclosingclass.

	* src/native/vm/java_lang_Class.h
	(_Jv_java_lang_Class_getEnclosingClass): Removed.

	* src/native/vm/gnu/java_lang_VMClass.c (stdint.h): Added.
	(vmcore/class.h): Likewise. (methods): Enabled isAnonymousClass,
	isLocalClass and isMemberClass.
	(Java_java_lang_VMClass_getEnclosingClass): Use
	class_get_enclosingclass. (isAnonymousClass): Implemented.
	(isLocalClass): Likewise. (isMemberClass): Likewise.

	* src/vmcore/class.c (class_load_attributes): Set ACC_CLASS_MEMBER
	and ACC_CLASS_ANONYMOUS flags. (class_is_anonymousclass): New
	function. (class_is_localclass): Likewise. (class_is_memberclass):
	Likewise. (class_get_declaredclasses): Check if outer is NULL.
	(class_get_declaringclass): Rewritten to use c->declaringclass.
	(class_get_enclosingclass): New function.

	* src/vmcore/class.h (classinfo): Added declaringclass.(
	(class_is_anonymousclass): New function. (class_is_localclass):
	Likewise. (class_is_memberclass): Likewise.
	(class_get_enclosingclass): Likewise.

	* NEWS: Added news.
	[182b913bd9cf]

2007-08-17  panzi  <panzi>

	* tests/regression/Makefile.am,
	tests/regression/MinimalClassReflection.java,
	tests/regression/MinimalClassReflection.output:
	* tests/regression/MinimalClassReflection.output: New file.
	* tests/regression/MinimalClassReflection.java: New file. This adds
	tests for some reflection methods like
	java.lang.Class.isLocal/.isMember/.isAnonymous/.getDeclaringClass
	etc.

	* tests/regression/Makefile.am (SOURCE_FILES): Added
	MinimalClassReflection.java. (EXTRA_DIST): Added
	MinimalClassReflection.output. (OUTPUT_JAVA_TESTS): Added
	MinimalClassReflection.
	[1aaec4ee70e9]

2007-08-17  michi  <michi>

	* src/native/native.c, src/native/native.h:
	* src/native/native.h (hashtable_library_loader_entry): Classloader
	is represented by the classloader typedef.

	* src/native/native.c (native_library_add, native_library_find):
	Classloader does not need to be registered again.
	[ee38e3ef5c76]

	* src/vmcore/class.h:
	* src/vmcore/class.h (classinfo): Added missing endif.
	[f4bf74880e4f]

	* src/native/jni.c, src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/sun_misc_Unsafe.c, src/vm/Makefile.am,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/string.c,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.h,
	src/vmcore/loader.c:
	* src/vmcore/loader.c (load_class_from_classloader)
	[!ENABLE_GC_CACAO]: Pass object instead of classloader entry to
	function.

	* src/native/jni.c (_Jv_JNI_DefineClass): Register classloader.

	* src/native/vm/gnu/java_lang_VMRuntime.c
	(Java_java_lang_VMRuntime_nativeLoad): Likewise.

	* src/native/vm/sun_misc_Unsafe.c
	(Java_sun_misc_Unsafe_defineClass): Likewise.

	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(Java_java_lang_VMClassLoader_findLoadedClass): Search for
	classloader instead of adding a new one.

	* src/native/vm/java_lang_Class.c: Fixed compiler warning.

	* src/native/vm/java_lang_ClassLoader.c: Likewise.
	[7e8c5c18b712]

2007-08-16  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h:
	* src/vm/jit/sparc64/codegen.h: Improved overflow checking.

	* src/vm/jit/sparc64/codegen.c (check_13bit_imm): Likewise.
	(codegen_emit): Fixed ICDM_TABLESWITCH for large negative values.
	[8036df17dadb]

2007-08-16  pm  <pm>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetProtectionDomain): Return NULL as
	default.
	[db907e41086f]

2007-08-16  panzi  <panzi>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetArrayElement): Used
	exceptions_new_arrayindexoutofboundsexception where
	exceptions_throw_arrayindexoutofboundsexception should have been
	used.
	[33a38fdcba8e]

	* src/native/vm/sun/jvm.c, src/vmcore/linker.h:
	* src/native/vm/sun/jvm.c (vm/array.h): Added include.
	(vm/global.h): Added include. (JVM_FindPrimitiveClass): Parameter
	name shadowed type utf. (JVM_GetComponentType): Missing variable
	classinfo* c. (JVM_GetClassAnnotations): java_bytearray ->
	java_handle_bytearray_t. (JVM_GetFieldAnnotations): java_bytearray
	-> java_handle_bytearray_t. (JVM_GetMethodAnnotations):
	java_bytearray -> java_handle_bytearray_t.
	(JVM_GetMethodDefaultAnnotationValue): java_bytearray ->
	java_handle_bytearray_t. (JVM_GetMethodParameterAnnotations):
	java_bytearray -> java_handle_bytearray_t. (JVM_GetArrayLength):
	java_arrayheader -> java_array_t. (JVM_GetArrayElement): Updated
	types, renamed wrong named variable.

	* src/vmcore/linker.h: (_vftbl): Fixed formatting of comment.
	[e13b6e6c0d15]

2007-08-16  twisti  <twisti>

	* src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/sun/jvm.c, src/vm/Makefile.am, src/vm/array.c,
	src/vm/array.h, src/vm/builtin.c, src/vm/jit/verify/typecheck-
	stackbased.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/primitive.h, src/vm/string.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/linker.c:
	* src/vm/array.c: New file.
	* src/vm/array.h: Likewise.

	* src/vm/Makefile.am (libvm_la_SOURCES): Added array.[ch].

	* src/vm/builtin.c, src/vm/string.c, src/vm/jit/verify/typecheck-
	typeinferer.c, src/vm/jit/verify/typecheck.c, src/vm/jit/verify
	/typecheck-stackbased.c, src/vm/jit/verify/typeinfo.c,
	src/vmcore/linker.c (vm/array.h): Added.

	* src/vm/primitive.h (ARRAYTYPE_*): Moved to vm/array.h

	* src/vmcore/class.c (class_get_componenttype): New function.
	* src/vmcore/class.h: Likewise.

	* src/native/vm/java_lang_Class.c (getComponentType): Removed.
	* src/native/vm/java_lang_Class.h: Likewise.

	* src/native/vm/gnu/java_lang_VMClass.c (getComponentType): Call
	class_get_componenttype.
	* src/native/vm/sun/jvm.c (JVM_GetComponentType): Likewise.
	[1f7cf6d1342f]

	* src/vm/vm.c:
	* src/vm/vm.c (XXusage): Commented. We don't use it anymore but we
	keep it to know which switches still need to be converted.
	[0a022dbb5571]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_array_from_objectarray): Use
	primitive_type_get_by_wrapperclass (typo). Removed debug output.
	[7c74a6c74478]

	* src/vm/primitive.c, src/vm/primitive.h, src/vm/vm.c:
	* src/vm/primitive.c (primitive_type_get_by_wrapperclass): New
	function. (primitive_unbox): Changed signature.
	* src/vm/primitive.h: Likewise.

	* src/vm/vm.c (vm_array_from_objectarray): Rewritten to use
	primitive-unbox function.
	[d1bb1464fa01]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(declaredAnnotations): Use byte-array handle. Don't check for this
	== NULL , this cannot happen. (getParameterAnnotations): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Field.c (declaredAnnotations):
	Likewise.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(declaredAnnotations): Likewise. (getParameterAnnotations):
	Likewise.
	[a671d0338b15]

	* src/vmcore/field.c, src/vmcore/field.h:
	* src/vmcore/field.c (field_get_annotations): Always enable the
	method, but return NULL for !ENABLE_ANNOTATIONS. This keeps code
	calling this function simpler.

	* src/vmcore/field.h (field_get_annotations): Removed
	ENABLE_ANNOTATIONS.
	[43879e6b20c2]

2007-08-16  michi  <michi>

	* src/mm/cacao-gc/gc.c, src/native/vm/reflect.c,
	src/native/vm/sun/jvm.c, src/vm/global.h, src/vmcore/loader.c,
	src/vmcore/loader.h, src/vmcore/method.c, src/vmcore/method.h:
	* src/vm/global.h [ENABLE_GC_CACAO] (java_handle_t): Made the handle
	an its array pendants real indirection cells.

	* src/mm/cacao-gc/gc.c (gc_init): Check the offset of the
	indirection cells.

	* src/vmcore/loader.h (hashtable_classloader_entry): Added attention
	notice about the entry used as indirection cell.

	* src/vmcore/loader.c (loader_hashtable_classloader_add): Used LLNI
	critical sections to search and register classloader objects.
	(loader_hashtable_classloader_find): Likewise.
	[6d7c2d0e5a6d]

2007-08-16  twisti  <twisti>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_FindPrimitiveClass): Use
	TRACEJVMCALLS and a better implementation.
	[53db5a1b83ed]

	* src/native/vm/reflect.c, src/vmcore/method.c, src/vmcore/method.h:
	* src/vmcore/method.c (method_get_annotations): Always enable the
	method, but return NULL for !ENABLE_ANNOTATIONS. This keeps code
	calling this function simpler. (method_get_parameterannotations):
	Likewise. (method_get_annotationdefault): Likewise.

	* src/vmcore/method.h (method_get_annotations): Removed
	ENABLE_ANNOTATIONS. (method_get_parameterannotations): Likewise.
	(method_get_annotationdefault): Likewise.

	* src/native/vm/reflect.c (reflect_constructor_new): Always call
	method-annotations functions. (reflect_field_new): Likewise.
	(reflect_method_new): Likewise.
	[dd8e95b3b98a]

2007-08-16  michi  <michi>

	* configure.ac, src/cacaoh/dummy.c, src/cacaoh/headers.c,
	src/cacaoh/headers.h, src/native/jni.c, src/native/jni.h,
	src/native/localref.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h,
	src/native/vm/sun_misc_Unsafe.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/vm/access.c, src/vm/builtin.c, src/vm/builtin.h,
	src/vm/exceptions.c, src/vm/global.h, src/vm/jit/Makefile.am,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/signal.c, src/vm/signallocal.h,
	src/vm/string.c, src/vm/stringlocal.h, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/field.c,
	src/vmcore/field.h, src/vmcore/linker.c, src/vmcore/method.c,
	src/vmcore/method.h:
	Merged revisions 8299-8320 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8300 | michi | 2007-08-13 12:23:20 +0200 (Mon, 13 Aug
	2007) | 2 lines

	 * src/native/localref.c (localref_table_remove): Fixed assertion.
	........ r8301 | twisti | 2007-08-13 15:34:12 +0200 (Mon, 13 Aug
	2007) | 5 lines

	 * configure.ac (dl): Check for dl before all other stuff.
	(AC_CHECK_ENABLE_LIBJVM): Added.

	 * m4/libjvm.m4: New file. ........ r8303 | twisti | 2007-08-13
	21:01:52 +0200 (Mon, 13 Aug 2007) | 2 lines

	 * src/vm/exceptions.c (exceptions_print_exception): Fixed typo.
	........ r8304 | pm | 2007-08-14 21:57:20 +0200 (Tue, 14 Aug 2007)
	| 9 lines

	 * src/threads/none/threads.h [!defined(NDEBUG)]
	(_no_threads_tracejavacallindent, _no_threads_tracejavacallcount,
	TRACEJAVACALLINDENT, TRACEJAVACALLCOUNT): added.
	  * src/threads/native/threads.h [!defined(NDEBUG)] (threadinfo): Added
	tracejavacallindent, tracejavacallcount members.
	(TRACEJAVACALLINDENT, TRACEJAVACALLCOUNT): added.
	  * src/threads/native/threads.c: Likewise.
	  * src/vm/jit/trace.h New file.
	  * src/vm/jit/trace.c: Likewise.
	  * src/vm/jit/Makefile.am (libjit_la_SOURCES): added trace.h and
	trace.c.
	  * src/vm/jit/s390/emit.c (emit_verbosecall_enter): adpated to use
	trace_java_call_enter, (emit_verbosecall_exit): adapted to use
	trace_java_call_exit. ........ r8305 | panzi | 2007-08-15 15:49:26
	+0200 (Wed, 15 Aug 2007) | 34 lines

	 * src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredAnnotations): Use LLNI_* macro.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue): Use LLNI_* macros.
	(Java_java_lang_reflect_Method_declaredAnnotations): Use LLNI_*
	macros. (Java_java_lang_reflect_Method_getParameterAnnotations):
	Use LLNI_* macros.

	 * src/native/vm/gnu/java_lang_reflect_Field.c
	(Java_java_lang_reflect_Field_declaredAnnotations): Use LLNI_*
	macros.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(Java_java_lang_reflect_Constructor_declaredAnnotations): Use LLNI_*
	macros.
	(Java_java_lang_reflect_Constructor_getParameterAnnotations): Use
	LLNI_* macros.

	 * src/native/vm/sun/jvm.c (native/llni.h): Added include.
	(JVM_GetFieldAnnotations): Use LLNI_* macros.
	(JVM_GetMethodAnnotations): Use LLNI_* macros.
	(JVM_GetMethodDefaultAnnotationValue): Use LLNI_* macros.
	(JVM_GetMethodParameterAnnotations): Use LLNI_* macros.
	(JVM_GetClassConstantPool): Use LLNI_* macros.

	 * src/native/vm/reflect.c (reflect_constructor_new): Forgot to
	set annotations and parameterAnnotations attributes for GNU
	Classpath. (reflect_get_declaredannotatios): Use LLNI_* macros.
	(reflect_get_parameterannotations): Use LLNI_* macros.

	 * src/native/vm/reflect.h (reflect_get_declaredannotatios): Now
	the caller has to set the declaredAnnotations attribute of the
	according object itself, because the LLNI_* macros can't get the
	address of an field. ........ r8306 | twisti | 2007-08-15 16:47:11
	+0200 (Wed, 15 Aug 2007) | 5 lines

	 * src/vm/signal.c (signal_init): Cast to functionptr to fix
	warnings. (signal_register_signal): Changed signature.

	 * src/vm/signallocal.h (signal_register_signal): Likewise.
	........ r8307 | twisti | 2007-08-15 17:20:47 +0200 (Wed, 15 Aug
	2007) | 7 lines

	 * src/vmcore/class.c (class_get_interfaces): New function.
	  * src/vmcore/class.h (class_get_interfaces): Likewise.

	 * src/native/vm/java_lang_Class.c (getSuperclass): Cast return
	value. (getInterfaces): Use class_get_interfaces.
	  * src/native/vm/sun/jvm.c (JVM_GetClassInterfaces): Likewise. ........
	r8308 | pm | 2007-08-15 18:03:28 +0200 (Wed, 15 Aug 2007) | 2 lines

	 * src/native/vm/sun/jvm.c (JVM_Available) [FIONREAD]: Argument to
	ioctl is int *. ........ r8309 | twisti | 2007-08-15 18:42:52
	+0200 (Wed, 15 Aug 2007) | 10 lines

	 * src/vmcore/class.c (vm/builtin.h): Added.
	(class_get_declaredclasses): New function.

	 * src/vmcore/class.h (class_get_declaredclasses): Likewise.

	 * src/native/vm/java_lang_Class.c (getDeclaredClasses): Use
	class_get_declaredclasses.

	 * src/native/vm/sun/jvm.c (JVM_GetDeclaredClasses): Likewise.
	........ r8310 | twisti | 2007-08-15 18:49:03 +0200 (Wed, 15 Aug
	2007) | 3 lines

	 * src/native/vm/sun/jvm.c (JVM_GetClassInterfaces): Bugfix, forgot
	to set c. ........ r8311 | panzi | 2007-08-15 19:03:40 +0200
	(Wed, 15 Aug 2007) | 20 lines

	 * src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include.

	 * src/native/vm/gnu/sun_reflect_ConstantPool.c
	(vm/stringlocal.h): Added include.
	(Java_sun_reflect_ConstantPool_getClassAtIfLoaded0): Removed wrong
	call of the macro TRACEJVMCALLS.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue): Added proper casts
	so gcc don't give me warnings.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	[ENABLE_ANNOTATIONS] (vm/exceptions.h): Added include.

	 * src/native/vm/sun/jvm.c (JVM_ConstantPoolGetStringAt):
	Corrected cast. (JVM_ConstantPoolGetUTF8At): Corrected cast.
	(JVM_GetArrayElement): Using primitive_box_* functions. ........
	r8312 | twisti | 2007-08-16 00:10:22 +0200 (Thu, 16 Aug 2007) | 2
	lines

	 * src/native/jni.c (native/localref.h): Added. ........ r8313 |
	twisti | 2007-08-16 00:11:35 +0200 (Thu, 16 Aug 2007) | 4 lines

	 * src/native/localref.c: Added Id keyword.
	  * src/native/localref.h: Likewise.
	  * src/native/llni.h: Likewise. ........ r8314 | twisti | 2007-08-16
	00:18:44 +0200 (Thu, 16 Aug 2007) | 2 lines

	 * src/vm/jit/codegen-common.c (native/localref.h): Added. ........
	r8315 | panzi | 2007-08-16 00:49:20 +0200 (Thu, 16 Aug 2007) | 28
	lines

	 * src/native/vm/reflect.c (reflect_constructor_new): Allocation
	of the java_bytearray is now done in the method_get_* functions.
	(reflect_field_new): Allocation of the java_bytearray is now done in
	the field_get_* functions. (reflect_method_new): Allocation of
	the java_bytearray is now done in the method_get_* functions.
	Added use of LLNI_field_* macros.

	 * src/vmcore/method.c (method_get_annotations): Do allocation of
	the java_bytearray here. (method_get_parameterannotations): Do
	allocation of the java_bytearray here.
	(method_get_annotationdefault): Do allocation of the java_bytearray
	here.

	 * src/vmcore/method.h (method_get_annotations): This function
	now returns java_bytearray*. (method_get_parameterannotations):
	This function now returns java_bytearray*.
	(method_get_annotationdefault): This function now returns
	java_bytearray*.

	 * src/vmcore/field.c (vm/builtin.h): Added include.
	(field_get_annotations): Do allocation of the java_bytearray here.

	 * src/vmcore/field.h (field_get_annotations): This function now
	returns java_bytearray*.

	 * src/cacaoh/dummy.c (builtin_newarray_byte): Added. ........
	r8316 | ajordan | 2007-08-16 01:32:57 +0200 (Thu, 16 Aug 2007) | 6
	lines

	 * src/vm/jit/sparc64/codegen.h: Added M_SAVE_REG and 13-bit
	overflow checking.

	 * src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed stack
	increasing for large stackframe sizes. (check_13bit_imm): Added
	for overflow checking. ........ r8317 | pm | 2007-08-16 08:53:26
	+0200 (Thu, 16 Aug 2007) | 2 lines

	 * src/vm/jit/trace (_array_load_param) [SIZEOF_VOID_P == 8]:
	Bugfix, forgotten obsolete stack_offset. ........ r8318 | michi |
	2007-08-16 12:05:34 +0200 (Thu, 16 Aug 2007) | 70 lines

	 * src/native/llni.h: Added macros for array handling.

	 * src/vm/global.h: Added typedefs for array handles. Renamed array
	types.

	 Use LLNI macros for array access and adapted to above changes:
	  * src/vm/access.c
	  * src/vm/jit/arm/emit.c
	  * src/vm/jit/arm/codegen.c
	  * src/vm/jit/powerpc/emit.c
	  * src/vm/jit/powerpc/codegen.c
	  * src/vm/jit/sparc64/emit.c
	  * src/vm/jit/sparc64/codegen.c
	  * src/vm/jit/alpha/emit.c
	  * src/vm/jit/alpha/codegen.c
	  * src/vm/jit/s390/emit.c
	  * src/vm/jit/s390/codegen.c
	  * src/vm/jit/mips/emit.c
	  * src/vm/jit/mips/codegen.c
	  * src/vm/jit/m68k/emit.c
	  * src/vm/jit/m68k/codegen.c
	  * src/vm/jit/powerpc64/emit.c
	  * src/vm/jit/powerpc64/codegen.c
	  * src/vm/jit/i386/emit.c
	  * src/vm/jit/i386/codegen.c
	  * src/vm/jit/x86_64/emit.c
	  * src/vm/jit/x86_64/codegen.c
	  * src/vm/jit/stacktrace.c
	  * src/vm/jit/stacktrace.h
	  * src/vm/builtin.c
	  * src/vm/string.c
	  * src/vm/builtin.h
	  * src/vm/exceptions.c
	  * src/vm/vm.c
	  * src/vm/stringlocal.h
	  * src/vm/vm.h
	  * src/native/jni.c
	  * src/native/vm/java_lang_ClassLoader.c
	  * src/native/vm/java_lang_reflect_Constructor.h
	  * src/native/vm/java_lang_ClassLoader.h
	  * src/native/vm/java_lang_Class.c
	  * src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c
	  * src/native/vm/gnu/java_security_VMAccessController.c
	  * src/native/vm/gnu/java_lang_VMClassLoader.c
	  * src/native/vm/gnu/java_lang_management_VMManagementFactory.c
	  * src/native/vm/gnu/java_lang_VMClass.c
	  * src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c
	  * src/native/vm/gnu/sun_reflect_ConstantPool.c
	  * src/native/vm/gnu/java_lang_reflect_Method.c
	  * src/native/vm/gnu/gnu_classpath_VMStackWalker.c
	  * src/native/vm/gnu/java_lang_VMSystem.c
	  * src/native/vm/gnu/java_lang_reflect_Constructor.c
	  * src/native/vm/gnu/java_lang_VMThrowable.c
	  * src/native/vm/java_lang_Class.h
	  * src/native/vm/sun_misc_Unsafe.c
	  * src/native/vm/sun/jvm.c
	  * src/native/vm/reflect.c
	  * src/native/vm/java_lang_reflect_Method.c
	  * src/native/vm/reflect.h
	  * src/native/vm/java_lang_reflect_Constructor.c
	  * src/native/vm/java_lang_reflect_Method.h
	  * src/native/jni.h
	  * src/vmcore/class.c
	  * src/vmcore/class.h
	  * src/vmcore/method.c
	  * src/vmcore/method.h
	  * src/vmcore/linker.c
	  * src/cacaoh/headers.h
	  * src/cacaoh/dummy.c
	  * src/cacaoh/headers.c ........ r8319 | michi | 2007-08-16 12:43:43
	+0200 (Thu, 16 Aug 2007) | 5 lines

	 * src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredFields): Fixed postincrement of
	array index. (_Jv_java_lang_Class_getDeclaredMethods): Likewise.
	(_Jv_java_lang_Class_getDeclaredConstructors): Likewise. ........
	r8320 | michi | 2007-08-16 13:35:14 +0200 (Thu, 16 Aug 2007) | 4
	lines

	 * src/vm/jit/allocator/simplereg.c (simplereg_free): Index into
	memcopycount is divided by SIZE_OF_STACKSLOT now.
	(simplereg_allocate_temporaries): Likewise. ........
	[e7e3dbee216f]

	* src/vm/jit/allocator/simplereg.c:
	* src/vm/jit/allocator/simplereg.c (simplereg_free): Index into
	memcopycount is divided by SIZE_OF_STACKSLOT now.
	(simplereg_allocate_temporaries): Likewise.
	[f7cbb35f5009]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredFields): Fixed postincrement of
	array index. (_Jv_java_lang_Class_getDeclaredMethods): Likewise.
	(_Jv_java_lang_Class_getDeclaredConstructors): Likewise.
	[5319d51e8c06]

	* src/cacaoh/dummy.c, src/cacaoh/headers.c, src/cacaoh/headers.h,
	src/native/jni.c, src/native/jni.h, src/native/llni.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/vm/access.c, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/exceptions.c, src/vm/global.h,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/string.c, src/vm/stringlocal.h, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c,
	src/vmcore/method.c, src/vmcore/method.h:
	* src/native/llni.h: Added macros for array handling.

	* src/vm/global.h: Added typedefs for array handles. Renamed array
	types.

	Use LLNI macros for array access and adapted to above changes:
	* src/vm/access.c
	* src/vm/jit/arm/emit.c
	* src/vm/jit/arm/codegen.c
	* src/vm/jit/powerpc/emit.c
	* src/vm/jit/powerpc/codegen.c
	* src/vm/jit/sparc64/emit.c
	* src/vm/jit/sparc64/codegen.c
	* src/vm/jit/alpha/emit.c
	* src/vm/jit/alpha/codegen.c
	* src/vm/jit/s390/emit.c
	* src/vm/jit/s390/codegen.c
	* src/vm/jit/mips/emit.c
	* src/vm/jit/mips/codegen.c
	* src/vm/jit/m68k/emit.c
	* src/vm/jit/m68k/codegen.c
	* src/vm/jit/powerpc64/emit.c
	* src/vm/jit/powerpc64/codegen.c
	* src/vm/jit/i386/emit.c
	* src/vm/jit/i386/codegen.c
	* src/vm/jit/x86_64/emit.c
	* src/vm/jit/x86_64/codegen.c
	* src/vm/jit/stacktrace.c
	* src/vm/jit/stacktrace.h
	* src/vm/builtin.c
	* src/vm/string.c
	* src/vm/builtin.h
	* src/vm/exceptions.c
	* src/vm/vm.c
	* src/vm/stringlocal.h
	* src/vm/vm.h
	* src/native/jni.c
	* src/native/vm/java_lang_ClassLoader.c
	* src/native/vm/java_lang_reflect_Constructor.h
	* src/native/vm/java_lang_ClassLoader.h
	* src/native/vm/java_lang_Class.c
	* src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c
	* src/native/vm/gnu/java_security_VMAccessController.c
	* src/native/vm/gnu/java_lang_VMClassLoader.c
	* src/native/vm/gnu/java_lang_management_VMManagementFactory.c
	* src/native/vm/gnu/java_lang_VMClass.c
	* src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c
	* src/native/vm/gnu/sun_reflect_ConstantPool.c
	* src/native/vm/gnu/java_lang_reflect_Method.c
	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c
	* src/native/vm/gnu/java_lang_VMSystem.c
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	* src/native/vm/gnu/java_lang_VMThrowable.c
	* src/native/vm/java_lang_Class.h
	* src/native/vm/sun_misc_Unsafe.c
	* src/native/vm/sun/jvm.c
	* src/native/vm/reflect.c
	* src/native/vm/java_lang_reflect_Method.c
	* src/native/vm/reflect.h
	* src/native/vm/java_lang_reflect_Constructor.c
	* src/native/vm/java_lang_reflect_Method.h
	* src/native/jni.h
	* src/vmcore/class.c
	* src/vmcore/class.h
	* src/vmcore/method.c
	* src/vmcore/method.h
	* src/vmcore/linker.c
	* src/cacaoh/headers.h
	* src/cacaoh/dummy.c
	* src/cacaoh/headers.c
	[63b0fd7cb5fe]

2007-08-16  pm  <pm>

	* src/vm/jit/trace.c:
	* src/vm/jit/trace (_array_load_param) [SIZEOF_VOID_P == 8]: Bugfix,
	forgotten obsolete stack_offset.
	[8cc3e076fe29]

2007-08-15  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h:
	* src/vm/jit/sparc64/codegen.h: Added M_SAVE_REG and 13-bit overflow
	checking.

	* src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed stack
	increasing for large stackframe sizes. (check_13bit_imm): Added for
	overflow checking.
	[13ba271dab74]

2007-08-15  panzi  <panzi>

	* src/cacaoh/dummy.c, src/native/vm/reflect.c, src/vmcore/field.c,
	src/vmcore/field.h, src/vmcore/method.c, src/vmcore/method.h:
	* src/native/vm/reflect.c (reflect_constructor_new): Allocation of
	the java_bytearray is now done in the method_get_* functions.
	(reflect_field_new): Allocation of the java_bytearray is now done in
	the field_get_* functions. (reflect_method_new): Allocation of the
	java_bytearray is now done in the method_get_* functions. Added use
	of LLNI_field_* macros.

	* src/vmcore/method.c (method_get_annotations): Do allocation of the
	java_bytearray here. (method_get_parameterannotations): Do
	allocation of the java_bytearray here.
	(method_get_annotationdefault): Do allocation of the java_bytearray
	here.

	* src/vmcore/method.h (method_get_annotations): This function now
	returns java_bytearray*. (method_get_parameterannotations): This
	function now returns java_bytearray*.
	(method_get_annotationdefault): This function now returns
	java_bytearray*.

	* src/vmcore/field.c (vm/builtin.h): Added include.
	(field_get_annotations): Do allocation of the java_bytearray here.

	* src/vmcore/field.h (field_get_annotations): This function now
	returns java_bytearray*.

	* src/cacaoh/dummy.c (builtin_newarray_byte): Added.
	[3b41bdd55de9]

2007-08-15  twisti  <twisti>

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (native/localref.h): Added.
	[0ca38e055cda]

	* src/native/llni.h, src/native/localref.c, src/native/localref.h:
	* src/native/localref.c: Added Id keyword.
	* src/native/localref.h: Likewise.
	* src/native/llni.h: Likewise.
	[e3fab8d4159d]

	* src/native/jni.c:
	* src/native/jni.c (native/localref.h): Added.
	[b605fe201191]

2007-08-15  panzi  <panzi>

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c:
	* src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include.

	* src/native/vm/gnu/sun_reflect_ConstantPool.c (vm/stringlocal.h):
	Added include. (Java_sun_reflect_ConstantPool_getClassAtIfLoaded0):
	Removed wrong call of the macro TRACEJVMCALLS.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue): Added proper casts
	so gcc don't give me warnings.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	[ENABLE_ANNOTATIONS] (vm/exceptions.h): Added include.

	* src/native/vm/sun/jvm.c (JVM_ConstantPoolGetStringAt): Corrected
	cast. (JVM_ConstantPoolGetUTF8At): Corrected cast.
	(JVM_GetArrayElement): Using primitive_box_* functions.
	[8cfa30fdde8a]

2007-08-15  twisti  <twisti>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GetClassInterfaces): Bugfix, forgot
	to set c.
	[aed11214ae7d]

	* src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (vm/builtin.h): Added.
	(class_get_declaredclasses): New function.

	* src/vmcore/class.h (class_get_declaredclasses): Likewise.

	* src/native/vm/java_lang_Class.c (getDeclaredClasses): Use
	class_get_declaredclasses.

	* src/native/vm/sun/jvm.c (JVM_GetDeclaredClasses): Likewise.
	[3d3963d5c803]

2007-08-15  pm  <pm>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_Available) [FIONREAD]: Argument to
	ioctl is int *.
	[235e3ac93356]

2007-08-15  twisti  <twisti>

	* src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_get_interfaces): New function.
	* src/vmcore/class.h (class_get_interfaces): Likewise.

	* src/native/vm/java_lang_Class.c (getSuperclass): Cast return
	value. (getInterfaces): Use class_get_interfaces.
	* src/native/vm/sun/jvm.c (JVM_GetClassInterfaces): Likewise.
	[94c9ff4847c9]

	* src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/signal.c (signal_init): Cast to functionptr to fix
	warnings. (signal_register_signal): Changed signature.

	* src/vm/signallocal.h (signal_register_signal): Likewise.
	[17e72f4ecf1e]

2007-08-15  panzi  <panzi>

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getDeclaredAnnotations): Use LLNI_* macro.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(Java_java_lang_reflect_Method_getDefaultValue): Use LLNI_* macros.
	(Java_java_lang_reflect_Method_declaredAnnotations): Use LLNI_*
	macros. (Java_java_lang_reflect_Method_getParameterAnnotations): Use
	LLNI_* macros.

	* src/native/vm/gnu/java_lang_reflect_Field.c
	(Java_java_lang_reflect_Field_declaredAnnotations): Use LLNI_*
	macros.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(Java_java_lang_reflect_Constructor_declaredAnnotations): Use LLNI_*
	macros.
	(Java_java_lang_reflect_Constructor_getParameterAnnotations): Use
	LLNI_* macros.

	* src/native/vm/sun/jvm.c (native/llni.h): Added include.
	(JVM_GetFieldAnnotations): Use LLNI_* macros.
	(JVM_GetMethodAnnotations): Use LLNI_* macros.
	(JVM_GetMethodDefaultAnnotationValue): Use LLNI_* macros.
	(JVM_GetMethodParameterAnnotations): Use LLNI_* macros.
	(JVM_GetClassConstantPool): Use LLNI_* macros.

	* src/native/vm/reflect.c (reflect_constructor_new): Forgot to set
	annotations and parameterAnnotations attributes for GNU Classpath.
	(reflect_get_declaredannotatios): Use LLNI_* macros.
	(reflect_get_parameterannotations): Use LLNI_* macros.

	* src/native/vm/reflect.h (reflect_get_declaredannotatios): Now the
	caller has to set the declaredAnnotations attribute of the according
	object itself, because the LLNI_* macros can't get the address of an
	field.
	[3b8fc6b76377]

2007-08-14  pm  <pm>

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/threads.h, src/vm/jit/Makefile.am,
	src/vm/jit/s390/emit.c, src/vm/jit/trace.c, src/vm/jit/trace.h:
	* src/threads/none/threads.h [!defined(NDEBUG)]
	(_no_threads_tracejavacallindent, _no_threads_tracejavacallcount,
	TRACEJAVACALLINDENT, TRACEJAVACALLCOUNT): added.
	* src/threads/native/threads.h [!defined(NDEBUG)] (threadinfo): Added
	tracejavacallindent, tracejavacallcount members.
	(TRACEJAVACALLINDENT, TRACEJAVACALLCOUNT): added.
	* src/threads/native/threads.c: Likewise.
	* src/vm/jit/trace.h New file.
	* src/vm/jit/trace.c: Likewise.
	* src/vm/jit/Makefile.am (libjit_la_SOURCES): added trace.h and
	trace.c.
	* src/vm/jit/s390/emit.c (emit_verbosecall_enter): adpated to use
	trace_java_call_enter, (emit_verbosecall_exit): adapted to use
	trace_java_call_exit.
	[e821a274bf95]

2007-08-13  twisti  <twisti>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_print_exception): Fixed typo.
	[bbb18ba6a16a]

2007-08-13  michi  <michi>

	* configure.ac, src/mm/cacao-gc/compact.c, src/mm/cacao-gc/copy.c,
	src/mm/cacao-gc/final.c, src/mm/cacao-gc/final.h, src/mm/cacao-
	gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/heap.h, src/mm/cacao-gc/mark.c, src/mm/cacao-gc/region.c, src/mm
	/cacao-gc/region.h, src/mm/cacao-gc/rootset.c, src/mm/cacao-
	gc/rootset.h, src/mm/gc-common.h:
	* src/mm/gc-common.h,
	* src/mm/cacao-gc/gc.h,
	* src/mm/cacao-gc/final.h,
	* src/mm/cacao-gc/rootset.c,
	* src/mm/cacao-gc/rootset.h,
	* src/mm/cacao-gc/copy.c,
	* src/mm/cacao-gc/heap.c,
	* src/mm/cacao-gc/heap.h,
	* src/mm/cacao-gc/region.c,
	* src/mm/cacao-gc/compact.c,
	* src/mm/cacao-gc/region.h,
	* src/mm/cacao-gc/gc.c,
	* src/mm/cacao-gc/final.c,
	* src/mm/cacao-gc/mark.c: Adapted to changes on trunk.
	[18edffcb5990]

2007-08-13  twisti  <twisti>

	* configure.ac, m4/libjvm.m4:
	* configure.ac (dl): Check for dl before all other stuff.
	(AC_CHECK_ENABLE_LIBJVM): Added.

	* m4/libjvm.m4: New file.
	[cdad3888d438]

2007-08-13  michi  <michi>

	* src/native/localref.c:
	* src/native/localref.c (localref_table_remove): Fixed assertion.
	[25f64eca9e36]

	* NEWS, configure.ac, m4/ac_prog_javac.m4, m4/classpath.m4,
	src/cacaoh/dummy.c, src/cacaoh/headers.c, src/cacaoh/headers.h,
	src/lib/Makefile.am, src/mm/memory.c, src/native/Makefile.am,
	src/native/include/Makefile.am, src/native/jni.c, src/native/jni.h,
	src/native/localref.c, src/native/native.c, src/native/native.h,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/sun_misc_Unsafe.c,
	src/threads/critical.c, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/threads/threads-common.c, src/toolbox/avl.c, src/toolbox/avl.h,
	src/toolbox/hashtable.c, src/toolbox/hashtable.h,
	src/toolbox/list.h, src/toolbox/util.c, src/vm/Makefile.am,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/finalizer.c, src/vm/global.h,
	src/vm/initialize.c, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/Makefile.am, src/vm/jit/alpha/arch.h,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/Makefile.am, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/dseg.c, src/vm/jit
	/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/i386/Makefile.am, src/vm/jit/i386/arch.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/Makefile.am, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/Makefile.am, src/vm/jit/mips/arch.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/Makefile.am, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	asm.h, src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/replace.c, src/vm/jit/replace.h,
	src/vm/jit/s390/Makefile.am, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/sparc64/arch.h,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/sparc64/solaris/md-os.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/tools/Makefile.am, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/verify/typecheck-stackbased.c, src/vm/jit/verify
	/typecheck-typeinferer.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/properties.c,
	src/vm/properties.h, src/vm/resolve.c, src/vm/signal.c,
	src/vm/signallocal.h, src/vm/string.c, src/vm/stringlocal.h,
	src/vm/vm.c, src/vm/vm.h, src/vmcore/Makefile.am,
	src/vmcore/annotation.c, src/vmcore/annotation.h,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/descriptor.c, src/vmcore/field.c, src/vmcore/field.h,
	src/vmcore/linker.c, src/vmcore/linker.h, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/primitive.c,
	src/vmcore/primitive.h, src/vmcore/suck.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h, tests/rtIn/at/dms/kjc/Main, tests/rtMissedIn0:
	Merged revisions 8245-8298 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8246 | michi | 2007-07-31 13:36:03 +0200 (Tue, 31 Jul
	2007) | 2 lines

	 * src/vm/jit/sparc64/md.c: Fixed file header. ........ r8247 |
	michi | 2007-07-31 14:06:44 +0200 (Tue, 31 Jul 2007) | 10 lines

	 * src/vm/jit/arm/arch.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/alpha/arch.h,
	src/vm/jit/s390/arch.h, src/vm/jit/mips/arch.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/i386/arch.h,
	src/vm/jit/x86_64/arch.h (REPLACEMENT_STUB_SIZE): Removed obsolete
	define.

	 * src/vm/jit/powerpc/md.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/alpha/md.c, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/i386/md.c,
	src/vm/jit/x86_64/md.c (md_patch_replacement_point): We have to
	use trap instructions here. ........ r8248 | twisti | 2007-07-31
	14:47:11 +0200 (Tue, 31 Jul 2007) | 6 lines

	 * configure.ac: Only check AC_PROG_JAVAC and AC_PROG_JAR for
	CLDC-1.1 and GNU.

	 * m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Changed
	default value for different configurations.. ........ r8249 |
	panzi | 2007-07-31 14:59:03 +0200 (Tue, 31 Jul 2007) | 257 lines

	 * src/lib/gnu/java/lang/reflect/Method.java (annotations):
	Added. (parameterAnnotations): Added. (annotationDefault):
	Added.

	 * src/lib/gnu/java/lang/reflect/Field.java (annotations): Added.

	 * src/lib/gnu/sun/reflect: New directory.
	  * src/lib/gnu/sun/reflect/generics: New directory.
	  * src/lib/gnu/sun/reflect/generics/parser: New directory.
	  * src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java:
	New file.

	 * src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java:
	New file. This class parses type signatures and returns the acording
	type as a java.lang.Class instance.

	 * src/lib/gnu/sun/reflect/ConstantPool.java [WITH_CLASSPATH_GNU]:
	New file.

	 * src/lib/gnu/sun/reflect/annotation: New directory.
	  * src/lib/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionPr
	oxy.java [WITH_CLASSPATH_GNU]: Copied file from OpenJDK.

	 *
	src/lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK.

	 * src/lib/gnu/sun/reflect/annotation/AnnotationParser.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK and changed a bit so
	it can be used with GNU Classpath. [WITH_CLASSPATH_GNU]
	(parseAnnotationsIntoArray): Added for convenience.
	[WITH_CLASSPATH_GNU] (parseAnnotationDefault): Added for
	convenience.

	 * src/lib/gnu/sun/reflect/annotation/AnnotationType.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK and changed a bit so
	it can be used with GNU Classpath. [WITH_CLASSPATH_GNU]
	(annotationTypes): Added to emulate
	sun.misc.SharedSecrets.getJavaLangAccess().getAnnotationType() and
	sun.misc.SharedSecrets.getJavaLangAccess().setAnnotationType().

	 * src/lib/Makefile.am [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]:
	Added classes needed by annotations support.

	 * src/native/vm/nativevm.h [ENABLE_ANNOTATIONS]
	(_Jv_sun_reflect_ConstantPool_init): Added.

	 * src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (vmcore/annotation.h): Include added.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Include added.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(_Jv_java_lang_Class_getDeclaredAnnotations): Implemented.

	 * src/native/vm/gnu/java_lang_VMClass.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_VMClass_getDeclaredAnnotations): Implemented.

	 * src/native/vm/gnu/sun_reflect_ConstantPool.c
	[ENABLE_ANNOTATIONS]: Added implementation of
	sun.reflect.ConstantPool class. This is an copy of the according
	functions from src/native/vm/sun/jvm.c for I don't know how to
	unify it better (needs to be discussed).

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include.
	[ENABLE_ANNOTATIONS] (native/include/sun_reflect_ConstantPool.h):
	Added include. [ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getDefaultValue): Implemented.

	 * src/native/vm/gnu/Makefile.am [ENABLE_ANNOTATIONS]
	(SUN_REFLECT_SOURCES): Added sun_reflect_ConstantPool.c

	 * src/native/vm/java_lang_Class.h [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (_Jv_java_lang_Class_getDeclaredAnnotations):
	Added.

	 * src/native/vm/sun/jvm.c (assert.h): Added include.
	(native/include/java_lang_Integer.h): Added include.
	(native/include/java_lang_Long.h): Added include.
	(native/include/java_lang_Short.h): Added include.
	(native/include/java_lang_Byte.h): Added include.
	(native/include/java_lang_Character.h): Added include.
	(native/include/java_lang_Boolean.h): Added include.
	(native/include/java_lang_Float.h): Added include.
	(native/include/java_lang_Double.h): Added include.
	[ENABLE_ANNOTATIONS] (native/include/sun_reflect_ConstantPool.h):
	Added include. (JVM_GetDeclaringClass): Implemented.
	(JVM_GetClassAnnotations) [ENABLE_ANNOTATIONS]: Implemented.
	(JVM_GetFieldAnnotations): Implemented.
	(JVM_GetMethodAnnotations): Implemented.
	(JVM_GetMethodDefaultAnnotationValue): Implemented.
	(JVM_GetMethodParameterAnnotations): Implemented.
	[ENABLE_ANNOTATIONS] (JVM_GetClassConstantPool): Implemented.
	(JVM_ConstantPoolGetSize): Implemented.
	(JVM_ConstantPoolGetClassAt): Implemented.
	(JVM_ConstantPoolGetClassAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetMethodAt): Implemented.
	(JVM_ConstantPoolGetMethodAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetFieldAt): Implemented.
	(JVM_ConstantPoolGetFieldAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetIntAt): Implemented.
	(JVM_ConstantPoolGetLongAt): Implemented.
	(JVM_ConstantPoolGetFloatAt): Implemented.
	(JVM_ConstantPoolGetDoubleAt): Implemented.
	(JVM_ConstantPoolGetStringAt): Implemented.
	(JVM_ConstantPoolGetUTF8At): Implemented. (JVM_GetArrayElement):
	Quickly implemented (will be rewritten by twisti). I needed this
	function in a testcase and not directly for annotations support.

	 * src/native/vm/reflect.c [ENABLE_ANNOTATIONS] (mm/memmory.h):
	Added include. (reflect_constructor_new) [ENABLE_ANNOTATIONS]:
	Load annotations and parameter annotations. (reflect_field_new)
	[ENABLE_ANNOTATIONS]: Load annotations. (reflect_method_new)
	[ENABLE_ANNOTATIONS]: Load annotations, parameter annotations and
	annotation default value.

	 * src/native/vm/nativevm.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (_Jv_sun_reflect_ConstantPool_init): Added
	call.

	 * src/native/include/Makefile.am [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (JAVASE_HEADER_FILES): Added
	sun_reflect_ConstantPool.h

	 * src/vmcore/class.c [ENABLE_ANNOTATIONS]
	(class_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(class_sun_reflect_annotation_AnnotationParser): Added.
	(class_load_attributes) [ENABLE_ANNOTATIONS]: Load annotations.
	(class_free) [ENABLE_ANNOTATIONS]: Free annotations.

	 * src/vmcore/loader.c (loader_init) [ENABLE_ANNOTATIONS]: Load
	class_sun_reflect_ConstantPool. (loader_init) [ENABLE_ANNOTATIONS]
	[WITH_CLASSPATH_GNU]: Load
	class_sun_reflect_annotation_AnnotationParser.

	 * src/vmcore/annotation.c [!ENABLE_ANNOTATIONS]: Error: annotation
	support has to be enabled when compling this file. (assert.h):
	Added include. (toolbox/logging.h): Added include.
	(annotation_bytearray_new): Added. (annotation_bytearray_free):
	Added. (annotation_bytearrays_new): Added.
	(annotation_bytearrays_resize): Added.
	(annotation_bytearrays_insert): Added.
	(annotation_bytearrays_free): Added.
	(annotation_load_attribute_body): Added. Maybe this function should
	be called loader_load_attribute_body and located in
	vmcore/loader.c?
	(annotation_load_method_attribute_annotationdefault): Added. (anno
	tation_load_method_attribute_runtimevisibleparameterannotations):
	Added. (annotation_load_method_attribute_runtimeinvisibleparameter
	annotations): Added.
	(annotation_load_class_attribute_runtimevisibleannotations): Added.
	(annotation_load_class_attribute_runtimeinvisibleannotations):
	Added.
	(annotation_load_method_attribute_runtimevisibleannotations): Added.
	(annotation_load_method_attribute_runtimeinvisibleannotations):
	Added.
	(annotation_load_field_attribute_runtimevisibleannotations): Added.
	(annotation_load_field_attribute_runtimeinvisibleannotations):
	Added.

	 * src/vmcore/class.h [ENABLE_ANNOTATIONS]
	(runtimevisibleannotationscount): Removed. [ENABLE_ANNOTATIONS]
	(runtimevisibleannotations): Removed. [ENABLE_ANNOTATIONS]
	(annotations): Added. Bytearray of the unparsed annotations or
	NULL if none. [ENABLE_ANNOTATIONS] (method_annotations): Added.
	Array of bytearrays of method annotations. This Array is only as
	big as needed or NULL if there are no method annotations at all.
	[ENABLE_ANNOTATIONS] (method_parameterannotations): Added. Array of
	bytearrays of method parameter annotations. This Array is only as
	big as needed or NULL if there are no method parameter annotations
	at all. [ENABLE_ANNOTATIONS] (method_annotationdefaults): Added.
	Array of bytearrays of method annotation default values. This
	Array is only as big as needed or NULL if there are no method
	annotation default values at all. [ENABLE_ANNOTATIONS]
	(field_annotations): Added. Array of bytearrays of field
	annotations. This Array is only as big as needed or NULL if there
	are no field annotations at all. [ENABLE_ANNOTATIONS]
	(class_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	[WITH_CLASSPATH_GNU]
	(class_sun_reflect_annotation_AnnotationParser): Added.

	 * src/vmcore/annotation.h (annotation_bytearray_t): Added. Used
	to store unparsed (parameter-) annotations or unparsed annotation
	default values in. (annotation_bytearrays_t): Added. Array of
	bytearrays. (annotation_bytearray_new): Added.
	(annotation_bytearray_free): Added. (annotation_bytearrays_new):
	Added. (annotation_bytearrays_resize): Added.
	(annotation_bytearrays_insert): Added.
	(annotation_bytearrays_free): Added.
	(annotation_load_class_attribute_runtimeinvisibleannotations):
	Added.
	(annotation_load_method_attribute_runtimevisibleannotations): Added.
	(annotation_load_method_attribute_runtimeinvisibleannotations):
	Added.
	(annotation_load_field_attribute_runtimevisibleannotations): Added.
	(annotation_load_field_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_method_attribute_annotationdefault):
	Added. (annotation_load_method_attribute_runtimevisibleparameteran
	notations): Added. (annotation_load_method_attribute_runtimeinvi
	sibleparameterannotations): Added.

	 * src/vmcore/method.c (method_load) [ENABLE_ANNOTATIONS]: Load
	annotations, parameter annotations and annotation default values.
	[ENABLE_ANNOTATIONS] (method_get_annotations): Added.
	[ENABLE_ANNOTATIONS] (method_get_parameterannotations): Added.
	[ENABLE_ANNOTATIONS] (method_get_annotationdefault): Added.

	 * src/vmcore/method.h [ENABLE_ANNOTATIONS]
	(method_get_annotations): Added. [ENABLE_ANNOTATIONS]
	(method_get_parameterannotations): Added. [ENABLE_ANNOTATIONS]
	(method_get_annotationdefault): Added.

	 * src/vmcore/field.c (mm/memory.h): Added include.
	(vmcore/annotations.h): Added include. (field_load)
	[ENABLE_ANNOTATIONS]: Laod annotations. [ENABLE_ANNOTATIONS]
	(field_get_annotations): Added.

	 * src/vmcore/utf8.c [ENABLE_ANNOTATIONS]
	(utf_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeInvisibleAnnotations): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeVisibleParameterAnnotations): Added.
	[ENABLE_ANNOTATIONS] (utf_RuntimeInvisibleParameterAnnotations):
	Added. [ENABLE_ANNOTATIONS] (utf_AnnotationDefault): Added.
	[ENABLE_ANNOTATIONS] [WITH_CLASSPATH_GNU]
	(utf_sun_reflect_annotation_AnnotationParser): Added.

	 * src/vmcore/field.h [ENABLE_ANNOTATIONS]
	(field_get_annotations): Added.

	 * src/vmcore/Makefile.am [ENABLE_ANNOTATIONS]
	(ANNOTATION_SOURCES): Only compile annotations sources when
	annotations are enabled.

	 * src/vmcore/utf8.h [ENABLE_ANNOTATIONS]
	(utf_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeInvisibleAnnotations): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeVisibleParameterAnnotations): Added.
	[ENABLE_ANNOTATIONS] (utf_RuntimeInvisibleParameterAnnotations):
	Added. [ENABLE_ANNOTATIONS] (utf_AnnotationDefault): Added.
	[ENABLE_ANNOTATIONS] [WITH_CLASSPATH_GNU]
	(utf_sun_reflect_annotation_AnnotationParser): Added.

	 * configure.ac (ENABLE_ANNOTATIONS): Added configure option
	--enable-annotations. ........ r8250 | twisti | 2007-07-31
	15:16:43 +0200 (Tue, 31 Jul 2007) | 3 lines

	 * m4/annotations.m4: New file.
	  * configure.ac: Use AC_CHECK_ENABLE_ANNOTATIONS. ........ r8251 | pm
	| 2007-08-01 17:26:59 +0200 (Wed, 01 Aug 2007) | 9 lines

	 * jit/patcher.h: Added #error if included on s390.
	  * jit/patcher-common.h: Made declarations visible on s390.
	  * jit/s390/asmpart.S (asm_patcher_wrapper): removed.
	  * jit/s390/emit.c (emit_patcher_stubs): removed, (emit_patcher_traps):
	added.
	  * jit/s390/codegen.h (PATCHER_LONGBRANCHES_NOPS_SKIP,
	PATCHER_LONGBRANCHES_NOPS): removed, (PATCHER_CALL_SIZE,
	PATCHER_NOPS, PATCHER_NOPS_SKIP) adapted to patching via signals.
	  * jit/s390/codegen.c (codegen_emit, codegen_emit_stub_native): Adapted
	to paching via signals.
	  * jit/s390/md.c (md_signal_handler_sigill, md_signal_handler_sigsegv):
	added support for exceptions_new_hardware_exception returning NULL.
	  * jit/s390/patcher.c: Adapted to paching via signals. ........ r8252
	| twisti | 2007-08-02 00:47:17 +0200 (Thu, 02 Aug 2007) | 5 lines

	 * m4/ac_prog_javac.m4 (AC_PROG_JAVAC): Removed -1.5 from ecj.

	 * src/lib/Makefile.am (vm.zip): Added -source 1.5 -target 1.5.
	Thanks to Mark Wielaard. ........ r8253 | twisti | 2007-08-02
	16:46:00 +0200 (Thu, 02 Aug 2007) | 2 lines

	 * src/native/vm/sun/jvm.c (JVM_RaiseSignal): New function.
	........ r8254 | pm | 2007-08-03 20:43:30 +0200 (Fri, 03 Aug 2007)
	| 3 lines

	 * src/vm/jit/patcher-common.c (patcher_handler): Call
	LOCK_MONITOR_EXIT instead of LOCK_MONITOR_ENTER in double-patching
	handler code. ........ r8255 | michi | 2007-08-03 21:06:37 +0200
	(Fri, 03 Aug 2007) | 7 lines

	 * src/vm/jit/patcher-common.c (patcher_list_reset): Added.
	(patcher_add_patch_ref) [!NDEBUG]: Added sanity check.

	 * src/vm/jit/patcher-common.h (patcher_list_reset): Added.

	 * src/vm/jit/codegen-common.c (codegen_reset): Resets the patcher
	list. ........ r8256 | twisti | 2007-08-05 12:58:21 +0200 (Sun, 05
	Aug 2007) | 3 lines

	 * src/native/vm/sun/jvm.c (JVM_Available) [FIONREAD]: Use
	HotSpot-compatible code. ........ r8257 | twisti | 2007-08-05
	13:04:21 +0200 (Sun, 05 Aug 2007) | 4 lines

	 * src/vm/jit/patcher-common.c (stdint.h): Added.
	(patcher_list_free): Removed unused variable pr.
	(patcher_add_patch_ref): Fixed warning. ........ r8258 | edwin |
	2007-08-05 22:15:27 +0200 (Sun, 05 Aug 2007) | 2 lines

	 * src/vm/jit/replace.c (replace_new_sourceframe): Fixed
	documentation. ........ r8259 | edwin | 2007-08-05 22:41:25 +0200
	(Sun, 05 Aug 2007) | 3 lines

	 * src/vm/jit/replace.c (replace_read_executionstate): Improved
	comments. (replace_write_executionstate): Likewise. ........
	r8260 | michi | 2007-08-06 14:19:01 +0200 (Mon, 06 Aug 2007) | 13
	lines

	 * src/vm/jit/emit-common.c (emit_patcher_traps): Added.

	 * src/vm/jit/emit-common.h (emit_trap): Added prototype.

	 * src/vm/jit/alpha/emit.c (emit_patcher_traps): Removed (moved to
	emit-common). (emit_trap): Implemented.

	 * src/vm/jit/arm/emit.c: Likewise.

	 * src/vm/jit/powerpc/emit.c: Likewise.

	 * src/vm/jit/s390/emit.c: Likewise. ........ r8261 | michi |
	2007-08-06 14:42:31 +0200 (Mon, 06 Aug 2007) | 3 lines

	 * src/vm/jit/codegen-common.c (codegen_add_patch_ref): Removed
	obsolete code about PATCHER_LONGBRANCHES_NOPS. ........ r8262 |
	panzi | 2007-08-06 14:44:01 +0200 (Mon, 06 Aug 2007) | 97 lines

	 * src/lib/gnu/java/lang/reflect/Method.java
	(java.lang.annotation.Annotation): Added import. (java.util.Map):
	Added import. (sun.refelct.annotation.AnnotationParser): Added
	import. (declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).
	(getParameterAnnotations): Added method.

	 * src/lib/gnu/java/lang/reflect/Field.java
	(java.lang.annotation.Annotation): Added import. (java.util.Map):
	Added import. (sun.refelct.annotation.AnnotationParser): Added
	import. (declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).

	 * src/lib/gnu/java/lang/reflect/Constructor.java: Copied file
	from GNU Classpath. (java.lang.annotation.Annotation): Added
	import. (java.util.Map): Added import.
	(sun.refelct.annotation.AnnotationParser): Added import.
	(declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).
	(getParameterAnnotations): Added method.

	 *
	src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java:
	Removed.

	 * src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java:
	Removed. I figured out which class of GNU Classpath to use to
	replace this self written class.

	 * src/lib/gnu/sun/reflect/annotation/AnnotationParser.java:
	Added a few comments.
	(sun.reflect.generics.parser.SignatureParser): Removed import.
	(sun.reflect.generics.parser.SignatureFormatError): Removed import.
	(gnu.java.lang.reflect.FieldSignatureParser): Added import.
	(parseParameterAnnotations): Added method. (parseSig): Changed
	method so it uses GNU Classpaths FieldSignatureParser.

	 * src/lib/Makefile.am (VM_JAVA_FILES): Added
	$(top_srcdir)/src/lib/gnu/java/lang/reflect/Constructor.java
	(VM_CLASS_FILES): Added classes/java/lang/reflect/Constructor.class

	 * src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (_Jv_java_lang_Class_getDeclaredAnnotations):
	Cache methodinfo for
	sun.reflect.annotation.AnnotationParser.parseAnnotationsIntoArray.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	[ENABLE_ANNOTATIONS] (native/vm/reflect.h): Added include.
	[ENABLE_ANNOTATIONS] (declaredAnnotations): Added method.
	[ENABLE_ANNOTATIONS] (getParameterAnnotations): Added method.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getDefaultValue): Cache methodinfo
	for sun.reflect.annotation.AnnotationParser.parseDefaultValue.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_declaredAnnotations): Added.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getParameterAnnotations): Added.

	 * src/native/vm/gnu/java_lang_reflect_Field.c
	[ENABLE_ANNOTATIONS] (native/include/sun_reflect_ConstantPool.h):
	Added include. [ENABLE_ANNOTATIONS] (native/vm/reflect.h): Added
	include. [ENABLE_ANNOTATIONS] (declaredAnnotations): Added method.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Field_declaredAnnotations): Added.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include.
	[ENABLE_ANNOTATIONS] (native/include/sun_reflect_ConstantPool.h):
	Added include. [ENABLE_ANNOTATIONS] (native/vm/reflect.h): Added
	include. [ENABLE_ANNOTATIONS] (declaredAnnotations): Added method.
	[ENABLE_ANNOTATIONS] (getParameterAnnotations): Added method.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Constructor_declaredAnnotations): Added.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Constructor_getParameterAnnotations): Added.

	 * src/native/vm/reflect.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Added include.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(reflect_get_declaredannotatios): Added. [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (reflect_get_parameterannotations): Added.

	 * src/native/vm/reflect.h [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (reflect_get_declaredannotatios): Added.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(reflect_get_parameterannotations): Added.

	 * src/native/vm/sun/jvm.c (JVM_GetDeclaredClasses): Implemented
	(needed by a testcase of mine).

	 * src/vmcore/method.c (method_get_parametercount): Added. This
	function gets the parameter count of a method (not counting the
	this pointer of non-static methods). Returns -1 in case of an error.

	 * src/vmcore/method.h (method_get_parametercount): Added. ........
	r8263 | twisti | 2007-08-06 16:41:05 +0200 (Mon, 06 Aug 2007) | 3
	lines

	 * src/vm/jit/mips/arch.h (SUPPORT_PASS_FLOATARGS_IN_INTREGS):
	Removed duplicate define. ........ r8264 | twisti | 2007-08-06
	18:02:28 +0200 (Mon, 06 Aug 2007) | 33 lines

	 * src/vm/jit/patcher-common.h: Added __MIPS__ for new patcher
	functions.

	 * src/vm/jit/patcher.h: Added __MIPS__ to include-check.

	 * src/vm/jit/mips/emit.c (vm/jit/patcher-common.h): Added.
	(emit_patcher_stubs): Removed. (emit_trap): Added.

	 * src/vm/jit/mips/codegen.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (codegen_emit): Replaced
	codegen_add_patch_ref with patcher_add_patch_ref, and
	emit_patcher_stubs with emit_patcher_traps.
	(codegen_emit_stub_native): Likewise.

	 * src/vm/jit/mips/codegen.h (PATCHER_CALL_INSTRUCTIONS): Changed
	to 1. (PATCHER_CALL_SIZE): Changed to 1*4. (PATCHER_NOPS): Emit
	only one NOP.

	 * src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Check
	for exception, set PC in trap-case.

	 * src/vm/jit/mips/irix/md-os.c (md_signal_handler_sigsegv): Check
	for exception.

	 * src/vm/jit/mips/patcher.c: Renamed function to new patcher
	functions, and use patcher references. (vm/jit/patcher.h):
	Removed. (vm/jit/patcher-common.h): Added (patcher_wrapper):
	Removed.

	 * src/vm/jit/mips/asmpart.S (asm_patcher_wrapper): Removed.
	........ r8265 | twisti | 2007-08-06 18:10:42 +0200 (Mon, 06 Aug
	2007) | 3 lines

	 * src/vm/jit/emit-common.c: Set Id keyword.
	  * src/vm/jit/emit-common.h: Likewise. ........ r8266 | twisti |
	2007-08-07 10:26:38 +0200 (Tue, 07 Aug 2007) | 3 lines

	 * src/threads/threads-common.c (threads_preinit): Fixed compiler
	warning. ........ r8267 | twisti | 2007-08-07 13:07:48 +0200 (Tue,
	07 Aug 2007) | 4 lines

	 * src/vm/jit/i386/emit.c (emit_trap): New function.
	  * src/vm/jit/powerpc64/emit.c: Likewise.
	  * src/vm/jit/x86_64/emit.c: Likewise. ........ r8268 | twisti |
	2007-08-07 15:24:43 +0200 (Tue, 07 Aug 2007) | 34 lines

	 * src/vmcore/field.c (mm/memory.h): Added. (vm/global.h):
	Likewise. (field_load): Allocate value memory only for static and
	final fields.

	 * src/vmcore/field.h (fieldinfo): Made value a pointer.

	 * src/vmcore/loader.c (load_class_from_classbuffer): Allocate
	fieldinfo's on the C heap.

	 * src/native/jni.c: fieldinfo->value is now a pointer.
	  * src/native/vm/sun_misc_Unsafe.c: Likewise.
	  * src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.

	 * src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/patcher.c:
	Likewise. ........ r8269 | twisti | 2007-08-07 21:21:33 +0200
	(Tue, 07 Aug 2007) | 3 lines

	 * tests/rtMissedIn0: Removed.
	  * tests/rtIn: Likewise. ........ r8270 | twisti | 2007-08-08
	15:57:12 +0200 (Wed, 08 Aug 2007) | 49 lines

	 * src/vm/vm.c (vm_array_store_flt): Handle __POWERPC__ correctly.
	(vm_vmargs_from_valist): Removed. (vm_vmargs_from_jvalue):
	Likewise. (vm_vmargs_from_objectarray): Likewise.
	(vm_call_method_vmarg): Likewise. (vm_call_method_int_vmarg):
	Likewise. (vm_call_method_int_valist): Likewise.
	(vm_call_method_int_jvalue): Likewise.
	(vm_call_method_long_vmarg): Likewise.
	(vm_call_method_long_valist): Likewise.
	(vm_call_method_long_jvalue): Likewise.
	(vm_call_method_float_vmarg): Likewise.
	(vm_call_method_float_valist): Likewise.
	(vm_call_method_float_jvalue): Likewise.
	(vm_call_method_double_vmarg): Likewise.
	(vm_call_method_double_valist): Likewise.
	(vm_call_method_double_jvalue): Likewise. (vm_call_method_valist):
	Removed old implementation. (vm_call_method_jvalue): Likewise.

	 * src/vm/vm.h: Removed old prototypes.
	  * src/vm/jit/asmpart.h: Likewise.

	 * src/vm/exceptions.c (exceptions_handle_exception) [__POWERPC__]:
	Get monitor object correctly (talk to Michi because of ARM).

	 * src/native/jni.c (_Jv_jni_invokeNative): Removed old
	implementation.

	 * src/vm/jit/powerpc/linux/md-abi.c (md_param_alloc): Use 8-byte
	stackslots. (md_param_alloc_native): Implemented native ABI.

	 * src/vm/jit/powerpc/emit.c (emit_load): Merged TYPE_FLT and
	TYPE_DBL. (emit_store): Likewise
	  * src/vm/jit/powerpc/darwin/md-abi.c: Likewise.

	 * src/vm/jit/powerpc/arch.h (HAS_4BYTE_STACKSLOT): Removed.
	(ALIGN_LONGS_IN_MEMORY): Likewise. (ALIGN_DOUBLES_IN_MEMORY):
	Likewise.

	 * src/vm/jit/powerpc/codegen.c: Implemented 8-byte stackslots,
	always load and store float-values as double (PowerPC's internal
	register representation is the same).

	 * src/vm/jit/powerpc/asmpart.S (asm_vm_call_method): Use new
	argument array. (asm_handle_exception): Restore callee-saved
	registers from the correct location. ........ r8271 | twisti |
	2007-08-08 16:07:56 +0200 (Wed, 08 Aug 2007) | 7 lines

	 * src/vm/vm.h (vm_arg): Removed.

	 * src/vm/jit/tools/genoffsets.c (main): Removed sizevmarg,
	offvmargtype and offvmargdata.

	 * src/vm/jit/m68k/md.c (md_init): Removed some obsolete checks.
	........ r8272 | twisti | 2007-08-08 16:55:00 +0200 (Wed, 08 Aug
	2007) | 7 lines

	 * src/threads/threads-common.c (stdint.h): Added.
	(threads_thread_free): Also save and restore the thread state (this
	is required for CLDC1.1, but is generally a good idea).

	 * src/native/vm/java_lang_Thread.c (isAlive)
	[WITH_CLASSPATH_CLDC1_1]: Check for NULL. ........ r8273 |
	twisti | 2007-08-08 17:33:15 +0200 (Wed, 08 Aug 2007) | 8 lines

	 * src/vmcore/class.c (class_isanysubclass): Don't use
	ASM_GETCLASSVALUES_ATOMIC anymore, we will change that to use the
	class-renumbering lock.

	 * src/vm/builtin.c (builtin_canstore): Likewise.
	(builtin_canstore_onedim): Likewise.
	(builtin_canstore_onedim_class): Likewise. ........ r8274 | twisti
	| 2007-08-08 17:58:17 +0200 (Wed, 08 Aug 2007) | 45 lines

	 * src/vm/jit/tools: Removed.

	 * configure.ac (AC_CONFIG_FILES): Removed
	src/vm/jit/tools/Makefile.
	  * src/vm/jit/Makefile.am (DIST_SUBDIRS): Removed tools. (SUBDIRS):
	Likewise.

	 * src/threads/critical.c (stdint.h): Added. (vm/jit/asmpart.h):
	Removed. (critical_init): Don't call
	critical_register_asm_critical_sections.
	(critical_register_asm_critical_sections): Removed.

	 * src/vm/jit/asmpart.h (ASM_GETCLASSVALUES_ATOMIC): Removed.
	(asm_criticalsections): Likewise. (asm_getclassvalues_atomic):
	Likewise. (intrp_asm_getclassvalues_atomic): Likewise.

	 * src/vm/jit/alpha/Makefile.am, src/vm/jit/arm/Makefile.am,
	src/vm/jit/i386/Makefile.am, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/mips/Makefile.am, src/vm/jit/powerpc/Makefile.am,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/s390/Makefile.am,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/x86_64/Makefile.am
	(BUILT_SOURCES): Removed (CLEANFILES): Likewise. (offsets.h):
	Likewise.

	 * src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S
	(offsets.h): Removed. (asm_getclassvalues_atomic): Likewise.
	(asm_criticalsections): Likewise.

	 * src/vm/jit/powerpc/darwin/md-asm.h (asm_criticalsections):
	Removed. (asm_getclassvalues_atomic): Likewise. ........ r8275 |
	twisti | 2007-08-08 18:05:40 +0200 (Wed, 08 Aug 2007) | 12 lines

	 * src/vm/jit/alpha, src/vm/jit/arm, src/vm/jit/i386,
	src/vm/jit/m68k, src/vm/jit/mips, src/vm/jit/parisc,
	src/vm/jit/powerpc, src/vm/jit/powerpc64, src/vm/jit/s390,
	src/vm/jit/sparc64, src/vm/jit/x86_64 (svn:ignore): Removed
	offsets.h. ........ r8276 | twisti | 2007-08-08 18:09:14 +0200
	(Wed, 08 Aug 2007) | 2 lines

	 * src/vm/jit/arm/asmpart.S (offsets.h): Removed. ........ r8277
	| michi | 2007-08-08 18:42:11 +0200 (Wed, 08 Aug 2007) | 9 lines

	 * src/vmcore/linker.c (linker_compute_subclasses): Added attention
	notice about the locking mechanism.

	 * src/vmcore/class.c (class_isanysubclass): Uses
	linker_classrenumber_lock now.

	 * src/vm/builtin.c (builtin_canstore): Likewise.
	(builtin_canstore_onedim): Likewise.
	(builtin_canstore_onedim_class): Likewise. ........ r8278 | michi
	| 2007-08-08 19:10:18 +0200 (Wed, 08 Aug 2007) | 5 lines

	 * src/vm/jit/s390/emit.c (emit_replacement_stubs): Removed
	obsolete function.
	  * src/vm/jit/s390/codegen.c (codegen_emit): Do not create replacement
	stubs.
	  * src/vm/jit/replace.c (replace_me): No longer call
	asm_replacement_in.
	  * src/vm/jit/asmpart.h [ENABLE_REPLACEMENT]: Removed obsolete
	prototypes. ........ r8279 | michi | 2007-08-09 11:36:57 +0200
	(Thu, 09 Aug 2007) | 7 lines

	 * src/vm/jit/alpha/linux/md-os.c [ENABLE_REPLACEMENT]
	(md_replace_executionstate_read): Implemented.
	[ENABLE_REPLACEMENT] (md_replace_executionstate_write): Likewise.

	 * src/vm/jit/alpha/asmpart.S (asm_replacement_out): Removed.
	(asm_replacement_in): Likewise. ........ r8280 | twisti |
	2007-08-09 13:28:51 +0200 (Thu, 09 Aug 2007) | 2 lines

	 * NEWS: Added 0.99 release and some news. ........ r8281 |
	twisti | 2007-08-09 14:09:17 +0200 (Thu, 09 Aug 2007) | 2 lines

	 * NEWS: Added news. ........ r8282 | twisti | 2007-08-09
	14:18:47 +0200 (Thu, 09 Aug 2007) | 7 lines

	 * src/vm/signal.c (vm/types.h): Removed. (signal_init): Use
	signal_register_signal. (signal_register_signal): New function.

	 * src/vm/signallocal.h (vm/types.h): Removed.
	(signal_register_signal): New function. ........ r8283 | twisti |
	2007-08-09 17:10:05 +0200 (Thu, 09 Aug 2007) | 30 lines

	 * src/vm/exceptions.c (toolbox/logging.h): Removed.
	(vm/jit/disass.h): Likewise. (exceptions_new_hardware_exception):
	Likewise.

	 * src/vm/exceptions.h (exceptions_new_hardware_exception):
	Likewise.

	 * src/vm/signal.c (stdint.h): Added. (toolbox/logging.h):
	Likewise. (vm/jit/codegen-common.h): Likewise.
	(vm/jit/disass.h): Likewise. (vm/jit/patcher-common.h): Likewise.
	(signal_handle): New function.

	 * src/vm/signallocal.h (signal_handle): Likewise.

	 * src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc64/linux/md-
	os.c, src/vm/jit/s390/md.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/x86_64/linux/md-
	os.c: Use new signal_handle function. ........ r8284 | michi |
	2007-08-10 10:58:39 +0200 (Fri, 10 Aug 2007) | 26 lines

	 * src/native/llni.h: Added LLNI (low level native interface).

	 Use LLNI macros throughout the whole codebase:
	  * src/vm/jit/stacktrace.c
	  * src/vm/string.c
	  * src/vm/builtin.c
	  * src/vm/exceptions.c
	  * src/vm/vm.c
	  * src/native/jni.c
	  * src/native/vm/java_lang_ClassLoader.c
	  * src/native/vm/java_lang_Class.c
	  * src/native/vm/java_lang_String.c
	  * src/native/vm/java_lang_Object.c
	  * src/native/vm/gnu/java_lang_VMThread.c
	  * src/native/vm/gnu/java_lang_reflect_Method.c
	  * src/native/vm/gnu/java_lang_reflect_Field.c
	  * src/native/vm/gnu/java_lang_reflect_Constructor.c
	  * src/native/vm/gnu/java_lang_VMThrowable.c
	  * src/native/vm/java_lang_Thread.c
	  * src/native/vm/sun_misc_Unsafe.c
	  * src/native/vm/reflect.c
	  * src/native/vm/java_lang_reflect_Method.c
	  * src/native/vm/java_lang_reflect_Constructor.c
	  * src/threads/threads-common.c
	  * src/threads/native/threads.c ........ r8285 | michi | 2007-08-10
	11:20:04 +0200 (Fri, 10 Aug 2007) | 5 lines

	 * src/native/vm/gnu/java_lang_reflect_Method.c: Fixed merge
	problem in previous revision 8284.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c: Likewise.
	........ r8286 | michi | 2007-08-10 12:46:17 +0200 (Fri, 10 Aug
	2007) | 9 lines

	 * src/vm/jit/powerpc/patcher.c (patcher_get_putfield): Fixed
	severe bug for unalligned long field offsets.

	 * src/vmcore/linker.c [__POWERPC__ && __DARWIN__]: Long fields are
	4-byte alligned in structs.

	 * src/vm/jit/patcher-common.c [TRACE_PATCHER]: Left patcher trace
	code hanging around, might come handy again. ........ r8287 |
	twisti | 2007-08-10 17:10:29 +0200 (Fri, 10 Aug 2007) | 2 lines

	 * src/native/jni.c (_Jv_JNI_FromReflectedField): Added missing ;.
	........ r8288 | twisti | 2007-08-10 17:12:00 +0200 (Fri, 10 Aug
	2007) | 34 lines

	 * src/vmcore/primitive.c: Removed.
	  * src/vmcore/primitive.h: Likewise.

	 * src/vmcore/Makefile.am (libvmcore_la_SOURCES): Removed
	primitive.[ch].

	 * src/vmcore/primitivecore.c: New file.
	  * src/vm/primitive.c: Likwise.
	  * src/vm/primitive.h: Likewise.

	 * src/vm/Makefile.am (libvm_la_SOURCES): Added primitive.[ch].

	 * src/cacaoh/dummy.c (vm/primitive.h): Added.
	(primitive_class_get_by_type): New function.
	(primitive_class_get_by_char): Likewise.

	 * src/native/jni.c, src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vm/builtin.c, src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/resolve.c, src/vm/string.c, src/vm/vm.c,
	src/vmcore/descriptor.c, src/vmcore/field.c,
	src/vmcore/linker.c, src/vmcore/loader.c: Changed primitive.h
	include. ........ r8289 | twisti | 2007-08-10 17:18:05 +0200 (Fri,
	10 Aug 2007) | 3 lines

	 * src/native/vm/reflect.c (reflect_field_new): Fixed compilation.
	(reflect_method_new): Likewise. ........ r8290 | twisti |
	2007-08-11 12:25:40 +0200 (Sat, 11 Aug 2007) | 6 lines

	 * src/native/vm/sun/jvm.c (JVM_GC): Call GC-call directly, use
	TRACEJVMCALLS. (JVM_TotalMemory): Likewise. (JVM_FreeMemory):
	Likewise. (JVM_NewArray): Use TRACEJVMCALLS. ........ r8291 |
	twisti | 2007-08-11 12:43:45 +0200 (Sat, 11 Aug 2007) | 41 lines

	 * src/vm/primitive.c (native/jni.h): Added. (native/llni.h):
	Likewise. (native/include/java_lang_Boolean.h,
	native/include/java_lang_Byte.h, native/include/java_lang_Short.h,
	native/include/java_lang_Character.h,
	native/include/java_lang_Integer.h,
	native/include/java_lang_Long.h, native/include/java_lang_Float.h,
	native/include/java_lang_Double.h): Likewise. (vm/builtin.h):
	Likewise. (vm/vm.h): Likewise. (primitive_box): New function.
	(primitive_unbox): Likewise. (PRIMITIVE_BOX_TYPE): New macro for
	primitive_box_xxx functions. (PRIMITIVE_UNBOX_TYPE): New macro for
	primitive_unbox_xxx functions.

	 * src/vm/primitive.h (primitive_box): Added. (primitive_unbox):
	Likewise. (primitive_box_boolean, primitive_box_byte,
	primitive_box_char, primitive_box_short, primitive_box_int,
	primitive_box_long, primitive_box_float, primitive_box_double):
	Likewise. (primitive_unbox_boolean, primitive_unbox_byte,
	primitive_unbox_char, primitive_unbox_short,
	primitive_unbox_int, primitive_unbox_long,
	primitive_unbox_float, primitive_unbox_double): Likewise.

	 * src/native/jni.c (_Jv_jni_invokeNative): Use primitive-box
	functions.

	 * src/native/vm/gnu/java_lang_reflect_Field.c (get): Likewise.
	........ r8292 | twisti | 2007-08-11 14:39:28 +0200 (Sat, 11 Aug
	2007) | 13 lines

	 * src/vm/vm.c (VM_CALL_METHOD): New macro.
	(VM_CALL_METHOD_VALIST): Likewise. (VM_CALL_METHOD_JVALUE):
	Likewise. (VM_CALL_ARRAY): Likewise.

	 * src/vm/vm.h (vm_call_method_int): Changed return type to
	stdint-type. (vm_call_method_int_valist): Likewise.
	(vm_call_method_int_jvalue): Likewise. (vm_call_method_long):
	Likewise. (vm_call_method_long_valist): Likewise.
	(vm_call_method_long_jvalue): Likewise. ........ r8293 | twisti |
	2007-08-11 14:40:22 +0200 (Sat, 11 Aug 2007) | 2 lines

	 * src/vm/vm.h: Set Id keyword. ........ r8294 | ajordan |
	2007-08-11 15:42:25 +0200 (Sat, 11 Aug 2007) | 6 lines

	 * src/vm/jit/sparc64/md-abi.c (md_param_alloc_native): Fixed
	pending issue from regoff change.
	  * src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Likewise.

	 * src/vm/jit/sparc64/emit.c (emit_trap): Added. ........ r8295 |
	michi | 2007-08-11 19:57:24 +0200 (Sat, 11 Aug 2007) | 106 lines

	 * src/vm/global.h (java_handle_t): Added typedef.
	(java_object_t): New name for what was formerly known as
	java_objectheader.

	 Adapted to above changes and decided where to use handles:
	  * src/vm/initialize.c
	  * src/vm/properties.h
	  * src/vm/jit/arm/codegen.c
	  * src/vm/jit/powerpc/codegen.c
	  * src/vm/jit/codegen-common.h
	  * src/vm/jit/sparc64/codegen.c
	  * src/vm/jit/sparc64/patcher.c
	  * src/vm/jit/alpha/codegen.c
	  * src/vm/jit/optimizing/recompile.c
	  * src/vm/jit/patcher-common.c
	  * src/vm/jit/s390/codegen.c
	  * src/vm/jit/show.c
	  * src/vm/jit/patcher-common.h
	  * src/vm/jit/mips/codegen.c
	  * src/vm/jit/patcher.h
	  * src/vm/jit/m68k/codegen.c
	  * src/vm/jit/powerpc64/codegen.c
	  * src/vm/jit/i386/codegen.c
	  * src/vm/jit/i386/patcher.c
	  * src/vm/jit/replace.c
	  * src/vm/jit/asmpart.h
	  * src/vm/jit/x86_64/codegen.c
	  * src/vm/jit/x86_64/patcher.c
	  * src/vm/jit/replace.h
	  * src/vm/jit/stacktrace.c
	  * src/vm/jit/stacktrace.h
	  * src/vm/jit/codegen-common.c
	  * src/vm/jit/jit.h
	  * src/vm/builtin.c
	  * src/vm/string.c
	  * src/vm/primitive.c
	  * src/vm/builtin.h
	  * src/vm/signal.c
	  * src/vm/primitive.h
	  * src/vm/exceptions.c
	  * src/vm/vm.c
	  * src/vm/finalizer.c
	  * src/vm/exceptions.h
	  * src/vm/stringlocal.h
	  * src/vm/vm.h
	  * src/vm/properties.c
	  * src/native/jni.c
	  * src/native/vm/java_lang_ClassLoader.c
	  * src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c
	  * src/native/vm/cldc1.1/java_lang_Class.c
	  * src/native/vm/cldc1.1/java_lang_String.c
	  * src/native/vm/cldc1.1/java_lang_Object.c
	  * src/native/vm/cldc1.1/java_lang_System.c
	  * src/native/vm/cldc1.1/java_lang_Throwable.c
	  * src/native/vm/java_lang_Class.c
	  * src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c
	  * src/native/vm/gnu/java_lang_VMClassLoader.c
	  * src/native/vm/gnu/gnu_classpath_VMSystemProperties.c
	  * src/native/vm/gnu/java_lang_reflect_Method.c
	  * src/native/vm/gnu/java_lang_VMRuntime.c
	  * src/native/vm/gnu/gnu_classpath_VMStackWalker.c
	  * src/native/vm/gnu/java_lang_reflect_Field.c
	  * src/native/vm/gnu/java_lang_reflect_Constructor.c
	  * src/native/vm/gnu/java_lang_VMThrowable.c
	  * src/native/vm/java_lang_Object.c
	  * src/native/vm/java_lang_String.c
	  * src/native/vm/java_lang_Thread.c
	  * src/native/vm/sun_misc_Unsafe.c
	  * src/native/vm/sun/jvm.c
	  * src/native/vm/reflect.c
	  * src/native/vm/java_lang_Runtime.c
	  * src/native/vm/java_lang_reflect_Method.c
	  * src/native/vm/reflect.h
	  * src/native/vm/java_lang_Runtime.h
	  * src/native/vm/java_lang_reflect_Constructor.c
	  * src/native/jni.h
	  * src/native/native.c
	  * src/native/native.h
	  * src/toolbox/hashtable.h
	  * src/toolbox/util.c
	  * src/toolbox/list.h
	  * src/toolbox/avl.c
	  * src/toolbox/avl.h
	  * src/toolbox/hashtable.c
	  * src/mm/memory.c
	  * src/threads/none/threads.h
	  * src/threads/threads-common.c
	  * src/threads/lock-common.h
	  * src/threads/native/threads.h
	  * src/threads/native/lock.c
	  * src/threads/native/threads.c
	  * src/threads/native/lock.h
	  * src/vmcore/class.c
	  * src/vmcore/loader.c
	  * src/vmcore/suck.h
	  * src/vmcore/class.h
	  * src/vmcore/loader.h
	  * src/vmcore/method.c
	  * src/vmcore/method.h
	  * src/vmcore/classcache.c
	  * src/vmcore/classcache.h
	  * src/vmcore/linker.c
	  * src/vmcore/linker.h
	  * src/cacaoh/headers.h
	  * src/cacaoh/dummy.c
	  * src/cacaoh/headers.c ........ r8296 | pm | 2007-08-12 00:38:38
	+0200 (Sun, 12 Aug 2007) | 11 lines

	 * src/vm/exceptions.c (exceptions_handle_exception) [__S390__]:
	Synchronization object is at SP - IsSync - 8.
	   * src/vm/vm.c (vm_array_store_flt) [__S390__]: Float value is in bytes
	4-7 of uint64_t.
	   * src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-asm.h: Changed a lot for 8 byte stackslots. ........ r8297 |
	michi | 2007-08-12 02:02:48 +0200 (Sun, 12 Aug 2007) | 35 lines

	 * src/native/localref.c: Added new file.
	  * src/native/localref.h: Likewise.

	 * src/native/Makefile.am: Added above two files.

	 * src/vm/jit/codegen-common.c (codegen_start_native_call)
	(codegen_finish_native_call): Use separate function to deal with
	localrefs.

	 * src/native/jni.h: Moved localref stuff to own file.
	  * src/native/jni.c: Likewise. (JNI_CALL_VIRTUAL_METHOD): Added new
	macro. (JNI_CALL_NONVIRTUAL_METHOD): Likewise. (JNI_GET_FIELD):
	Likewise. (JNI_SET_FIELD): Likewise. (JNI_CALL_STATIC_METHOD):
	Likewise. (JNI_GET_STATIC_FIELD): Likewise.
	(JNI_SET_STATIC_FIELD): Likewise. (JNI_NEW_ARRAY): Likewise.
	(JNI_GET_ARRAY_ELEMENTS): Likewise. (JNI_RELEASE_ARRAY_ELEMENTS):
	Likewise. (JNI_GET_ARRAY_REGION): Likewise.
	(JNI_SET_ARRAY_REGION): Likewise.

	 * src/threads/native/threads.h,
	  * src/vm/jit/arm/codegen.c,
	  * src/vm/jit/powerpc/codegen.c,
	  * src/vm/jit/sparc64/codegen.c,
	  * src/vm/jit/alpha/codegen.c,
	  * src/vm/jit/s390/codegen.c,
	  * src/vm/jit/mips/codegen.c,
	  * src/vm/jit/m68k/codegen.c,
	  * src/vm/jit/powerpc64/codegen.c,
	  * src/vm/jit/i386/codegen.c,
	  * src/vm/jit/x86_64/codegen.c: Added missing include. ........ r8298
	| pm | 2007-08-12 20:49:16 +0200 (Sun, 12 Aug 2007) | 7 lines

	 * src/vm/jit/dseg.c (dseg_get_linenumber_from_pc) [__S390__]:
	Clear most significant bit of passed pc parameter.
	  * src/vm/jit/s390/asmpart.S (asm_handle_exception): Rewritten to be
	wrapper for md_handle_exception.
	  * src/vm/jit/s390/md.c (md_handle_exception): New function.
	  * src/vm/jit/s390/md-abi.h (FLT_SAV_CNT): 2, (FLT_RES_CNT): 0.
	  * src/vm/jit/s390/md-abi.c (abi_registers_float_saved): Added f4 and
	f6, (nregdescfloat): Made f4 and f6 saved registers. ........
	[f2f83a695e10]

2007-08-12  pm  <pm>

	* src/vm/jit/dseg.c, src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md-
	abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390/md.c:
	* src/vm/jit/dseg.c (dseg_get_linenumber_from_pc) [__S390__]: Clear
	most significant bit of passed pc parameter.
	* src/vm/jit/s390/asmpart.S (asm_handle_exception): Rewritten to be
	wrapper for md_handle_exception.
	* src/vm/jit/s390/md.c (md_handle_exception): New function.
	* src/vm/jit/s390/md-abi.h (FLT_SAV_CNT): 2, (FLT_RES_CNT): 0.
	* src/vm/jit/s390/md-abi.c (abi_registers_float_saved): Added f4 and
	f6, (nregdescfloat): Made f4 and f6 saved registers.
	[9a2ce00b716e]

2007-08-12  michi  <michi>

	* src/native/Makefile.am, src/native/jni.c, src/native/jni.h,
	src/native/localref.c, src/native/localref.h,
	src/threads/native/threads.h, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c,
	src/vm/vm.c:
	* src/native/localref.c: Added new file.
	* src/native/localref.h: Likewise.

	* src/native/Makefile.am: Added above two files.

	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	(codegen_finish_native_call): Use separate function to deal with
	localrefs.

	* src/native/jni.h: Moved localref stuff to own file.
	* src/native/jni.c: Likewise. (JNI_CALL_VIRTUAL_METHOD): Added new
	macro. (JNI_CALL_NONVIRTUAL_METHOD): Likewise. (JNI_GET_FIELD):
	Likewise. (JNI_SET_FIELD): Likewise. (JNI_CALL_STATIC_METHOD):
	Likewise. (JNI_GET_STATIC_FIELD): Likewise. (JNI_SET_STATIC_FIELD):
	Likewise. (JNI_NEW_ARRAY): Likewise. (JNI_GET_ARRAY_ELEMENTS):
	Likewise. (JNI_RELEASE_ARRAY_ELEMENTS): Likewise.
	(JNI_GET_ARRAY_REGION): Likewise. (JNI_SET_ARRAY_REGION): Likewise.

	* src/threads/native/threads.h,
	* src/vm/jit/arm/codegen.c,
	* src/vm/jit/powerpc/codegen.c,
	* src/vm/jit/sparc64/codegen.c,
	* src/vm/jit/alpha/codegen.c,
	* src/vm/jit/s390/codegen.c,
	* src/vm/jit/mips/codegen.c,
	* src/vm/jit/m68k/codegen.c,
	* src/vm/jit/powerpc64/codegen.c,
	* src/vm/jit/i386/codegen.c,
	* src/vm/jit/x86_64/codegen.c: Added missing include.
	[144c435f4cfb]

2007-08-11  pm  <pm>

	* src/vm/exceptions.c, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-asm.h, src/vm/jit/s390/md.c, src/vm/vm.c:
	* src/vm/exceptions.c (exceptions_handle_exception) [__S390__]:
	Synchronization object is at SP - IsSync - 8.
	 * src/vm/vm.c (vm_array_store_flt) [__S390__]: Float value is in bytes
	4-7 of uint64_t.
	 * src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-
	asm.h: Changed a lot for 8 byte stackslots.
	[a9830fedc342]

2007-08-11  michi  <michi>

	* src/cacaoh/dummy.c, src/cacaoh/headers.c, src/cacaoh/headers.h,
	src/mm/memory.c, src/native/jni.c, src/native/jni.h,
	src/native/native.c, src/native/native.h,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/native/vm/java_lang_String.c,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/threads/lock-common.h,
	src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/threads.h, src/threads/threads-common.c,
	src/toolbox/avl.c, src/toolbox/avl.h, src/toolbox/hashtable.c,
	src/toolbox/hashtable.h, src/toolbox/list.h, src/toolbox/util.c,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/finalizer.c, src/vm/global.h,
	src/vm/initialize.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/patcher-common.c,
	src/vm/jit/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/replace.c, src/vm/jit/replace.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/patcher.c,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/properties.c,
	src/vm/properties.h, src/vm/signal.c, src/vm/string.c,
	src/vm/stringlocal.h, src/vm/vm.c, src/vm/vm.h, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/classcache.h, src/vmcore/linker.c, src/vmcore/linker.h,
	src/vmcore/loader.c, src/vmcore/loader.h, src/vmcore/method.c,
	src/vmcore/method.h, src/vmcore/suck.h:
	* src/vm/global.h (java_handle_t): Added typedef. (java_object_t):
	New name for what was formerly known as java_objectheader.

	Adapted to above changes and decided where to use handles:
	* src/vm/initialize.c
	* src/vm/properties.h
	* src/vm/jit/arm/codegen.c
	* src/vm/jit/powerpc/codegen.c
	* src/vm/jit/codegen-common.h
	* src/vm/jit/sparc64/codegen.c
	* src/vm/jit/sparc64/patcher.c
	* src/vm/jit/alpha/codegen.c
	* src/vm/jit/optimizing/recompile.c
	* src/vm/jit/patcher-common.c
	* src/vm/jit/s390/codegen.c
	* src/vm/jit/show.c
	* src/vm/jit/patcher-common.h
	* src/vm/jit/mips/codegen.c
	* src/vm/jit/patcher.h
	* src/vm/jit/m68k/codegen.c
	* src/vm/jit/powerpc64/codegen.c
	* src/vm/jit/i386/codegen.c
	* src/vm/jit/i386/patcher.c
	* src/vm/jit/replace.c
	* src/vm/jit/asmpart.h
	* src/vm/jit/x86_64/codegen.c
	* src/vm/jit/x86_64/patcher.c
	* src/vm/jit/replace.h
	* src/vm/jit/stacktrace.c
	* src/vm/jit/stacktrace.h
	* src/vm/jit/codegen-common.c
	* src/vm/jit/jit.h
	* src/vm/builtin.c
	* src/vm/string.c
	* src/vm/primitive.c
	* src/vm/builtin.h
	* src/vm/signal.c
	* src/vm/primitive.h
	* src/vm/exceptions.c
	* src/vm/vm.c
	* src/vm/finalizer.c
	* src/vm/exceptions.h
	* src/vm/stringlocal.h
	* src/vm/vm.h
	* src/vm/properties.c
	* src/native/jni.c
	* src/native/vm/java_lang_ClassLoader.c
	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c
	* src/native/vm/cldc1.1/java_lang_Class.c
	* src/native/vm/cldc1.1/java_lang_String.c
	* src/native/vm/cldc1.1/java_lang_Object.c
	* src/native/vm/cldc1.1/java_lang_System.c
	* src/native/vm/cldc1.1/java_lang_Throwable.c
	* src/native/vm/java_lang_Class.c
	* src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c
	* src/native/vm/gnu/java_lang_VMClassLoader.c
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c
	* src/native/vm/gnu/java_lang_reflect_Method.c
	* src/native/vm/gnu/java_lang_VMRuntime.c
	* src/native/vm/gnu/gnu_classpath_VMStackWalker.c
	* src/native/vm/gnu/java_lang_reflect_Field.c
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	* src/native/vm/gnu/java_lang_VMThrowable.c
	* src/native/vm/java_lang_Object.c
	* src/native/vm/java_lang_String.c
	* src/native/vm/java_lang_Thread.c
	* src/native/vm/sun_misc_Unsafe.c
	* src/native/vm/sun/jvm.c
	* src/native/vm/reflect.c
	* src/native/vm/java_lang_Runtime.c
	* src/native/vm/java_lang_reflect_Method.c
	* src/native/vm/reflect.h
	* src/native/vm/java_lang_Runtime.h
	* src/native/vm/java_lang_reflect_Constructor.c
	* src/native/jni.h
	* src/native/native.c
	* src/native/native.h
	* src/toolbox/hashtable.h
	* src/toolbox/util.c
	* src/toolbox/list.h
	* src/toolbox/avl.c
	* src/toolbox/avl.h
	* src/toolbox/hashtable.c
	* src/mm/memory.c
	* src/threads/none/threads.h
	* src/threads/threads-common.c
	* src/threads/lock-common.h
	* src/threads/native/threads.h
	* src/threads/native/lock.c
	* src/threads/native/threads.c
	* src/threads/native/lock.h
	* src/vmcore/class.c
	* src/vmcore/loader.c
	* src/vmcore/suck.h
	* src/vmcore/class.h
	* src/vmcore/loader.h
	* src/vmcore/method.c
	* src/vmcore/method.h
	* src/vmcore/classcache.c
	* src/vmcore/classcache.h
	* src/vmcore/linker.c
	* src/vmcore/linker.h
	* src/cacaoh/headers.h
	* src/cacaoh/dummy.c
	* src/cacaoh/headers.c
	[be809e5a11d0]

2007-08-11  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c:
	* src/vm/jit/sparc64/md-abi.c (md_param_alloc_native): Fixed pending
	issue from regoff change.
	* src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Likewise.

	* src/vm/jit/sparc64/emit.c (emit_trap): Added.
	[9ca4d7cfc72d]

2007-08-11  twisti  <twisti>

	* src/vm/vm.h:
	* src/vm/vm.h: Set Id keyword.
	[be91580c1d11]

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (VM_CALL_METHOD): New macro. (VM_CALL_METHOD_VALIST):
	Likewise. (VM_CALL_METHOD_JVALUE): Likewise. (VM_CALL_ARRAY):
	Likewise.

	* src/vm/vm.h (vm_call_method_int): Changed return type to stdint-
	type. (vm_call_method_int_valist): Likewise.
	(vm_call_method_int_jvalue): Likewise. (vm_call_method_long):
	Likewise. (vm_call_method_long_valist): Likewise.
	(vm_call_method_long_jvalue): Likewise.
	[bf3f6683be8c]

	* src/native/jni.c, src/native/vm/gnu/java_lang_reflect_Field.c,
	src/vm/primitive.c, src/vm/primitive.h:
	* src/vm/primitive.c (native/jni.h): Added. (native/llni.h):
	Likewise. (native/include/java_lang_Boolean.h,
	native/include/java_lang_Byte.h, native/include/java_lang_Short.h,
	native/include/java_lang_Character.h,
	native/include/java_lang_Integer.h, native/include/java_lang_Long.h,
	native/include/java_lang_Float.h,
	native/include/java_lang_Double.h): Likewise. (vm/builtin.h):
	Likewise. (vm/vm.h): Likewise. (primitive_box): New function.
	(primitive_unbox): Likewise. (PRIMITIVE_BOX_TYPE): New macro for
	primitive_box_xxx functions. (PRIMITIVE_UNBOX_TYPE): New macro for
	primitive_unbox_xxx functions.

	* src/vm/primitive.h (primitive_box): Added. (primitive_unbox):
	Likewise. (primitive_box_boolean, primitive_box_byte,
	primitive_box_char, primitive_box_short, primitive_box_int,
	primitive_box_long, primitive_box_float, primitive_box_double):
	Likewise. (primitive_unbox_boolean, primitive_unbox_byte,
	primitive_unbox_char, primitive_unbox_short, primitive_unbox_int,
	primitive_unbox_long, primitive_unbox_float,
	primitive_unbox_double): Likewise.

	* src/native/jni.c (_Jv_jni_invokeNative): Use primitive-box
	functions.

	* src/native/vm/gnu/java_lang_reflect_Field.c (get): Likewise.
	[23a46bc80fdd]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_GC): Call GC-call directly, use
	TRACEJVMCALLS. (JVM_TotalMemory): Likewise. (JVM_FreeMemory):
	Likewise. (JVM_NewArray): Use TRACEJVMCALLS.
	[537eb6a207c4]

2007-08-10  twisti  <twisti>

	* src/native/vm/reflect.c:
	* src/native/vm/reflect.c (reflect_field_new): Fixed compilation.
	(reflect_method_new): Likewise.
	[27deec01d70f]

	* src/cacaoh/dummy.c, src/native/jni.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vm/Makefile.am, src/vm/builtin.c, src/vm/jit/verify/typecheck-
	stackbased.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/primitive.c, src/vm/primitive.h, src/vm/resolve.c,
	src/vm/string.c, src/vm/vm.c, src/vmcore/Makefile.am,
	src/vmcore/descriptor.c, src/vmcore/field.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/primitive.c, src/vmcore/primitive.h,
	src/vmcore/primitivecore.c:
	* src/vmcore/primitive.c: Removed.
	* src/vmcore/primitive.h: Likewise.

	* src/vmcore/Makefile.am (libvmcore_la_SOURCES): Removed
	primitive.[ch].

	* src/vmcore/primitivecore.c: New file.
	* src/vm/primitive.c: Likwise.
	* src/vm/primitive.h: Likewise.

	* src/vm/Makefile.am (libvm_la_SOURCES): Added primitive.[ch].

	* src/cacaoh/dummy.c (vm/primitive.h): Added.
	(primitive_class_get_by_type): New function.
	(primitive_class_get_by_char): Likewise.

	* src/native/jni.c, src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vm/builtin.c, src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/resolve.c, src/vm/string.c, src/vm/vm.c,
	src/vmcore/descriptor.c, src/vmcore/field.c, src/vmcore/linker.c,
	src/vmcore/loader.c: Changed primitive.h include.
	[42d1724d0ac8]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_FromReflectedField): Added missing ;.
	[650582ff466a]

2007-08-10  michi  <michi>

	* src/vm/jit/patcher-common.c, src/vm/jit/powerpc/patcher.c,
	src/vmcore/linker.c:
	* src/vm/jit/powerpc/patcher.c (patcher_get_putfield): Fixed severe
	bug for unalligned long field offsets.

	* src/vmcore/linker.c [__POWERPC__ && __DARWIN__]: Long fields are
	4-byte alligned in structs.

	* src/vm/jit/patcher-common.c [TRACE_PATCHER]: Left patcher trace
	code hanging around, might come handy again.
	[40bd4faac269]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Method.c: Fixed merge problem
	in previous revision 8284.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c: Likewise.
	[26177c366515]

	* src/native/jni.c, src/native/llni.h,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_String.c,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/reflect.c,
	src/native/vm/sun_misc_Unsafe.c, src/threads/native/threads.c,
	src/threads/threads-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/jit/stacktrace.c, src/vm/string.c, src/vm/vm.c:
	* src/native/llni.h: Added LLNI (low level native interface).

	Use LLNI macros throughout the whole codebase:
	* src/vm/jit/stacktrace.c
	* src/vm/string.c
	* src/vm/builtin.c
	* src/vm/exceptions.c
	* src/vm/vm.c
	* src/native/jni.c
	* src/native/vm/java_lang_ClassLoader.c
	* src/native/vm/java_lang_Class.c
	* src/native/vm/java_lang_String.c
	* src/native/vm/java_lang_Object.c
	* src/native/vm/gnu/java_lang_VMThread.c
	* src/native/vm/gnu/java_lang_reflect_Method.c
	* src/native/vm/gnu/java_lang_reflect_Field.c
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	* src/native/vm/gnu/java_lang_VMThrowable.c
	* src/native/vm/java_lang_Thread.c
	* src/native/vm/sun_misc_Unsafe.c
	* src/native/vm/reflect.c
	* src/native/vm/java_lang_reflect_Method.c
	* src/native/vm/java_lang_reflect_Constructor.c
	* src/threads/threads-common.c
	* src/threads/native/threads.c
	[7abb5f785e04]

2007-08-09  twisti  <twisti>

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/linux/md-os.c, src/vm/jit/i386/darwin/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/md.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/solaris/md-
	os.c, src/vm/jit/x86_64/linux/md-os.c, src/vm/signal.c,
	src/vm/signallocal.h:
	* src/vm/exceptions.c (toolbox/logging.h): Removed.
	(vm/jit/disass.h): Likewise. (exceptions_new_hardware_exception):
	Likewise.

	* src/vm/exceptions.h (exceptions_new_hardware_exception): Likewise.

	* src/vm/signal.c (stdint.h): Added. (toolbox/logging.h): Likewise.
	(vm/jit/codegen-common.h): Likewise. (vm/jit/disass.h): Likewise.
	(vm/jit/patcher-common.h): Likewise. (signal_handle): New function.

	* src/vm/signallocal.h (signal_handle): Likewise.

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc64/linux/md-
	os.c, src/vm/jit/s390/md.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/x86_64/linux/md-os.c:
	Use new signal_handle function.
	[782800380bb8]

	* src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/signal.c (vm/types.h): Removed. (signal_init): Use
	signal_register_signal. (signal_register_signal): New function.

	* src/vm/signallocal.h (vm/types.h): Removed.
	(signal_register_signal): New function.
	[55ce6c52817b]

	* NEWS:
	* NEWS: Added news.
	[d615712a54cb]

	* NEWS:
	* NEWS: Added 0.99 release and some news.
	[bb055927a1b4]

2007-08-09  michi  <michi>

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c [ENABLE_REPLACEMENT]
	(md_replace_executionstate_read): Implemented. [ENABLE_REPLACEMENT]
	(md_replace_executionstate_write): Likewise.

	* src/vm/jit/alpha/asmpart.S (asm_replacement_out): Removed.
	(asm_replacement_in): Likewise.
	[0e6fe86aa40d]

2007-08-08  michi  <michi>

	* src/vm/jit/asmpart.h, src/vm/jit/replace.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c:
	* src/vm/jit/s390/emit.c (emit_replacement_stubs): Removed obsolete
	function.
	* src/vm/jit/s390/codegen.c (codegen_emit): Do not create replacement
	stubs.
	* src/vm/jit/replace.c (replace_me): No longer call
	asm_replacement_in.
	* src/vm/jit/asmpart.h [ENABLE_REPLACEMENT]: Removed obsolete
	prototypes.
	[a336a3194fe3]

	* src/vm/builtin.c, src/vmcore/class.c, src/vmcore/linker.c:
	* src/vmcore/linker.c (linker_compute_subclasses): Added attention
	notice about the locking mechanism.

	* src/vmcore/class.c (class_isanysubclass): Uses
	linker_classrenumber_lock now.

	* src/vm/builtin.c (builtin_canstore): Likewise.
	(builtin_canstore_onedim): Likewise.
	(builtin_canstore_onedim_class): Likewise.
	[2173a4b92ae4]

2007-08-08  twisti  <twisti>

	* src/vm/jit/arm/asmpart.S:
	* src/vm/jit/arm/asmpart.S (offsets.h): Removed.
	[7864c8165337]

	* configure.ac, src/threads/critical.c, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/Makefile.am, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/arm/Makefile.am, src/vm/jit/arm/asmpart.S,
	src/vm/jit/asmpart.h, src/vm/jit/i386/Makefile.am,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/mips/Makefile.am,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/Makefile.am,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/darwin/md-asm.h,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/s390/Makefile.am, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/tools/Makefile.am, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/x86_64/Makefile.am, src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/tools: Removed.

	* configure.ac (AC_CONFIG_FILES): Removed src/vm/jit/tools/Makefile.
	* src/vm/jit/Makefile.am (DIST_SUBDIRS): Removed tools. (SUBDIRS):
	Likewise.

	* src/threads/critical.c (stdint.h): Added. (vm/jit/asmpart.h):
	Removed. (critical_init): Don't call
	critical_register_asm_critical_sections.
	(critical_register_asm_critical_sections): Removed.

	* src/vm/jit/asmpart.h (ASM_GETCLASSVALUES_ATOMIC): Removed.
	(asm_criticalsections): Likewise. (asm_getclassvalues_atomic):
	Likewise. (intrp_asm_getclassvalues_atomic): Likewise.

	* src/vm/jit/alpha/Makefile.am, src/vm/jit/arm/Makefile.am,
	src/vm/jit/i386/Makefile.am, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/mips/Makefile.am, src/vm/jit/powerpc/Makefile.am,
	src/vm/jit/powerpc64/Makefile.am, src/vm/jit/s390/Makefile.am,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/x86_64/Makefile.am
	(BUILT_SOURCES): Removed (CLEANFILES): Likewise. (offsets.h):
	Likewise.

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/mips/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S
	(offsets.h): Removed. (asm_getclassvalues_atomic): Likewise.
	(asm_criticalsections): Likewise.

	* src/vm/jit/powerpc/darwin/md-asm.h (asm_criticalsections):
	Removed. (asm_getclassvalues_atomic): Likewise.
	[62317689105b]

	* src/vm/builtin.c, src/vmcore/class.c:
	* src/vmcore/class.c (class_isanysubclass): Don't use
	ASM_GETCLASSVALUES_ATOMIC anymore, we will change that to use the
	class-renumbering lock.

	* src/vm/builtin.c (builtin_canstore): Likewise.
	(builtin_canstore_onedim): Likewise.
	(builtin_canstore_onedim_class): Likewise.
	[60640d7b8794]

	* src/native/vm/java_lang_Thread.c, src/threads/threads-common.c:
	* src/threads/threads-common.c (stdint.h): Added.
	(threads_thread_free): Also save and restore the thread state (this
	is required for CLDC1.1, but is generally a good idea).

	* src/native/vm/java_lang_Thread.c (isAlive)
	[WITH_CLASSPATH_CLDC1_1]: Check for NULL.
	[4478b69824a6]

	* src/vm/jit/m68k/md.c, src/vm/jit/tools/genoffsets.c, src/vm/vm.h:
	* src/vm/vm.h (vm_arg): Removed.

	* src/vm/jit/tools/genoffsets.c (main): Removed sizevmarg,
	offvmargtype and offvmargdata.

	* src/vm/jit/m68k/md.c (md_init): Removed some obsolete checks.
	[90eedc2247c7]

	* src/native/jni.c, src/vm/exceptions.c, src/vm/jit/asmpart.h,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_array_store_flt): Handle __POWERPC__ correctly.
	(vm_vmargs_from_valist): Removed. (vm_vmargs_from_jvalue): Likewise.
	(vm_vmargs_from_objectarray): Likewise. (vm_call_method_vmarg):
	Likewise. (vm_call_method_int_vmarg): Likewise.
	(vm_call_method_int_valist): Likewise. (vm_call_method_int_jvalue):
	Likewise. (vm_call_method_long_vmarg): Likewise.
	(vm_call_method_long_valist): Likewise.
	(vm_call_method_long_jvalue): Likewise.
	(vm_call_method_float_vmarg): Likewise.
	(vm_call_method_float_valist): Likewise.
	(vm_call_method_float_jvalue): Likewise.
	(vm_call_method_double_vmarg): Likewise.
	(vm_call_method_double_valist): Likewise.
	(vm_call_method_double_jvalue): Likewise. (vm_call_method_valist):
	Removed old implementation. (vm_call_method_jvalue): Likewise.

	* src/vm/vm.h: Removed old prototypes.
	* src/vm/jit/asmpart.h: Likewise.

	* src/vm/exceptions.c (exceptions_handle_exception) [__POWERPC__]:
	Get monitor object correctly (talk to Michi because of ARM).

	* src/native/jni.c (_Jv_jni_invokeNative): Removed old
	implementation.

	* src/vm/jit/powerpc/linux/md-abi.c (md_param_alloc): Use 8-byte
	stackslots. (md_param_alloc_native): Implemented native ABI.

	* src/vm/jit/powerpc/emit.c (emit_load): Merged TYPE_FLT and
	TYPE_DBL. (emit_store): Likewise
	* src/vm/jit/powerpc/darwin/md-abi.c: Likewise.

	* src/vm/jit/powerpc/arch.h (HAS_4BYTE_STACKSLOT): Removed.
	(ALIGN_LONGS_IN_MEMORY): Likewise. (ALIGN_DOUBLES_IN_MEMORY):
	Likewise.

	* src/vm/jit/powerpc/codegen.c: Implemented 8-byte stackslots,
	always load and store float-values as double (PowerPC's internal
	register representation is the same).

	* src/vm/jit/powerpc/asmpart.S (asm_vm_call_method): Use new
	argument array. (asm_handle_exception): Restore callee-saved
	registers from the correct location.
	[ebe852e9b203]

2007-08-07  twisti  <twisti>

	* tests/rtIn/at/dms/kjc/Main, tests/rtMissedIn0:
	* tests/rtMissedIn0: Removed.
	* tests/rtIn: Likewise.
	[f86792ac8455]

	* src/native/jni.c, src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/sun_misc_Unsafe.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/patcher.c, src/vmcore/field.c, src/vmcore/field.h,
	src/vmcore/loader.c:
	* src/vmcore/field.c (mm/memory.h): Added. (vm/global.h): Likewise.
	(field_load): Allocate value memory only for static and final
	fields.

	* src/vmcore/field.h (fieldinfo): Made value a pointer.

	* src/vmcore/loader.c (load_class_from_classbuffer): Allocate
	fieldinfo's on the C heap.

	* src/native/jni.c: fieldinfo->value is now a pointer.
	* src/native/vm/sun_misc_Unsafe.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/patcher.c: Likewise.
	[49bab45fbf51]

	* src/vm/jit/i386/emit.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/x86_64/emit.c:
	* src/vm/jit/i386/emit.c (emit_trap): New function.
	* src/vm/jit/powerpc64/emit.c: Likewise.
	* src/vm/jit/x86_64/emit.c: Likewise.
	[d544fbdb5d62]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_preinit): Fixed compiler
	warning.
	[d070b6565b63]

2007-08-06  twisti  <twisti>

	* src/vm/jit/emit-common.c, src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.c: Set Id keyword.
	* src/vm/jit/emit-common.h: Likewise.
	[1b592a73a3b0]

	* src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/patcher-common.h,
	src/vm/jit/patcher.h:
	* src/vm/jit/patcher-common.h: Added __MIPS__ for new patcher
	functions.

	* src/vm/jit/patcher.h: Added __MIPS__ to include-check.

	* src/vm/jit/mips/emit.c (vm/jit/patcher-common.h): Added.
	(emit_patcher_stubs): Removed. (emit_trap): Added.

	* src/vm/jit/mips/codegen.c (vm/jit/patcher.h): Removed. (vm/jit
	/patcher-common.h): Added. (codegen_emit): Replaced
	codegen_add_patch_ref with patcher_add_patch_ref, and
	emit_patcher_stubs with emit_patcher_traps.
	(codegen_emit_stub_native): Likewise.

	* src/vm/jit/mips/codegen.h (PATCHER_CALL_INSTRUCTIONS): Changed to
	1. (PATCHER_CALL_SIZE): Changed to 1*4. (PATCHER_NOPS): Emit only
	one NOP.

	* src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Check
	for exception, set PC in trap-case.

	* src/vm/jit/mips/irix/md-os.c (md_signal_handler_sigsegv): Check
	for exception.

	* src/vm/jit/mips/patcher.c: Renamed function to new patcher
	functions, and use patcher references. (vm/jit/patcher.h): Removed.
	(vm/jit/patcher-common.h): Added (patcher_wrapper): Removed.

	* src/vm/jit/mips/asmpart.S (asm_patcher_wrapper): Removed.
	[3927f23b8cb3]

	* src/vm/jit/mips/arch.h:
	* src/vm/jit/mips/arch.h (SUPPORT_PASS_FLOATARGS_IN_INTREGS):
	Removed duplicate define.
	[db0217c3ef05]

2007-08-06  panzi  <panzi>

	* src/lib/Makefile.am, src/lib/gnu/java/lang/reflect/Constructor.java,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java,
	src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c,
	src/vmcore/annotation.c, src/vmcore/method.c, src/vmcore/method.h:
	* src/lib/gnu/java/lang/reflect/Method.java
	(java.lang.annotation.Annotation): Added import. (java.util.Map):
	Added import. (sun.refelct.annotation.AnnotationParser): Added
	import. (declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).
	(getParameterAnnotations): Added method.

	* src/lib/gnu/java/lang/reflect/Field.java
	(java.lang.annotation.Annotation): Added import. (java.util.Map):
	Added import. (sun.refelct.annotation.AnnotationParser): Added
	import. (declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).

	* src/lib/gnu/java/lang/reflect/Constructor.java: Copied file from
	GNU Classpath. (java.lang.annotation.Annotation): Added import.
	(java.util.Map): Added import.
	(sun.refelct.annotation.AnnotationParser): Added import.
	(declaredAnnotations): Added field (inspired by OpenJDK).
	(getAnnotation): Added method. (getDeclaredAnnotations): Added
	method. (declaredAnnotations): Added method (inspired by OpenJDK).
	(getParameterAnnotations): Added method.

	* src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java:
	Removed.

	* src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java:
	Removed. I figured out which class of GNU Classpath to use to
	replace this self written class.

	* src/lib/gnu/sun/reflect/annotation/AnnotationParser.java: Added a
	few comments. (sun.reflect.generics.parser.SignatureParser): Removed
	import. (sun.reflect.generics.parser.SignatureFormatError): Removed
	import. (gnu.java.lang.reflect.FieldSignatureParser): Added import.
	(parseParameterAnnotations): Added method. (parseSig): Changed
	method so it uses GNU Classpaths FieldSignatureParser.

	* src/lib/Makefile.am (VM_JAVA_FILES): Added
	$(top_srcdir)/src/lib/gnu/java/lang/reflect/Constructor.java
	(VM_CLASS_FILES): Added classes/java/lang/reflect/Constructor.class

	* src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (_Jv_java_lang_Class_getDeclaredAnnotations):
	Cache methodinfo for
	sun.reflect.annotation.AnnotationParser.parseAnnotationsIntoArray.

	* src/native/vm/gnu/java_lang_reflect_Method.c [ENABLE_ANNOTATIONS]
	(native/vm/reflect.h): Added include. [ENABLE_ANNOTATIONS]
	(declaredAnnotations): Added method. [ENABLE_ANNOTATIONS]
	(getParameterAnnotations): Added method. [ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getDefaultValue): Cache methodinfo
	for sun.reflect.annotation.AnnotationParser.parseDefaultValue.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_declaredAnnotations): Added.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getParameterAnnotations): Added.

	* src/native/vm/gnu/java_lang_reflect_Field.c [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Added include.
	[ENABLE_ANNOTATIONS] (native/vm/reflect.h): Added include.
	[ENABLE_ANNOTATIONS] (declaredAnnotations): Added method.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Field_declaredAnnotations): Added.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	[ENABLE_ANNOTATIONS] (vm/vm.h): Added include. [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Added include.
	[ENABLE_ANNOTATIONS] (native/vm/reflect.h): Added include.
	[ENABLE_ANNOTATIONS] (declaredAnnotations): Added method.
	[ENABLE_ANNOTATIONS] (getParameterAnnotations): Added method.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Constructor_declaredAnnotations): Added.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Constructor_getParameterAnnotations): Added.

	* src/native/vm/reflect.c [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(vm/vm.h): Added include. [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Added include.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(reflect_get_declaredannotatios): Added. [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (reflect_get_parameterannotations): Added.

	* src/native/vm/reflect.h [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(reflect_get_declaredannotatios): Added. [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (reflect_get_parameterannotations): Added.

	* src/native/vm/sun/jvm.c (JVM_GetDeclaredClasses): Implemented
	(needed by a testcase of mine).

	* src/vmcore/method.c (method_get_parametercount): Added. This
	function gets the parameter count of a method (not counting the this
	pointer of non-static methods). Returns -1 in case of an error.

	* src/vmcore/method.h (method_get_parametercount): Added.
	[f5cb5fb3404e]

2007-08-06  michi  <michi>

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_add_patch_ref): Removed
	obsolete code about PATCHER_LONGBRANCHES_NOPS.
	[1bc6a2ee1f2d]

	* src/vm/jit/alpha/emit.c, src/vm/jit/arm/emit.c, src/vm/jit/emit-
	common.c, src/vm/jit/emit-common.h, src/vm/jit/powerpc/emit.c,
	src/vm/jit/s390/emit.c:
	* src/vm/jit/emit-common.c (emit_patcher_traps): Added.

	* src/vm/jit/emit-common.h (emit_trap): Added prototype.

	* src/vm/jit/alpha/emit.c (emit_patcher_traps): Removed (moved to
	emit-common). (emit_trap): Implemented.

	* src/vm/jit/arm/emit.c: Likewise.

	* src/vm/jit/powerpc/emit.c: Likewise.

	* src/vm/jit/s390/emit.c: Likewise.
	[346f9ec5827a]

2007-08-05  edwin  <edwin>

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_read_executionstate): Improved
	comments. (replace_write_executionstate): Likewise.
	[6aec81ae2149]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_new_sourceframe): Fixed
	documentation.
	[77f8bf7f70b4]

2007-08-05  twisti  <twisti>

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (stdint.h): Added.
	(patcher_list_free): Removed unused variable pr.
	(patcher_add_patch_ref): Fixed warning.
	[e43253cb24fb]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_Available) [FIONREAD]: Use HotSpot-
	compatible code.
	[5142a17c3bc0]

2007-08-03  michi  <michi>

	* src/vm/jit/codegen-common.c, src/vm/jit/patcher-common.c, src/vm/jit
	/patcher-common.h:
	* src/vm/jit/patcher-common.c (patcher_list_reset): Added.
	(patcher_add_patch_ref) [!NDEBUG]: Added sanity check.

	* src/vm/jit/patcher-common.h (patcher_list_reset): Added.

	* src/vm/jit/codegen-common.c (codegen_reset): Resets the patcher
	list.
	[26187f44fa78]

2007-08-03  pm  <pm>

	* src/vm/jit/patcher-common.c:
	* src/vm/jit/patcher-common.c (patcher_handler): Call
	LOCK_MONITOR_EXIT instead of LOCK_MONITOR_ENTER in double-patching
	handler code.
	[df81594b92d3]

2007-08-02  twisti  <twisti>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_RaiseSignal): New function.
	[bfad8af45e64]

2007-08-01  twisti  <twisti>

	* m4/ac_prog_javac.m4, src/lib/Makefile.am:
	* m4/ac_prog_javac.m4 (AC_PROG_JAVAC): Removed -1.5 from ecj.

	* src/lib/Makefile.am (vm.zip): Added -source 1.5 -target 1.5.
	Thanks to Mark Wielaard.
	[a38b1afb2c67]

2007-08-01  pm  <pm>

	* src/vm/jit/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c:
	* jit/patcher.h: Added #error if included on s390.
	* jit/patcher-common.h: Made declarations visible on s390.
	* jit/s390/asmpart.S (asm_patcher_wrapper): removed.
	* jit/s390/emit.c (emit_patcher_stubs): removed, (emit_patcher_traps):
	added.
	* jit/s390/codegen.h (PATCHER_LONGBRANCHES_NOPS_SKIP,
	PATCHER_LONGBRANCHES_NOPS): removed, (PATCHER_CALL_SIZE,
	PATCHER_NOPS, PATCHER_NOPS_SKIP) adapted to patching via signals.
	* jit/s390/codegen.c (codegen_emit, codegen_emit_stub_native): Adapted
	to paching via signals.
	* jit/s390/md.c (md_signal_handler_sigill, md_signal_handler_sigsegv):
	added support for exceptions_new_hardware_exception returning NULL.
	* jit/s390/patcher.c: Adapted to paching via signals.
	[d5451a151292]

2007-07-31  twisti  <twisti>

	* configure.ac, m4/annotations.m4:
	* m4/annotations.m4: New file.
	* configure.ac: Use AC_CHECK_ENABLE_ANNOTATIONS.
	[cf7daf180ded]

2007-07-31  panzi  <panzi>

	* configure.ac, src/lib/Makefile.am,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/sun/reflect/ConstantPool.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationParser.java,
	src/lib/gnu/sun/reflect/annotation/AnnotationType.java, src/lib/gnu/
	sun/reflect/annotation/AnnotationTypeMismatchExceptionProxy.java, sr
	c/lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java,
	src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java,
	src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java,
	src/native/include/Makefile.am, src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_reflect_ConstantPool.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/reflect.c, src/native/vm/sun/jvm.c,
	src/vmcore/Makefile.am, src/vmcore/annotation.c,
	src/vmcore/annotation.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	* src/lib/gnu/java/lang/reflect/Method.java (annotations): Added.
	(parameterAnnotations): Added. (annotationDefault): Added.

	* src/lib/gnu/java/lang/reflect/Field.java (annotations): Added.

	* src/lib/gnu/sun/reflect: New directory.
	* src/lib/gnu/sun/reflect/generics: New directory.
	* src/lib/gnu/sun/reflect/generics/parser: New directory.
	* src/lib/gnu/sun/reflect/generics/parser/SignatureFormatError.java:
	New file.

	* src/lib/gnu/sun/reflect/generics/parser/SignatureParser.java: New
	file. This class parses type signatures and returns the acording
	type as a java.lang.Class instance.

	* src/lib/gnu/sun/reflect/ConstantPool.java [WITH_CLASSPATH_GNU]:
	New file.

	* src/lib/gnu/sun/reflect/annotation: New directory.
	* src/lib/gnu/sun/reflect/annotation/AnnotationTypeMismatchExceptionPr
	oxy.java [WITH_CLASSPATH_GNU]: Copied file from OpenJDK.

	*
	src/lib/gnu/sun/reflect/annotation/TypeNotPresentExceptionProxy.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK.

	* src/lib/gnu/sun/reflect/annotation/AnnotationParser.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK and changed a bit so
	it can be used with GNU Classpath. [WITH_CLASSPATH_GNU]
	(parseAnnotationsIntoArray): Added for convenience.
	[WITH_CLASSPATH_GNU] (parseAnnotationDefault): Added for
	convenience.

	* src/lib/gnu/sun/reflect/annotation/AnnotationType.java
	[WITH_CLASSPATH_GNU]: Copied file from OpenJDK and changed a bit so
	it can be used with GNU Classpath. [WITH_CLASSPATH_GNU]
	(annotationTypes): Added to emulate
	sun.misc.SharedSecrets.getJavaLangAccess().getAnnotationType() and
	sun.misc.SharedSecrets.getJavaLangAccess().setAnnotationType().

	* src/lib/Makefile.am [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]:
	Added classes needed by annotations support.

	* src/native/vm/nativevm.h [ENABLE_ANNOTATIONS]
	(_Jv_sun_reflect_ConstantPool_init): Added.

	* src/native/vm/java_lang_Class.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (vmcore/annotation.h): Include added.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Include added.
	[WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(_Jv_java_lang_Class_getDeclaredAnnotations): Implemented.

	* src/native/vm/gnu/java_lang_VMClass.c [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_VMClass_getDeclaredAnnotations): Implemented.

	* src/native/vm/gnu/sun_reflect_ConstantPool.c [ENABLE_ANNOTATIONS]:
	Added implementation of sun.reflect.ConstantPool class. This is an
	copy of the according functions from src/native/vm/sun/jvm.c for I
	don't know how to unify it better (needs to be discussed).

	* src/native/vm/gnu/java_lang_reflect_Method.c [ENABLE_ANNOTATIONS]
	(vm/vm.h): Added include. [ENABLE_ANNOTATIONS]
	(native/include/sun_reflect_ConstantPool.h): Added include.
	[ENABLE_ANNOTATIONS]
	(Java_java_lang_reflect_Method_getDefaultValue): Implemented.

	* src/native/vm/gnu/Makefile.am [ENABLE_ANNOTATIONS]
	(SUN_REFLECT_SOURCES): Added sun_reflect_ConstantPool.c

	* src/native/vm/java_lang_Class.h [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (_Jv_java_lang_Class_getDeclaredAnnotations):
	Added.

	* src/native/vm/sun/jvm.c (assert.h): Added include.
	(native/include/java_lang_Integer.h): Added include.
	(native/include/java_lang_Long.h): Added include.
	(native/include/java_lang_Short.h): Added include.
	(native/include/java_lang_Byte.h): Added include.
	(native/include/java_lang_Character.h): Added include.
	(native/include/java_lang_Boolean.h): Added include.
	(native/include/java_lang_Float.h): Added include.
	(native/include/java_lang_Double.h): Added include.
	[ENABLE_ANNOTATIONS] (native/include/sun_reflect_ConstantPool.h):
	Added include. (JVM_GetDeclaringClass): Implemented.
	(JVM_GetClassAnnotations) [ENABLE_ANNOTATIONS]: Implemented.
	(JVM_GetFieldAnnotations): Implemented. (JVM_GetMethodAnnotations):
	Implemented. (JVM_GetMethodDefaultAnnotationValue): Implemented.
	(JVM_GetMethodParameterAnnotations): Implemented.
	[ENABLE_ANNOTATIONS] (JVM_GetClassConstantPool): Implemented.
	(JVM_ConstantPoolGetSize): Implemented.
	(JVM_ConstantPoolGetClassAt): Implemented.
	(JVM_ConstantPoolGetClassAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetMethodAt): Implemented.
	(JVM_ConstantPoolGetMethodAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetFieldAt): Implemented.
	(JVM_ConstantPoolGetFieldAtIfLoaded): Implemented.
	(JVM_ConstantPoolGetIntAt): Implemented.
	(JVM_ConstantPoolGetLongAt): Implemented.
	(JVM_ConstantPoolGetFloatAt): Implemented.
	(JVM_ConstantPoolGetDoubleAt): Implemented.
	(JVM_ConstantPoolGetStringAt): Implemented.
	(JVM_ConstantPoolGetUTF8At): Implemented. (JVM_GetArrayElement):
	Quickly implemented (will be rewritten by twisti). I needed this
	function in a testcase and not directly for annotations support.

	* src/native/vm/reflect.c [ENABLE_ANNOTATIONS] (mm/memmory.h): Added
	include. (reflect_constructor_new) [ENABLE_ANNOTATIONS]: Load
	annotations and parameter annotations. (reflect_field_new)
	[ENABLE_ANNOTATIONS]: Load annotations. (reflect_method_new)
	[ENABLE_ANNOTATIONS]: Load annotations, parameter annotations and
	annotation default value.

	* src/native/vm/nativevm.c [WITH_CLASSPATH_GNU] [ENABLE_ANNOTATIONS]
	(_Jv_sun_reflect_ConstantPool_init): Added call.

	* src/native/include/Makefile.am [WITH_CLASSPATH_GNU]
	[ENABLE_ANNOTATIONS] (JAVASE_HEADER_FILES): Added
	sun_reflect_ConstantPool.h

	* src/vmcore/class.c [ENABLE_ANNOTATIONS]
	(class_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(class_sun_reflect_annotation_AnnotationParser): Added.
	(class_load_attributes) [ENABLE_ANNOTATIONS]: Load annotations.
	(class_free) [ENABLE_ANNOTATIONS]: Free annotations.

	* src/vmcore/loader.c (loader_init) [ENABLE_ANNOTATIONS]: Load
	class_sun_reflect_ConstantPool. (loader_init) [ENABLE_ANNOTATIONS]
	[WITH_CLASSPATH_GNU]: Load
	class_sun_reflect_annotation_AnnotationParser.

	* src/vmcore/annotation.c [!ENABLE_ANNOTATIONS]: Error: annotation
	support has to be enabled when compling this file. (assert.h): Added
	include. (toolbox/logging.h): Added include.
	(annotation_bytearray_new): Added. (annotation_bytearray_free):
	Added. (annotation_bytearrays_new): Added.
	(annotation_bytearrays_resize): Added.
	(annotation_bytearrays_insert): Added. (annotation_bytearrays_free):
	Added. (annotation_load_attribute_body): Added. Maybe this function
	should be called loader_load_attribute_body and located in
	vmcore/loader.c?
	(annotation_load_method_attribute_annotationdefault): Added. (annota
	tion_load_method_attribute_runtimevisibleparameterannotations):
	Added. (annotation_load_method_attribute_runtimeinvisibleparameteran
	notations): Added.
	(annotation_load_class_attribute_runtimevisibleannotations): Added.
	(annotation_load_class_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_method_attribute_runtimevisibleannotations):
	Added.
	(annotation_load_method_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_field_attribute_runtimevisibleannotations):
	Added.
	(annotation_load_field_attribute_runtimeinvisibleannotations):
	Added.

	* src/vmcore/class.h [ENABLE_ANNOTATIONS]
	(runtimevisibleannotationscount): Removed. [ENABLE_ANNOTATIONS]
	(runtimevisibleannotations): Removed. [ENABLE_ANNOTATIONS]
	(annotations): Added. Bytearray of the unparsed annotations or NULL
	if none. [ENABLE_ANNOTATIONS] (method_annotations): Added. Array of
	bytearrays of method annotations. This Array is only as big as
	needed or NULL if there are no method annotations at all.
	[ENABLE_ANNOTATIONS] (method_parameterannotations): Added. Array of
	bytearrays of method parameter annotations. This Array is only as
	big as needed or NULL if there are no method parameter annotations
	at all. [ENABLE_ANNOTATIONS] (method_annotationdefaults): Added.
	Array of bytearrays of method annotation default values. This Array
	is only as big as needed or NULL if there are no method annotation
	default values at all. [ENABLE_ANNOTATIONS] (field_annotations):
	Added. Array of bytearrays of field annotations. This Array is only
	as big as needed or NULL if there are no field annotations at all.
	[ENABLE_ANNOTATIONS] (class_sun_reflect_ConstantPool): Added.
	[ENABLE_ANNOTATIONS] [WITH_CLASSPATH_GNU]
	(class_sun_reflect_annotation_AnnotationParser): Added.

	* src/vmcore/annotation.h (annotation_bytearray_t): Added. Used to
	store unparsed (parameter-) annotations or unparsed annotation
	default values in. (annotation_bytearrays_t): Added. Array of
	bytearrays. (annotation_bytearray_new): Added.
	(annotation_bytearray_free): Added. (annotation_bytearrays_new):
	Added. (annotation_bytearrays_resize): Added.
	(annotation_bytearrays_insert): Added. (annotation_bytearrays_free):
	Added.
	(annotation_load_class_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_method_attribute_runtimevisibleannotations):
	Added.
	(annotation_load_method_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_field_attribute_runtimevisibleannotations):
	Added.
	(annotation_load_field_attribute_runtimeinvisibleannotations):
	Added. (annotation_load_method_attribute_annotationdefault): Added. (
	annotation_load_method_attribute_runtimevisibleparameterannotations)
	: Added. (annotation_load_method_attribute_runtimeinvisibleparameter
	annotations): Added.

	* src/vmcore/method.c (method_load) [ENABLE_ANNOTATIONS]: Load
	annotations, parameter annotations and annotation default values.
	[ENABLE_ANNOTATIONS] (method_get_annotations): Added.
	[ENABLE_ANNOTATIONS] (method_get_parameterannotations): Added.
	[ENABLE_ANNOTATIONS] (method_get_annotationdefault): Added.

	* src/vmcore/method.h [ENABLE_ANNOTATIONS] (method_get_annotations):
	Added. [ENABLE_ANNOTATIONS] (method_get_parameterannotations):
	Added. [ENABLE_ANNOTATIONS] (method_get_annotationdefault): Added.

	* src/vmcore/field.c (mm/memory.h): Added include.
	(vmcore/annotations.h): Added include. (field_load)
	[ENABLE_ANNOTATIONS]: Laod annotations. [ENABLE_ANNOTATIONS]
	(field_get_annotations): Added.

	* src/vmcore/utf8.c [ENABLE_ANNOTATIONS]
	(utf_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeInvisibleAnnotations): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeVisibleParameterAnnotations): Added.
	[ENABLE_ANNOTATIONS] (utf_RuntimeInvisibleParameterAnnotations):
	Added. [ENABLE_ANNOTATIONS] (utf_AnnotationDefault): Added.
	[ENABLE_ANNOTATIONS] [WITH_CLASSPATH_GNU]
	(utf_sun_reflect_annotation_AnnotationParser): Added.

	* src/vmcore/field.h [ENABLE_ANNOTATIONS] (field_get_annotations):
	Added.

	* src/vmcore/Makefile.am [ENABLE_ANNOTATIONS] (ANNOTATION_SOURCES):
	Only compile annotations sources when annotations are enabled.

	* src/vmcore/utf8.h [ENABLE_ANNOTATIONS]
	(utf_sun_reflect_ConstantPool): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeInvisibleAnnotations): Added. [ENABLE_ANNOTATIONS]
	(utf_RuntimeVisibleParameterAnnotations): Added.
	[ENABLE_ANNOTATIONS] (utf_RuntimeInvisibleParameterAnnotations):
	Added. [ENABLE_ANNOTATIONS] (utf_AnnotationDefault): Added.
	[ENABLE_ANNOTATIONS] [WITH_CLASSPATH_GNU]
	(utf_sun_reflect_annotation_AnnotationParser): Added.

	* configure.ac (ENABLE_ANNOTATIONS): Added configure option
	--enable-annotations.
	[ab4f34149780]

2007-07-31  twisti  <twisti>

	* configure.ac, m4/classpath.m4:
	* configure.ac: Only check AC_PROG_JAVAC and AC_PROG_JAR for
	CLDC-1.1 and GNU.

	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_CLASSES): Changed default
	value for different configurations..
	[d7d167268026]

2007-07-31  michi  <michi>

	* src/vm/jit/alpha/arch.h, src/vm/jit/alpha/md.c,
	src/vm/jit/arm/arch.h, src/vm/jit/i386/arch.h, src/vm/jit/i386/md.c,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/md.c,
	src/vm/jit/s390/arch.h, src/vm/jit/sparc64/arch.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/x86_64/arch.h,
	src/vm/jit/x86_64/md.c:
	* src/vm/jit/arm/arch.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/alpha/arch.h,
	src/vm/jit/s390/arch.h, src/vm/jit/mips/arch.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/i386/arch.h,
	src/vm/jit/x86_64/arch.h (REPLACEMENT_STUB_SIZE): Removed obsolete
	define.

	* src/vm/jit/powerpc/md.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/alpha/md.c, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/i386/md.c,
	src/vm/jit/x86_64/md.c (md_patch_replacement_point): We have to use
	trap instructions here.
	[ae987e4ea783]

	* src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/md.c: Fixed file header.
	[97bdf942d526]

	* THIRDPARTY, m4/ac_prog_javac.m4, src/cacaoh/dummy.c, src/mm/boehm.c,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/sun_misc_Unsafe.c, src/threads/native/threads.h,
	src/threads/threads-common.h, src/vm/access.c, src/vm/builtin.c,
	src/vm/builtintable.inc, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/global.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/asmpart.h, src/vm/jit/code.h, src/vm/jit/codegen-
	common.c, src/vm/jit/emit-common.h, src/vm/jit/i386/arch.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/md.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/darwin/md-abi.h, src/vm/jit/powerpc/darwin/md-
	os.c, src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/replace.c, src/vm/jit/replace.h, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/jit_interface.h,
	src/vm/properties.c, src/vm/properties.h, src/vm/string.c,
	src/vm/vm.c, src/vm/vm.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h, src/vmcore/primitive.c,
	src/vmcore/primitive.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/suck.c:
	Merged revisions 8187-8244 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8189 | ajordan | 2007-07-07 14:03:38 +0200 (Sat, 07 Jul
	2007) | 2 lines

	 * src/vm/jit/sparc64/solaris/md-os.c: Implemented hardware
	exception handling. ........ r8190 | twisti | 2007-07-08 15:42:06
	+0200 (Sun, 08 Jul 2007) | 4 lines

	 * src/vm/jit/powerpc/linux/md-abi.c (vm/types.h): Removed.
	(stdint.h): Added and use stdint-types in this file. (_ALIGN):
	Removed and use ALIGN_2 in this file. ........ r8191 | twisti |
	2007-07-08 17:15:53 +0200 (Sun, 08 Jul 2007) | 8 lines

	 * src/vm/jit/powerpc/emit.c (stdint.h): Added
	(emit_verbosecall_enter): Reimplemented (this implementation is much
	simpler and maybe should be extended to trace also arguments on the
	stack). Darwin support is still missing.

	 * src/vm/jit/powerpc/darwin/md-abi.h (TRACE_ARGS_NUM): Changed to
	4.
	  * src/vm/jit/powerpc/linux/md-abi.h (TRACE_ARGS_NUM): Likewise.
	........ r8192 | twisti | 2007-07-09 13:18:48 +0200 (Mon, 09 Jul
	2007) | 3 lines

	 * src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv):
	Fixed typo. ........ r8193 | twisti | 2007-07-09 16:37:49 +0200
	(Mon, 09 Jul 2007) | 2 lines

	 * src/vm/global.h (ALIGN_2): Use logical arithmetic. ........
	r8194 | twisti | 2007-07-10 15:44:37 +0200 (Tue, 10 Jul 2007) | 9
	lines

	 * src/vmcore/options.c (opt_TraceJavaCalls): Added.
	(options_XX): Added opt_TraceJavaCalls. (options_xx): Likewise.

	 * src/vmcore/options.h (opt_TraceJavaCalls): Added.

	 * src/vm/vm.c (XXusage): Removed -verbose:call. (vm_create):
	Likewise. ........ r8195 | pm | 2007-07-11 13:27:55 +0200 (Wed, 11
	Jul 2007) | 3 lines

	 * src/vm/jit/s390/codegen.c (codegen_emit): Extended maximal
	interface table offset from 12 bit to 16 bit in
	ICMD_INVOKEINTERFACE.
	  * src/vm/jit/s390/patcher.c (patcher_invokeinterface): Likewise.
	........ r8196 | twisti | 2007-07-11 15:54:21 +0200 (Wed, 11 Jul
	2007) | 5 lines

	 * src/vm/jit/powerpc/codegen.c (codegen_emit): Fixed bug when
	taking out double arguments. (codegen_emit_stub_native): Use
	switch-case for saving and restoring argument registers. ........
	r8197 | twisti | 2007-07-11 21:17:04 +0200 (Wed, 11 Jul 2007) | 3
	lines

	 * src/vm/jit/x86_64/asmpart.S (asm_vm_call_method): Fixed stack
	alignment. ........ r8198 | twisti | 2007-07-12 09:16:24 +0200
	(Thu, 12 Jul 2007) | 10 lines

	 * src/vm/jit/alpha/asmpart.S (asm_vm_call_method): Rewritten for
	new argument passing.

	 * src/vm/jit/alpha/md-abi.c (md_param_alloc): Set pd->index.

	 * src/native/jni.c: Added __ALPHA__ ifdef.
	  * src/vm/vm.c: Likewise.
	  * src/vm/vm.h: Likewise.
	  * src/vm/jit/asmpart.h: Likewise. ........ r8199 | michi |
	2007-07-13 02:39:49 +0200 (Fri, 13 Jul 2007) | 7 lines

	 * src/vmcore/statistics.h (size_patchref): Added.
	  * src/vmcore/statistics.c (size_patchref): Added.
	(statistics_print_memory_usage): Print size of patcher references.

	 * src/vm/jit/patcher-common.c (patcher_add_patch_ref,
	patcher_list_free) [ENABLE_STATISTICS] Set size of patcher
	references accordingly. ........ r8200 | twisti | 2007-07-15
	11:47:21 +0200 (Sun, 15 Jul 2007) | 2 lines

	 * src/vm/vm.c: Build fix. ........ r8201 | twisti | 2007-07-15
	12:37:50 +0200 (Sun, 15 Jul 2007) | 9 lines

	 * src/vmcore/primitive.c (stdint.h): Added.
	(primitive_arrayclass_get_by_name): New function.

	 * src/vmcore/primitive.h (stdint.h): Added.
	(primitive_arrayclass_get_by_name): Likewise.

	 * src/native/vm/sun/jvm.c (JVM_NewArray): Implemented handling for
	primitive arrays. ........ r8202 | twisti | 2007-07-15 14:08:18
	+0200 (Sun, 15 Jul 2007) | 3 lines

	 * src/native/include/Makefile.am [WITH_CLASSPATH_SUN]
	(JAVASE_HEADER_FILES): Added sun_reflect_ConstantPool.h. ........
	r8203 | twisti | 2007-07-15 14:30:04 +0200 (Sun, 15 Jul 2007) | 16
	lines

	 * src/vmcore/primitive.c (primitive_class_is_primitive): Removed.
	  * src/vmcore/primitive.h: Likewise.

	 * src/vmcore/class.c (class_is_primitive): New function.
	(class_isanysubclass): Use class_is_primitive.
	  * src/vmcore/class.h: Likewise.

	 * src/native/vm/java_lang_Class.c (isPrimitive): Use
	class_is_primitive. (getDeclaringClass): Likewise.
	(getDeclaredClasses): Likewise.

	 * src/native/vm/sun/jvm.c (JVM_GetProtectionDomain): Likewise.
	(JVM_IsPrimitiveClass): Likewise. (JVM_NewArray): Likewise.
	........ r8204 | twisti | 2007-07-15 14:44:22 +0200 (Sun, 15 Jul
	2007) | 4 lines

	 * src/native/vm/sun/jvm.c (JVM_ArrayCopy): Fixed warnings.
	(JVM_GetStackTraceElement): Likewise. (JVM_FindLoadedClass):
	Likewise. ........ r8205 | twisti | 2007-07-15 14:45:40 +0200
	(Sun, 15 Jul 2007) | 2 lines

	 * src/native/vm/sun/jvm.c: Set Id keyword. ........ r8206 |
	twisti | 2007-07-15 16:26:33 +0200 (Sun, 15 Jul 2007) | 7 lines

	 * src/vmcore/options.c (opt_TraceJVMCalls): Added.
	  * src/vmcore/options.h: Likewise.

	 * src/native/vm/sun/jvm.c (vmcore/options.h): Added.
	(DEBUG_JVM): Renamed to TRACEJVMCALLS. (JVM_GetArrayLength):
	Implemented. ........ r8207 | twisti | 2007-07-16 17:18:32 +0200
	(Mon, 16 Jul 2007) | 6 lines

	 * src/vmcore/class.c (class_get_declaringclass): New function.
	  * src/vmcore/class.h: Likewise.

	 * src/native/vm/java_lang_Class.c (getDeclaringClass): Use
	class_get_declaringclass. ........ r8208 | twisti | 2007-07-17
	11:06:22 +0200 (Tue, 17 Jul 2007) | 3 lines

	 * src/native/jni.c (TRACEJNICALLS): Added but still unused.
	(JNI_GetCreatedJavaVMs): Implemented. ........ r8209 | twisti |
	2007-07-17 22:13:23 +0200 (Tue, 17 Jul 2007) | 9 lines

	 * src/vmcore/class.c (vm/resolve.h): Added. (class_define):
	Changed signature.
	  * src/vmcore/class.h (class_define): Likewise.

	 * src/native/jni.c (_Jv_JNI_DefineClass): Bug fix, use
	class_define.

	 * src/native/vm/java_lang_ClassLoader.c (defineClass): Use
	class_define. ........ r8210 | twisti | 2007-07-18 14:51:00 +0200
	(Wed, 18 Jul 2007) | 50 lines

	 * src/vm/jit/allocator/simplereg.c: Replaced HAS_4BYTE_STACKSLOT
	with SIZEOF_VOID_P == 4.

	 * src/vm/jit/i386/emit.c (vm/jit/abi.h): Added.
	(emit_verbosecall_enter): Changed to 8-byte stackslots.

	 * src/vm/jit/i386/codegen.c (codegen_emit): Changed to 8-byte
	stackslots. (codegen_emit_stub_native): Likewise.

	 * src/vm/jit/i386/arch.h (HAS_4BYTE_STACKSLOT): Removed.
	(ALIGN_LONGS_IN_MEMORY): Likewise. (ALIGN_DOUBLES_IN_MEMORY):
	Likewise.

	 * src/vm/jit/i386/asmpart.S (asm_vm_call_method): Rewritten for
	new argument passing. (asm_handle_exception): Use 8-byte
	stackslots.

	 * src/vm/jit/i386/md-abi.c (md_param_alloc): Use 8-byte stackslots
	and set pd->index. (md_param_alloc_native): New function.

	 * src/vm/global.h (ALIGN_EVEN): New macro. (ALIGN_ODD):
	Likewise. (ALIGN_2): Defined to ALIGN_EVEN.

	 * src/vm/builtintable.inc (builtintable_function): Removed #ifdef
	for java.lang.VMSystem.arraycopy, this works now correctly.

	 * src/vm/builtin.c (builtintable_init): Set ACC_METHOD_BUILTIN
	when parsing the decriptor.

	 * src/vm/jit_interface.h (md_param_alloc_native): Added.

	 * src/vm/exceptions.c (exceptions_handle_exception): Temporarily
	added __I386__ to get the monitor object correctly.

	 * src/vmcore/descriptor.c
	(descriptor_pool_parse_method_descriptor): Check for
	ACC_METHOD_BUILTIN flag. (descriptor_params_from_paramtypes):
	Likewise.

	 * src/cacaoh/dummy.c (md_param_alloc_native): Added.

	 * src/vm/jit/asmpart.h: Added __I386__ ifdef.
	  * src/vm/vm.c: Likewise.
	  * src/vm/vm.h: Likewise.
	  * src/native/jni.c: Likewise. (_Jv_jni_invokeNative): Check for
	exception too when vm_array_from_objectarray returns. ........
	r8211 | michi | 2007-07-18 21:52:23 +0200 (Wed, 18 Jul 2007) | 25
	lines

	 * src/vm/jit/replace.h (REPLACEMENT_EMIT_STUBS): Removed macro.

	 * src/vm/jit/emit-common.h (emit_replacement_stubs): Removed.

	 * src/vm/jit/arm/emit.c,
	  * src/vm/jit/arm/codegen.c,
	  * src/vm/jit/powerpc/emit.c,
	  * src/vm/jit/powerpc/codegen.c,
	  * src/vm/jit/sparc64/emit.c,
	  * src/vm/jit/sparc64/codegen.c,
	  * src/vm/jit/alpha/emit.c,
	  * src/vm/jit/alpha/codegen.c,
	  * src/vm/jit/s390/emit.c,
	  * src/vm/jit/mips/emit.c,
	  * src/vm/jit/mips/codegen.c,
	  * src/vm/jit/m68k/codegen.c,
	  * src/vm/jit/powerpc64/emit.c,
	  * src/vm/jit/powerpc64/codegen.c,
	  * src/vm/jit/i386/emit.c,
	  * src/vm/jit/i386/codegen.c,
	  * src/vm/jit/x86_64/emit.c,
	  * src/vm/jit/x86_64/codegen.c (emit_replacement_stubs): Removed.
	(codegen_emit): Do not create replacement stubs anymore. ........
	r8212 | twisti | 2007-07-18 21:59:32 +0200 (Wed, 18 Jul 2007) | 14
	lines

	 * src/vm/vm.c (opts): Added -XX. (usage): Small text change.

	 * src/vmcore/options.c (opt_DebugStackFrameInfo): Added.
	(opt_DebugStackTrace): Likewise. (options_XX): Added type and some
	documentation. (options_xxusage): New function. (options_xx): Do
	more error checking.

	 * src/vmcore/options.h (option_t): Added type and renamed option
	to value. (opt_DebugStackFrameInfo): Added.
	(opt_DebugStackTrace): Likewise. ........ r8213 | michi |
	2007-07-18 22:08:26 +0200 (Wed, 18 Jul 2007) | 5 lines

	 * src/vmcore/options.h (opt_replace_verbose): Removed.
	  * src/vmcore/options.c (opt_replace_verbose): Removed.
	  * src/vm/vm.c [ENABLE_INLINING]: Removed options -ir and -iR, this is
	now called -XX:TraceReplacement. ........ r8214 | michi |
	2007-07-18 22:27:12 +0200 (Wed, 18 Jul 2007) | 2 lines

	 * src/vmcore/options.c (options_XX): Fixed -XX:TraceReplacement.
	........ r8215 | michi | 2007-07-18 22:31:21 +0200 (Wed, 18 Jul
	2007) | 6 lines

	 * src/vm/jit/code.h (codeinfo) [ENABLE_REPLACEMENT]: Removed
	obsolet pointer to replacementstubs.

	 * src/vm/jit/codegen-common.c (codegen_finish)
	[ENABLE_REPLACEMENT]: Do not resolve pointer to replacementstubs.
	........ r8216 | michi | 2007-07-19 15:51:21 +0200 (Thu, 19 Jul
	2007) | 20 lines

	 * src/vm/jit/powerpc/emit.c (emit_patcher_traps): Formerly known
	as emit_patcher_stubs, now emits traps instead of stubs.

	 * src/vm/jit/powerpc/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	 * src/vm/jit/powerpc/patcher.c: Adapted patchers to new signature
	for traps. (patcher_wrapper): Removed, this is obsolete.

	 * src/vm/jit/powerpc/asmpart.S (asm_patcher_wrapper): Removed,
	this is obsolete.

	 * src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Only calls the exception handling if exception object present.

	 * src/vm/jit/powerpc/darwin/md-os.c (md_signal_handler_sigsegv):
	Likewise.

	 * src/vm/jit/patcher-common.h [__POWERPC__]: Enabled new patcher
	stuff.

	 * src/vm/jit/patcher.h [__POWERPC__]: Defined away old patcher
	stuff. ........ r8217 | michi | 2007-07-19 17:44:41 +0200 (Thu, 19
	Jul 2007) | 3 lines

	 * src/vm/jit/arm/md-os.c (md_signal_handler_sigsegv): Added
	additional debug output. ........ r8218 | michi | 2007-07-19
	18:33:19 +0200 (Thu, 19 Jul 2007) | 5 lines

	 * src/vm/jit/s390/md.c (md_get_method_patch_address): Fixed
	cornercase for replacement.

	 * src/vm/jit/m68k/md.c (md_get_method_patch_address): Likewise.
	........ r8219 | twisti | 2007-07-20 18:52:11 +0200 (Fri, 20 Jul
	2007) | 6 lines

	 * src/vmcore/class.c (class_get_superclass): New function.
	  * src/vmcore/class.h: Likewise.

	 * src/native/jni.c (_Jv_JNI_GetSuperclass): Use
	class_get_superclass.
	  * src/native/vm/java_lang_Class.c (getSuperclass): Likewise. ........
	r8220 | twisti | 2007-07-22 17:37:52 +0200 (Sun, 22 Jul 2007) | 8
	lines

	 * src/vmcore/options.c (opt_TraceJNICalls): Added.
	  * src/vmcore/options.h: Likewise.

	 * src/native/jni.c (TRACEJNICALLS): Enabled.
	(_Jv_JNI_GetStringLength): Added TRACEJNICALLS.
	(_Jv_JNI_NewStringUTF): Likewise. (_Jv_JNI_GetStringUTFLength):
	Likewise. ........ r8221 | twisti | 2007-07-22 21:31:41 +0200
	(Sun, 22 Jul 2007) | 3 lines

	 * src/native/jni.c (_Jv_JNI_GetSuperclass): Fixed TRACEJNICALLS.
	(_Jv_JNI_GetStringUTFRegion): Bugfix, start at offset to copy data.
	........ r8222 | twisti | 2007-07-22 22:07:55 +0200 (Sun, 22 Jul
	2007) | 3 lines

	 * src/threads/native/threads.h (threads_yield): Removed.
	  * src/threads/threads-common.h (threads_yield): Added. ........
	r8223 | twisti | 2007-07-22 22:43:05 +0200 (Sun, 22 Jul 2007) | 3
	lines

	 * src/vmcore/class.c (class_get_signature): New function.
	  * src/vmcore/class.h: Likewise. ........ r8224 | twisti | 2007-07-23
	21:07:48 +0200 (Mon, 23 Jul 2007) | 2 lines

	 * src/vmcore/class.h (classinfo): Removed unused listnode.
	........ r8225 | twisti | 2007-07-23 23:33:16 +0200 (Mon, 23 Jul
	2007) | 5 lines

	 * src/native/vm/sun_misc_Unsafe.c (vm/stringlocal.h): Added.
	(putInt): New function. (getObject): Likewise. (defineClass):
	Likewise. ........ r8226 | twisti | 2007-07-24 10:21:23 +0200
	(Tue, 24 Jul 2007) | 4 lines

	 * src/native/vm/sun_misc_Unsafe.c [WITH_CLASSPATH_SUN]
	(native/include/java_security_ProtectionDomain.h): Removed #ifdef.
	(defineClass) [WITH_CLASSPATH_GNU]: Renamed pd to protectionDomain.
	........ r8227 | twisti | 2007-07-24 13:55:07 +0200 (Tue, 24 Jul
	2007) | 16 lines

	 * src/vmcore/loader.c (vmcore/field.h): Added. (load_field):
	Removed. (load_class_from_classbuffer): Call field_load.

	 * src/vmcore/field.c (stdint.h): Added. (vm/exceptions.h):
	Likewise. (vm/stringlocal.h): Likewise. (vm/vm.h): Likewise.
	(vmcore/descriptor.h): Likewise. (vmcore/loader.h): Likewise.
	(vmcore/options.h): Likewise. (vmcore/suck.h): Likewise.
	(field_load): New function.

	 * src/vmcore/field.h (field_load): Added. ........ r8228 |
	twisti | 2007-07-24 14:37:25 +0200 (Tue, 24 Jul 2007) | 12 lines

	 * src/vmcore/loader.c (vmcore/method.h): Added.
	(loader_load_method): Removed. (load_class_from_classbuffer): Call
	method_load.

	 * src/vmcore/method.c (stdint.h): Added. (threads/lock-common):
	Likewise. (vm/exceptions.h): Likewise. (vmcore/suck.h):
	Likewise. (method_load): New function.

	 * src/vmcore/method.h (method_load): Added. ........ r8229 |
	twisti | 2007-07-24 20:42:44 +0200 (Tue, 24 Jul 2007) | 2 lines

	 * src/vmcore/field.h (vmcore/loader.h): Added. ........ r8230 |
	twisti | 2007-07-25 10:23:10 +0200 (Wed, 25 Jul 2007) | 9 lines

	 * src/vm/string.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h: Removed eager-loading stuff (as it was broken
	anyways). ........ r8231 | twisti | 2007-07-25 16:21:24 +0200
	(Wed, 25 Jul 2007) | 6 lines

	 * src/vmcore/class.c [ENABLE_JAVASE] (class_get_signature): Only
	for JavaSE.
	  * src/vmcore/class.h: Likewise.

	 * src/vmcore/method.h (vmcore/loader.h): Added. ........ r8232 |
	twisti | 2007-07-25 16:51:40 +0200 (Wed, 25 Jul 2007) | 4 lines

	 * src/vmcore/descriptor.c (vm/vm.h): Added.
	(descriptor_to_basic_type): Code cleanup. (descriptor_typesize):
	Likewise. ........ r8233 | twisti | 2007-07-25 17:11:20 +0200
	(Wed, 25 Jul 2007) | 5 lines

	 * src/vmcore/descriptor.c (descriptor_to_basic_type): Changed
	return type to int. (descriptor_typesize): Likewise.
	  * src/vmcore/descriptor.h: Likewise. ........ r8234 | twisti |
	2007-07-26 10:21:25 +0200 (Thu, 26 Jul 2007) | 4 lines

	 * src/vmcore/linker.c (dummy_alignment_long_t): New structure.
	(dummy_alignment_double_t): Likewise. (linker_init): Added
	long/double alignment check. ........ r8235 | twisti | 2007-07-26
	10:29:24 +0200 (Thu, 26 Jul 2007) | 3 lines

	 * THIRDPARTY: Fixed classes path, added contrib/mapfile-vers-
	product, src/lib/gnu/sun/misc/Unsafe.java ........ r8236 |
	twisti | 2007-07-27 12:18:17 +0200 (Fri, 27 Jul 2007) | 22 lines

	 * src/vm/vm.c (version): Removed configuration output.
	(vm_printconfig): New function. (vm_create): Set bootclasspath and
	classpath whenever changed and don't call properties_postinit.
	This fixes a bug with
	  -Djava.class.path.
	  * src/vm/vm.h (vm_printconfig): Added.

	 * src/vm/properties.c (properties_init): Set java.vm.info for all
	JavaSE configurations. (properties_postinit): Removed.
	  * src/vm/properties.h (properties_postinit): Likewise.

	 * src/vmcore/options.c (opt_PrintConfig): Added. (options_xx):
	Likewise.
	  * src/vmcore/options.h (opt_PrintConfig): Likewise.

	 * src/vmcore/suck.c (suck_add_from_property): Reset the
	bootclasspath after it changed.

	 * src/cacaoh/dummy.c (properties_add): New dummy.
	(vm_printconfig): Likewise. ........ r8237 | twisti | 2007-07-27
	18:15:29 +0200 (Fri, 27 Jul 2007) | 16 lines

	 * src/vmcore/class.c (class_sun_reflect_MagicAccessorImpl): Added.
	(class_issubclass): Don't get super-class directly, it can be
	unresolved. Use class_get_superclass.

	 * src/vmcore/class.h (class_sun_reflect_MagicAccessorImpl): Added.

	 * src/vmcore/loader.c (loader_init): Load
	class_sun_reflect_MagicAccessorImpl.

	 * src/vmcore/linker.c (linker_init): Link
	class_sun_reflect_MagicAccessorImpl.

	 * src/vm/access.c (access_is_accessible_class)
	[WITH_CLASSPATH_SUN]: Added sun/reflect/MagicAccessorImpl check.
	(access_is_accessible_member): Likewise. ........ r8238 | twisti |
	2007-07-27 20:41:53 +0200 (Fri, 27 Jul 2007) | 4 lines

	 * src/vmcore/class.c (class_resolve_superclass): New function.
	(class_issubclass): Use class_resolve_superclass.
	(class_get_superclass): Likewise. ........ r8239 | twisti |
	2007-07-29 21:21:18 +0200 (Sun, 29 Jul 2007) | 3 lines

	 * src/vm/vm.c (vm_create) [WITH_CLASSPATH_SUN]: Set bootclasspath
	as HotSpot does. ........ r8240 | pm | 2007-07-29 22:36:47 +0200
	(Sun, 29 Jul 2007) | 7 lines

	 * src/vm/jit/replace.c: Enaled replacement on s390.
	  * src/vm/jit/s390/arch.h, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c: Changed a lot: implemented profiling, fixed
	bugs found by mauve, begun work on replacament. ........ r8241 |
	twisti | 2007-07-30 11:26:31 +0200 (Mon, 30 Jul 2007) | 4 lines

	 * m4/ac_prog_javac.m4 (AC_PROG_JAVAC): Try javac as first
	compiler. Left jikes in there so configure can finish on machines
	where we don't have a javac or ecj. ........ r8242 | twisti |
	2007-07-31 10:45:35 +0200 (Tue, 31 Jul 2007) | 4 lines

	 * src/mm/boehm.c (heap_allocate): Call
	GC_REGISTER_FINALIZER_NO_ORDER instead of GC_REGISTER_FINALIZER.
	This fixes the GC heap memory leak seen with e.g. Jetty. ........
	r8243 | michi | 2007-07-31 10:57:54 +0200 (Tue, 31 Jul 2007) | 21
	lines

	 * src/vm/exceptions.c (exceptions_new_hardware_exception): Do not
	create sfi.
	  * src/vm/exceptions.h (exceptions_new_hardware_exception): Changed
	signature.

	 * src/vm/jit/arm/linux/md-os.c
	  * src/vm/jit/powerpc/linux/md-os.c
	  * src/vm/jit/powerpc/darwin/md-os.c
	  * src/vm/jit/sparc64/linux/md-os.c
	  * src/vm/jit/sparc64/solaris/md-os.c
	  * src/vm/jit/alpha/linux/md-os.c
	  * src/vm/jit/s390/md.c
	  * src/vm/jit/mips/linux/md-os.c
	  * src/vm/jit/mips/irix/md-os.c
	  * src/vm/jit/m68k/linux/md-os.c
	  * src/vm/jit/powerpc64/linux/md-os.c
	  * src/vm/jit/i386/darwin/md-os.c
	  * src/vm/jit/i386/linux/md-os.c
	  * src/vm/jit/x86_64/linux/md-os.c: Signal handlers create the sfi
	now. Adapted to above changes. Exception object variable is now
	called "e" on all archs. ........ r8244 | michi | 2007-07-31
	11:30:28 +0200 (Tue, 31 Jul 2007) | 4 lines

	 * src/vm/jit/replace.c (replace_me_wrapper): Added.
	  * src/vm/jit/replace.h (replace_me_wrapper): Added.
	  * src/vm/exceptions.c (exceptions_new_hardware_exception): Call above
	function. ........
	[ec6d259e4518]

	* src/vm/exceptions.c, src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/replace.c (replace_me_wrapper): Added.
	* src/vm/jit/replace.h (replace_me_wrapper): Added.
	* src/vm/exceptions.c (exceptions_new_hardware_exception): Call above
	function.
	[dd4bd5f7600f]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/linux/md-os.c, src/vm/jit/i386/darwin/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/md.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/solaris/md-
	os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/exceptions.c (exceptions_new_hardware_exception): Do not
	create sfi.
	* src/vm/exceptions.h (exceptions_new_hardware_exception): Changed
	signature.

	* src/vm/jit/arm/linux/md-os.c
	* src/vm/jit/powerpc/linux/md-os.c
	* src/vm/jit/powerpc/darwin/md-os.c
	* src/vm/jit/sparc64/linux/md-os.c
	* src/vm/jit/sparc64/solaris/md-os.c
	* src/vm/jit/alpha/linux/md-os.c
	* src/vm/jit/s390/md.c
	* src/vm/jit/mips/linux/md-os.c
	* src/vm/jit/mips/irix/md-os.c
	* src/vm/jit/m68k/linux/md-os.c
	* src/vm/jit/powerpc64/linux/md-os.c
	* src/vm/jit/i386/darwin/md-os.c
	* src/vm/jit/i386/linux/md-os.c
	* src/vm/jit/x86_64/linux/md-os.c: Signal handlers create the sfi now.
	Adapted to above changes. Exception object variable is now called
	"e" on all archs.
	[02a065687d24]

2007-07-31  twisti  <twisti>

	* src/mm/boehm.c:
	* src/mm/boehm.c (heap_allocate): Call
	GC_REGISTER_FINALIZER_NO_ORDER instead of GC_REGISTER_FINALIZER.
	This fixes the GC heap memory leak seen with e.g. Jetty.
	[1dfe39d5388f]

2007-07-30  twisti  <twisti>

	* m4/ac_prog_javac.m4:
	* m4/ac_prog_javac.m4 (AC_PROG_JAVAC): Try javac as first compiler.
	Left jikes in there so configure can finish on machines where we
	don't have a javac or ecj.
	[03f3342458a9]

2007-07-29  pm  <pm>

	* src/vm/jit/replace.c, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c:
	* src/vm/jit/replace.c: Enaled replacement on s390.
	* src/vm/jit/s390/arch.h, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c: Changed a lot: implemented profiling, fixed
	bugs found by mauve, begun work on replacament.
	[e58b898d27e9]

2007-07-29  twisti  <twisti>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create) [WITH_CLASSPATH_SUN]: Set bootclasspath as
	HotSpot does.
	[931286015662]

2007-07-27  twisti  <twisti>

	* src/vmcore/class.c:
	* src/vmcore/class.c (class_resolve_superclass): New function.
	(class_issubclass): Use class_resolve_superclass.
	(class_get_superclass): Likewise.
	[f523912ffb36]

	* src/vm/access.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/loader.c:
	* src/vmcore/class.c (class_sun_reflect_MagicAccessorImpl): Added.
	(class_issubclass): Don't get super-class directly, it can be
	unresolved. Use class_get_superclass.

	* src/vmcore/class.h (class_sun_reflect_MagicAccessorImpl): Added.

	* src/vmcore/loader.c (loader_init): Load
	class_sun_reflect_MagicAccessorImpl.

	* src/vmcore/linker.c (linker_init): Link
	class_sun_reflect_MagicAccessorImpl.

	* src/vm/access.c (access_is_accessible_class) [WITH_CLASSPATH_SUN]:
	Added sun/reflect/MagicAccessorImpl check.
	(access_is_accessible_member): Likewise.
	[f8cb3cfe7a30]

	* src/cacaoh/dummy.c, src/vm/properties.c, src/vm/properties.h,
	src/vm/vm.c, src/vm/vm.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/suck.c:
	* src/vm/vm.c (version): Removed configuration output.
	(vm_printconfig): New function. (vm_create): Set bootclasspath and
	classpath whenever changed and don't call properties_postinit. This
	fixes a bug with
	-Djava.class.path.
	* src/vm/vm.h (vm_printconfig): Added.

	* src/vm/properties.c (properties_init): Set java.vm.info for all
	JavaSE configurations. (properties_postinit): Removed.
	* src/vm/properties.h (properties_postinit): Likewise.

	* src/vmcore/options.c (opt_PrintConfig): Added. (options_xx):
	Likewise.
	* src/vmcore/options.h (opt_PrintConfig): Likewise.

	* src/vmcore/suck.c (suck_add_from_property): Reset the
	bootclasspath after it changed.

	* src/cacaoh/dummy.c (properties_add): New dummy. (vm_printconfig):
	Likewise.
	[e0faa4cf75a1]

2007-07-26  twisti  <twisti>

	* THIRDPARTY:
	* THIRDPARTY: Fixed classes path, added contrib/mapfile-vers-
	product, src/lib/gnu/sun/misc/Unsafe.java
	[b36b7d0fe3ef]

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (dummy_alignment_long_t): New structure.
	(dummy_alignment_double_t): Likewise. (linker_init): Added
	long/double alignment check.
	[8122b21bcc2c]

2007-07-25  twisti  <twisti>

	* src/vmcore/descriptor.c, src/vmcore/descriptor.h:
	* src/vmcore/descriptor.c (descriptor_to_basic_type): Changed return
	type to int. (descriptor_typesize): Likewise.
	* src/vmcore/descriptor.h: Likewise.
	[7cb8e297edcf]

	* src/vmcore/descriptor.c:
	* src/vmcore/descriptor.c (vm/vm.h): Added.
	(descriptor_to_basic_type): Code cleanup. (descriptor_typesize):
	Likewise.
	[60fed621bcbf]

	* src/vmcore/class.c, src/vmcore/class.h, src/vmcore/method.h:
	* src/vmcore/class.c [ENABLE_JAVASE] (class_get_signature): Only for
	JavaSE.
	* src/vmcore/class.h: Likewise.

	* src/vmcore/method.h (vmcore/loader.h): Added.
	[c1489229706f]

	* src/vm/string.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vm/string.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h: Removed eager-loading stuff (as it was broken
	anyways).
	[5867a4482f05]

2007-07-24  twisti  <twisti>

	* src/vmcore/field.h:
	* src/vmcore/field.h (vmcore/loader.h): Added.
	[cfdc335e6834]

	* src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h:
	* src/vmcore/loader.c (vmcore/method.h): Added.
	(loader_load_method): Removed. (load_class_from_classbuffer): Call
	method_load.

	* src/vmcore/method.c (stdint.h): Added. (threads/lock-common):
	Likewise. (vm/exceptions.h): Likewise. (vmcore/suck.h): Likewise.
	(method_load): New function.

	* src/vmcore/method.h (method_load): Added.
	[3b822b675cae]

	* src/vmcore/field.c, src/vmcore/field.h, src/vmcore/loader.c:
	* src/vmcore/loader.c (vmcore/field.h): Added. (load_field):
	Removed. (load_class_from_classbuffer): Call field_load.

	* src/vmcore/field.c (stdint.h): Added. (vm/exceptions.h): Likewise.
	(vm/stringlocal.h): Likewise. (vm/vm.h): Likewise.
	(vmcore/descriptor.h): Likewise. (vmcore/loader.h): Likewise.
	(vmcore/options.h): Likewise. (vmcore/suck.h): Likewise.
	(field_load): New function.

	* src/vmcore/field.h (field_load): Added.
	[251b0a971fed]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c [WITH_CLASSPATH_SUN]
	(native/include/java_security_ProtectionDomain.h): Removed #ifdef.
	(defineClass) [WITH_CLASSPATH_GNU]: Renamed pd to protectionDomain.
	[ea135360488b]

2007-07-23  twisti  <twisti>

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (vm/stringlocal.h): Added.
	(putInt): New function. (getObject): Likewise. (defineClass):
	Likewise.
	[7203affa0097]

	* src/vmcore/class.h:
	* src/vmcore/class.h (classinfo): Removed unused listnode.
	[3ff1aad8b73c]

2007-07-22  twisti  <twisti>

	* src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_get_signature): New function.
	* src/vmcore/class.h: Likewise.
	[880cb019c874]

	* src/threads/native/threads.h, src/threads/threads-common.h:
	* src/threads/native/threads.h (threads_yield): Removed.
	* src/threads/threads-common.h (threads_yield): Added.
	[12761839a9fd]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_GetSuperclass): Fixed TRACEJNICALLS.
	(_Jv_JNI_GetStringUTFRegion): Bugfix, start at offset to copy data.
	[d3a41ccae208]

	* src/native/jni.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_TraceJNICalls): Added.
	* src/vmcore/options.h: Likewise.

	* src/native/jni.c (TRACEJNICALLS): Enabled.
	(_Jv_JNI_GetStringLength): Added TRACEJNICALLS.
	(_Jv_JNI_NewStringUTF): Likewise. (_Jv_JNI_GetStringUTFLength):
	Likewise.
	[352b9420e7ec]

2007-07-20  twisti  <twisti>

	* src/native/jni.c, src/native/vm/java_lang_Class.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_get_superclass): New function.
	* src/vmcore/class.h: Likewise.

	* src/native/jni.c (_Jv_JNI_GetSuperclass): Use
	class_get_superclass.
	* src/native/vm/java_lang_Class.c (getSuperclass): Likewise.
	[0e51eac71071]

2007-07-19  michi  <michi>

	* src/vm/jit/m68k/md.c, src/vm/jit/s390/md.c:
	* src/vm/jit/s390/md.c (md_get_method_patch_address): Fixed
	cornercase for replacement.

	* src/vm/jit/m68k/md.c (md_get_method_patch_address): Likewise.
	[669f79995095]

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/md-os.c (md_signal_handler_sigsegv): Added
	additional debug output.
	[0ca11e0b148b]

	* src/vm/jit/patcher-common.h, src/vm/jit/patcher.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc/patcher.c:
	* src/vm/jit/powerpc/emit.c (emit_patcher_traps): Formerly known as
	emit_patcher_stubs, now emits traps instead of stubs.

	* src/vm/jit/powerpc/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	* src/vm/jit/powerpc/patcher.c: Adapted patchers to new signature
	for traps. (patcher_wrapper): Removed, this is obsolete.

	* src/vm/jit/powerpc/asmpart.S (asm_patcher_wrapper): Removed, this
	is obsolete.

	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv): Only
	calls the exception handling if exception object present.

	* src/vm/jit/powerpc/darwin/md-os.c (md_signal_handler_sigsegv):
	Likewise.

	* src/vm/jit/patcher-common.h [__POWERPC__]: Enabled new patcher
	stuff.

	* src/vm/jit/patcher.h [__POWERPC__]: Defined away old patcher
	stuff.
	[5feca9dd36ee]

2007-07-18  michi  <michi>

	* src/vm/jit/code.h, src/vm/jit/codegen-common.c:
	* src/vm/jit/code.h (codeinfo) [ENABLE_REPLACEMENT]: Removed obsolet
	pointer to replacementstubs.

	* src/vm/jit/codegen-common.c (codegen_finish) [ENABLE_REPLACEMENT]:
	Do not resolve pointer to replacementstubs.
	[6a3a569589cb]

	* src/vmcore/options.c:
	* src/vmcore/options.c (options_XX): Fixed -XX:TraceReplacement.
	[6ca74617e290]

	* src/vm/vm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.h (opt_replace_verbose): Removed.
	* src/vmcore/options.c (opt_replace_verbose): Removed.
	* src/vm/vm.c [ENABLE_INLINING]: Removed options -ir and -iR, this is
	now called -XX:TraceReplacement.
	[503ca78a9980]

2007-07-18  twisti  <twisti>

	* src/vm/vm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/vm.c (opts): Added -XX. (usage): Small text change.

	* src/vmcore/options.c (opt_DebugStackFrameInfo): Added.
	(opt_DebugStackTrace): Likewise. (options_XX): Added type and some
	documentation. (options_xxusage): New function. (options_xx): Do
	more error checking.

	* src/vmcore/options.h (option_t): Added type and renamed option to
	value. (opt_DebugStackFrameInfo): Added. (opt_DebugStackTrace):
	Likewise.
	[90b1f890ec50]

2007-07-18  michi  <michi>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/emit-
	common.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/replace.h,
	src/vm/jit/s390/emit.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c:
	* src/vm/jit/replace.h (REPLACEMENT_EMIT_STUBS): Removed macro.

	* src/vm/jit/emit-common.h (emit_replacement_stubs): Removed.

	* src/vm/jit/arm/emit.c,
	* src/vm/jit/arm/codegen.c,
	* src/vm/jit/powerpc/emit.c,
	* src/vm/jit/powerpc/codegen.c,
	* src/vm/jit/sparc64/emit.c,
	* src/vm/jit/sparc64/codegen.c,
	* src/vm/jit/alpha/emit.c,
	* src/vm/jit/alpha/codegen.c,
	* src/vm/jit/s390/emit.c,
	* src/vm/jit/mips/emit.c,
	* src/vm/jit/mips/codegen.c,
	* src/vm/jit/m68k/codegen.c,
	* src/vm/jit/powerpc64/emit.c,
	* src/vm/jit/powerpc64/codegen.c,
	* src/vm/jit/i386/emit.c,
	* src/vm/jit/i386/codegen.c,
	* src/vm/jit/x86_64/emit.c,
	* src/vm/jit/x86_64/codegen.c (emit_replacement_stubs): Removed.
	(codegen_emit): Do not create replacement stubs anymore.
	[4b35cbd82eab]

2007-07-18  twisti  <twisti>

	* src/cacaoh/dummy.c, src/native/jni.c, src/vm/builtin.c,
	src/vm/builtintable.inc, src/vm/exceptions.c, src/vm/global.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/asmpart.h,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c, src/vm/jit/i386
	/md-abi.c, src/vm/jit_interface.h, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/descriptor.c:
	* src/vm/jit/allocator/simplereg.c: Replaced HAS_4BYTE_STACKSLOT
	with SIZEOF_VOID_P == 4.

	* src/vm/jit/i386/emit.c (vm/jit/abi.h): Added.
	(emit_verbosecall_enter): Changed to 8-byte stackslots.

	* src/vm/jit/i386/codegen.c (codegen_emit): Changed to 8-byte
	stackslots. (codegen_emit_stub_native): Likewise.

	* src/vm/jit/i386/arch.h (HAS_4BYTE_STACKSLOT): Removed.
	(ALIGN_LONGS_IN_MEMORY): Likewise. (ALIGN_DOUBLES_IN_MEMORY):
	Likewise.

	* src/vm/jit/i386/asmpart.S (asm_vm_call_method): Rewritten for new
	argument passing. (asm_handle_exception): Use 8-byte stackslots.

	* src/vm/jit/i386/md-abi.c (md_param_alloc): Use 8-byte stackslots
	and set pd->index. (md_param_alloc_native): New function.

	* src/vm/global.h (ALIGN_EVEN): New macro. (ALIGN_ODD): Likewise.
	(ALIGN_2): Defined to ALIGN_EVEN.

	* src/vm/builtintable.inc (builtintable_function): Removed #ifdef
	for java.lang.VMSystem.arraycopy, this works now correctly.

	* src/vm/builtin.c (builtintable_init): Set ACC_METHOD_BUILTIN when
	parsing the decriptor.

	* src/vm/jit_interface.h (md_param_alloc_native): Added.

	* src/vm/exceptions.c (exceptions_handle_exception): Temporarily
	added __I386__ to get the monitor object correctly.

	* src/vmcore/descriptor.c (descriptor_pool_parse_method_descriptor):
	Check for ACC_METHOD_BUILTIN flag.
	(descriptor_params_from_paramtypes): Likewise.

	* src/cacaoh/dummy.c (md_param_alloc_native): Added.

	* src/vm/jit/asmpart.h: Added __I386__ ifdef.
	* src/vm/vm.c: Likewise.
	* src/vm/vm.h: Likewise.
	* src/native/jni.c: Likewise. (_Jv_jni_invokeNative): Check for
	exception too when vm_array_from_objectarray returns.
	[d8c3d6cb993f]

2007-07-17  twisti  <twisti>

	* src/native/jni.c, src/native/vm/java_lang_ClassLoader.c,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (vm/resolve.h): Added. (class_define): Changed
	signature.
	* src/vmcore/class.h (class_define): Likewise.

	* src/native/jni.c (_Jv_JNI_DefineClass): Bug fix, use class_define.

	* src/native/vm/java_lang_ClassLoader.c (defineClass): Use
	class_define.
	[e181022e65d4]

	* src/native/jni.c:
	* src/native/jni.c (TRACEJNICALLS): Added but still unused.
	(JNI_GetCreatedJavaVMs): Implemented.
	[704d5895a3e2]

2007-07-16  twisti  <twisti>

	* src/native/vm/java_lang_Class.c, src/vmcore/class.c,
	src/vmcore/class.h:
	* src/vmcore/class.c (class_get_declaringclass): New function.
	* src/vmcore/class.h: Likewise.

	* src/native/vm/java_lang_Class.c (getDeclaringClass): Use
	class_get_declaringclass.
	[1d90dbbeee2b]

2007-07-15  twisti  <twisti>

	* src/native/vm/sun/jvm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_TraceJVMCalls): Added.
	* src/vmcore/options.h: Likewise.

	* src/native/vm/sun/jvm.c (vmcore/options.h): Added. (DEBUG_JVM):
	Renamed to TRACEJVMCALLS. (JVM_GetArrayLength): Implemented.
	[e98518f9a80f]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c: Set Id keyword.
	[62b76fb297f1]

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_ArrayCopy): Fixed warnings.
	(JVM_GetStackTraceElement): Likewise. (JVM_FindLoadedClass):
	Likewise.
	[61524839b386]

	* src/native/vm/java_lang_Class.c, src/native/vm/sun/jvm.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/primitive.c,
	src/vmcore/primitive.h:
	* src/vmcore/primitive.c (primitive_class_is_primitive): Removed.
	* src/vmcore/primitive.h: Likewise.

	* src/vmcore/class.c (class_is_primitive): New function.
	(class_isanysubclass): Use class_is_primitive.
	* src/vmcore/class.h: Likewise.

	* src/native/vm/java_lang_Class.c (isPrimitive): Use
	class_is_primitive. (getDeclaringClass): Likewise.
	(getDeclaredClasses): Likewise.

	* src/native/vm/sun/jvm.c (JVM_GetProtectionDomain): Likewise.
	(JVM_IsPrimitiveClass): Likewise. (JVM_NewArray): Likewise.
	[512da3c719eb]

	* src/native/include/Makefile.am:
	* src/native/include/Makefile.am [WITH_CLASSPATH_SUN]
	(JAVASE_HEADER_FILES): Added sun_reflect_ConstantPool.h.
	[2594b1bb74d6]

	* src/native/vm/sun/jvm.c, src/vmcore/primitive.c,
	src/vmcore/primitive.h:
	* src/vmcore/primitive.c (stdint.h): Added.
	(primitive_arrayclass_get_by_name): New function.

	* src/vmcore/primitive.h (stdint.h): Added.
	(primitive_arrayclass_get_by_name): Likewise.

	* src/native/vm/sun/jvm.c (JVM_NewArray): Implemented handling for
	primitive arrays.
	[9d632e7741a1]

	* src/vm/vm.c:
	* src/vm/vm.c: Build fix.
	[a0bab80178fe]

2007-07-13  michi  <michi>

	* src/vm/jit/patcher-common.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.h (size_patchref): Added.
	* src/vmcore/statistics.c (size_patchref): Added.
	(statistics_print_memory_usage): Print size of patcher references.

	* src/vm/jit/patcher-common.c (patcher_add_patch_ref,
	patcher_list_free) [ENABLE_STATISTICS] Set size of patcher
	references accordingly.
	[a08b6b8ca02b]

2007-07-12  twisti  <twisti>

	* src/native/jni.c, src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/md-
	abi.c, src/vm/jit/asmpart.h, src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/alpha/asmpart.S (asm_vm_call_method): Rewritten for new
	argument passing.

	* src/vm/jit/alpha/md-abi.c (md_param_alloc): Set pd->index.

	* src/native/jni.c: Added __ALPHA__ ifdef.
	* src/vm/vm.c: Likewise.
	* src/vm/vm.h: Likewise.
	* src/vm/jit/asmpart.h: Likewise.
	[e797b7ba8cef]

2007-07-11  twisti  <twisti>

	* src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/x86_64/asmpart.S (asm_vm_call_method): Fixed stack
	alignment.
	[83e9597727e8]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Fixed bug when taking
	out double arguments. (codegen_emit_stub_native): Use switch-case
	for saving and restoring argument registers.
	[c1098e0c7614]

2007-07-11  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): Extended maximal
	interface table offset from 12 bit to 16 bit in
	ICMD_INVOKEINTERFACE.
	* src/vm/jit/s390/patcher.c (patcher_invokeinterface): Likewise.
	[f6bf38c6c8ef]

2007-07-10  twisti  <twisti>

	* src/vm/vm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_TraceJavaCalls): Added. (options_XX):
	Added opt_TraceJavaCalls. (options_xx): Likewise.

	* src/vmcore/options.h (opt_TraceJavaCalls): Added.

	* src/vm/vm.c (XXusage): Removed -verbose:call. (vm_create):
	Likewise.
	[9d27af991ee3]

2007-07-09  twisti  <twisti>

	* src/vm/global.h:
	* src/vm/global.h (ALIGN_2): Use logical arithmetic.
	[95411b1de43b]

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv): Fixed
	typo.
	[81577d9b7a70]

2007-07-08  twisti  <twisti>

	* src/vm/jit/powerpc/darwin/md-abi.h, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.h:
	* src/vm/jit/powerpc/emit.c (stdint.h): Added
	(emit_verbosecall_enter): Reimplemented (this implementation is much
	simpler and maybe should be extended to trace also arguments on the
	stack). Darwin support is still missing.

	* src/vm/jit/powerpc/darwin/md-abi.h (TRACE_ARGS_NUM): Changed to 4.
	* src/vm/jit/powerpc/linux/md-abi.h (TRACE_ARGS_NUM): Likewise.
	[76e8134d9547]

	* src/vm/jit/powerpc/linux/md-abi.c:
	* src/vm/jit/powerpc/linux/md-abi.c (vm/types.h): Removed.
	(stdint.h): Added and use stdint-types in this file. (_ALIGN):
	Removed and use ALIGN_2 in this file.
	[2f63d1dad075]

2007-07-07  ajordan  <ajordan>

	* src/vm/jit/sparc64/solaris/md-os.c:
	* src/vm/jit/sparc64/solaris/md-os.c: Implemented hardware exception
	handling.
	[f8def35f35a7]

2007-07-06  michi  <michi>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): ICMD_BUILTIN now calls
	stubs. (codegen_emit_stub_builtin): Implemented.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigusr1):
	Implemented.
	[8e1026b0065a]

2007-07-05  michi  <michi>

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/md.c, src/vm/jit/code.c,
	src/vm/jit/code.h, src/vm/jit/patcher.h, src/vm/jit/replace.c:
	Merged revisions 8183-8186 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8184 | michi | 2007-07-05 23:11:01 +0200 (Thu, 05 Jul
	2007) | 5 lines

	 * src/vm/jit/code.c (code_get_stack_frame_size): Removed.
	  * src/vm/jit/code.h: Likewise.

	 * src/vm/jit/replace.c: Use code->stackframesize instead of above
	function. ........ r8185 | michi | 2007-07-05 23:34:47 +0200 (Thu,
	05 Jul 2007) | 3 lines

	 * src/vm/jit/arm/md.c (md_get_method_patch_address): Added the
	replacement magic about mptr being NULL sometimes. ........
	r8186 | michi | 2007-07-06 01:48:16 +0200 (Fri, 06 Jul 2007) | 18
	lines

	 * src/vm/jit/alpha/emit.c (emit_patcher_traps): Formerly known
	as emit_patcher_stubs, now emits traps instead of stubs.

	 * src/vm/jit/alpha/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	 * src/vm/jit/alpha/patcher.c: Adapted patchers to new signature
	for traps. (patcher_wrapper): Removed, this is obsolete.

	 * src/vm/jit/alpha/asmpart.S (asm_patcher_wrapper): Removed, this
	is obsolete.

	 * src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv): Only
	calls the exception handling if exception object present.

	 * src/vm/jit/patcher-common.h [__ALPHA__]: Enabled new patcher
	stuff.

	 * src/vm/jit/patcher.h [__ALPHA__]: Defined away old patcher
	stuff. ........
	[a3741372872e]

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/patcher-common.h,
	src/vm/jit/patcher.h:
	* src/vm/jit/alpha/emit.c (emit_patcher_traps): Formerly known as
	emit_patcher_stubs, now emits traps instead of stubs.

	* src/vm/jit/alpha/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	* src/vm/jit/alpha/patcher.c: Adapted patchers to new signature for
	traps. (patcher_wrapper): Removed, this is obsolete.

	* src/vm/jit/alpha/asmpart.S (asm_patcher_wrapper): Removed, this is
	obsolete.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv): Only
	calls the exception handling if exception object present.

	* src/vm/jit/patcher-common.h [__ALPHA__]: Enabled new patcher
	stuff.

	* src/vm/jit/patcher.h [__ALPHA__]: Defined away old patcher stuff.
	[a1c06d17e926]

	* src/vm/jit/arm/md.c:
	* src/vm/jit/arm/md.c (md_get_method_patch_address): Added the
	replacement magic about mptr being NULL sometimes.
	[141abc4a7bad]

	* src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/replace.c:
	* src/vm/jit/code.c (code_get_stack_frame_size): Removed.
	* src/vm/jit/code.h: Likewise.

	* src/vm/jit/replace.c: Use code->stackframesize instead of above
	function.
	[2a910eb769bf]

	* src/vm/jit/arm/codegen.c:
	Merged revisions 8179-8182 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8182 | michi | 2007-07-05 22:36:16 +0200 (Thu, 05 Jul
	2007) | 2 lines

	 * src/vm/jit/arm/codegen.c (codegen_emit): Replacement points are
	created. ........
	[7d9eb0c5b094]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit): Replacement points are
	created.
	[668663c17f9d]

	* src/mm/cacao-gc/gc.h, src/threads/native/threads.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/linux/md-os.c:
	* src/threads/native/threads.c: Fixed bogus ifdef.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigusr1):
	Implemented.

	* src/vm/jit/arm/codegen.c (codegen_emit): ICMD_BUILTIN now calls
	stubs. (codegen_emit_stub_builtin): Implemented.
	(codegen_emit_stub_native) [ENABLE_GC_CACAO]: Saved registers are
	stored in sfi.

	* src/mm/cacao-gc/gc.h: Added ARM to ported architecture list.
	[70c7e9fae365]

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_reference_register): Fixed problem with
	threads_init.
	[1f0a1f599bf5]

	* configure.ac, src/mm/boehm.c, src/mm/nogc.c, src/native/jni.c,
	src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_Runtime.c, src/native/vm/sun_misc_Unsafe.c,
	src/vm/builtin.c, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/global.h, src/vm/jit/Makefile.am, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/codegen-common.c,
	src/vm/jit/emit-common.h, src/vm/jit/i386/darwin/Makefile.am,
	src/vm/jit/i386/darwin/md-os.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/parse.c, src/vm/jit/patcher.h, src/vm/jit/powerpc/darwin
	/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/tests/dacapo.status,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/sparc64/solaris/md-os.c,
	src/vm/jit/stacktrace.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/vm.c, src/vm/vm.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/options.c:
	Merged revisions 8137-8178 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8139 | twisti | 2007-06-24 12:12:27 +0200 (Sun, 24 Jun
	2007) | 3 lines

	 * src/vm/jit/stacktrace.c (stacktrace_print_trace): Handle
	WITH_CLASSPATH_SUN properly. ........ r8142 | pm | 2007-06-25
	20:58:11 +0200 (Mon, 25 Jun 2007) | 3 lines

	 * src/vm/jit/s390/tests/jasmin.status: Added. ........ r8143 |
	twisti | 2007-06-26 17:47:43 +0200 (Tue, 26 Jun 2007) | 3 lines

	 * src/vm/jit/i386/patcher.c (patcher_builtin_multianewarray):
	Dont' patch function address. ........ r8144 | pm | 2007-06-26
	23:16:35 +0200 (Tue, 26 Jun 2007) | 3 lines

	 * src/vm/jit/s390/tests/dacapo.status: Added more dacapo eclipse
	results. ........ r8145 | michi | 2007-06-27 10:54:10 +0200 (Wed,
	27 Jun 2007) | 16 lines

	 * src/vm/jit/patcher-common.h: Added.
	  * src/vm/jit/patcher-common.t: Added.
	  * src/vm/jit/Makefile.am: Added above two files.

	 * src/vm/jit/code.h (codeinfo): Added patcher list.
	  * src/vm/jit/code.c (code_codeinfo_new, code_codeinfo_free): Patcher
	list is created and freed together with codeinfo.

	 * src/vm/jit/codegen-common.c (codegen_finish): Absolute PCs for
	patchers are resolved.

	 * src/vm/jit/emit-common.h (emit_patcher_traps): Added prototype.

	 * src/vm/exception.c (exceptions_new_hardware_exception): Patcher
	handler is called if needed. ........ r8146 | michi | 2007-06-27
	11:04:17 +0200 (Wed, 27 Jun 2007) | 3 lines

	 * src/vm/exceptions.h: Added EXCEPTION_HARDWARE_COMPILER.
	  * src/vm/exceptions.c (exceptions_init): Made check clearer. ........
	r8147 | twisti | 2007-06-27 11:23:24 +0200 (Wed, 27 Jun 2007) | 2
	lines

	 * src/native/vm/gnu/java_lang_VMRuntime.c (unistd.h): Added.
	........ r8149 | twisti | 2007-06-27 15:26:49 +0200 (Wed, 27 Jun
	2007) | 3 lines

	 * src/native/vm/sun_misc_Unsafe.c (putObject): New function.
	(park): New function, but not implemented. ........ r8150 | twisti
	| 2007-06-27 20:35:40 +0200 (Wed, 27 Jun 2007) | 6 lines

	 * src/mm/boehm.c (gc_init): Set GC_all_interior_pointers to 0 and
	call GC_INIT very late.

	 * src/vm/vm.c (vm_create): Initialze the GC before all other
	subsystems. ........ r8151 | pm | 2007-06-27 22:08:30 +0200 (Wed,
	27 Jun 2007) | 2 lines

	 * src/vm/jit/s390/codegen.c (codegen_emit): Replace some
	load/stores by a mvc. ........ r8152 | pm | 2007-06-27 22:37:45
	+0200 (Wed, 27 Jun 2007) | 2 lines

	 * src/vm/jit/s390/codegen.c (codegen_emit): Fix profiling code.
	........ r8153 | ajordan | 2007-06-27 22:56:03 +0200 (Wed, 27 Jun
	2007) | 12 lines

	 * src/vm/jit/sparc64/md-abi.h: Removed faulty register offset
	multiplication from REG_WINDOW_TRANSPOSE.

	 * src/vm/jit/sparc64/asmpart.S: fixed offsets.h include.

	 * src/vm/jit/sparc64/solaris/macro_rename.h: Added include,
	which renames the REG_SP defined from Solaris sys headers to
	REG_SP_SOLARIS and defines mine.
	  * src/vm/jit/sparc64/emit.c: Used here.
	  * src/vm/jit/sparc64/codegen.c: Used here.
	  * src/vm/jit/sparc64/patcher.c: Used here. ........ r8154 | ajordan
	| 2007-06-27 22:56:57 +0200 (Wed, 27 Jun 2007) | 2 lines

	 * configure.ac: Added librt for SPARC/Solaris. ........ r8155 |
	ajordan | 2007-06-27 23:53:44 +0200 (Wed, 27 Jun 2007) | 6 lines

	 * src/vm/builtin.c (builtin_f2l): Added for DISABLE_GC.
	(builtin_d2l): Likewise.

	 * src/native/jni.c (_Jv_jni_invokeNative): Added SPARC to defines,
	corrected bitwise & for ARM. ........ r8156 | ajordan |
	2007-06-28 00:07:28 +0200 (Thu, 28 Jun 2007) | 2 lines

	 * configure.ac: Check for librt should only be done on Solaris.
	........ r8157 | michi | 2007-06-28 00:12:32 +0200 (Thu, 28 Jun
	2007) | 3 lines

	 * src/vm/vm.c: Fixed messed up ifdefs introduced with M68K.
	  * src/vm/vm.h: Likewise. ........ r8158 | ajordan | 2007-06-28
	02:01:34 +0200 (Thu, 28 Jun 2007) | 6 lines

	 * src/vm/jit/sparc64/md-abi.c (md_param_alloc): Added absolute
	offsets for native arguments (reguse * 8).

	 * src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Adapted
	to change above. ........ r8159 | michi | 2007-06-28 02:31:31
	+0200 (Thu, 28 Jun 2007) | 5 lines

	 * src/vm/jit/verify/typecheck-typeinferer.c: Removed patcher.h
	include.
	  * src/vm/jit/verify/typecheck.c: Likewise.
	  * src/vm/jit/parse.c: Likewise.
	  * src/vm/builtin.c: Likewise. ........ r8160 | michi | 2007-06-28
	03:52:19 +0200 (Thu, 28 Jun 2007) | 26 lines

	 * src/vm/jit/arm/emit.c (emit_patcher_traps): Formerly known as
	emit_patcher_stubs, now emits traps instead of stubs.

	 * src/vm/jit/arm/codegen.c (codegen_emit,
	codegen_emit_stub_native): Call the new patcher functions and
	adapted to above change.

	 * src/vm/jit/arm/patcher.c: Adapted patchers to new signature for
	traps. (patcher_get_putfield): Fixed severe bug for long values.
	(patcher_wrapper): Removed, this is obsolete.

	 * src/vm/jit/arm/codegen.h (M_TRAP): Added.

	 * src/vm/jit/arm/asmpart.S (asm_patcher_wrapper): Removed, this is
	obsolete.

	 * src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill): Only
	calls the exception handling if exception object present.

	 * src/vm/jit/patcher-common.c: Fixed includes.

	 * src/vm/jit/patcher-common.h [__ARM__]: Added prototypes for
	patcher functions. (patchref_t): Added datap.

	 * src/vm/jit/patcher.h [__ARM__]: Defined away old patcher stuff.

	 * src/vm/jit/codegen-common.c (codegen_finish): Resolves pr->datap
	as well. ........ r8161 | twisti | 2007-06-28 12:30:08 +0200 (Thu,
	28 Jun 2007) | 11 lines

	 * src/vm/global.h (ACC_CLASS_REFERENCE_MASK): Added.
	(ACC_CLASS_SOFT_REFERENCE): Renamed to ACC_CLASS_REFERENCE_SOFT.
	(ACC_CLASS_WEAK_REFERENCE): Renamed to ACC_CLASS_REFERENCE_WEAK.
	(ACC_CLASS_PHANTOM_REFERENCE): Renamed to
	ACC_CLASS_REFERENCE_PHANTOM.

	 * src/vmcore/class.c (class_create_classinfo): Flag
	soft/weak/phantom reference classes.

	 * src/vmcore/linker.c (link_class_intern): Inherit the reference
	flags. ........ r8162 | twisti | 2007-06-28 15:40:37 +0200 (Thu,
	28 Jun 2007) | 2 lines

	 * src/native/vm/sun/jvm.c: Added copyright header. ........
	r8163 | twisti | 2007-06-29 20:53:55 +0200 (Fri, 29 Jun 2007) | 16
	lines

	 * configure.ac (AC_CHECK_HEADERS): Added netdb.h, ucontext.h.
	(AC_CHECK_FUNCS): Added gethostbyname, htons, malloc, recv, send.
	(AC_CHECK_ENABLE_ZLIB): Moved code to function.
	(AC_CHECK_ENABLE_LTDL): Likewise.

	 * m4/zlib.m4: New file.
	  * m4/ltdl.m4: Likewise.

	 * src/native/native.c [ENABLE_LTDL && HAVE_LTDL_H] (ltdl.h): Added
	#ifdef. [ENABLE_LTDL] (hashtable_library): Likewise.
	(native_init) [ENABLE_LTDL]: Likewise. [ENABLE_LTDL]
	(native_library_open): Likewise. [ENABLE_LTDL]
	(native_library_add): Likewise. [ENABLE_LTLD]
	(native_library_find): Likewise. ........ r8164 | twisti |
	2007-06-29 20:56:08 +0200 (Fri, 29 Jun 2007) | 2 lines

	 * src/native/native.c (native_library_find): Typo. ........
	r8165 | twisti | 2007-06-29 21:02:08 +0200 (Fri, 29 Jun 2007) | 4
	lines

	 * src/native/vm/java_lang_Runtime.c [ENABLE_LTDL && HAVE_LTDL_H]
	(ltdl.h): Added #ifdef. (loadLibrary) [ENABLE_LTDL]: Likewise.
	........ r8166 | twisti | 2007-06-29 21:45:17 +0200 (Fri, 29 Jun
	2007) | 9 lines

	 * src/native/native.c: Removed wrong comment.

	 * src/native/native.h [ENABLE_LTDL && HAVE_LTDL_H] (ltdl.h): Added
	#ifdef. [ENABLE_LTDL] (hashtable_library_loader_entry): Likewise.
	[ENABLE_LTDL] (hashtable_library_name_entry): Likewise.
	[ENABLE_LTDL] (native_library_open, native_library_add)
	(native_library_find): Likewise. ........ r8167 | twisti |
	2007-06-29 22:27:41 +0200 (Fri, 29 Jun 2007) | 3 lines

	 * src/native/native.h (hashtable_library_name_entry): Moved up,
	build fix. ........ r8168 | twisti | 2007-06-30 14:20:48 +0200
	(Sat, 30 Jun 2007) | 2 lines

	 * src/mm/nogc.c (vm/vm.h): Added. ........ r8169 | twisti |
	2007-06-30 14:33:50 +0200 (Sat, 30 Jun 2007) | 18 lines

	 * src/vmcore/class.c (class_is_array): New function.
	(class_is_interface): Likewise.
	  * src/vmcore/class.h: Likewise.

	 * src/native/vm/java_lang_Class.c (stdint.h): Added.
	(isInterface): Made JNI function, use class_is_interface.
	(isArray): Made JNI function, use class_is_array.
	  * src/native/vm/java_lang_Class.h: Likewise.

	 * src/native/vm/cldc1.1/java_lang_Class.c (methods): Register
	common methods for isInterface and isArray. (isInterface):
	Removed. (isArray): Likewise.

	 * src/native/vm/gnu/java_lang_VMClass.c (isInterface): Changed to
	JNI call. (isArray): Likewise. ........ r8170 | twisti |
	2007-06-30 16:03:18 +0200 (Sat, 30 Jun 2007) | 23 lines

	 * src/native/jni.c [ENABLE_JAVASE] (native/vm/reflect.h): Added.
	(_Jv_JNI_ToReflectedMethod): Implemented.

	 * src/native/vm/java_lang_Class.c [ENABLE_JAVASE]
	(native/vm/reflect.h): Added. (getDeclaredFields): Use
	reflect_field_new. (getDeclaredMethods): Use reflect_method_new.
	(getDeclaredConstructors): Use reflect_constructor_new.
	(getEnclosingConstructor): Use reflect_constructor_new.
	(getEnclosingMethod): Use reflect_method_new.

	 * src/native/vm/sun/jvm.c (jio_vsnprintf): Added count check.
	(jio_snprintf): Implemented. (JVM_IsInterface): Use
	class_is_interface. (JVM_IsArrayClass): Use class_is_array.
	(JVM_InvokeMethod): Disabled debug output.

	 * src/native/vm/reflect.c: New file.
	  * src/native/vm/reflect.h: Likewise.

	 * src/native/vm/Makefile.am [ENABLE_JAVASE] (REFLECT_SOURCES):
	Added. (libnativevm_la_SOURCES): Added REFLECT_SOURCES. ........
	r8171 | twisti | 2007-06-30 16:13:58 +0200 (Sat, 30 Jun 2007) | 2
	lines

	 * src/native/vm/reflect.c: Fixed includes. ........ r8172 |
	twisti | 2007-06-30 16:14:52 +0200 (Sat, 30 Jun 2007) | 3 lines

	 * src/native/vm/reflect.c: Added Id keyword.
	  * src/native/vm/reflect.h: Likewise. ........ r8173 | twisti |
	2007-06-30 19:40:09 +0200 (Sat, 30 Jun 2007) | 3 lines

	 * src/native/vm/sun/jvm.c (JVM_Available): Fixed return value
	(seems it's a boolean value, 1 is OK, 0 is error). ........
	r8174 | twisti | 2007-07-01 19:49:25 +0200 (Sun, 01 Jul 2007) | 2
	lines

	 * src/vmcore/options.c (options_xx): Fixed warnings. ........
	r8175 | twisti | 2007-07-02 16:07:24 +0200 (Mon, 02 Jul 2007) | 3
	lines

	 * src/vm/exceptions.c (exceptions_init) [!(__ARM__ && __LINUX__)]:
	Don't mmap page 0x0 on arm-linux. ........ r8176 | twisti |
	2007-07-03 17:43:14 +0200 (Tue, 03 Jul 2007) | 3 lines

	 * src/vm/jit/i386/darwin/Makefile.am (AM_CPPFLAGS): Added
	  -I$(top_builddir)/src. ........ r8177 | twisti | 2007-07-03
	18:05:27 +0200 (Tue, 03 Jul 2007) | 3 lines

	 * src/native/vm/sun_misc_Unsafe.c (methods): Added unpark.
	(unpark): New function, but unimplemented. ........ r8178 | michi
	| 2007-07-05 13:13:20 +0200 (Thu, 05 Jul 2007) | 22 lines

	 * src/vm/exceptions.c (exceptions_new_hardware_exception):
	Stackframeinfo block is now on the stack of the signal handler
	function.

	 * src/vm/exceptions.h (exceptions_new_hardware_exception): Changed
	signature.

	 * src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigsegv): Passes
	sfi to exceptions function.

	 * src/vm/jit/powerpc/linux/md-os.c: Likewise.
	  * src/vm/jit/powerpc/darwin/md-os.c: Likewise.
	  * src/vm/jit/sparc64/linux/md-os.c: Likewise.
	  * src/vm/jit/sparc64/solaris/md-os.c: Likewise.
	  * src/vm/jit/alpha/linux/md-os.c: Likewise.
	  * src/vm/jit/s390/md.c: Likewise.
	  * src/vm/jit/mips/linux/md-os.c: Likewise.
	  * src/vm/jit/mips/irix/md-os.c: Likewise.
	  * src/vm/jit/m68k/linux/md-os.c: Likewise.
	  * src/vm/jit/powerpc64/linux/md-os.c: Likewise.
	  * src/vm/jit/i386/darwin/md-os.c: Likewise.
	  * src/vm/jit/i386/linux/md-os.c: Likewise.
	  * src/vm/jit/x86_64/linux/md-os.c: Likewise. ........
	[45996bcfca93]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/alpha/linux/md-
	os.c, src/vm/jit/arm/linux/md-os.c, src/vm/jit/i386/darwin/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/mips/irix/md-os.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/md.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/solaris/md-
	os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/exceptions.c (exceptions_new_hardware_exception):
	Stackframeinfo block is now on the stack of the signal handler
	function.

	* src/vm/exceptions.h (exceptions_new_hardware_exception): Changed
	signature.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigsegv): Passes
	sfi to exceptions function.

	* src/vm/jit/powerpc/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc/darwin/md-os.c: Likewise.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	* src/vm/jit/sparc64/solaris/md-os.c: Likewise.
	* src/vm/jit/alpha/linux/md-os.c: Likewise.
	* src/vm/jit/s390/md.c: Likewise.
	* src/vm/jit/mips/linux/md-os.c: Likewise.
	* src/vm/jit/mips/irix/md-os.c: Likewise.
	* src/vm/jit/m68k/linux/md-os.c: Likewise.
	* src/vm/jit/powerpc64/linux/md-os.c: Likewise.
	* src/vm/jit/i386/darwin/md-os.c: Likewise.
	* src/vm/jit/i386/linux/md-os.c: Likewise.
	* src/vm/jit/x86_64/linux/md-os.c: Likewise.
	[ed15bb556f62]

2007-07-03  twisti  <twisti>

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (methods): Added unpark. (unpark):
	New function, but unimplemented.
	[5c5f4a6dbe96]

	* src/vm/jit/i386/darwin/Makefile.am:
	* src/vm/jit/i386/darwin/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	[d090c160bd9d]

2007-07-02  twisti  <twisti>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_init) [!(__ARM__ && __LINUX__)]:
	Don't mmap page 0x0 on arm-linux.
	[00c88ae777e6]

2007-07-01  twisti  <twisti>

	* src/vmcore/options.c:
	* src/vmcore/options.c (options_xx): Fixed warnings.
	[eb45b5e3c073]

2007-06-30  twisti  <twisti>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c (JVM_Available): Fixed return value (seems
	it's a boolean value, 1 is OK, 0 is error).
	[4432ee1ce926]

	* src/native/vm/reflect.c, src/native/vm/reflect.h:
	* src/native/vm/reflect.c: Added Id keyword.
	* src/native/vm/reflect.h: Likewise.
	[046c821f97fd]

	* src/native/vm/reflect.c:
	* src/native/vm/reflect.c: Fixed includes.
	[f0af119deb56]

	* src/native/jni.c, src/native/vm/Makefile.am,
	src/native/vm/java_lang_Class.c, src/native/vm/reflect.c,
	src/native/vm/reflect.h, src/native/vm/sun/jvm.c:
	* src/native/jni.c [ENABLE_JAVASE] (native/vm/reflect.h): Added.
	(_Jv_JNI_ToReflectedMethod): Implemented.

	* src/native/vm/java_lang_Class.c [ENABLE_JAVASE]
	(native/vm/reflect.h): Added. (getDeclaredFields): Use
	reflect_field_new. (getDeclaredMethods): Use reflect_method_new.
	(getDeclaredConstructors): Use reflect_constructor_new.
	(getEnclosingConstructor): Use reflect_constructor_new.
	(getEnclosingMethod): Use reflect_method_new.

	* src/native/vm/sun/jvm.c (jio_vsnprintf): Added count check.
	(jio_snprintf): Implemented. (JVM_IsInterface): Use
	class_is_interface. (JVM_IsArrayClass): Use class_is_array.
	(JVM_InvokeMethod): Disabled debug output.

	* src/native/vm/reflect.c: New file.
	* src/native/vm/reflect.h: Likewise.

	* src/native/vm/Makefile.am [ENABLE_JAVASE] (REFLECT_SOURCES):
	Added. (libnativevm_la_SOURCES): Added REFLECT_SOURCES.
	[79479048da5d]

	* src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_is_array): New function.
	(class_is_interface): Likewise.
	* src/vmcore/class.h: Likewise.

	* src/native/vm/java_lang_Class.c (stdint.h): Added. (isInterface):
	Made JNI function, use class_is_interface. (isArray): Made JNI
	function, use class_is_array.
	* src/native/vm/java_lang_Class.h: Likewise.

	* src/native/vm/cldc1.1/java_lang_Class.c (methods): Register common
	methods for isInterface and isArray. (isInterface): Removed.
	(isArray): Likewise.

	* src/native/vm/gnu/java_lang_VMClass.c (isInterface): Changed to
	JNI call. (isArray): Likewise.
	[acb7df19a892]

	* src/mm/nogc.c:
	* src/mm/nogc.c (vm/vm.h): Added.
	[63946b83b797]

2007-06-29  twisti  <twisti>

	* src/native/native.h:
	* src/native/native.h (hashtable_library_name_entry): Moved up,
	build fix.
	[d52db4d05f7f]

	* src/native/native.c, src/native/native.h:
	* src/native/native.c: Removed wrong comment.

	* src/native/native.h [ENABLE_LTDL && HAVE_LTDL_H] (ltdl.h): Added
	#ifdef. [ENABLE_LTDL] (hashtable_library_loader_entry): Likewise.
	[ENABLE_LTDL] (hashtable_library_name_entry): Likewise.
	[ENABLE_LTDL] (native_library_open, native_library_add)
	(native_library_find): Likewise.
	[37f54ade6767]

	* src/native/vm/java_lang_Runtime.c:
	* src/native/vm/java_lang_Runtime.c [ENABLE_LTDL && HAVE_LTDL_H]
	(ltdl.h): Added #ifdef. (loadLibrary) [ENABLE_LTDL]: Likewise.
	[d4bf1a094f8c]

	* src/native/native.c:
	* src/native/native.c (native_library_find): Typo.
	[bab9a7c581a5]

	* configure.ac, m4/ltdl.m4, m4/zlib.m4, src/native/native.c:
	* configure.ac (AC_CHECK_HEADERS): Added netdb.h, ucontext.h.
	(AC_CHECK_FUNCS): Added gethostbyname, htons, malloc, recv, send.
	(AC_CHECK_ENABLE_ZLIB): Moved code to function.
	(AC_CHECK_ENABLE_LTDL): Likewise.

	* m4/zlib.m4: New file.
	* m4/ltdl.m4: Likewise.

	* src/native/native.c [ENABLE_LTDL && HAVE_LTDL_H] (ltdl.h): Added
	#ifdef. [ENABLE_LTDL] (hashtable_library): Likewise. (native_init)
	[ENABLE_LTDL]: Likewise. [ENABLE_LTDL] (native_library_open):
	Likewise. [ENABLE_LTDL] (native_library_add): Likewise.
	[ENABLE_LTLD] (native_library_find): Likewise.
	[89167cd086a1]

2007-06-28  twisti  <twisti>

	* src/native/vm/sun/jvm.c:
	* src/native/vm/sun/jvm.c: Added copyright header.
	[e28a66594929]

	* src/vm/global.h, src/vmcore/class.c, src/vmcore/linker.c:
	* src/vm/global.h (ACC_CLASS_REFERENCE_MASK): Added.
	(ACC_CLASS_SOFT_REFERENCE): Renamed to ACC_CLASS_REFERENCE_SOFT.
	(ACC_CLASS_WEAK_REFERENCE): Renamed to ACC_CLASS_REFERENCE_WEAK.
	(ACC_CLASS_PHANTOM_REFERENCE): Renamed to
	ACC_CLASS_REFERENCE_PHANTOM.

	* src/vmcore/class.c (class_create_classinfo): Flag
	soft/weak/phantom reference classes.

	* src/vmcore/linker.c (link_class_intern): Inherit the reference
	flags.
	[a26a9d65db4f]

2007-06-28  michi  <michi>

	* src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/arm/patcher.c, src/vm/jit
	/codegen-common.c, src/vm/jit/patcher-common.c, src/vm/jit/patcher-
	common.h, src/vm/jit/patcher.h:
	* src/vm/jit/arm/emit.c (emit_patcher_traps): Formerly known as
	emit_patcher_stubs, now emits traps instead of stubs.

	* src/vm/jit/arm/codegen.c (codegen_emit, codegen_emit_stub_native):
	Call the new patcher functions and adapted to above change.

	* src/vm/jit/arm/patcher.c: Adapted patchers to new signature for
	traps. (patcher_get_putfield): Fixed severe bug for long values.
	(patcher_wrapper): Removed, this is obsolete.

	* src/vm/jit/arm/codegen.h (M_TRAP): Added.

	* src/vm/jit/arm/asmpart.S (asm_patcher_wrapper): Removed, this is
	obsolete.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill): Only
	calls the exception handling if exception object present.

	* src/vm/jit/patcher-common.c: Fixed includes.

	* src/vm/jit/patcher-common.h [__ARM__]: Added prototypes for
	patcher functions. (patchref_t): Added datap.

	* src/vm/jit/patcher.h [__ARM__]: Defined away old patcher stuff.

	* src/vm/jit/codegen-common.c (codegen_finish): Resolves pr->datap
	as well.
	[dd42a4fb91a1]

	* src/vm/builtin.c, src/vm/jit/parse.c, src/vm/jit/verify/typecheck-
	typeinferer.c, src/vm/jit/verify/typecheck.c:
	* src/vm/jit/verify/typecheck-typeinferer.c: Removed patcher.h
	include.
	* src/vm/jit/verify/typecheck.c: Likewise.
	* src/vm/jit/parse.c: Likewise.
	* src/vm/builtin.c: Likewise.
	[a728115da0ec]

2007-06-28  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/md-abi.c:
	* src/vm/jit/sparc64/md-abi.c (md_param_alloc): Added absolute
	offsets for native arguments (reguse * 8).

	* src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Adapted
	to change above.
	[9cfebf36e941]

2007-06-27  michi  <michi>

	* src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c: Fixed messed up ifdefs introduced with M68K.
	* src/vm/vm.h: Likewise.
	[8eadc67728d1]

2007-06-27  ajordan  <ajordan>

	* configure.ac:
	* configure.ac: Check for librt should only be done on Solaris.
	[aaba5c87ffb0]

	* src/native/jni.c, src/vm/builtin.c:
	* src/vm/builtin.c (builtin_f2l): Added for DISABLE_GC.
	(builtin_d2l): Likewise.

	* src/native/jni.c (_Jv_jni_invokeNative): Added SPARC to defines,
	corrected bitwise & for ARM.
	[bddcdeb22dc9]

	* configure.ac:
	* configure.ac: Added librt for SPARC/Solaris.
	[923534fb6691]

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/patcher.c,
	src/vm/jit/sparc64/solaris/macro_rename.h:
	* src/vm/jit/sparc64/md-abi.h: Removed faulty register offset
	multiplication from REG_WINDOW_TRANSPOSE.

	* src/vm/jit/sparc64/asmpart.S: fixed offsets.h include.

	* src/vm/jit/sparc64/solaris/macro_rename.h: Added include, which
	renames the REG_SP defined from Solaris sys headers to
	REG_SP_SOLARIS and defines mine.
	* src/vm/jit/sparc64/emit.c: Used here.
	* src/vm/jit/sparc64/codegen.c: Used here.
	* src/vm/jit/sparc64/patcher.c: Used here.
	[2f8525b7b726]

2007-06-27  pm  <pm>

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): Fix profiling code.
	[692df92fc20d]

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): Replace some load/stores
	by a mvc.
	[ae968da74f36]

2007-06-27  twisti  <twisti>

	* src/mm/boehm.c, src/vm/vm.c:
	* src/mm/boehm.c (gc_init): Set GC_all_interior_pointers to 0 and
	call GC_INIT very late.

	* src/vm/vm.c (vm_create): Initialze the GC before all other
	subsystems.
	[7e6bf309d25b]

	* src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/sun_misc_Unsafe.c (putObject): New function. (park):
	New function, but not implemented.
	[3a5a36091d6b]

	* src/native/vm/gnu/java_lang_VMRuntime.c:
	* src/native/vm/gnu/java_lang_VMRuntime.c (unistd.h): Added.
	[748708276827]

2007-06-27  michi  <michi>

	* src/vm/exceptions.c, src/vm/exceptions.h:
	* src/vm/exceptions.h: Added EXCEPTION_HARDWARE_COMPILER.
	* src/vm/exceptions.c (exceptions_init): Made check clearer.
	[943f3069095d]

	* src/vm/exceptions.c, src/vm/jit/Makefile.am, src/vm/jit/code.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/emit-
	common.h, src/vm/jit/patcher-common.c, src/vm/jit/patcher-common.h:
	* src/vm/jit/patcher-common.h: Added.
	* src/vm/jit/patcher-common.t: Added.
	* src/vm/jit/Makefile.am: Added above two files.

	* src/vm/jit/code.h (codeinfo): Added patcher list.
	* src/vm/jit/code.c (code_codeinfo_new, code_codeinfo_free): Patcher
	list is created and freed together with codeinfo.

	* src/vm/jit/codegen-common.c (codegen_finish): Absolute PCs for
	patchers are resolved.

	* src/vm/jit/emit-common.h (emit_patcher_traps): Added prototype.

	* src/vm/exception.c (exceptions_new_hardware_exception): Patcher
	handler is called if needed.
	[e4ced3dc9153]

2007-06-26  pm  <pm>

	* src/vm/jit/s390/tests/dacapo.status:
	* src/vm/jit/s390/tests/dacapo.status: Added more dacapo eclipse
	results.
	[4ceab82084f8]

2007-06-26  twisti  <twisti>

	* src/vm/jit/i386/patcher.c:
	* src/vm/jit/i386/patcher.c (patcher_builtin_multianewarray): Dont'
	patch function address.
	[1a440facfdcb]

2007-06-25  pm  <pm>

	* src/vm/jit/s390/tests/jasmin.status:
	* src/vm/jit/s390/tests/jasmin.status: Added.
	[ea95a0a32e67]

2007-06-25  michi  <michi>

	* src/native/vm/gnu/java_lang_VMClassLoader.c:
	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(Java_java_lang_VMClassLoader_findLoadedClass): Fixed bug with
	classloader entry not being registered.
	[f7a82b765b39]

	* src/vm/jit/stacktrace.c, src/vmcore/class.c, src/vmcore/class.h:
	* src/vmcore/class.c (class_define, class_array_of): Fixed compiler
	warnings.
	* src/vmcore/class.h: Likewise.
	[a14a956dfda2]

2007-06-24  twisti  <twisti>

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_print_trace): Handle
	WITH_CLASSPATH_SUN properly.
	[6d8488b06f3f]

2007-06-22  michi  <michi>

	* src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_builtin): Adapted to
	multiplied regoff value.

	* src/vm/jit/m68k/codegen.c (codegen_emit_stub_builtin): Likewise.
	[e4de9c874bd6]

	* configure.ac, m4/classpath.m4, src/cacao/Makefile.am,
	src/lib/Makefile.am, src/native/include/Makefile.am,
	src/native/jni.c, src/native/jni.h, src/native/native.c,
	src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Object.h,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/sun_misc_Unsafe.c,
	src/threads/native/threads.c, src/threads/threads-common.c,
	src/vm/jit/arm/arch.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/replace.c,
	src/vm/properties.c, src/vm/vm.c, src/vm/vm.h, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/utf8.c, src/vmcore/utf8.h:
	Merged revisions 8123-8136 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8125 | twisti | 2007-06-21 12:02:14 +0200 (Thu, 21 Jun
	2007) | 4 lines

	 * configure.ac (AC_CHECK_HEADERS): Added sys/socket.h.
	(AC_CHECK_FUNCS): Added accept, close, connect, getsockname, listen,
	setsockopt, shutdown, socket. ........ r8126 | twisti | 2007-06-21
	12:42:35 +0200 (Thu, 21 Jun 2007) | 2 lines

	 * configure.ac (AC_CHECK_FUNCS): Added gethostname. ........
	r8127 | michi | 2007-06-21 13:55:56 +0200 (Thu, 21 Jun 2007) | 19
	lines

	 * src/vm/jit/arm/arch.h: Removed HAS_4BYTE_STACKSLOT,
	ALIGN_LONGS_IN_MEMORY and ALIGN_DOUBLES_IN_MEMORY.

	 * src/vm/jit/arm/md-abi.c (md_param_alloc): Changed to 8-byte
	stackslots and set pd->index correctly.

	 * src/vm/jit/arm/codegen.c: Changed to 8-byte stackslots (spilled
	regs and arguments only).

	 * src/vm/jit/arm/asmpart.S (asm_vm_call_method): Reimplemented to
	fit new argument passing. Changed to 8-byte stackslots.

	 * src/vm/vm.c (vm_array_store_flt, vm_array_store_dbl)
	[SUPPORT_PASS_FLOATARGS_IN_INTREGS]: Fixed.

	 * src/vm/vm.c: Added ARM ifdefs.
	  * src/vm/vm.h: Added ARM ifdefs.
	  * src/native/jni.c: Added ARM ifdefs. ........ r8128 | tbfg |
	2007-06-21 18:29:53 +0200 (Thu, 21 Jun 2007) | 11 lines

	 * src/vm/jit/m68k/linux/md-abi.h: Prepared 8 byte stackslots.
	  * src/vm/jit/m68k/linux/md-abi.c: Likewise.
	  * src/vm/jit/m68k/emit.c: Likewise.
	  * src/vm/jit/m68k/arch.h: Likewise.
	  * src/vm/jit/m68k/codegen.c: Likewise.
	  * src/vm/jit/m68k/asmpart.S: Likewise.
	  * src/vm/jit/asmpart.h: Likewise.
	  * src/vm/vm.c: Likewise.
	  * src/vm/vm.h: Likewise.
	  * src/native/jni.c: Likewise. ........ r8130 | twisti | 2007-06-22
	10:50:37 +0200 (Fri, 22 Jun 2007) | 5 lines

	 * src/vmcore/options.c (opt_ThreadStackSize): Added.
	(options_xx): Option and values are seperated by '=', not by ':'
	(let's keep compatible to Sun).
	  * src/vmcore/options.h (opt_ThreadStackSize): Added. ........ r8131
	| tbfg | 2007-06-22 11:37:00 +0200 (Fri, 22 Jun 2007) | 3 lines

	 * src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Fixed for 8
	byte stack slots.
	  * src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Fixed location of
	method address. ........ r8132 | twisti | 2007-06-22 13:15:47
	+0200 (Fri, 22 Jun 2007) | 44 lines

	 * configure.ac, contrib/mapfile-vers-product, m4/classpath.m4,
	src/cacao/Makefile.am, src/lib/Makefile.am,
	src/lib/gnu/java/lang/reflect,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java, src/lib/gnu/sun,
	src/lib/gnu/sun/misc, src/lib/gnu/sun/misc/Unsafe.java,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/jni.h, src/native/native.c, src/native/native.h,
	src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c,
	src/native/vm/java_lang_Object.h,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/sun, src/native/vm/sun/Makefile.am,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/threads/native/threads.c, src/threads/threads-common.c,
	src/vm/properties.c, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/class.h, src/vmcore/field.c, src/vmcore/field.h,
	src/vmcore/utf8.c, src/vmcore/utf8.h: Initial support for using
	OpenJDK libraries as Java core libraries. ........ r8133 |
	twisti | 2007-06-22 15:29:38 +0200 (Fri, 22 Jun 2007) | 2 lines

	 * m4/classpath.m4: Added Id keyword. ........ r8134 | twisti |
	2007-06-22 16:49:10 +0200 (Fri, 22 Jun 2007) | 8 lines

	 * src/vmcore/options.c (opt_MaxPermSize): Added. (opt_PermSize):
	Likewise. (options_xx): Check for +/- for boolean options (still
	some work left).

	 * src/vmcore/options.h (opt_MaxPermSize): Added. (opt_PermSize):
	Likewise. ........ r8135 | twisti | 2007-06-22 17:31:05 +0200
	(Fri, 22 Jun 2007) | 6 lines

	 * src/lib/gnu/sun/misc/Unsafe.java: Updated to openjdk rev239.

	 * src/native/vm/sun_misc_Unsafe.c (arrayBaseOffset): Implemented.
	(arrayIndexScale): Likewise. (addressSize): Likewise. ........
	r8136 | michi | 2007-06-22 18:33:40 +0200 (Fri, 22 Jun 2007) | 2
	lines

	 * src/vm/jit/replace.c: Adapted to multiplied regoff value.
	........
	[ee178e550972]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c: Adapted to multiplied regoff value.
	[373d83e92ed6]

2007-06-22  twisti  <twisti>

	* src/lib/gnu/sun/misc/Unsafe.java, src/native/vm/sun_misc_Unsafe.c:
	* src/lib/gnu/sun/misc/Unsafe.java: Updated to openjdk rev239.

	* src/native/vm/sun_misc_Unsafe.c (arrayBaseOffset): Implemented.
	(arrayIndexScale): Likewise. (addressSize): Likewise.
	[c5b2654c4c94]

	* src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_MaxPermSize): Added. (opt_PermSize):
	Likewise. (options_xx): Check for +/- for boolean options (still
	some work left).

	* src/vmcore/options.h (opt_MaxPermSize): Added. (opt_PermSize):
	Likewise.
	[53a39efe485c]

	* m4/classpath.m4:
	* m4/classpath.m4: Added Id keyword.
	[fa591512630b]

	* configure.ac, contrib/mapfile-vers-product, m4/classpath.m4,
	src/cacao/Makefile.am, src/lib/Makefile.am,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java,
	src/lib/gnu/sun/misc/Unsafe.java, src/native/include/Makefile.am,
	src/native/jni.c, src/native/jni.h, src/native/native.c,
	src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Object.h,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/sun/Makefile.am,
	src/native/vm/sun/jvm.c, src/native/vm/sun_misc_Unsafe.c,
	src/threads/native/threads.c, src/threads/threads-common.c,
	src/vm/properties.c, src/vm/vm.c, src/vm/vm.h, src/vmcore/class.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	* configure.ac, contrib/mapfile-vers-product, m4/classpath.m4,
	src/cacao/Makefile.am, src/lib/Makefile.am,
	src/lib/gnu/java/lang/reflect,
	src/lib/gnu/java/lang/reflect/Field.java,
	src/lib/gnu/java/lang/reflect/Method.java, src/lib/gnu/sun,
	src/lib/gnu/sun/misc, src/lib/gnu/sun/misc/Unsafe.java,
	src/native/include/Makefile.am, src/native/jni.c, src/native/jni.h,
	src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Object.h,
	src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Method.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/sun,
	src/native/vm/sun/Makefile.am, src/native/vm/sun/jvm.c,
	src/native/vm/sun_misc_Unsafe.c, src/threads/native/threads.c,
	src/threads/threads-common.c, src/vm/properties.c, src/vm/vm.c,
	src/vm/vm.h, src/vmcore/class.h, src/vmcore/field.c,
	src/vmcore/field.h, src/vmcore/utf8.c, src/vmcore/utf8.h: Initial
	support for using OpenJDK libraries as Java core libraries.
	[5c68a9a5b5d5]

2007-06-22  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Fixed for 8 byte
	stack slots.
	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Fixed location of
	method address.
	[cb59a39154b8]

2007-06-22  twisti  <twisti>

	* src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (opt_ThreadStackSize): Added. (options_xx):
	Option and values are seperated by '=', not by ':' (let's keep
	compatible to Sun).
	* src/vmcore/options.h (opt_ThreadStackSize): Added.
	[246c9137b7c3]

2007-06-22  ajordan  <ajordan>

	* src/mm/cacao-gc/gc.h, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/patcher.c:
	* src/mm/cacao-gc/gc.h: Added SPARC64 to the architectures that
	support exactGC

	* src/vm/jit/sparc64/emit.c (emit_replacement_stubs): Added stub-
	like implementation only non-trappable GC points will work.

	* src/vm/jit/sparc64/codegen.c (codegen_emit): Added replacement
	points. (codegen_emit_stub_builtin): Implemented.

	* src/vm/jit/sparc64/patcher.c (patcher_wrapper): Temp debug print,
	to see when extern sfi is created.
	[d1caef8d8461]

2007-06-21  tbfg  <tbfg>

	* src/native/jni.c, src/vm/jit/asmpart.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/m68k/linux/md-abi.h: Prepared 8 byte stackslots.
	* src/vm/jit/m68k/linux/md-abi.c: Likewise.
	* src/vm/jit/m68k/emit.c: Likewise.
	* src/vm/jit/m68k/arch.h: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/m68k/asmpart.S: Likewise.
	* src/vm/jit/asmpart.h: Likewise.
	* src/vm/vm.c: Likewise.
	* src/vm/vm.h: Likewise.
	* src/native/jni.c: Likewise.
	[92d6c9308a31]

2007-06-21  michi  <michi>

	* src/native/jni.c, src/vm/jit/arm/arch.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c, src/vm/vm.c,
	src/vm/vm.h:
	* src/vm/jit/arm/arch.h: Removed HAS_4BYTE_STACKSLOT,
	ALIGN_LONGS_IN_MEMORY and ALIGN_DOUBLES_IN_MEMORY.

	* src/vm/jit/arm/md-abi.c (md_param_alloc): Changed to 8-byte
	stackslots and set pd->index correctly.

	* src/vm/jit/arm/codegen.c: Changed to 8-byte stackslots (spilled
	regs and arguments only).

	* src/vm/jit/arm/asmpart.S (asm_vm_call_method): Reimplemented to
	fit new argument passing. Changed to 8-byte stackslots.

	* src/vm/vm.c (vm_array_store_flt, vm_array_store_dbl)
	[SUPPORT_PASS_FLOATARGS_IN_INTREGS]: Fixed.

	* src/vm/vm.c: Added ARM ifdefs.
	* src/vm/vm.h: Added ARM ifdefs.
	* src/native/jni.c: Added ARM ifdefs.
	[039c70e75777]

2007-06-21  twisti  <twisti>

	* configure.ac:
	* configure.ac (AC_CHECK_FUNCS): Added gethostname.
	[c4fdd1a8ed28]

	* configure.ac, src/cacaoh/cacaoh.c, src/cacaoh/headers.c,
	src/native/include/Makefile.am, src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/i386/emit.c, src/vm/jit/i386/md-
	abi.c, src/vm/jit/jit.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/md-abi.c,
	src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-abi.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/tools/genoffsets.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/resolve.c, src/vm/string.c, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/linker.h, src/vmcore/method.c,
	src/vmcore/method.h, src/vmcore/options.c, src/vmcore/options.h,
	src/vmcore/statistics.c, src/vmcore/statistics.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h, tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.java:
	* configure.ac (AC_CHECK_HEADERS): Added sys/socket.h.
	(AC_CHECK_FUNCS): Added accept, close, connect, getsockname, listen,
	setsockopt, shutdown, socket.
	[80f35ffa2a7b]

2007-06-21  michi  <michi>

	* src/mm/cacao-gc/heap.h:
	* src/mm/cacao-gc/heap.h: Fixed includes.
	[52beee5c1394]

2007-06-20  michi  <michi>

	* configure.ac, src/cacaoh/cacaoh.c, src/cacaoh/dummy.c,
	src/cacaoh/headers.c, src/mm/memory.c,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/gnu/Makefile.am, src/native/vm/gnu/gnu_java_lang_manag
	ement_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.h,
	src/native/vm/nativevm.c, src/native/vm/nativevm.h,
	src/native/vm/sun_misc_Unsafe.c, src/threads/native/threads.c,
	src/threads/threads-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/global.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/arm/md-
	abi.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c, src/vm/jit
	/emit-common.c, src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/md-abi.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/disass.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/md.c, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin
	/md-abi.c, src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/powerpc/netbsd/md-abi.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-abi.c,
	src/vm/jit/replace.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/dacapo.status, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/verify
	/typecheck-stackbased.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/resolve.c, src/vm/string.c, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/Makefile.am, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/linker.c, src/vmcore/linker.h, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/primitive.c,
	src/vmcore/primitive.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/utf8.c, src/vmcore/utf8.h,
	tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.java,
	tests/regression/native/testarguments.output:
	Merged revisions 8056-8122 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8058 | twisti | 2007-06-10 21:30:25 +0200 (Sun, 10 Jun
	2007) | 2 lines

	 * src/native/jni.c (_Jv_jni_vmargs_from_objectarray): Indent.
	........ r8059 | twisti | 2007-06-10 21:31:28 +0200 (Sun, 10 Jun
	2007) | 4 lines

	 * src/vm/vm.c (vm_vmargs_from_valist): Use TYPE_-defines instead
	of PRIMITIVETYPE_ ones. (vm_vmargs_from_jvalue): Likewise.
	........ r8060 | twisti | 2007-06-10 22:00:40 +0200 (Sun, 10 Jun
	2007) | 48 lines

	 * src/vm/global.h (PRIMITIVETYPE_*): Removed. (ARRAYTYPE_*):
	Likewise.

	 * src/vm/jit/verify/typecheck-typeinferer.c (vmcore/primitive.h):
	Added.
	  * src/vm/jit/verify/typecheck.c: Likewise.
	  * src/vm/jit/verify/typecheck-stackbased.c: Likewise.
	  * src/vm/jit/verify/typeinfo.c: Likewise.
	  * src/vm/builtin.c: Likewise.
	  * src/native/jni.c: Likewise.
	  * src/native/vm/gnu/java_lang_VMClassLoader.c: Likewise.
	  * src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.
	  * src/vmcore/descriptor.c: Likewise.

	 * src/vm/string.c (vmcore/primitive.h): Added.
	(stringtable_update): Use new primitive functions.

	 * src/vm/resolve.c: Likewise. (resolve_class_from_typedesc): Use
	new primitive functions.

	 * src/vm/vm.c (vmcore/primitive.h): Added. (vm_create): Call
	primitive_init.

	 * src/native/vm/java_lang_Class.c (vmcore/primitive.h): Added.
	(isPrimitive): Use primitive_class_is_primitive.
	(getDeclaringClass): Likewise. (getDeclaredClasses): Likewise.
	(getComponentType): Use primitive_class_get_by_type.

	 * src/vmcore/class.c (class_is_primitive): Removed.
	(class_primitive_get): Removed.
	  * src/vmcore/class.c: Likewise.

	 * src/vmcore/primitive.c: New file.
	  * src/vmcore/primitive.h: Likewise.

	 * src/vmcore/Makefile.am (libvmcore_la_SOURCES): Added
	primitive.[ch].

	 * src/vmcore/linker.c (vmcore/primitive.h): Added.
	(primitivetype_table): Removed. (linker_init): Removed
	link_primitivetype_table call. (link_primitivetype_table):
	Removed.

	 * src/vmcore/linker.h (primitivetypeinfo): Removed.
	(primitivetype_table): Removed.

	 * src/vm/jit/verify/typecheck-builtins.inc: Removed Contact,
	Authors from header. ........ r8061 | twisti | 2007-06-11
	09:59:36 +0200 (Mon, 11 Jun 2007) | 3 lines

	 * src/vmcore/primitive.c (primitive_class_get_by_char): New
	function.
	  * src/vmcore/primitive.h (primitive_class_get_by_char): Added.
	........ r8062 | twisti | 2007-06-11 10:12:14 +0200 (Mon, 11 Jun
	2007) | 59 lines

	 * src/vm/resolve.c (resolve_class_from_name): Call
	exceptions_classnotfoundexception_to_noclassdeffounderror in
	exception case.

	 * src/vm/exceptions.c (vmcore/method.h): Added.
	(exceptions_throw_utf_throwable): Added object-initialize code.
	(exceptions_throw_utf_exception): Likewise.
	(exceptions_throw_noclassdeffounderror_cause): New function.
	(classnotfoundexception_to_noclassdeffounderror): Renamed to
	exceptions_classnotfoundexception_to_noclassdeffounderror.
	(exceptions_print_stacktrace): Don't use exceptionptr directly.

	 * src/vm/exceptions.h
	(exceptions_throw_noclassdeffounderror_cause): Added.
	(classnotfoundexception_to_noclassdeffounderror): Renamed to
	exceptions_classnotfoundexception_to_noclassdeffounderror.

	 * src/vm/vm.c (opts): Added XX:. (vm_create): Likewise.
	(vm_run): Call exceptions_throw_noclassdeffounderror_cause when
	main-class is not found.

	 * src/native/vm/java_lang_Class.c (forName): Don't convert
	exception.

	 * src/native/vm/gnu/java_lang_VMClassLoader.c (getPrimitiveClass):
	Use primitive_class_get_by_char. (loadClass): Don't convert
	exception.

	 * src/native/native.c (native_new_and_init_string): Use
	class_findmethod instead of class_resolveclassmethod.
	(native_new_and_init_throwable): Removed.
	(native_new_and_init_exception): Likewise.

	 * src/native/native.h (native_new_and_init_throwable): Removed.
	(native_new_and_init_exception): Likewise.

	 * src/vmcore/class.c (class_array_of): Smaller code changes.

	 * src/vmcore/loader.c (vmcore/primitive.h): Added.
	(load_class_from_classloader): Don't convert exception.
	(load_class_bootstrap): Throw ClassNotFoundException instead of
	NoClassDefFoundError. (load_newly_created_array): Likewise, check
	if primitive-array type is valid.

	 * src/vmcore/utf8.c (utf_initCause): Added.
	(utf_java_lang_Throwable__java_lang_Throwable): Likewise.
	(utf8_init): Initialize new variables.

	 * src/vmcore/utf8.h (utf_initCause): Added.
	(utf_java_lang_Throwable__java_lang_Throwable): Likewise.

	 * src/cacaoh/dummy.c (exceptions_throw_classnotfoundexception):
	New function. (classnotfoundexception_to_noclassdeffounderror):
	Removed.

	 * src/vmcore/options.c (options_xx): New function.
	  * src/vmcore/options.h (options_xx): Added. ........ r8063 | twisti
	| 2007-06-11 16:44:58 +0200 (Mon, 11 Jun 2007) | 6 lines

	 * src/vmcore/method.c (method_returntype_get): New function.
	  * src/vmcore/method.h (method_returntype_get): Added.

	 * src/native/vm/gnu/java_lang_reflect_Method.c (getReturnType):
	Use method_returntype_get. ........ r8064 | twisti | 2007-06-11
	17:11:01 +0200 (Mon, 11 Jun 2007) | 11 lines

	 * src/native/vm/java_lang_reflect_Method.c: New file.
	  * src/native/vm/java_lang_reflect_Method.h: Likewise.

	 * src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_LANG_REFLECT_METHOD_SOURCES): Added
	(libnativevm_la_SOURCES): Added JAVA_LANG_REFLECT_METHOD_SOURCES.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	(native/vm/java_lang_reflect_Method.h): Added. (invokeNative): Use
	_Jv_java_lang_reflect_Method_invoke. ........ r8065 | pm |
	2007-06-11 17:22:09 +0200 (Mon, 11 Jun 2007) | 3 lines

	 * src/vm/jit/s390/emit.c (emit_load_s1_notzero,
	emit_load_s2_notzero, emit_load_s1_but, emit_load_s2_but): Correctly
	handle float regissters.
	  * src/vm/jit/s390/tests/dacapo.status: Include dacapo lusearch
	results. ........ r8066 | twisti | 2007-06-12 11:08:12 +0200 (Tue,
	12 Jun 2007) | 4 lines

	 * src/vm/vm.c (opts): Added OPT_EA, OPT_DA. (usage): Print help
	for OPT_EA, OPT_DA. (vm_create): Ignore OPT_EA, OPT_DA. ........
	r8067 | twisti | 2007-06-12 14:32:18 +0200 (Tue, 12 Jun 2007) | 4
	lines

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Added asserts for declaringClass and slot.
	  * src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative):
	Likewise. ........ r8068 | pm | 2007-06-12 17:50:35 +0200 (Tue, 12
	Jun 2007) | 5 lines

	 * src/vm/jits/390/codegen.h (N_BRC_BACK_PATCH, N_LTEBR, N_LTDBR,
	N_LTXBR, DD_0, ..., DD_3): added, (M_CVTFI, M_CVTDI) changed to
	round to nearest.
	  * src/vm/jits/390/codegen.c (codegen_emit): In ICMD_F2I and ICMD_D2I
	correct handling of corner cases, ICMD_LALOAD fix.
	  * src/vm/jit/s390/md.c (md_dump_context): Include information on java
	method in dump.
	  * src/vm/jits/390/tests/dacapo.status: Noted dacapo eclipse results.
	........ r8069 | twisti | 2007-06-13 16:08:24 +0200 (Wed, 13 Jun
	2007) | 4 lines

	 * src/native/jni.c (stdint.h): Added.
	(_Jv_jni_vmargs_from_objectarray): Use stdint-types, use global
	class variables. ........ r8070 | twisti | 2007-06-13 16:26:41
	+0200 (Wed, 13 Jun 2007) | 16 lines

	 * src/native/jni.c (_Jv_jni_vmargs_from_objectarray): Removed.
	(_Jv_jni_invokeNative): Use vm_vmargs_from_objectarray.

	 * src/vm/vm.c (stdint.h): Added.
	(native/include/java_lang_Byte.h)
	(native/include/java_lang_Character.h)
	(native/include/java_lang_Short.h)
	(native/include/java_lang_Integer.h)
	(native/include/java_lang_Boolean.h)
	(native/include/java_lang_Long.h)
	(native/include/java_lang_Float.h)
	(native/include/java_lang_Double.h): Likewise.
	(vm_vmargs_from_objectarray): New function.

	 * src/vm/vm.h (vm_vmargs_from_objectarray): Added. ........
	r8071 | twisti | 2007-06-13 19:37:55 +0200 (Wed, 13 Jun 2007) | 3
	lines

	 * src/vm/jit/tools/genoffsets.c (main): Removed some obsolete
	stuff.
	  * src/vm/jit/m68k/md.c (md_init): Removed offobjvftbl check. ........
	r8072 | twisti | 2007-06-13 20:31:19 +0200 (Wed, 13 Jun 2007) | 4
	lines

	 * tests/regression/native/testarguments.java,
	tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.output: Added address test.
	........ r8073 | twisti | 2007-06-13 23:54:27 +0200 (Wed, 13 Jun
	2007) | 4 lines

	 * src/vm/jit/tools/genoffsets.c (vmcore/class.h): Removed.
	(vmcore/linker.h): Likewise. (vmcore/method.h): Likewise. ........
	r8074 | twisti | 2007-06-14 00:27:17 +0200 (Thu, 14 Jun 2007) | 43
	lines

	 * src/vm/jit/mips/asmpart.S (asm_vm_call_method): Rewritten for
	new argument passing.

	 * src/vm/jit/mips/md-abi.c (stdarg.h): Added. (mm/memory.h):
	Likewise. (md_param_alloc): Set pd->index.

	 * src/vm/jit/asmpart.h (stdint.h): Added new function prototypes.

	 * src/vm/vm.c (md-abi.h): Added. (vm_array_store_int): New
	function. (vm_array_store_lng): Likewise. (vm_array_store_flt):
	Likewise. (vm_array_store_dbl): Likewise. (vm_array_store_adr):
	Likewise. (vm_array_from_valist): Likewise.
	(vm_array_from_jvalue): Likewise. (vm_array_from_objectarray):
	Likewise. (vm_call_method_valist): New version added.
	(vm_call_method_jvalue): Likewise. (vm_call_array): New function.
	(vm_call_int_array): Likewise. (vm_call_method_int_valist): New
	version added. (vm_call_method_int_jvalue): Likewise.
	(vm_call_method_long_valist): Likewise.
	(vm_call_method_long_jvalue): Likewise. (vm_call_long_array): New
	function. (vm_call_method_float_vmarg): Added vm_abort.
	(vm_call_method_double_vmarg): Likwise.

	 * src/vm/vm.h (stdarg.h): Added. (vmcore/class.h): Likewise.
	(vmcore/method.h): Likewise. (vm_array_from_objectarray):
	Likewise. (vm_call_array): Likewise. (vm_call_int_array):
	Likewise. (vm_call_long_array): Likewise.

	 * src/native/jni.c (_Jv_jni_invokeNative): Added new version.

	 * src/vmcore/descriptor.h (stdint.h): Added. (paramdesc): Added
	index field (this is temporarily). ........ r8075 | twisti |
	2007-06-14 02:38:53 +0200 (Thu, 14 Jun 2007) | 3 lines

	 * src/vm/jit/mips/asmpart.S (asm_vm_call_method)
	[!WORDS_BIGENDIAN]: Fixed bug (use lw instead of ld), better code
	in the stack copy loop. ........ r8076 | twisti | 2007-06-14
	11:35:31 +0200 (Thu, 14 Jun 2007) | 2 lines

	 * src/vm/vm.c: Fixed typos. ........ r8077 | twisti | 2007-06-14
	11:44:12 +0200 (Thu, 14 Jun 2007) | 8 lines

	 * src/vm/vm.c (arch.h): Added. (vm/jit/abi-asm.h): Likewise.
	(vm_array_store_int): Use ARG_CNT define. (vm_array_store_dbl):
	Likewise. (vm_array_store_flt): Likewise. (vm_array_store_dbl):
	Likewise. (vm_array_store_adr) [HAS_ADDRESS_REGISTER_FILE]:
	Changed offset. ........ r8078 | twisti | 2007-06-14 12:20:02
	+0200 (Thu, 14 Jun 2007) | 2 lines

	 * src/vm/vm.c (vm_call_method_long_vmarg): Removed vm_abort.
	........ r8079 | twisti | 2007-06-14 13:06:48 +0200 (Thu, 14 Jun
	2007) | 3 lines

	 * src/vm/vm.c (vm_array_from_objectarray): For TYPE_ADR param can
	be NULL, that's ok (jboss is a testcase for that). ........
	r8080 | twisti | 2007-06-14 13:12:11 +0200 (Thu, 14 Jun 2007) | 10
	lines

	 * src/vm/jit/x86_64/asmpart.S (asm_vm_call_method): Rewritten for
	new argument passing.

	 * src/vm/jit/x86_64/md-abi.c (md_param_alloc): Set pd->index.

	 * src/vm/vm.c: Added __X86_64__ ifdef.
	  * src/vm/vm.h: Likewise.
	  * src/native/jni.c: Likewise.
	  * src/vm/jit/asmpart.h: Likewise. ........ r8081 | tbfg | 2007-06-14
	14:07:03 +0200 (Thu, 14 Jun 2007) | 4 lines

	 src/vm/jit/m68k/disass.c: Changed bfd_mach_mcf_isa_b_float_emac to
	bfd_mach_mcfv4e as needed for newer binutils. ........ r8082 |
	tbfg | 2007-06-14 14:10:49 +0200 (Thu, 14 Jun 2007) | 6 lines

	 * src/vm/jit/emit-common.c: Added emit_branch statistics.
	  * src/vmcore/statistics.c: Likewise.
	  * src/vmcore/statistics.h: Added count_emit_branch,
	count_emit_branch_8bit, count_emit_branch_16bit,
	count_emit_branch_32bit, count_emit_branch_64bit. ........ r8085 |
	tbfg | 2007-06-14 17:12:54 +0200 (Thu, 14 Jun 2007) | 2 lines

	 * src/vm/jit/emit-common.c: Fixed warning related to STATISTICS.
	........ r8086 | twisti | 2007-06-14 17:31:54 +0200 (Thu, 14 Jun
	2007) | 3 lines

	 * src/vmcore/loader.c: Removed commented
	exceptions_throw_noclassdeffounderror calls. ........ r8087 |
	twisti | 2007-06-14 18:01:12 +0200 (Thu, 14 Jun 2007) | 6 lines

	 * src/vm/exceptions.c (exceptions_get_exception)
	(exceptions_set_exception, exceptions_clear_exception)
	(exceptions_get_and_clear_exception): Moved these low leve function
	to the top of the file.
	  * src/vm/exceptions.h: Likewise. ........ r8088 | twisti |
	2007-06-14 18:05:42 +0200 (Thu, 14 Jun 2007) | 2 lines

	 * src/native/vm/java_lang_Class.c (forName): Removed unused
	variables. ........ r8089 | twisti | 2007-06-14 18:06:31 +0200
	(Thu, 14 Jun 2007) | 2 lines

	 * src/native/vm/java_lang_Class.c: Added Id keyword. ........
	r8090 | twisti | 2007-06-14 18:07:37 +0200 (Thu, 14 Jun 2007) | 3
	lines

	 * src/vm/exceptions.c: Don't use exceptionptr directly anymore,
	access it only with functions. ........ r8091 | twisti |
	2007-06-14 18:10:33 +0200 (Thu, 14 Jun 2007) | 3 lines

	 * src/threads/native/threads.c: Don't use exceptionptr directly
	anymore. ........ r8092 | twisti | 2007-06-14 18:12:35 +0200 (Thu,
	14 Jun 2007) | 3 lines

	 * src/native/native.c (native_findfunction): Use
	exceptions_throw_unsatisfiedlinkerror. ........ r8093 | twisti |
	2007-06-14 18:51:44 +0200 (Thu, 14 Jun 2007) | 5 lines

	 * src/vm/jit/emit-common.c (emit_bccz) [STATISTICS]: Is called
	ENABLE_STATISTICS. (emit_label_bccz): Likewise. (emit_label):
	Likewise. ........ r8094 | ajordan | 2007-06-16 03:15:41 +0200
	(Sat, 16 Jun 2007) | 15 lines

	 * src/vmcore/statistics.h: Added more fine grained spill
	statistics.
	  * src/vmcore/statistics.c: Likewise.

	 * src/vm/jit/jit.h: New defines for spill statistics. Old ones are
	deprecated, won't increase the counters.

	 * src/vm/jit/codegen-common.c (codegen_increase): Defined SPARC64
	for 2-instr-patcher-stub-call workaround.
	(codegen_add_patch_ref): Likewise. (codegen_reg_of_var): Removed
	obsolete spill counting.

	 * src/vm/jit/sparc64/emit.c: Changed for new spill statistics.
	  * src/vm/jit/sparc64/linux/md-os.c (md_critical_section_restart):
	Fixed. ........ r8095 | ajordan | 2007-06-16 21:56:19 +0200 (Sat,
	16 Jun 2007) | 6 lines

	 * src/vm/jit/sparc64/codegen.c (codegen_emit): Improved integer
	argument passing by swapping variable allocation instead of
	copying.

	 * src/vm/jit/sparc64/md-abi.h: Turned %i0 into saved reg.
	  * src/vm/jit/sparc64/md-abi.c: Likewise. ........ r8096 | pm |
	2007-06-17 15:45:58 +0200 (Sun, 17 Jun 2007) | 8 lines

	 * src/vm/jit/s390/asmpart.S src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/dacapo.status: Optimized loads from data
	segment: the procedure vector now always points 4092 bytes before
	the data segment, so a lot of loads have a positive displacement.
	Removed dead code. ........ r8097 | pm | 2007-06-17 16:50:16 +0200
	(Sun, 17 Jun 2007) | 3 lines

	 * src/vm/jit/s390/codegen.c (codegen_emit): More data segment load
	optimalisations.
	  * src/vm/jit/s390/md.c (md_get_method_patch_address): Adapt to changes
	in codegen_emit. ........ r8099 | tbfg | 2007-06-18 20:26:58 +0200
	(Mon, 18 Jun 2007) | 20 lines

	 * src/vm/jit/powerpc64/linux/md-abi.c (md_param_alloc): Set index.

	 * src/vm/jit/powerpc64/asmpart.S (asm_vm_call_method): New
	parameter format, do not call asm_jit_compile any more.

	 * src/vm/jit/asmpart.h: Enable new parameter format function
	prototypes.

	 * src/vm/vm.h: Likewise.

	 * src/vm/vm.c (vm_array_store_int): Although ppc64 is big endian
	do not big endianize the new parameter format.
	(vm_array_store_flt): Likewise. (vm_array_store_adr): Likewise.
	(vm_vmargs_from_valist): ppc64 like alpha uses doubles everywhere.
	(vm_vmargs_from_jvalue): When HAS_ADDRESS_REGISTER_FILE is defined
	address register arguments are between float and memuse.

	 * src/native/jni.c: Enable new parameter function calling.
	........ r8100 | twisti | 2007-06-18 22:18:14 +0200 (Mon, 18 Jun
	2007) | 7 lines

	 * src/vm/exceptions.c (exceptions_throw_utf_throwable): Call
	(Ljava/lang/Throwable;)V initializer and resolve the method with
	class_resolveclassmethod to get possible exceptions.
	(exceptions_throw_utf_cause): New function.
	(exceptions_throw_noclassdeffounderror_cause): Use
	exceptions_throw_utf_cause. ........ r8101 | twisti | 2007-06-19
	20:07:59 +0200 (Tue, 19 Jun 2007) | 4 lines

	 * src/cacaoh/dummy.c [ENABLE_THREADS] (pthread.h): Removed.
	(threads/threads-common.h): Added. [ENABLE_THREADS]
	(threads_current_threadobject_key): Added #ifdef. ........ r8102 |
	twisti | 2007-06-19 20:09:16 +0200 (Tue, 19 Jun 2007) | 2 lines

	 * src/cacaoh/dummy.c: Added Id keyword. ........ r8103 | twisti
	| 2007-06-19 21:43:00 +0200 (Tue, 19 Jun 2007) | 21 lines

	 * src/native/vm/nativevm.c (nativevm_init) [ENABLE_JAVASE &&
	WITH_CLASSPATH_GNU]: Call
	_Jv_java_util_concurrent_atomic_AtomicLong_init.

	 * src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES): Added.
	(libnativevm_la_SOURCES): Added
	JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES.

	 * src/native/vm/java_util_concurrent_atomic_AtomicLong.c: New
	file.
	  * src/native/vm/java_util_concurrent_atomic_AtomicLong.h: Likewise.

	 * src/native/vm/gnu/Makefile.am (libnativevmcore_la_SOURCES):
	Added java_util_concurrent_atomic_AtomicLong.c.

	 * src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c: New
	file.

	 * src/native/include/Makefile.am (JAVASE_HEADER_FILES): Added
	java_util_concurrent_atomic_AtomicLong.h. ........ r8104 | twisti
	| 2007-06-19 23:15:00 +0200 (Tue, 19 Jun 2007) | 5 lines

	 * src/cacaoh/dummy.c (stdint.h): Added. (vm/types.h): Removed
	and replaced all old types with stdint ones. (threads/threads-
	common.h): Removed. [ENABLE_THREADS]
	(threads_current_threadobject_key): Removed. ........ r8105 |
	twisti | 2007-06-19 23:47:51 +0200 (Tue, 19 Jun 2007) | 3 lines

	 * src/cacaoh/headers.c (stdint.h): Added and use stdint-types.
	(vm/types.h): Removed. ........ r8106 | twisti | 2007-06-20
	00:50:17 +0200 (Wed, 20 Jun 2007) | 11 lines

	 * src/vm/vm.c (vm_call_float_array): New function.
	(vm_call_method_float_valist): Likewise.
	(vm_call_method_float_jvalue): Likewise. (vm_call_double_array):
	Likewise. (vm_call_method_double_valist): Likewise.
	(vm_call_method_double_jvalue): Likewise.

	 * src/vm/vm.h: Defined new functions.
	  * src/vm/jit/asmpart.h: Likewise.
	  * src/native/jni.c: Use new functions. ........ r8107 | twisti |
	2007-06-20 13:11:59 +0200 (Wed, 20 Jun 2007) | 3 lines

	 * src/vm/vm.c (vm_array_store_int) [SIZEOF_VOID_P == 4]: Only do
	the integer shift on 32-bit architectures. ........ r8108 |
	ajordan | 2007-06-20 14:05:26 +0200 (Wed, 20 Jun 2007) | 11 lines

	 * src/vm/jit/sparc64/md-abi.c (md_param_alloc): Added pd->index
	setting.

	 * src/vm/jit/sparc64/asmpart.S (asm_vm_call_method): Get
	parameters from new array.

	 * src/vm/jit/asmpart.h: Enable new parameter passing for SPARC64.
	  * src/vm/vm.h: Likewise.
	  * src/vm/vm.c: Likewise. (vm_array_store_flt): For SPARC, shift
	float arguments on stack to low word too. ........ r8109 | twisti
	| 2007-06-20 14:22:56 +0200 (Wed, 20 Jun 2007) | 3 lines

	 * src/native/vm/nativevm.h [ENABLE_JAVASE && WITH_CLASSPATH_GNU]:
	Added _Jv_java_util_concurrent_atomic_AtomicLong_init. ........
	r8110 | twisti | 2007-06-20 14:24:32 +0200 (Wed, 20 Jun 2007) | 3
	lines

	 * src/cacaoh/cacaoh.c (HEAP_MAXSIZE, HEAP_STARTSIZE): Removed.
	(main): Removed heapmaxsize, heapstartsize. ........ r8111 |
	twisti | 2007-06-20 15:51:38 +0200 (Wed, 20 Jun 2007) | 10 lines

	 * src/native/vm/gnu/gnu_java_lang_management_VMClassLoadingMXBeanI
	mpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/sun_misc_Unsafe.c: Use stdint-types because of
	conflicts with generated header files. ........ r8112 | twisti |
	2007-06-20 19:54:36 +0200 (Wed, 20 Jun 2007) | 28 lines

	 * src/vm/vm.c (XXusage): Removed -verbose:memory. (vm_create):
	Likewise.

	 * src/mm/memory.c (memory_thread): Rewritten to use new variables.

	 * src/vmcore/options.c (errno.h): Added. (stdint.h): Likewise
	(stdio.h): Likewise. (stdlib.h): Likewise. (opt_verbosememory):
	Removed. (opt_ProfileGCMemoryUsage): Added.
	(opt_ProfileMemoryUsage): Likewise.
	(opt_ProfileMemoryUsageGNUPlot): Likewise. (options_XX): Likewise.
	(options_xx): Implemented.

	 * src/vmcore/options.h (stdint.h): Added. (option_t): Likewise.
	(opt_ProfileGCMemoryUsage): Likewise. (opt_ProfileMemoryUsage):
	Likewise. (opt_ProfileMemoryUsageGNUPlot): Likewise.
	(options_xx): Changed signature.

	 * src/vmcore/statistics.c (statistics_print_gc_memory_usage):
	Rewritten to use new variables and GNU Plot output.

	 * configure.ac (AC_CHECK_FUNCS): Added atoi, atol, strchr,
	strncmp. ........ r8113 | twisti | 2007-06-20 20:05:39 +0200 (Wed,
	20 Jun 2007) | 5 lines

	 * src/vmcore/statistics.c (statistics_print_gc_memory_usage): Call
	fflush.

	 * configure.ac (AC_CHECK_FUNCS): Added fflush, fopen, fprintf.
	........ r8114 | twisti | 2007-06-20 20:57:41 +0200 (Wed, 20 Jun
	2007) | 3 lines

	 * src/threads/threads-common.c (threads_preinit): Added another
	linuxthreads check. ........ r8115 | michi | 2007-06-20 21:14:05
	+0200 (Wed, 20 Jun 2007) | 41 lines

	 * src/vm/vm.c (vm_array_store_int, vm_array_store_adr,
	vm_array_store_lng, vm_array_store_flt, vm_array_store_dbl): Uses
	pd->index for inmemory arguments.

	 * src/vm/jit/allocator/simplereg.c: The regoff value is a real
	offset (multiplied by the stackslot size) for inmemory variables
	now.

	 * src/vm/jit/arm/md-abi.c (md_param_alloc): Set pd->regoff as
	described above.
	  * src/vm/jit/arm/emit.c: Adapted to above changes.
	  * src/vm/jit/arm/codegen.c: Adapted to above changes.

	 * src/vm/jit/powerpc/linux/md-abi.c,
	  * src/vm/jit/powerpc/netbsd/md-abi.c,
	  * src/vm/jit/powerpc/emit.c,
	  * src/vm/jit/powerpc/darwin/md-abi.c,
	  * src/vm/jit/powerpc/codegen.c,
	  * src/vm/jit/sparc64/emit.c,
	  * src/vm/jit/sparc64/md-abi.h,
	  * src/vm/jit/sparc64/codegen.c,
	  * src/vm/jit/sparc64/md-abi.c,
	  * src/vm/jit/alpha/emit.c,
	  * src/vm/jit/alpha/codegen.c,
	  * src/vm/jit/alpha/md-abi.c,
	  * src/vm/jit/s390/emit.c,
	  * src/vm/jit/s390/codegen.c,
	  * src/vm/jit/s390/md-abi.c,
	  * src/vm/jit/mips/emit.c,
	  * src/vm/jit/mips/codegen.c,
	  * src/vm/jit/mips/md-abi.c,
	  * src/vm/jit/m68k/emit.c,
	  * src/vm/jit/m68k/linux/md-abi.c,
	  * src/vm/jit/m68k/codegen.c,
	  * src/vm/jit/powerpc64/linux/md-abi.c,
	  * src/vm/jit/powerpc64/emit.c,
	  * src/vm/jit/powerpc64/codegen.c,
	  * src/vm/jit/i386/emit.c,
	  * src/vm/jit/i386/codegen.c,
	  * src/vm/jit/i386/md-abi.c,
	  * src/vm/jit/x86_64/emit.c,
	  * src/vm/jit/x86_64/codegen.c,
	  * src/vm/jit/x86_64/md-abi.c: Likewise. ........ r8116 | michi |
	2007-06-20 22:30:56 +0200 (Wed, 20 Jun 2007) | 5 lines

	 * src/vm/jit/arm/codegen.c (codegen_emit,
	codegen_emit_stub_native): Changed cd->stackframesize from
	wordcount to bytecount.

	 * src/vm/jit/arm/emit.c (emit_verbosecall_enter): Adapted to above
	change. ........ r8117 | pm | 2007-06-20 23:20:53 +0200 (Wed, 20
	Jun 2007) | 3 lines

	 * src/vm/jit/s390/codegen.h, src/vm/jit/s390/codegen.c
	(codegen_emit): Support another hercules bug in F2D. ........
	r8119 | twisti | 2007-06-21 00:05:10 +0200 (Thu, 21 Jun 2007) | 3
	lines

	 * src/vmcore/statistics.c (statistics_print_gc_memory_usage):
	Different print-format for different pointer-sizes. ........ r8120
	| twisti | 2007-06-21 00:11:24 +0200 (Thu, 21 Jun 2007) | 13 lines

	 * src/vmcore/options.c (opt_verboseexception): Removed.
	(opt_TraceExceptions): Added. (options_xx): Handle
	OPT_TraceExceptions.

	 * src/vmcore/options.h (opt_verboseexception): Removed.
	(opt_TraceExceptions): Added.

	 * src/vm/exceptions.c (exceptions_handle_exception): Replaced
	opt_verboseexception with opt_TraceExceptions.

	 * src/vm/vm.c (XXusage): Removed opt_verboseexception.
	(vm_create): Likewise. ........ r8121 | michi | 2007-06-21
	01:32:34 +0200 (Thu, 21 Jun 2007) | 7 lines

	 * src/vmcore/options.c [ENABLE_REPLACEMENT]
	(opt_TraceReplacement): Added. (options_xx) [ENABLE_REPLACEMENT]:
	Handle OPT_TraceReplacement.

	 * src/vmcore/options.h [ENABLE_REPLACEMENT]
	(opt_TraceReplacement): Added.

	 * src/vm/jit/replace.c: Use opt_TraceReplacement mentioned above.
	........
	[5a4d93ab7f2c]

	* tests/gc/ClassInit.java:
	* tests/gc/ClassInit.java: Changed trigger for static initializer
	from method call to field access.
	[5d0cef9e0809]

	* src/vm/jit/replace.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c [ENABLE_REPLACEMENT] (opt_TraceReplacement):
	Added. (options_xx) [ENABLE_REPLACEMENT]: Handle
	OPT_TraceReplacement.

	* src/vmcore/options.h [ENABLE_REPLACEMENT] (opt_TraceReplacement):
	Added.

	* src/vm/jit/replace.c: Use opt_TraceReplacement mentioned above.
	[0574b7bc889f]

2007-06-20  twisti  <twisti>

	* src/vm/exceptions.c, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vmcore/options.c (opt_verboseexception): Removed.
	(opt_TraceExceptions): Added. (options_xx): Handle
	OPT_TraceExceptions.

	* src/vmcore/options.h (opt_verboseexception): Removed.
	(opt_TraceExceptions): Added.

	* src/vm/exceptions.c (exceptions_handle_exception): Replaced
	opt_verboseexception with opt_TraceExceptions.

	* src/vm/vm.c (XXusage): Removed opt_verboseexception. (vm_create):
	Likewise.
	[3f0c7cb2010b]

	* src/vmcore/statistics.c:
	* src/vmcore/statistics.c (statistics_print_gc_memory_usage):
	Different print-format for different pointer-sizes.
	[141899315be7]

2007-06-20  michi  <michi>

	* src/cacaoh/headers.c, src/mm/cacao-gc/gc.c,
	src/native/include/Makefile.am, src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h, src/native/vm/sun_misc_Unsafe.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/codegen.c, src/vm/jit/arm
	/md-abi.c, src/vm/jit/i386/emit.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/darwin/md-abi.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md-abi.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/x86_64/emit.c:
	* src/mm/cacao-gc/gc.c (gc_reference_unregister): Added.
	[7d6280a0a94a]

2007-06-20  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h:
	* src/vm/jit/s390/codegen.h, src/vm/jit/s390/codegen.c
	(codegen_emit): Support another hercules bug in F2D.
	[ffd633a37b0f]

2007-06-20  michi  <michi>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/codegen.c (codegen_emit, codegen_emit_stub_native):
	Changed cd->stackframesize from wordcount to bytecount.

	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Adapted to above
	change.
	[8456c270e754]

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/arm/md-
	abi.c, src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/md-abi.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin
	/md-abi.c, src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/powerpc/netbsd/md-abi.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/vm.c:
	* src/vm/vm.c (vm_array_store_int, vm_array_store_adr,
	vm_array_store_lng, vm_array_store_flt, vm_array_store_dbl): Uses
	pd->index for inmemory arguments.

	* src/vm/jit/allocator/simplereg.c: The regoff value is a real
	offset (multiplied by the stackslot size) for inmemory variables
	now.

	* src/vm/jit/arm/md-abi.c (md_param_alloc): Set pd->regoff as
	described above.
	* src/vm/jit/arm/emit.c: Adapted to above changes.
	* src/vm/jit/arm/codegen.c: Adapted to above changes.

	* src/vm/jit/powerpc/linux/md-abi.c,
	* src/vm/jit/powerpc/netbsd/md-abi.c,
	* src/vm/jit/powerpc/emit.c,
	* src/vm/jit/powerpc/darwin/md-abi.c,
	* src/vm/jit/powerpc/codegen.c,
	* src/vm/jit/sparc64/emit.c,
	* src/vm/jit/sparc64/md-abi.h,
	* src/vm/jit/sparc64/codegen.c,
	* src/vm/jit/sparc64/md-abi.c,
	* src/vm/jit/alpha/emit.c,
	* src/vm/jit/alpha/codegen.c,
	* src/vm/jit/alpha/md-abi.c,
	* src/vm/jit/s390/emit.c,
	* src/vm/jit/s390/codegen.c,
	* src/vm/jit/s390/md-abi.c,
	* src/vm/jit/mips/emit.c,
	* src/vm/jit/mips/codegen.c,
	* src/vm/jit/mips/md-abi.c,
	* src/vm/jit/m68k/emit.c,
	* src/vm/jit/m68k/linux/md-abi.c,
	* src/vm/jit/m68k/codegen.c,
	* src/vm/jit/powerpc64/linux/md-abi.c,
	* src/vm/jit/powerpc64/emit.c,
	* src/vm/jit/powerpc64/codegen.c,
	* src/vm/jit/i386/emit.c,
	* src/vm/jit/i386/codegen.c,
	* src/vm/jit/i386/md-abi.c,
	* src/vm/jit/x86_64/emit.c,
	* src/vm/jit/x86_64/codegen.c,
	* src/vm/jit/x86_64/md-abi.c: Likewise.
	[41d0774d6ee9]

2007-06-20  twisti  <twisti>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_preinit): Added another
	linuxthreads check.
	[a183143f5c1a]

	* configure.ac, src/vmcore/statistics.c:
	* src/vmcore/statistics.c (statistics_print_gc_memory_usage): Call
	fflush.

	* configure.ac (AC_CHECK_FUNCS): Added fflush, fopen, fprintf.
	[73c72b5efd77]

	* configure.ac, src/mm/memory.c, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/statistics.c:
	* src/vm/vm.c (XXusage): Removed -verbose:memory. (vm_create):
	Likewise.

	* src/mm/memory.c (memory_thread): Rewritten to use new variables.

	* src/vmcore/options.c (errno.h): Added. (stdint.h): Likewise
	(stdio.h): Likewise. (stdlib.h): Likewise. (opt_verbosememory):
	Removed. (opt_ProfileGCMemoryUsage): Added.
	(opt_ProfileMemoryUsage): Likewise. (opt_ProfileMemoryUsageGNUPlot):
	Likewise. (options_XX): Likewise. (options_xx): Implemented.

	* src/vmcore/options.h (stdint.h): Added. (option_t): Likewise.
	(opt_ProfileGCMemoryUsage): Likewise. (opt_ProfileMemoryUsage):
	Likewise. (opt_ProfileMemoryUsageGNUPlot): Likewise. (options_xx):
	Changed signature.

	* src/vmcore/statistics.c (statistics_print_gc_memory_usage):
	Rewritten to use new variables and GNU Plot output.

	* configure.ac (AC_CHECK_FUNCS): Added atoi, atol, strchr, strncmp.
	[8aa5208d23bd]

	* src/native/vm/gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.
	c, src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/gnu/gnu_java_lang_management_VMClassLoadingMXBeanImp
	l.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/sun_misc_Unsafe.c: Use stdint-types because of
	conflicts with generated header files.
	[d0c0f1a0f680]

	* src/cacaoh/cacaoh.c:
	* src/cacaoh/cacaoh.c (HEAP_MAXSIZE, HEAP_STARTSIZE): Removed.
	(main): Removed heapmaxsize, heapstartsize.
	[c8bedeb53fee]

	* src/native/vm/nativevm.h:
	* src/native/vm/nativevm.h [ENABLE_JAVASE && WITH_CLASSPATH_GNU]:
	Added _Jv_java_util_concurrent_atomic_AtomicLong_init.
	[7bf2b70fdd20]

2007-06-20  ajordan  <ajordan>

	* src/vm/jit/asmpart.h, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/md-abi.c, src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/sparc64/md-abi.c (md_param_alloc): Added pd->index
	setting.

	* src/vm/jit/sparc64/asmpart.S (asm_vm_call_method): Get parameters
	from new array.

	* src/vm/jit/asmpart.h: Enable new parameter passing for SPARC64.
	* src/vm/vm.h: Likewise.
	* src/vm/vm.c: Likewise. (vm_array_store_flt): For SPARC, shift float
	arguments on stack to low word too.
	[cad4c8459a15]

2007-06-20  twisti  <twisti>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_array_store_int) [SIZEOF_VOID_P == 4]: Only do the
	integer shift on 32-bit architectures.
	[ec7d71eb14ce]

2007-06-19  twisti  <twisti>

	* src/native/jni.c, src/vm/jit/asmpart.h, src/vm/vm.c, src/vm/vm.h:
	* src/vm/vm.c (vm_call_float_array): New function.
	(vm_call_method_float_valist): Likewise.
	(vm_call_method_float_jvalue): Likewise. (vm_call_double_array):
	Likewise. (vm_call_method_double_valist): Likewise.
	(vm_call_method_double_jvalue): Likewise.

	* src/vm/vm.h: Defined new functions.
	* src/vm/jit/asmpart.h: Likewise.
	* src/native/jni.c: Use new functions.
	[cd1486e9e61f]

	* src/cacaoh/headers.c:
	* src/cacaoh/headers.c (stdint.h): Added and use stdint-types.
	(vm/types.h): Removed.
	[0961a76da1a7]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (stdint.h): Added. (vm/types.h): Removed and
	replaced all old types with stdint ones. (threads/threads-common.h):
	Removed. [ENABLE_THREADS] (threads_current_threadobject_key):
	Removed.
	[30a74a4f0cf4]

	* src/native/include/Makefile.am, src/native/vm/Makefile.am,
	src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.c,
	src/native/vm/java_util_concurrent_atomic_AtomicLong.h,
	src/native/vm/nativevm.c:
	* src/native/vm/nativevm.c (nativevm_init) [ENABLE_JAVASE &&
	WITH_CLASSPATH_GNU]: Call
	_Jv_java_util_concurrent_atomic_AtomicLong_init.

	* src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES): Added.
	(libnativevm_la_SOURCES): Added
	JAVA_UTIL_CONCURRENT_ATOMIC_ATOMICLONG_SOURCES.

	* src/native/vm/java_util_concurrent_atomic_AtomicLong.c: New file.
	* src/native/vm/java_util_concurrent_atomic_AtomicLong.h: Likewise.

	* src/native/vm/gnu/Makefile.am (libnativevmcore_la_SOURCES): Added
	java_util_concurrent_atomic_AtomicLong.c.

	* src/native/vm/gnu/java_util_concurrent_atomic_AtomicLong.c: New
	file.

	* src/native/include/Makefile.am (JAVASE_HEADER_FILES): Added
	java_util_concurrent_atomic_AtomicLong.h.
	[8c4969ee5afa]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c: Added Id keyword.
	[958a5b301f5f]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c [ENABLE_THREADS] (pthread.h): Removed. (threads
	/threads-common.h): Added. [ENABLE_THREADS]
	(threads_current_threadobject_key): Added #ifdef.
	[1fc81716c8fb]

2007-06-18  twisti  <twisti>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_throw_utf_throwable): Call
	(Ljava/lang/Throwable;)V initializer and resolve the method with
	class_resolveclassmethod to get possible exceptions.
	(exceptions_throw_utf_cause): New function.
	(exceptions_throw_noclassdeffounderror_cause): Use
	exceptions_throw_utf_cause.
	[57608e101f88]

2007-06-18  tbfg  <tbfg>

	* src/native/jni.c, src/vm/jit/asmpart.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/linux/md-abi.c,
	src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/powerpc64/linux/md-abi.c (md_param_alloc): Set index.

	* src/vm/jit/powerpc64/asmpart.S (asm_vm_call_method): New parameter
	format, do not call asm_jit_compile any more.

	* src/vm/jit/asmpart.h: Enable new parameter format function
	prototypes.

	* src/vm/vm.h: Likewise.

	* src/vm/vm.c (vm_array_store_int): Although ppc64 is big endian do
	not big endianize the new parameter format. (vm_array_store_flt):
	Likewise. (vm_array_store_adr): Likewise. (vm_vmargs_from_valist):
	ppc64 like alpha uses doubles everywhere. (vm_vmargs_from_jvalue):
	When HAS_ADDRESS_REGISTER_FILE is defined address register arguments
	are between float and memuse.

	* src/native/jni.c: Enable new parameter function calling.
	[4f8863624904]

2007-06-17  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/md.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): More data segment load
	optimalisations.
	* src/vm/jit/s390/md.c (md_get_method_patch_address): Adapt to changes
	in codegen_emit.
	[49542d2724ed]

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/dacapo.status:
	* src/vm/jit/s390/asmpart.S src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/dacapo.status: Optimized loads from data
	segment: the procedure vector now always points 4092 bytes before
	the data segment, so a lot of loads have a positive displacement.
	Removed dead code.
	[4fb65c7793af]

2007-06-16  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-abi.h:
	* src/vm/jit/sparc64/codegen.c (codegen_emit): Improved integer
	argument passing by swapping variable allocation instead of copying.

	* src/vm/jit/sparc64/md-abi.h: Turned %i0 into saved reg.
	* src/vm/jit/sparc64/md-abi.c: Likewise.
	[c57b32bcb804]

	* src/vm/jit/codegen-common.c, src/vm/jit/jit.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vmcore/statistics.c, src/vmcore/statistics.h:
	* src/vmcore/statistics.h: Added more fine grained spill statistics.
	* src/vmcore/statistics.c: Likewise.

	* src/vm/jit/jit.h: New defines for spill statistics. Old ones are
	deprecated, won't increase the counters.

	* src/vm/jit/codegen-common.c (codegen_increase): Defined SPARC64
	for 2-instr-patcher-stub-call workaround. (codegen_add_patch_ref):
	Likewise. (codegen_reg_of_var): Removed obsolete spill counting.

	* src/vm/jit/sparc64/emit.c: Changed for new spill statistics.
	* src/vm/jit/sparc64/linux/md-os.c (md_critical_section_restart):
	Fixed.
	[c3a6554d62ff]

2007-06-14  twisti  <twisti>

	* src/vm/jit/emit-common.c:
	* src/vm/jit/emit-common.c (emit_bccz) [STATISTICS]: Is called
	ENABLE_STATISTICS. (emit_label_bccz): Likewise. (emit_label):
	Likewise.
	[196f9b2253bc]

	* src/native/native.c:
	* src/native/native.c (native_findfunction): Use
	exceptions_throw_unsatisfiedlinkerror.
	[f45e4f47064e]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c: Don't use exceptionptr directly
	anymore.
	[95acc7abb942]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c: Don't use exceptionptr directly anymore,
	access it only with functions.
	[ad9435047576]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c: Added Id keyword.
	[4f5335e1c9b5]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c (forName): Removed unused
	variables.
	[e4fb080b640a]

	* src/vm/exceptions.c, src/vm/exceptions.h:
	* src/vm/exceptions.c (exceptions_get_exception)
	(exceptions_set_exception, exceptions_clear_exception)
	(exceptions_get_and_clear_exception): Moved these low leve function
	to the top of the file.
	* src/vm/exceptions.h: Likewise.
	[9687cfa0b8da]

	* src/vmcore/loader.c:
	* src/vmcore/loader.c: Removed commented
	exceptions_throw_noclassdeffounderror calls.
	[33ad7340e017]

2007-06-14  tbfg  <tbfg>

	* src/vm/jit/emit-common.c:
	* src/vm/jit/emit-common.c: Fixed warning related to STATISTICS.
	[5851e39c5e3b]

2007-06-14  michi  <michi>

	* src/mm/cacao-gc/rootset.c, src/mm/cacao-gc/rootset.h:
	* src/mm/cacao-gc/rootset.h (rootset_t): Removed ss and es from
	rootset.
	* src/mm/cacao-gc/rootset.c: Adapted to above changes.
	[44759f6a2609]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/copy.c, src/mm/cacao-
	gc/heap.c, src/mm/cacao-gc/mark.c, src/mm/cacao-gc/rootset.c, src/mm
	/cacao-gc/rootset.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/jit/asmpart.h,
	src/vm/jit/m68k/disass.c, src/vm/jit/mips/asmpart.S, src/vm/jit/mips
	/md-abi.c, src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/tests/dacapo.status,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/md-abi.c,
	src/vm/resolve.c, src/vm/string.c, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/mm/cacao-gc/rootset.h (rootset_entry_t) Added. Rootsets can be
	resized.
	* src/mm/cacao-gc/rootset.c (rootset_resize) Added.

	* src/mm/cacao-gc/copy.c: Adapted to above changes.
	* src/mm/cacao-gc/heap.c: Likewise.
	* src/mm/cacao-gc/compact.c: Likewise.
	* src/mm/cacao-gc/mark.c: Likewise.
	[3669240563a0]

2007-06-14  tbfg  <tbfg>

	* src/vm/jit/emit-common.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vm/jit/emit-common.c: Added emit_branch statistics.
	* src/vmcore/statistics.c: Likewise.
	* src/vmcore/statistics.h: Added count_emit_branch,
	count_emit_branch_8bit, count_emit_branch_16bit,
	count_emit_branch_32bit, count_emit_branch_64bit.
	[e83bd9ae9d95]

	* src/vm/jit/m68k/disass.c:
	src/vm/jit/m68k/disass.c: Changed bfd_mach_mcf_isa_b_float_emac to
	bfd_mach_mcfv4e as needed for newer binutils.
	[f5e047be233b]

2007-06-14  twisti  <twisti>

	* src/native/jni.c, src/vm/jit/asmpart.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/md-abi.c, src/vm/vm.c, src/vm/vm.h:
	* src/vm/jit/x86_64/asmpart.S (asm_vm_call_method): Rewritten for
	new argument passing.

	* src/vm/jit/x86_64/md-abi.c (md_param_alloc): Set pd->index.

	* src/vm/vm.c: Added __X86_64__ ifdef.
	* src/vm/vm.h: Likewise.
	* src/native/jni.c: Likewise.
	* src/vm/jit/asmpart.h: Likewise.
	[72c74af0daa4]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_array_from_objectarray): For TYPE_ADR param can be
	NULL, that's ok (jboss is a testcase for that).
	[326564bdb23d]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_call_method_long_vmarg): Removed vm_abort.
	[744695dcd490]

	* src/vm/vm.c:
	* src/vm/vm.c (arch.h): Added. (vm/jit/abi-asm.h): Likewise.
	(vm_array_store_int): Use ARG_CNT define. (vm_array_store_dbl):
	Likewise. (vm_array_store_flt): Likewise. (vm_array_store_dbl):
	Likewise. (vm_array_store_adr) [HAS_ADDRESS_REGISTER_FILE]: Changed
	offset.
	[5d8d0edf973d]

	* src/vm/vm.c:
	* src/vm/vm.c: Fixed typos.
	[b5c9d3729e96]

	* src/vm/jit/mips/asmpart.S:
	* src/vm/jit/mips/asmpart.S (asm_vm_call_method) [!WORDS_BIGENDIAN]:
	Fixed bug (use lw instead of ld), better code in the stack copy
	loop.
	[c47fed9cc15c]

2007-06-13  twisti  <twisti>

	* src/native/jni.c, src/vm/jit/asmpart.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/md-abi.c, src/vm/vm.c, src/vm/vm.h,
	src/vmcore/descriptor.h:
	* src/vm/jit/mips/asmpart.S (asm_vm_call_method): Rewritten for new
	argument passing.

	* src/vm/jit/mips/md-abi.c (stdarg.h): Added. (mm/memory.h):
	Likewise. (md_param_alloc): Set pd->index.

	* src/vm/jit/asmpart.h (stdint.h): Added new function prototypes.

	* src/vm/vm.c (md-abi.h): Added. (vm_array_store_int): New function.
	(vm_array_store_lng): Likewise. (vm_array_store_flt): Likewise.
	(vm_array_store_dbl): Likewise. (vm_array_store_adr): Likewise.
	(vm_array_from_valist): Likewise. (vm_array_from_jvalue): Likewise.
	(vm_array_from_objectarray): Likewise. (vm_call_method_valist): New
	version added. (vm_call_method_jvalue): Likewise. (vm_call_array):
	New function. (vm_call_int_array): Likewise.
	(vm_call_method_int_valist): New version added.
	(vm_call_method_int_jvalue): Likewise. (vm_call_method_long_valist):
	Likewise. (vm_call_method_long_jvalue): Likewise.
	(vm_call_long_array): New function. (vm_call_method_float_vmarg):
	Added vm_abort. (vm_call_method_double_vmarg): Likwise.

	* src/vm/vm.h (stdarg.h): Added. (vmcore/class.h): Likewise.
	(vmcore/method.h): Likewise. (vm_array_from_objectarray): Likewise.
	(vm_call_array): Likewise. (vm_call_int_array): Likewise.
	(vm_call_long_array): Likewise.

	* src/native/jni.c (_Jv_jni_invokeNative): Added new version.

	* src/vmcore/descriptor.h (stdint.h): Added. (paramdesc): Added
	index field (this is temporarily).
	[e69592257712]

	* src/vm/jit/tools/genoffsets.c:
	* src/vm/jit/tools/genoffsets.c (vmcore/class.h): Removed.
	(vmcore/linker.h): Likewise. (vmcore/method.h): Likewise.
	[044505816e1d]

	* tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.java,
	tests/regression/native/testarguments.output:
	* tests/regression/native/testarguments.java,
	tests/regression/native/testarguments.c,
	tests/regression/native/testarguments.output: Added address test.
	[328942132afd]

	* src/vm/jit/m68k/md.c, src/vm/jit/tools/genoffsets.c:
	* src/vm/jit/tools/genoffsets.c (main): Removed some obsolete stuff.
	* src/vm/jit/m68k/md.c (md_init): Removed offobjvftbl check.
	[3a5d14dca2b6]

	* src/native/jni.c, src/vm/vm.c, src/vm/vm.h:
	* src/native/jni.c (_Jv_jni_vmargs_from_objectarray): Removed.
	(_Jv_jni_invokeNative): Use vm_vmargs_from_objectarray.

	* src/vm/vm.c (stdint.h): Added. (native/include/java_lang_Byte.h)
	(native/include/java_lang_Character.h)
	(native/include/java_lang_Short.h)
	(native/include/java_lang_Integer.h)
	(native/include/java_lang_Boolean.h)
	(native/include/java_lang_Long.h) (native/include/java_lang_Float.h)
	(native/include/java_lang_Double.h): Likewise.
	(vm_vmargs_from_objectarray): New function.

	* src/vm/vm.h (vm_vmargs_from_objectarray): Added.
	[80db4c9bf082]

	* src/native/jni.c:
	* src/native/jni.c (stdint.h): Added.
	(_Jv_jni_vmargs_from_objectarray): Use stdint-types, use global
	class variables.
	[27afbf410bf3]

2007-06-12  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/tests/dacapo.status:
	* src/vm/jits/390/codegen.h (N_BRC_BACK_PATCH, N_LTEBR, N_LTDBR,
	N_LTXBR, DD_0, ..., DD_3): added, (M_CVTFI, M_CVTDI) changed to
	round to nearest.
	* src/vm/jits/390/codegen.c (codegen_emit): In ICMD_F2I and ICMD_D2I
	correct handling of corner cases, ICMD_LALOAD fix.
	* src/vm/jit/s390/md.c (md_dump_context): Include information on java
	method in dump.
	* src/vm/jits/390/tests/dacapo.status: Noted dacapo eclipse results.
	[9e9ea1b2157d]

2007-06-12  twisti  <twisti>

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Added asserts for declaringClass and slot.
	* src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative):
	Likewise.
	[0ac5a66c2fe9]

	* src/vm/vm.c:
	* src/vm/vm.c (opts): Added OPT_EA, OPT_DA. (usage): Print help for
	OPT_EA, OPT_DA. (vm_create): Ignore OPT_EA, OPT_DA.
	[f9e8cfb36fa9]

2007-06-11  pm  <pm>

	* src/vm/jit/s390/emit.c, src/vm/jit/s390/tests/dacapo.status:
	* src/vm/jit/s390/emit.c (emit_load_s1_notzero,
	emit_load_s2_notzero, emit_load_s1_but, emit_load_s2_but): Correctly
	handle float regissters.
	* src/vm/jit/s390/tests/dacapo.status: Include dacapo lusearch
	results.
	[1db7e718b606]

2007-06-11  twisti  <twisti>

	* src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.c,
	src/native/vm/java_lang_reflect_Method.h:
	* src/native/vm/java_lang_reflect_Method.c: New file.
	* src/native/vm/java_lang_reflect_Method.h: Likewise.

	* src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_LANG_REFLECT_METHOD_SOURCES): Added (libnativevm_la_SOURCES):
	Added JAVA_LANG_REFLECT_METHOD_SOURCES.

	* src/native/vm/gnu/java_lang_reflect_Method.c
	(native/vm/java_lang_reflect_Method.h): Added. (invokeNative): Use
	_Jv_java_lang_reflect_Method_invoke.
	[789e9c2528f9]

	* src/native/vm/gnu/java_lang_reflect_Method.c, src/vmcore/method.c,
	src/vmcore/method.h:
	* src/vmcore/method.c (method_returntype_get): New function.
	* src/vmcore/method.h (method_returntype_get): Added.

	* src/native/vm/gnu/java_lang_reflect_Method.c (getReturnType): Use
	method_returntype_get.
	[58a2095b54fd]

	* src/cacaoh/dummy.c, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/java_lang_Class.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/resolve.c, src/vm/vm.c,
	src/vmcore/class.c, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vm/resolve.c (resolve_class_from_name): Call
	exceptions_classnotfoundexception_to_noclassdeffounderror in
	exception case.

	* src/vm/exceptions.c (vmcore/method.h): Added.
	(exceptions_throw_utf_throwable): Added object-initialize code.
	(exceptions_throw_utf_exception): Likewise.
	(exceptions_throw_noclassdeffounderror_cause): New function.
	(classnotfoundexception_to_noclassdeffounderror): Renamed to
	exceptions_classnotfoundexception_to_noclassdeffounderror.
	(exceptions_print_stacktrace): Don't use exceptionptr directly.

	* src/vm/exceptions.h (exceptions_throw_noclassdeffounderror_cause):
	Added. (classnotfoundexception_to_noclassdeffounderror): Renamed to
	exceptions_classnotfoundexception_to_noclassdeffounderror.

	* src/vm/vm.c (opts): Added XX:. (vm_create): Likewise. (vm_run):
	Call exceptions_throw_noclassdeffounderror_cause when main-class is
	not found.

	* src/native/vm/java_lang_Class.c (forName): Don't convert
	exception.

	* src/native/vm/gnu/java_lang_VMClassLoader.c (getPrimitiveClass):
	Use primitive_class_get_by_char. (loadClass): Don't convert
	exception.

	* src/native/native.c (native_new_and_init_string): Use
	class_findmethod instead of class_resolveclassmethod.
	(native_new_and_init_throwable): Removed.
	(native_new_and_init_exception): Likewise.

	* src/native/native.h (native_new_and_init_throwable): Removed.
	(native_new_and_init_exception): Likewise.

	* src/vmcore/class.c (class_array_of): Smaller code changes.

	* src/vmcore/loader.c (vmcore/primitive.h): Added.
	(load_class_from_classloader): Don't convert exception.
	(load_class_bootstrap): Throw ClassNotFoundException instead of
	NoClassDefFoundError. (load_newly_created_array): Likewise, check if
	primitive-array type is valid.

	* src/vmcore/utf8.c (utf_initCause): Added.
	(utf_java_lang_Throwable__java_lang_Throwable): Likewise.
	(utf8_init): Initialize new variables.

	* src/vmcore/utf8.h (utf_initCause): Added.
	(utf_java_lang_Throwable__java_lang_Throwable): Likewise.

	* src/cacaoh/dummy.c (exceptions_throw_classnotfoundexception): New
	function. (classnotfoundexception_to_noclassdeffounderror): Removed.

	* src/vmcore/options.c (options_xx): New function.
	* src/vmcore/options.h (options_xx): Added.
	[116a6286baf0]

	* src/vmcore/primitive.c, src/vmcore/primitive.h:
	* src/vmcore/primitive.c (primitive_class_get_by_char): New
	function.
	* src/vmcore/primitive.h (primitive_class_get_by_char): Added.
	[1c2e447571f7]

2007-06-10  twisti  <twisti>

	* src/native/jni.c, src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/vm/builtin.c, src/vm/global.h,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/verify
	/typecheck-stackbased.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/resolve.c, src/vm/string.c, src/vm/vm.c,
	src/vmcore/Makefile.am, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/descriptor.c, src/vmcore/linker.c, src/vmcore/linker.h,
	src/vmcore/primitive.c, src/vmcore/primitive.h:
	* src/vm/global.h (PRIMITIVETYPE_*): Removed. (ARRAYTYPE_*):
	Likewise.

	* src/vm/jit/verify/typecheck-typeinferer.c (vmcore/primitive.h):
	Added.
	* src/vm/jit/verify/typecheck.c: Likewise.
	* src/vm/jit/verify/typecheck-stackbased.c: Likewise.
	* src/vm/jit/verify/typeinfo.c: Likewise.
	* src/vm/builtin.c: Likewise.
	* src/native/jni.c: Likewise.
	* src/native/vm/gnu/java_lang_VMClassLoader.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Field.c: Likewise.
	* src/vmcore/descriptor.c: Likewise.

	* src/vm/string.c (vmcore/primitive.h): Added. (stringtable_update):
	Use new primitive functions.

	* src/vm/resolve.c: Likewise. (resolve_class_from_typedesc): Use new
	primitive functions.

	* src/vm/vm.c (vmcore/primitive.h): Added. (vm_create): Call
	primitive_init.

	* src/native/vm/java_lang_Class.c (vmcore/primitive.h): Added.
	(isPrimitive): Use primitive_class_is_primitive.
	(getDeclaringClass): Likewise. (getDeclaredClasses): Likewise.
	(getComponentType): Use primitive_class_get_by_type.

	* src/vmcore/class.c (class_is_primitive): Removed.
	(class_primitive_get): Removed.
	* src/vmcore/class.c: Likewise.

	* src/vmcore/primitive.c: New file.
	* src/vmcore/primitive.h: Likewise.

	* src/vmcore/Makefile.am (libvmcore_la_SOURCES): Added
	primitive.[ch].

	* src/vmcore/linker.c (vmcore/primitive.h): Added.
	(primitivetype_table): Removed. (linker_init): Removed
	link_primitivetype_table call. (link_primitivetype_table): Removed.

	* src/vmcore/linker.h (primitivetypeinfo): Removed.
	(primitivetype_table): Removed.

	* src/vm/jit/verify/typecheck-builtins.inc: Removed Contact, Authors
	from header.
	[b966330e73b9]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_vmargs_from_valist): Use TYPE_-defines instead of
	PRIMITIVETYPE_ ones. (vm_vmargs_from_jvalue): Likewise.
	[6b6e8f657076]

	* configure.ac, src/native/jni.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/jit/s390/emit.c, src/vmcore/linker.h,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/native/jni.c (_Jv_jni_vmargs_from_objectarray): Indent.
	[9a477c778729]

2007-06-10  michi  <michi>

	* tests/gc/ClassInit.java:
	* tests/gc/ClassInit: Testcase for static class initializers works
	correct now.
	[81ab1163d960]

	* configure.ac, m4/classpath.m4, src/native/jni.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/java_lang_ClassLoader.c, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/jit/s390/emit.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/linker.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	Merged revisions 8034-8055 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8041 | twisti | 2007-06-07 18:21:11 +0200 (Thu, 07 Jun
	2007) | 4 lines

	 * configure.ac (AC_CHECK_HEADERS): Check for sys/select.h,
	sys/stat.h, sys/types.h. (AC_CHECK_FUNCS): Check for fstat,
	ioctl, select. ........ r8042 | twisti | 2007-06-07 19:43:29 +0200
	(Thu, 07 Jun 2007) | 9 lines

	 * src/vmcore/class.c (class_primitive_get): New function.
	  * src/vmcore/class.h (class_primitive_get): Added.

	 * src/vmcore/linker.c (primitivetype_table): Changed layout.
	(link_primitivetype_table): Store UTF-8 name in table.

	 * src/vmcore/linker.h (primitivetypeinfo): Changed layout, added
	cname, changed name to UTF-8. ........ r8043 | twisti | 2007-06-07
	21:22:31 +0200 (Thu, 07 Jun 2007) | 2 lines

	 * configure.ac (AC_CHECK_FUNCS): Added open, strerror. ........
	r8044 | twisti | 2007-06-07 21:24:35 +0200 (Thu, 07 Jun 2007) | 5
	lines

	 * src/vm/builtin.c (builtin_nanotime): New function.
	(builtin_currenttimemillis): Use builtin_nanotime.

	 * src/vm/builtin.h (builtin_nanotime): Added. ........ r8045 |
	twisti | 2007-06-07 23:52:21 +0200 (Thu, 07 Jun 2007) | 2 lines

	 * src/native/jni.c (_Jv_JNI_FatalError): Changed error message.
	........ r8046 | pm | 2007-06-08 00:02:16 +0200 (Fri, 08 Jun 2007)
	| 4 lines

	 * src/vm/jit/s390/emit.c (emit_verbosecall_enter): Fix passing of
	float argument 2 to builtin_verbosecall_enter.
	  * src/vm/builtin.c (builtin_print_argument): Fix malfunctioning
	conversion from s8 to float on s390. ........ r8047 | twisti |
	2007-06-08 00:20:37 +0200 (Fri, 08 Jun 2007) | 13 lines

	 * src/vmcore/utf8.c (utf_java_security_PrivilegedActionException):
	Added. (utf8_init): Initialize
	utf_java_security_PrivilegedActionException.

	 * src/vmcore/utf8.h (utf_java_security_PrivilegedActionException):
	Added.

	 * src/vm/exceptions.c
	(exceptions_throw_privilegedactionexception): New function.

	 * src/vm/exceptions.h
	(exceptions_throw_privilegedactionexception): Added. ........
	r8048 | twisti | 2007-06-08 00:41:54 +0200 (Fri, 08 Jun 2007) | 11
	lines

	 * src/vmcore/utf8.c (utf_java_lang_Exception__V): Added.
	(utf8_init): Initialize utf_java_lang_Exception__V.
	  * src/vmcore/utf8.h (utf_java_lang_Exception__V): Added.

	 * src/vm/exceptions.c (exceptions_throw_utf_exception): New
	function. (exceptions_throw_privilegedactionexception): Use
	exceptions_throw_utf_exception.

	 * src/native/native.c (native_new_and_init_exception): New
	function.
	  * src/native/native.h (native_new_and_init_exception): Added. ........
	r8049 | twisti | 2007-06-08 01:30:45 +0200 (Fri, 08 Jun 2007) | 6
	lines

	 * src/vmcore/class.c (class_define): New function.
	  * src/vmcore/class.h (class_define): Added.

	 * src/native/vm/java_lang_ClassLoader.c (defineClass): Use
	class_define. ........ r8050 | twisti | 2007-06-08 22:04:34 +0200
	(Fri, 08 Jun 2007) | 2 lines

	 * configure.ac (AC_CHECK_FUNCS): Added lseek. ........ r8051 |
	twisti | 2007-06-08 22:42:54 +0200 (Fri, 08 Jun 2007) | 3 lines

	 * m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_INCLUDEDIR): Check for
	jni_md.h too. ........
	[6563526e7ae9]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/region.c:
	* src/mm/cacao-gc/heap.c (heap_update_references,
	heap_increase_size): Added.
	* src/mm/cacao-gc/region.c (region_resize): Added.
	* src/mm/cacao-gc/gc.c (gc_collect): Heap gets resized if it's too
	small.

	* src/mm/cacao-gc/gc.c (gc_reference_register): Can be called
	without gc_init.
	[761f70b4c073]

	* src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Fixed typo.
	[06e3c947f614]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getClassLoader): Handle indirection cell of
	bootstrap classloader properly.
	[ec40a38a4415]

	* configure.ac, m4/classpath.m4, src/threads/native/threads.c,
	src/threads/threads-common.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/jit/s390/emit.c, src/vmcore/linker.h,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/threads/threads-common.c [ENABLE_GC_CACAO]: References to
	java.lang.Thread now get registered uppon threadobject creation.

	* src/threads/native/threads.c (threads_init) [ENABLE_GC_CACAO]:
	Register mainthreadobject with the GC as well.
	[f27ccfc9cef4]

2007-06-08  twisti  <twisti>

	* m4/classpath.m4:
	* m4/classpath.m4 (AC_CHECK_WITH_CLASSPATH_INCLUDEDIR): Check for
	jni_md.h too.
	[a7ff8e5056a1]

	* configure.ac:
	* configure.ac (AC_CHECK_FUNCS): Added lseek.
	[2570912c4f23]

2007-06-07  twisti  <twisti>

	* src/native/vm/java_lang_ClassLoader.c, src/vmcore/class.c,
	src/vmcore/class.h:
	* src/vmcore/class.c (class_define): New function.
	* src/vmcore/class.h (class_define): Added.

	* src/native/vm/java_lang_ClassLoader.c (defineClass): Use
	class_define.
	[d07d76fc4127]

	* src/native/native.c, src/native/native.h, src/vm/exceptions.c,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/utf8.c (utf_java_lang_Exception__V): Added.
	(utf8_init): Initialize utf_java_lang_Exception__V.
	* src/vmcore/utf8.h (utf_java_lang_Exception__V): Added.

	* src/vm/exceptions.c (exceptions_throw_utf_exception): New
	function. (exceptions_throw_privilegedactionexception): Use
	exceptions_throw_utf_exception.

	* src/native/native.c (native_new_and_init_exception): New function.
	* src/native/native.h (native_new_and_init_exception): Added.
	[51375f51d27f]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vmcore/utf8.c,
	src/vmcore/utf8.h:
	* src/vmcore/utf8.c (utf_java_security_PrivilegedActionException):
	Added. (utf8_init): Initialize
	utf_java_security_PrivilegedActionException.

	* src/vmcore/utf8.h (utf_java_security_PrivilegedActionException):
	Added.

	* src/vm/exceptions.c (exceptions_throw_privilegedactionexception):
	New function.

	* src/vm/exceptions.h (exceptions_throw_privilegedactionexception):
	Added.
	[91d976c76ab3]

2007-06-07  pm  <pm>

	* src/vm/builtin.c, src/vm/jit/s390/emit.c:
	* src/vm/jit/s390/emit.c (emit_verbosecall_enter): Fix passing of
	float argument 2 to builtin_verbosecall_enter.
	* src/vm/builtin.c (builtin_print_argument): Fix malfunctioning
	conversion from s8 to float on s390.
	[519598ee5f7c]

2007-06-07  twisti  <twisti>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_FatalError): Changed error message.
	[55e700ed2709]

	* src/vm/builtin.c, src/vm/builtin.h:
	* src/vm/builtin.c (builtin_nanotime): New function.
	(builtin_currenttimemillis): Use builtin_nanotime.

	* src/vm/builtin.h (builtin_nanotime): Added.
	[401776117493]

	* configure.ac:
	* configure.ac (AC_CHECK_FUNCS): Added open, strerror.
	[ca72c4495369]

	* src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c,
	src/vmcore/linker.h:
	* src/vmcore/class.c (class_primitive_get): New function.
	* src/vmcore/class.h (class_primitive_get): Added.

	* src/vmcore/linker.c (primitivetype_table): Changed layout.
	(link_primitivetype_table): Store UTF-8 name in table.

	* src/vmcore/linker.h (primitivetypeinfo): Changed layout, added
	cname, changed name to UTF-8.
	[2b7b6493b36c]

	* configure.ac:
	* configure.ac (AC_CHECK_HEADERS): Check for sys/select.h,
	sys/stat.h, sys/types.h. (AC_CHECK_FUNCS): Check for fstat, ioctl,
	select.
	[b6e5f1303df2]

2007-06-07  michi  <michi>

	* src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Add syncslots to
	the rootset.
	[c98b52b5c6d7]

	* src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit): Enabled rplpoints for
	ICMD_BUILTIN.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	[e61e24193720]

	* src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/replace.c (replace_create_replacement_points)
	[ENABLE_GC_CACAO]: Create replacement points for builtin invokations
	as well.

	* src/vm/jit/replace.h: Added REPLACEMENT_POINT_FORGC_BUILTIN and
	REPLACEMENT_POINT_FORGC_BUILTIN_RETURN.
	[b8cd6ed9311c]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c: Fixed some compiler wanings and verbose
	output.
	* src/mm/cacao-gc/gc.c: Likewise.
	[95f567f2e31b]

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_classes): Fixed alignment
	problem.
	[5e61c8496d97]

	* src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Fixed verbose
	output.
	[45b51e706e2e]

	* src/vm/jit/m68k/linux/md-abi.c:
	Merged revisions 8027-8033 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r8032 | tbfg | 2007-06-07 13:23:52 +0200 (Thu, 07 Jun
	2007) | 2 lines

	 * src/vm/jit/m68k/linux/md-abi.c: Additional defines for address
	registers. ........
	[10960ea13d78]

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_find_replacement_point): Fixed
	assertion.
	* src/mm/cacao-gc/gc.h [__M68K__]: Added this architecture.
	* src/mm/cacao-gc/heap.c (heap_alloc_intern): Removed debug code.
	[bdb055d25777]

2007-06-07  tbfg  <tbfg>

	* src/vm/jit/m68k/linux/md-abi.c:
	* src/vm/jit/m68k/linux/md-abi.c: Additional defines for address
	registers.
	[807254ee68f7]

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/md.c:
	* linux/md-os.c (md_signal_handler_sigusr1): Implemented.
	* emit.c (emit_replacement_stubs): Partially implemented.
	* md.c (md_init): Disabled santiy checks.
	* arch.h (REPLACEMENT_PATCH_SIZE): Defined to 0 for now.
	* codegen.c (codegen_emit_stub_builtin): Implemented.
	[a1f4488c6d64]

2007-06-07  michi  <michi>

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigusr1):
	Implemented.
	[aa3f16d05963]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_pop_native_frame,
	replace_push_native_frame) [HAS_ADDRESS_REGISTER_FILE]: Adapted to
	restore saved address registers as well.
	[987c8ac0539f]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_readout): Use thread list
	instead of table.
	* src/mm/cacao-gc/gc.c (gc_collect): Fixed deadlock with threads_dump.
	[7fb4b86acc7a]

	* ChangeLog, NEWS, configure.ac, src/mm/boehm-gc/pthread_stop_world.c,
	src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/sun_misc_Unsafe.c,
	src/native/vm/java_lang_Class.c, src/threads/critical.c,
	src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/access.c, src/vm/access.h,
	src/vm/builtin.c, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/emit-
	common.h, src/vm/jit/i386/linux/md-os.c, src/vm/jit/jit.c,
	src/vm/jit/mips/Makefile.am, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/optimizing/ifconv.c,
	src/vm/jit/optimizing/profile.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	abi.h, src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux
	/md-os.c, src/vm/jit/powerpc/md.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/replace.c,
	src/vm/jit/replace.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c, src/vm/jit/show.c,
	src/vm/jit/show.h, src/vm/jit/sparc64/Makefile.am,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/machine-instr.h,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-asm.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md.c, src/vm/resolve.c, src/vm/signal.c,
	src/vm/signallocal.h, src/vm/string.c, src/vm/stringlocal.h,
	src/vm/vm.c, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/linker.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/utf8.c, src/vmcore/utf8.h:
	Merged revisions 7940-8026 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7941 | twisti | 2007-05-23 13:59:51 +0200 (Wed, 23 May
	2007) | 6 lines

	 * src/vm/exceptions.c (new_exception_int): Removed.
	  * src/vm/exceptions.h (new_exception_int): Likewise.

	 * src/native/native.c (native_new_and_init_int): Likewise.
	  * src/native/native.h (native_new_and_init_int): Likewise. ........
	r7942 | twisti | 2007-05-23 14:40:31 +0200 (Wed, 23 May 2007) | 24
	lines

	 * src/vm/exceptions.c (threads/lock-common.h): Added.
	[ENABLE_THREADS] (threads/native/threads.h): Removed.
	[!ENABLE_THREADS] (threads/none/threads.h): Likewise. (threads
	/threads-common.h): Added. (new_exception_message): Removed.
	(exceptions_throw_classcircularityerror): Use
	exceptions_throw_utf_utf. (exceptions_throw_classformaterror):
	Likewise. (classnotfoundexception_to_noclassdeffounderror): Fixed
	warning. (exceptions_throw_incompatibleclasschangeerror): Use
	exceptions_throw_utf_utf. (exceptions_throw_internalerror):
	Likewise. (exceptions_throw_unsupportedclassversionerror):
	Likewise. (exceptions_throw_verifyerror): Likewise.
	(exceptions_throw_verifyerror_for_stack): Likewise.
	(exceptions_new_arithmeticexception): Likewise.
	(exceptions_new_classcastexception): Use exceptions_new_class_utf.
	(exceptions_print_exception): Fixed warnings.

	 * src/vmcore/utf8.c (utf_division_by_zero): Added. (utf8_init):
	Likewise.

	 * src/vmcore/utf8.h (utf_division_by_zero): Likewise. ........
	r7943 | twisti | 2007-05-23 15:09:28 +0200 (Wed, 23 May 2007) | 4
	lines

	 * src/vmcore/linker.c (linker_compute_subclasses): We don't ship
	the critical-section stuff with this release, since it's broken on
	some architectures because of boehm. ........ r7944 | tbfg |
	2007-05-23 16:15:00 +0200 (Wed, 23 May 2007) | 3 lines

	 * src/vm/jit/powerpc64/emit.c (MCODECHECK): Increase values to fix
	canary corruption.
	  * src/vm/jit/powerpc64/codegen.c (MCODECHECK): Increase values to fix
	canary corruption. ........ r7945 | twisti | 2007-05-23 17:25:18
	+0200 (Wed, 23 May 2007) | 5 lines

	 * src/vm/jit/powerpc64/codegen.c (codegen_emit): ICMD_INSTANCEOF:
	Removed unused supervftbl.

	 * src/vm/jit/emit-common.h [__POWERPC64__] (emit_bnan): Enabled.
	........ r7946 | twisti | 2007-05-23 17:43:53 +0200 (Wed, 23 May
	2007) | 2 lines

	 * configure.ac (OPT_CFLAGS): Changed to -O2. ........ r7947 |
	twisti | 2007-05-23 17:57:41 +0200 (Wed, 23 May 2007) | 4 lines

	 * src/vm/jit/x86_64/md.c (md_get_method_patch_address): Fixed
	warning.
	  * src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv):
	Likewise. ........ r7948 | twisti | 2007-05-23 18:00:13 +0200
	(Wed, 23 May 2007) | 3 lines

	 * src/vm/exceptions.c (exceptions_new_hardware_exception): Fixed
	warning. ........ r7949 | twisti | 2007-05-23 19:46:27 +0200 (Wed,
	23 May 2007) | 2 lines

	 * src/vm/jit/jit.c (jit_compile_intern): Fixed typo. ........
	r7950 | twisti | 2007-05-23 19:51:04 +0200 (Wed, 23 May 2007) | 2
	lines

	 * src/vm/vm.c (vm_create): Use vm_abort for profile_start_thread.
	........ r7951 | twisti | 2007-05-23 19:51:43 +0200 (Wed, 23 May
	2007) | 3 lines

	 * src/vm/jit/optimizing/profile.c (profile_thread): Replaced
	table- with list-functions. ........ r7952 | twisti | 2007-05-23
	19:53:13 +0200 (Wed, 23 May 2007) | 2 lines

	 * src/vm/jit/optimizing/profile.c: Set Id keyword. ........
	r7953 | twisti | 2007-05-23 19:56:59 +0200 (Wed, 23 May 2007) | 3
	lines

	 * src/native/vm/gnu/java_lang_VMClassLoader.c (getPrimitiveClass):
	Return NULL in error case. ........ r7954 | twisti | 2007-05-23
	19:58:18 +0200 (Wed, 23 May 2007) | 3 lines

	 * src/threads/native/lock.c: Set Id keyword.
	  * src/threads/native/lock.h: Likewise. ........ r7955 | twisti |
	2007-05-23 20:05:26 +0200 (Wed, 23 May 2007) | 8 lines

	 * src/vm/jit/arm/linux/md-os.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/x86_64/linux/md-
	os.c (md_critical_section_restart): Removed debug output. ........
	r7956 | twisti | 2007-05-23 20:08:42 +0200 (Wed, 23 May 2007) | 3
	lines

	 * src/vmcore/statistics.c (statistics_print_memory_usage): Smaller
	output changes. ........ r7957 | twisti | 2007-05-23 20:28:01
	+0200 (Wed, 23 May 2007) | 2 lines

	 * src/vm/jit/mips/Makefile.am (DIST_SUBDIRS): Added uclinux.
	........ r7958 | twisti | 2007-05-23 21:11:10 +0200 (Wed, 23 May
	2007) | 3 lines

	 * src/vm/jit/powerpc64/linux/md-os.c
	(md_critical_section_restart): Fixed typo. ........ r7959 |
	twisti | 2007-05-23 21:37:26 +0200 (Wed, 23 May 2007) | 5 lines

	 * src/threads/threads-common.h (THREAD_STATE_NEW)
	(THREAD_STATE_RUNNABLE, THREAD_STATE_BLOCKED, THREAD_STATE_WAITING)
	(THREAD_STATE_TIMED_WAITING, THREAD_STATE_TERMINATED): Start states
	with 1, so we can catch unset states. ........ r7960 | twisti |
	2007-05-24 00:04:49 +0200 (Thu, 24 May 2007) | 2 lines

	 * configure.ac (AM_INIT_AUTOMAKE): Added dist-bzip2. ........
	r7961 | ajordan | 2007-05-24 00:54:38 +0200 (Thu, 24 May 2007) | 4
	lines

	 * src/vm/jit/sparc64/Makefile.am: md-asm.h was not properly
	added to noinst_HEADERS. ........ r7962 | ajordan | 2007-05-24
	01:56:59 +0200 (Thu, 24 May 2007) | 3 lines

	 * src/vm/jit/sparc64/Makefile.am: Added missing emit.h. ........
	r7963 | twisti | 2007-05-24 12:21:16 +0200 (Thu, 24 May 2007) | 42
	lines

	 * src/threads/threads-common.c (mm/memory.h): Added.
	(toolbox/list.h): Likewise. (threads_table): Removed.
	(list_threads, list_threads_free): Added. (threads_preinit):
	Initialize lists. (threads_table_init): Removed.
	(threads_table_add): Likewise. (threads_table_remove): Likewise.
	(threads_table_get): Likewise. (threads_table_get_threads):
	Likewise. (threads_table_get_non_daemons): Likewise.
	(threads_table_first): Likewise. (threads_table_next): Likewise.
	(threads_table_dump): Likewise. (threads_list_first): New
	function. (threads_list_next): Likewise.
	(threads_list_get_non_daemons): Likewise. (threads_thread_new):
	Likewise. (threads_thread_free): Likewise.
	(threads_thread_print_info): Added state-assert, print thread index.
	(threads_thread_state_runnable): New function.
	(threads_thread_state_waiting): Likewise.
	(threads_thread_state_timed_waiting): Likewise.
	(threads_thread_state_terminated): Likewise. (threads_dump): Use
	threads-list functions.

	 * src/threads/threads-common.h: Likewise.
	(threads_table_entry_t): Removed. (threads_table_t): Likewise.

	 * src/threads/native/threads.c (mutex_threads_table): Renamed to
	mutex_threads_list. (threads_cast_sendsignals): Use threads-list
	functions. (threads_table_lock): Renamed to threads_list_lock.
	(threads_table_unlock): Renamed to threads_list_unlock.
	(threads_startup_thread): Use threads-state functions.
	(threads_detach_thread): Likewise. (threads_wait_with_timeout):
	Likewise. (threads_join_all_threads): Use threads-list functions.

	 * src/threads/native/threads.h (threadobject): Added linkage.
	........ r7964 | twisti | 2007-05-24 12:23:42 +0200 (Thu, 24 May
	2007) | 3 lines

	 * src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigsegv): Fixed
	warning. ........ r7965 | michi | 2007-05-24 15:25:41 +0200 (Thu,
	24 May 2007) | 3 lines

	 * src/vmcore/linker.c (link_class_intern) [__ARM_EABI__]: Fixed
	field alignment bug. Double and Long fields are 8-byte aligned
	with EABI. ........ r7966 | pm | 2007-05-25 14:41:03 +0200 (Fri,
	25 May 2007) | 24 lines

	 * src/vm/jit/show.h (show_filters_init, show_filters_apply,
	show_filters_test_verbosecall_enter,
	show_filters_test_verbosecall_exit): Added.
	  * src/vm/jit/show.c: Likewise.
	  * src/vm/jit/jit.c (jit_compile_intern): Honour filters.
	  * src/vm/jit/codegen-common.c (codegen_add_patch_ref,
	codegen_generate_stub_native): Honour PATCHER_LONGBRANCHES_NOPS if
	defined, honour filters.
	  * src/vm/builtin.c (builtin_trace_exception,
	builtin_verbosecall_enter, builtin_verbosecall_exit): Honour
	filters.
	  * src/vm/signal.c (signal_init): Register SIGILL handler on s390.
	  * src/vm/vm.c: Handle -XXfi, -XXfe, -XXfm commandline options.
	  * src/vm/signallocal.h (md_signal_handler_sigill): Forward declare on
	s390.
	  * src/threads/none/threads.h (_no_threads_filterverbosecallctr,
	FILTERVERBOSECALLCTR): Added.
	  * src/threads/native/threads.h (struct threadobject): Added
	filterverbosecallctr.
	  * src/threads/native/threads.c (threads_impl_thread_new): Initialize
	filterverbosecallctr.
	  * src/threads/critical.c (critical_comparator): On s390, clear bit 32
	of pointer when comparing.
	  * src/vmcore/options.h (opt_filter_verbosecall_include,
	opt_filter_verbosecall_exclude, opt_filter_show_method): Added.
	  * src/vmcore/options.c: Likewise.
	  * src/vmcore/method.h (struct methodinfo): Added filtermatches.
	  * configure.ac: If no NDEBUG and regex.h header is present, define
	ENABLE_DEBUG_FILTER.
	  * src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/tests/dacapo.status, src/vm/jit/s390/patcher.c:
	Changed a lot. ........ r7967 | twisti | 2007-05-25 17:03:46 +0200
	(Fri, 25 May 2007) | 3 lines

	 * src/vm/string.c (javastring_new_from_utf_buffer): Made static.
	  * src/vm/stringlocal.h (javastring_new_from_utf_buffer): Removed.
	........ r7968 | twisti | 2007-05-25 17:05:04 +0200 (Fri, 25 May
	2007) | 3 lines

	 * src/vm/jit/powerpc/md.c (md_get_method_patch_address): Fixed
	warning, use vm_abort. ........ r7969 | twisti | 2007-05-25
	17:05:57 +0200 (Fri, 25 May 2007) | 3 lines

	 * src/vm/jit/optimizing/ifconv.c (vm/vm.h): Added.
	(ifconv_static): Fixed warning, use vm_abort. ........ r7970 |
	twisti | 2007-05-25 17:23:56 +0200 (Fri, 25 May 2007) | 5 lines

	 * src/threads/threads-common.c (threads_thread_start_internal)
	[WITH_CLASSPATH_CLDC1_1]: Set name to NULL, but this needs a fix.
	(threads_thread_print_info) [ENABLE_JAVAME_CLDC1_1]: Set name to
	utf_null. ........ r7971 | pm | 2007-05-26 17:26:06 +0200 (Sat, 26
	May 2007) | 2 lines

	 * contrib/vmlog/vmlog.c: Use autoconf define WORDS_BIGENDIAN to
	determine endianess. ........ r7972 | ajordan | 2007-05-28
	02:05:04 +0200 (Mon, 28 May 2007) | 11 lines

	 * src/vm/jit/sparc64/codegen.h: Removed asserts for stores with
	sethi.

	 * src/vm/jit/sparc64/codegen.c: Added code to fill with nops when
	a patcher is right at the end of a basic block.

	 * src/vm/jit/sparc64/asmpart.S (asm_vm_call_method_end): Returning
	0 when an exception occurs.

	 * src/vm/jit/sparc64/md.c (md_get_method_patch_address): Improved
	handling of mptr loads when a sethi is involved. ........ r7973
	| twisti | 2007-05-29 11:03:56 +0200 (Tue, 29 May 2007) | 10 lines

	 * src/vm/exceptions.c (exceptions_throw_illegalaccessexception):
	Changed signature.
	  * src/vm/exceptions.h: Likewise.

	 * src/vm/resolve.c (resolve_class_from_name): Make utf8-string out
	of exception message. (resolve_subtype_check): Likewise.
	(resolve_field_verifier_checks): Likewise.
	(resolve_method_verifier_checks): Likewise. ........ r7974 |
	twisti | 2007-05-29 13:30:20 +0200 (Tue, 29 May 2007) | 3 lines

	 * src/vm/jit/powerpc64/codegen.c (codegen_emit): Fixed warnings,
	some indent. ........ r7975 | pm | 2007-05-29 13:44:02 +0200
	(Tue, 29 May 2007) | 3 lines

	 * src/vm/jit/show.c (vm/vm.h) add missing include,
	(_no_threads_filterverbosecallctr) fix type: u2 instead of u4
	........ r7976 | twisti | 2007-05-29 14:22:55 +0200 (Tue, 29 May
	2007) | 24 lines

	 * src/vm/access.c (string.h): Added. (mm/memory.h): Likewise.
	(vmcore/field.h): Likewise. (vmcore/method.h): Likewise.
	(access_check_member): Removed. (access_check_field): New
	function. (access_check_method): Likewise.

	 * src/vm/access.h (vmcore/field.h): Added. (vmcore/method.h):
	Likewise. (access_check_member): Removed. (access_check_field):
	New function. (access_check_method): Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative):
	Call access_check_method instead of access_check_member.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Field.c
	(cacao_get_field_address): Call access_check_field instead of
	access_check_member. ........ r7977 | twisti | 2007-05-29 14:34:20
	+0200 (Tue, 29 May 2007) | 6 lines

	 * src/vm/signal.c (signal_init): Changed signature.
	  * src/vm/signallocal.h (signal_init): Likewise.

	 * src/vm/vm.c (vm_create): Call signal_init right after gc_init
	and check return value. ........ r7978 | twisti | 2007-05-30
	16:09:10 +0200 (Wed, 30 May 2007) | 7 lines

	 * src/vm/signal.c (mm/boehm-gc/include/gc.h): Added.
	(GC_suspend_handler): Defined. (GC_restart_handler): Likewise.
	(signal_thread): Add the Boehm-GC signals to the mask and call the
	appropriate Boehm-function. This is a workaround for the Boehm-
	LinuxThreads bug. ........ r7979 | twisti | 2007-05-30 17:52:00
	+0200 (Wed, 30 May 2007) | 3 lines

	 * src/vm/jit/powerpc64/codegen.c (codegen_emit): Fixed --disable-
	debug build. ........ r7980 | twisti | 2007-05-30 18:01:09 +0200
	(Wed, 30 May 2007) | 4 lines

	 * src/vm/jit/powerpc64/md.c (md_get_method_patch_address): Use
	vm_abort and fixed warning. (md_codegen_get_pv_from_pc): Likewise.
	........ r7981 | twisti | 2007-05-30 21:43:36 +0200 (Wed, 30 May
	2007) | 9 lines

	 * src/mm/boehm-gc/pthread_stop_world.c (cacao_suspendhandler):
	Commented. (GC_suspend_handler): Commented cacao_suspendhandler
	call. (GC_signum1, GC_signum2): Define for all configurations
	(hope that works).

	 * src/threads/native/threads.c: Commented all critical-sections
	code, as it does not work anyway and it does not compile
	everywhere. ........ r7982 | twisti | 2007-05-30 22:01:49 +0200
	(Wed, 30 May 2007) | 6 lines

	 * src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_native): Fixed
	typo.

	 * src/vm/jit/powerpc64/emit.c [!NDEBUG] (emit_verbosecall_enter)
	(emit_verbosecall_exit): Only compile conditionally. ........
	r7983 | twisti | 2007-05-30 22:04:42 +0200 (Wed, 30 May 2007) | 3
	lines

	 * src/vm/resolve.c (resolve_subtype_check): Don't free the memory
	before it's used. ........ r7984 | twisti | 2007-05-30 22:30:00
	+0200 (Wed, 30 May 2007) | 7 lines

	 * src/threads/native/threads.c (threads_impl_preinit): Initialize
	mutex_threads_list. (threads_impl_table_init): Removed.
	(threads_impl_table_init, threads_list_unlock): Fixed debug message.

	 * src/threads/threads-common.h (threads_impl_table_init): Removed.
	........ r7985 | twisti | 2007-05-30 22:40:23 +0200 (Wed, 30 May
	2007) | 3 lines

	 * src/mm/boehm-gc/pthread_stop_world.c (GC_signum1, GC_signum2):
	No it did not work, reverted rev7981. ........ r7986 | twisti |
	2007-05-30 22:45:43 +0200 (Wed, 30 May 2007) | 3 lines

	 * src/vm/builtin.c (math.h): Removed because we don't need it as
	we include fdlibm.h and it does not work on some OSs, like Darwin.
	........ r7987 | twisti | 2007-05-30 22:51:50 +0200 (Wed, 30 May
	2007) | 4 lines

	 * src/vm/signal.c (signal_thread) [!__DARWIN__]: Don't do the
	GC_signum stuff on Darwin (should also be done on Solaris, but let's
	wait how the exact-GC is doing). ........ r7988 | twisti |
	2007-05-30 22:53:56 +0200 (Wed, 30 May 2007) | 4 lines

	 * src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin
	/md-abi.h: Removed Contact, Authors, Changes from header. ........
	r7989 | twisti | 2007-05-30 23:04:42 +0200 (Wed, 30 May 2007) | 4
	lines

	 * src/vm/jit/powerpc/asmpart.S [ENABLE_REPLACEMENT] (L_replace_me)
	(L_replace_build_execution_state, L_replace_free_safestack): Only if
	replacement is enabled, otherwise we get a linker error. ........
	r7990 | twisti | 2007-05-30 23:05:20 +0200 (Wed, 30 May 2007) | 3
	lines

	 * src/vm/jit/powerpc/darwin/md-os.c
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart. ........ r7991 | twisti | 2007-05-30
	23:59:29 +0200 (Wed, 30 May 2007) | 3 lines

	 * ChangeLog: Updated.
	  * ChangeLog-2006: New file. ........ r7992 | twisti | 2007-05-31
	00:01:38 +0200 (Thu, 31 May 2007) | 2 lines

	 * NEWS: Added some 0.98 release notes. ........ r7993 | twisti |
	2007-05-31 00:32:43 +0200 (Thu, 31 May 2007) | 2 lines

	 * src/vm/jit/powerpc64/emit.c (emit_branch): Removed debug output.
	........ r7994 | twisti | 2007-05-31 18:10:58 +0200 (Thu, 31 May
	2007) | 2 lines

	 * src/vm/vm.c (vm_create): Added comment. ........ r7995 |
	twisti | 2007-06-01 00:45:19 +0200 (Fri, 01 Jun 2007) | 2 lines

	 * src/vm/signal.c: Reverted rev7978. ........ r7996 | twisti |
	2007-06-01 01:05:51 +0200 (Fri, 01 Jun 2007) | 15 lines

	 * m4/ac_pthreads_implementation.m4: New file.

	 * m4/threads.m4 (AC_CHECK_ENABLE_THREADS): Call
	AC_CHECK_PTHREADS_IMPLEMENTATION for posix and linux.

	 * configure.ac (AC_CHECK_HEADERS): Added stdlib.h.
	(AC_CHECK_FUNCS): Added confstr, strstr.

	 * src/vm/signal.c (signal_init) [!PTHREADS_IS_LINUXTHREADS]: Only
	block the signals if we are not on LinuxThreads. (signal_thread):
	Set state accordingly.

	 * src/vm/vm.c (vm_create) [!PTHREADS_IS_LINUXTHREADS]: Only start
	signal-thread if we are not on LinuxThreads. ........ r7997 |
	twisti | 2007-06-01 01:26:23 +0200 (Fri, 01 Jun 2007) | 5 lines

	 * src/vm/jit/mips/irix/md-os.c (vm/jit/mips/codegen.h): Added.
	(md_signal_handler_sigsegv): Updated to new exception-handling.
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart. ........ r7998 | twisti | 2007-06-01
	02:29:51 +0200 (Fri, 01 Jun 2007) | 16 lines

	 * m4/ac_pthreads_implementation.m4: Reverted rev7996.
	  * m4/threads.m4: Likewise.

	 * src/threads/threads-common.c [__LINUX__]
	(threads_pthreads_implementation_nptl): Added. (threads_preinit)
	[__LINUX__]: Check which thread-implementation we are using.

	 * src/threads/threads-common.h [__LINUX__]
	(threads_pthreads_implementation_nptl): Added.

	 * src/vm/signal.c (signal_init) [__LINUX__]: Check for
	threads_pthreads_implementation_nptl.

	 * src/vm/vm.c (vm_create) [__LINUX__]: Likewise. ........ r7999
	| ajordan | 2007-06-01 02:45:04 +0200 (Fri, 01 Jun 2007) | 12 lines

	 * src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Fixed
	the way float arguments are preserved over
	codegen_start_native_call.
	  * src/vm/jit/sparc64/md-abi.c (codegen_start_native_call): Likewise.

	 * src/vm/jit/sparc64/machine-instr.h (compare_and_swap): Changed
	inline assembly, so it survives gcc optimization.

	 * src/vm/jit/sparc64/asmpart.S (asm_patcher_wrapper): Saving and
	restoring float return register.
	  * src/vm/jit/sparc64/md-asm.h: Likewise. ........ r8000 | ajordan |
	2007-06-01 21:34:56 +0200 (Fri, 01 Jun 2007) | 2 lines

	 * src/vm/signal.c: Added ifdefs to fix compiling with disabled
	threads. ........ r8001 | pm | 2007-06-02 19:47:30 +0200 (Sat, 02
	Jun 2007) | 9 lines

	 * contrib/vmlog/vmlogfilter.c: Added a tool that filters a vmlog
	log file the same way as -XXfi and -XXfx do.

	 * contrib/vmlog/vmlog.c, contrib/vmlog/vmlog.h
	(vmlog_thread_log_append): Made not-static.

	 * contrib/vmlog/Makefile.am, configure.ac: Conditional building
	of vmlogfilter if ENABLE_VMLOG is set and regex.h present. ........
	r8002 | pm | 2007-06-03 20:24:44 +0200 (Sun, 03 Jun 2007) | 2 lines

	 * configure.ac: Fix broken regex.h test. ........ r8003 | twisti
	| 2007-06-03 20:42:09 +0200 (Sun, 03 Jun 2007) | 16 lines

	 * src/threads/threads-common.c (threads_thread_start_internal):
	Changed order of initialization stuff, so we can leave the join-
	mutex very early. (threads_thread_start): Likewise.

	 * src/threads/native/threads.c (threads_mutex_join_lock): New
	function. (threads_mutex_join_unlock): Likewise.
	(threads_attach_current_thread): Changed order of initialization
	stuff, so we can leave the join-mutex very early.
	(threads_detach_thread): Send the signal inside the join-mutex.
	(threads_join_all_threads): Use join-mutex functions.

	 * src/threads/threads-common.h (threads_mutex_join_lock): Added.
	(threads_mutex_join_unlock): Likewise. ........ r8004 | twisti |
	2007-06-04 14:59:04 +0200 (Mon, 04 Jun 2007) | 3 lines

	 * src/vm/signal.c (signal_init): Use if-vm_abort instead of
	assert.
	  * src/vm/exceptions.h: Changed hardware-exception comment accordingly.
	........ r8005 | twisti | 2007-06-04 15:12:56 +0200 (Mon, 04 Jun
	2007) | 9 lines

	 * src/vm/signal.c (unistd.h): Removed. (sys/mman.h): Likewise.
	(signal_init): Moved mmap of page 0x0 and the hardware-exceptions
	check into exceptions_init.

	 * src/vm/exceptions.c (unistd.h): Added. (sys/mman.h): Likewise.
	(exceptions_init): See above. ........ r8006 | twisti | 2007-06-05
	09:40:49 +0200 (Tue, 05 Jun 2007) | 20 lines

	 * src/vmcore/statistics.c (count_calls_java_to_native): Added.
	(count_calls_native_to_java): Likewise.
	(count_native_function_calls): Removed. (nativeinvokation):
	Likewise. (print_stats): Print new variables.

	 * src/vmcore/statistics.h (count_calls_java_to_native): Added.
	(count_calls_native_to_java): Likewise. (nativeinvokation):
	Removed.

	 * src/vm/jit/codegen-common.c (codegen_start_native_call)
	[ENABLE_STATISTICS]: Increase count_calls_java_to_native.

	 * src/vm/vm.c (vm_call_method_vmarg) [ENABLE_STATISTICS]: Increase
	count_calls_native_to_java. (vm_call_method_int_vmarg): Likewise.
	(vm_call_method_long_vmarg): Likewise.
	(vm_call_method_float_vmarg): Likewise.
	(vm_call_method_double_vmarg): Likewise. ........ r8007 | twisti |
	2007-06-05 09:42:57 +0200 (Tue, 05 Jun 2007) | 2 lines

	 * src/vm/vm.c (vmcore/statistics.h): Added. ........ r8008 |
	twisti | 2007-06-05 09:44:38 +0200 (Tue, 05 Jun 2007) | 2 lines

	 * src/vm/vm.c: Set Id keyword. ........ r8009 | twisti |
	2007-06-05 09:56:35 +0200 (Tue, 05 Jun 2007) | 2 lines

	 * src/vm/jit/mips/codegen.c (codegen_emit): Small code-layout
	change. ........ r8010 | twisti | 2007-06-05 11:00:30 +0200 (Tue,
	05 Jun 2007) | 3 lines

	 * src/vm/jit/mips/codegen.c (codegen_emit): Use FLTMOVE and
	DBLMOVE to save some moves. ........ r8011 | twisti | 2007-06-05
	12:06:18 +0200 (Tue, 05 Jun 2007) | 12 lines

	 * src/vm/jit/mips/md-abi.c (md_param_alloc) [SIZEOF_VOID_P == 4]:
	Use internally a different calling convention. It's the same as on
	n64 with register skipping and, but with long alignment (as on
	ARM). (md_param_alloc_native) [SIZEOF_VOID_P == 4]: Use the o32
	ABI.

	 * src/vm/jit/mips/codegen.c (codegen_emit) [SIZEOF_VOID_P == 4]:
	Changes for new internal calling conventions.
	(codegen_emit_stub_native) [SIZEOF_VOID_P == 4]: Likewise.

	 * src/vm/jit/mips/asmpart.S (asm_vm_call_method) [SIZEOF_VOID_P ==
	4]: Adjusted reserved stack-space to 4*4. ........ r8012 |
	twisti | 2007-06-05 12:14:29 +0200 (Tue, 05 Jun 2007) | 3 lines

	 * src/vm/jit/mips/md-abi.c (md_param_alloc_native)
	[SIZEOF_VOID_P == 8]: Fixed compilation. ........ r8013 | twisti |
	2007-06-05 12:19:09 +0200 (Tue, 05 Jun 2007) | 3 lines

	 * src/vm/jit/mips/md-abi.c (md_param_alloc) [SIZEOF_VOID_P == 8]:
	Use reguse instead of i. ........ r8014 | twisti | 2007-06-05
	14:53:30 +0200 (Tue, 05 Jun 2007) | 3 lines

	 * src/vm/jit/codegen-common.c [__ARM__] (md-abi.h): Removed.
	(codegen_reg_of_var) [__ARM__]: Removed split-code. ........ r8015
	| twisti | 2007-06-05 22:58:11 +0200 (Tue, 05 Jun 2007) | 10 lines

	 * src/native/vm/gnu/Makefile.am (libnativevmcore_la_SOURCES):
	Removed sun_misc_Unsafe.c.

	 * src/native/vm/Makefile.am [ENABLE_JAVASE]
	(SUN_MISC_UNSAFE_SOURCES): Added. (libnativevm_la_SOURCES):
	Added SUN_MISC_UNSAFE_SOURCES.

	 * src/native/vm/gnu/sun_misc_Unsafe.c: Removed.
	  * src/native/vm/sun_misc_Unsafe.c: Added. ........ r8016 | twisti |
	2007-06-06 00:11:12 +0200 (Wed, 06 Jun 2007) | 5 lines

	 * src/native/native.c (native_init): Check nativevm_init return
	value.

	 * src/native/vm/nativevm.c (nativevm_init): Changed signature.
	  * src/native/vm/nativevm.h (nativevm_init): Likewise. ........ r8017
	| twisti | 2007-06-06 01:46:59 +0200 (Wed, 06 Jun 2007) | 10 lines

	 * src/native/vm/gnu/java_lang_VMString.c
	(native/vm/java_lang_String.h): Added. (intern): Call
	_Jv_java_lang_String_intern.

	 * src/native/vm/java_lang_String.c: New file.
	  * src/native/vm/java_lang_String.h: Likewise.

	 * src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	java_lang_String.[ch]. ........ r8018 | twisti | 2007-06-06
	11:24:22 +0200 (Wed, 06 Jun 2007) | 2 lines

	 * configure.ac (AC_INIT): Changed version to 0.98. ........
	r8019 | twisti | 2007-06-06 11:26:00 +0200 (Wed, 06 Jun 2007) | 2
	lines

	 * ChangeLog: Updated. ........ r8022 | twisti | 2007-06-06
	13:31:28 +0200 (Wed, 06 Jun 2007) | 3 lines

	 * configure.ac (AC_INIT): Changed version to 0.98+svn.
	(OPT_CFLAGS): Changed to -O0. ........ r8023 | twisti | 2007-06-06
	19:19:17 +0200 (Wed, 06 Jun 2007) | 2 lines

	 * NEWS: Fixed 0.98 release date. ........ r8024 | twisti |
	2007-06-06 19:23:42 +0200 (Wed, 06 Jun 2007) | 8 lines

	 * src/vmcore/class.c (class_is_primitive): New function.
	  * src/vmcore/class.h (class_is_primitive): Added.

	 * src/native/vm/java_lang_Class.c (isPrimitive): Use
	class_is_primitive. (getDeclaringClass): Likewise.
	(getDeclaredClasses): Likewise. ........ r8025 | michi |
	2007-06-07 10:51:54 +0200 (Thu, 07 Jun 2007) | 8 lines

	 * src/vm/jit/code.h (codeinfo) [ENABLE_REPLACEMENT,
	HAS_ADDRESS_REGISTER_FILE]: Added savedadrcount.

	 * src/vm/jit/replace.c [HAS_ADDRESS_REGISTER_FILE]: Added support
	for address registers.

	 * src/vm/jit/replace.h [HAS_ADDRESS_REGISTER_FILE]: Likewise.
	........ r8026 | twisti | 2007-06-07 11:04:51 +0200 (Thu, 07 Jun
	2007) | 15 lines

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c (methods):
	Install _Jv_- functions directly. (getModifiersInternal):
	Removed. (getParameterTypes): Likewise. (getExceptionTypes):
	Likewise. (constructNative): Call
	_Jv_java_lang_reflect_Constructor_newInstance. (getSignature):
	Removed.

	 * src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES): Added.
	(libnativevm_la_SOURCES): Added
	JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES.

	 * src/native/vm/java_lang_reflect_Constructor.c: New file.
	  * src/native/vm/java_lang_reflect_Constructor.h: Likewise. ........
	[f14d326b56fe]

2007-06-07  twisti  <twisti>

	* src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.c,
	src/native/vm/java_lang_reflect_Constructor.h:
	* src/native/vm/gnu/java_lang_reflect_Constructor.c (methods):
	Install _Jv_- functions directly. (getModifiersInternal): Removed.
	(getParameterTypes): Likewise. (getExceptionTypes): Likewise.
	(constructNative): Call
	_Jv_java_lang_reflect_Constructor_newInstance. (getSignature):
	Removed.

	* src/native/vm/Makefile.am [ENABLE_JAVASE]
	(JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES): Added.
	(libnativevm_la_SOURCES): Added
	JAVA_LANG_REFLECT_CONSTRUCTOR_SOURCES.

	* src/native/vm/java_lang_reflect_Constructor.c: New file.
	* src/native/vm/java_lang_reflect_Constructor.h: Likewise.
	[6960350b0edd]

2007-06-07  michi  <michi>

	* src/vm/jit/code.h, src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/code.h (codeinfo) [ENABLE_REPLACEMENT,
	HAS_ADDRESS_REGISTER_FILE]: Added savedadrcount.

	* src/vm/jit/replace.c [HAS_ADDRESS_REGISTER_FILE]: Added support
	for address registers.

	* src/vm/jit/replace.h [HAS_ADDRESS_REGISTER_FILE]: Likewise.
	[4a6ecb69f8b5]

2007-06-06  twisti  <twisti>

	* src/native/vm/java_lang_Class.c, src/vmcore/class.c,
	src/vmcore/class.h:
	* src/vmcore/class.c (class_is_primitive): New function.
	* src/vmcore/class.h (class_is_primitive): Added.

	* src/native/vm/java_lang_Class.c (isPrimitive): Use
	class_is_primitive. (getDeclaringClass): Likewise.
	(getDeclaredClasses): Likewise.
	[7a59a4145783]

	* NEWS:
	* NEWS: Fixed 0.98 release date.
	[eef3556c431c]

	* configure.ac:
	* configure.ac (AC_INIT): Changed version to 0.98+svn. (OPT_CFLAGS):
	Changed to -O0.
	[98ba45471b0c]

	* ChangeLog:
	* ChangeLog: Updated.
	[430cdebdf7d1] [cacao-0.98]

	* configure.ac:
	* configure.ac (AC_INIT): Changed version to 0.98.
	[55dc961e7162]

2007-06-05  twisti  <twisti>

	* src/native/vm/Makefile.am, src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/java_lang_String.c, src/native/vm/java_lang_String.h:
	* src/native/vm/gnu/java_lang_VMString.c
	(native/vm/java_lang_String.h): Added. (intern): Call
	_Jv_java_lang_String_intern.

	* src/native/vm/java_lang_String.c: New file.
	* src/native/vm/java_lang_String.h: Likewise.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	java_lang_String.[ch].
	[5d0584628b96]

	* src/native/native.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h:
	* src/native/native.c (native_init): Check nativevm_init return
	value.

	* src/native/vm/nativevm.c (nativevm_init): Changed signature.
	* src/native/vm/nativevm.h (nativevm_init): Likewise.
	[757bca0bff3a]

	* src/native/vm/Makefile.am, src/native/vm/gnu/Makefile.am,
	src/native/vm/gnu/sun_misc_Unsafe.c,
	src/native/vm/sun_misc_Unsafe.c:
	* src/native/vm/gnu/Makefile.am (libnativevmcore_la_SOURCES):
	Removed sun_misc_Unsafe.c.

	* src/native/vm/Makefile.am [ENABLE_JAVASE]
	(SUN_MISC_UNSAFE_SOURCES): Added. (libnativevm_la_SOURCES): Added
	SUN_MISC_UNSAFE_SOURCES.

	* src/native/vm/gnu/sun_misc_Unsafe.c: Removed.
	* src/native/vm/sun_misc_Unsafe.c: Added.
	[95d583480799]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c [__ARM__] (md-abi.h): Removed.
	(codegen_reg_of_var) [__ARM__]: Removed split-code.
	[3ab646d8b0e1]

	* src/vm/jit/mips/md-abi.c:
	* src/vm/jit/mips/md-abi.c (md_param_alloc) [SIZEOF_VOID_P == 8]:
	Use reguse instead of i.
	[643220e47422]

	* src/vm/jit/mips/md-abi.c:
	* src/vm/jit/mips/md-abi.c (md_param_alloc_native) [SIZEOF_VOID_P ==
	8]: Fixed compilation.
	[5f2d418385a3]

	* src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/md-abi.c:
	* src/vm/jit/mips/md-abi.c (md_param_alloc) [SIZEOF_VOID_P == 4]:
	Use internally a different calling convention. It's the same as on
	n64 with register skipping and, but with long alignment (as on ARM).
	(md_param_alloc_native) [SIZEOF_VOID_P == 4]: Use the o32 ABI.

	* src/vm/jit/mips/codegen.c (codegen_emit) [SIZEOF_VOID_P == 4]:
	Changes for new internal calling conventions.
	(codegen_emit_stub_native) [SIZEOF_VOID_P == 4]: Likewise.

	* src/vm/jit/mips/asmpart.S (asm_vm_call_method) [SIZEOF_VOID_P ==
	4]: Adjusted reserved stack-space to 4*4.
	[f3dfa2fb1f08]

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): Use FLTMOVE and DBLMOVE
	to save some moves.
	[6e02854739d1]

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): Small code-layout
	change.
	[397770a510c4]

	* src/vm/vm.c:
	* src/vm/vm.c: Set Id keyword.
	[d1945a7fc00f]

	* src/vm/vm.c:
	* src/vm/vm.c (vmcore/statistics.h): Added.
	[a834dcae9a0b]

	* src/vm/jit/codegen-common.c, src/vm/vm.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.c (count_calls_java_to_native): Added.
	(count_calls_native_to_java): Likewise.
	(count_native_function_calls): Removed. (nativeinvokation):
	Likewise. (print_stats): Print new variables.

	* src/vmcore/statistics.h (count_calls_java_to_native): Added.
	(count_calls_native_to_java): Likewise. (nativeinvokation): Removed.

	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	[ENABLE_STATISTICS]: Increase count_calls_java_to_native.

	* src/vm/vm.c (vm_call_method_vmarg) [ENABLE_STATISTICS]: Increase
	count_calls_native_to_java. (vm_call_method_int_vmarg): Likewise.
	(vm_call_method_long_vmarg): Likewise. (vm_call_method_float_vmarg):
	Likewise. (vm_call_method_double_vmarg): Likewise.
	[cbcd525d01cc]

2007-06-04  twisti  <twisti>

	* src/vm/exceptions.c, src/vm/signal.c:
	* src/vm/signal.c (unistd.h): Removed. (sys/mman.h): Likewise.
	(signal_init): Moved mmap of page 0x0 and the hardware-exceptions
	check into exceptions_init.

	* src/vm/exceptions.c (unistd.h): Added. (sys/mman.h): Likewise.
	(exceptions_init): See above.
	[ef8a5cde695e]

	* src/vm/exceptions.h, src/vm/signal.c:
	* src/vm/signal.c (signal_init): Use if-vm_abort instead of assert.
	* src/vm/exceptions.h: Changed hardware-exception comment accordingly.
	[d6d44453fb52]

2007-06-03  twisti  <twisti>

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_thread_start_internal):
	Changed order of initialization stuff, so we can leave the join-
	mutex very early. (threads_thread_start): Likewise.

	* src/threads/native/threads.c (threads_mutex_join_lock): New
	function. (threads_mutex_join_unlock): Likewise.
	(threads_attach_current_thread): Changed order of initialization
	stuff, so we can leave the join-mutex very early.
	(threads_detach_thread): Send the signal inside the join-mutex.
	(threads_join_all_threads): Use join-mutex functions.

	* src/threads/threads-common.h (threads_mutex_join_lock): Added.
	(threads_mutex_join_unlock): Likewise.
	[31785a69c5f9]

2007-06-03  pm  <pm>

	* configure.ac:
	* configure.ac: Fix broken regex.h test.
	[5f7300fa2cb5]

2007-06-02  pm  <pm>

	* configure.ac, contrib/vmlog/Makefile.am, contrib/vmlog/vmlog.c,
	contrib/vmlog/vmlog.h, contrib/vmlog/vmlogfilter.c:
	* contrib/vmlog/vmlogfilter.c: Added a tool that filters a vmlog log
	file the same way as -XXfi and -XXfx do.

	* contrib/vmlog/vmlog.c, contrib/vmlog/vmlog.h
	(vmlog_thread_log_append): Made not-static.

	* contrib/vmlog/Makefile.am, configure.ac: Conditional building of
	vmlogfilter if ENABLE_VMLOG is set and regex.h present.
	[2903e00a87aa]

2007-06-01  ajordan  <ajordan>

	* src/vm/signal.c:
	* src/vm/signal.c: Added ifdefs to fix compiling with disabled
	threads.
	[fa34a45c2d1e]

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/machine-instr.h, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-asm.h:
	* src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Fixed the
	way float arguments are preserved over codegen_start_native_call.
	* src/vm/jit/sparc64/md-abi.c (codegen_start_native_call): Likewise.

	* src/vm/jit/sparc64/machine-instr.h (compare_and_swap): Changed
	inline assembly, so it survives gcc optimization.

	* src/vm/jit/sparc64/asmpart.S (asm_patcher_wrapper): Saving and
	restoring float return register.
	* src/vm/jit/sparc64/md-asm.h: Likewise.
	[02b890228951]

2007-06-01  twisti  <twisti>

	* m4/ac_pthreads_implementation.m4, m4/threads.m4, src/threads
	/threads-common.c, src/threads/threads-common.h, src/vm/signal.c,
	src/vm/vm.c:
	* m4/ac_pthreads_implementation.m4: Reverted rev7996.
	* m4/threads.m4: Likewise.

	* src/threads/threads-common.c [__LINUX__]
	(threads_pthreads_implementation_nptl): Added. (threads_preinit)
	[__LINUX__]: Check which thread-implementation we are using.

	* src/threads/threads-common.h [__LINUX__]
	(threads_pthreads_implementation_nptl): Added.

	* src/vm/signal.c (signal_init) [__LINUX__]: Check for
	threads_pthreads_implementation_nptl.

	* src/vm/vm.c (vm_create) [__LINUX__]: Likewise.
	[87faa8691e61]

2007-05-31  twisti  <twisti>

	* src/vm/jit/mips/irix/md-os.c:
	* src/vm/jit/mips/irix/md-os.c (vm/jit/mips/codegen.h): Added.
	(md_signal_handler_sigsegv): Updated to new exception-handling.
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart.
	[2a7547f40594]

	* configure.ac, m4/ac_pthreads_implementation.m4, m4/threads.m4,
	src/vm/signal.c, src/vm/vm.c:
	* m4/ac_pthreads_implementation.m4: New file.

	* m4/threads.m4 (AC_CHECK_ENABLE_THREADS): Call
	AC_CHECK_PTHREADS_IMPLEMENTATION for posix and linux.

	* configure.ac (AC_CHECK_HEADERS): Added stdlib.h. (AC_CHECK_FUNCS):
	Added confstr, strstr.

	* src/vm/signal.c (signal_init) [!PTHREADS_IS_LINUXTHREADS]: Only
	block the signals if we are not on LinuxThreads. (signal_thread):
	Set state accordingly.

	* src/vm/vm.c (vm_create) [!PTHREADS_IS_LINUXTHREADS]: Only start
	signal-thread if we are not on LinuxThreads.
	[80c6b89148d7]

	* src/vm/signal.c:
	* src/vm/signal.c: Reverted rev7978.
	[6e1ee16a0ebd]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Added comment.
	[3860a183b0cb]

2007-05-30  twisti  <twisti>

	* src/vm/jit/powerpc64/emit.c:
	* src/vm/jit/powerpc64/emit.c (emit_branch): Removed debug output.
	[a2b2fb137c74]

	* NEWS:
	* NEWS: Added some 0.98 release notes.
	[c990ac936f72]

	* ChangeLog, ChangeLog-2006:
	* ChangeLog: Updated.
	* ChangeLog-2006: New file.
	[2eed586043b9]

	* src/vm/jit/powerpc/darwin/md-os.c:
	* src/vm/jit/powerpc/darwin/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[948ea5d4594b]

	* src/vm/jit/powerpc/asmpart.S:
	* src/vm/jit/powerpc/asmpart.S [ENABLE_REPLACEMENT] (L_replace_me)
	(L_replace_build_execution_state, L_replace_free_safestack): Only if
	replacement is enabled, otherwise we get a linker error.
	[01bba61ca238]

	* src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	abi.h:
	* src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	abi.h: Removed Contact, Authors, Changes from header.
	[bf03068d9128]

	* src/vm/signal.c:
	* src/vm/signal.c (signal_thread) [!__DARWIN__]: Don't do the
	GC_signum stuff on Darwin (should also be done on Solaris, but let's
	wait how the exact-GC is doing).
	[84f89c49bbb4]

	* src/vm/builtin.c:
	* src/vm/builtin.c (math.h): Removed because we don't need it as we
	include fdlibm.h and it does not work on some OSs, like Darwin.
	[bd9c55a421a3]

	* src/mm/boehm-gc/pthread_stop_world.c:
	* src/mm/boehm-gc/pthread_stop_world.c (GC_signum1, GC_signum2): No
	it did not work, reverted rev7981.
	[1a4919b18fd5]

	* src/threads/native/threads.c, src/threads/threads-common.h:
	* src/threads/native/threads.c (threads_impl_preinit): Initialize
	mutex_threads_list. (threads_impl_table_init): Removed.
	(threads_impl_table_init, threads_list_unlock): Fixed debug message.

	* src/threads/threads-common.h (threads_impl_table_init): Removed.
	[e361eaf3e9ab]

	* src/vm/resolve.c:
	* src/vm/resolve.c (resolve_subtype_check): Don't free the memory
	before it's used.
	[52dbef0b9bb3]

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c:
	* src/vm/jit/powerpc64/codegen.c (codegen_emit_stub_native): Fixed
	typo.

	* src/vm/jit/powerpc64/emit.c [!NDEBUG] (emit_verbosecall_enter)
	(emit_verbosecall_exit): Only compile conditionally.
	[5c9b9bf65ba8]

	* src/mm/boehm-gc/pthread_stop_world.c, src/threads/native/threads.c:
	* src/mm/boehm-gc/pthread_stop_world.c (cacao_suspendhandler):
	Commented. (GC_suspend_handler): Commented cacao_suspendhandler
	call. (GC_signum1, GC_signum2): Define for all configurations (hope
	that works).

	* src/threads/native/threads.c: Commented all critical-sections
	code, as it does not work anyway and it does not compile everywhere.
	[77e8f7fc7c33]

	* src/vm/jit/powerpc64/md.c:
	* src/vm/jit/powerpc64/md.c (md_get_method_patch_address): Use
	vm_abort and fixed warning. (md_codegen_get_pv_from_pc): Likewise.
	[01f38d93be79]

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (codegen_emit): Fixed --disable-
	debug build.
	[c4fa7f33ae53]

	* src/vm/signal.c:
	* src/vm/signal.c (mm/boehm-gc/include/gc.h): Added.
	(GC_suspend_handler): Defined. (GC_restart_handler): Likewise.
	(signal_thread): Add the Boehm-GC signals to the mask and call the
	appropriate Boehm-function. This is a workaround for the Boehm-
	LinuxThreads bug.
	[40593e6fd1fc]

2007-05-29  twisti  <twisti>

	* src/vm/signal.c, src/vm/signallocal.h, src/vm/vm.c:
	* src/vm/signal.c (signal_init): Changed signature.
	* src/vm/signallocal.h (signal_init): Likewise.

	* src/vm/vm.c (vm_create): Call signal_init right after gc_init and
	check return value.
	[ad80c85a863f]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/access.c,
	src/vm/access.h:
	* src/vm/access.c (string.h): Added. (mm/memory.h): Likewise.
	(vmcore/field.h): Likewise. (vmcore/method.h): Likewise.
	(access_check_member): Removed. (access_check_field): New function.
	(access_check_method): Likewise.

	* src/vm/access.h (vmcore/field.h): Added. (vmcore/method.h):
	Likewise. (access_check_member): Removed. (access_check_field): New
	function. (access_check_method): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative): Call
	access_check_method instead of access_check_member.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Field.c
	(cacao_get_field_address): Call access_check_field instead of
	access_check_member.
	[bb462c48ac9e]

2007-05-29  pm  <pm>

	* src/vm/jit/show.c:
	* src/vm/jit/show.c (vm/vm.h) add missing include,
	(_no_threads_filterverbosecallctr) fix type: u2 instead of u4
	[e78f2ffacfe6]

2007-05-29  twisti  <twisti>

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (codegen_emit): Fixed warnings,
	some indent.
	[d1845bf4f0b3]

	* src/vm/exceptions.c, src/vm/exceptions.h, src/vm/resolve.c:
	* src/vm/exceptions.c (exceptions_throw_illegalaccessexception):
	Changed signature.
	* src/vm/exceptions.h: Likewise.

	* src/vm/resolve.c (resolve_class_from_name): Make utf8-string out
	of exception message. (resolve_subtype_check): Likewise.
	(resolve_field_verifier_checks): Likewise.
	(resolve_method_verifier_checks): Likewise.
	[7972804c2663]

2007-05-28  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/codegen.h: Removed asserts for stores with
	sethi.

	* src/vm/jit/sparc64/codegen.c: Added code to fill with nops when a
	patcher is right at the end of a basic block.

	* src/vm/jit/sparc64/asmpart.S (asm_vm_call_method_end): Returning 0
	when an exception occurs.

	* src/vm/jit/sparc64/md.c (md_get_method_patch_address): Improved
	handling of mptr loads when a sethi is involved.
	[d069ba5f06d5]

2007-05-26  pm  <pm>

	* contrib/vmlog/vmlog.c:
	* contrib/vmlog/vmlog.c: Use autoconf define WORDS_BIGENDIAN to
	determine endianess.
	[3e68881c72bf]

2007-05-25  twisti  <twisti>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_thread_start_internal)
	[WITH_CLASSPATH_CLDC1_1]: Set name to NULL, but this needs a fix.
	(threads_thread_print_info) [ENABLE_JAVAME_CLDC1_1]: Set name to
	utf_null.
	[2dd12a05fb5c]

	* src/vm/jit/optimizing/ifconv.c:
	* src/vm/jit/optimizing/ifconv.c (vm/vm.h): Added. (ifconv_static):
	Fixed warning, use vm_abort.
	[bb500a776fbe]

	* src/vm/jit/powerpc/md.c:
	* src/vm/jit/powerpc/md.c (md_get_method_patch_address): Fixed
	warning, use vm_abort.
	[74ab9b837f4c]

	* src/vm/string.c, src/vm/stringlocal.h:
	* src/vm/string.c (javastring_new_from_utf_buffer): Made static.
	* src/vm/stringlocal.h (javastring_new_from_utf_buffer): Removed.
	[c65dcab97e76]

2007-05-25  pm  <pm>

	* configure.ac, src/threads/critical.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/vm/builtin.c, src/vm/jit/codegen-common.c, src/vm/jit/jit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/s390/tests/dacapo.status,
	src/vm/jit/show.c, src/vm/jit/show.h, src/vm/signal.c,
	src/vm/signallocal.h, src/vm/vm.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/show.h (show_filters_init, show_filters_apply,
	show_filters_test_verbosecall_enter,
	show_filters_test_verbosecall_exit): Added.
	* src/vm/jit/show.c: Likewise.
	* src/vm/jit/jit.c (jit_compile_intern): Honour filters.
	* src/vm/jit/codegen-common.c (codegen_add_patch_ref,
	codegen_generate_stub_native): Honour PATCHER_LONGBRANCHES_NOPS if
	defined, honour filters.
	* src/vm/builtin.c (builtin_trace_exception,
	builtin_verbosecall_enter, builtin_verbosecall_exit): Honour
	filters.
	* src/vm/signal.c (signal_init): Register SIGILL handler on s390.
	* src/vm/vm.c: Handle -XXfi, -XXfe, -XXfm commandline options.
	* src/vm/signallocal.h (md_signal_handler_sigill): Forward declare on
	s390.
	* src/threads/none/threads.h (_no_threads_filterverbosecallctr,
	FILTERVERBOSECALLCTR): Added.
	* src/threads/native/threads.h (struct threadobject): Added
	filterverbosecallctr.
	* src/threads/native/threads.c (threads_impl_thread_new): Initialize
	filterverbosecallctr.
	* src/threads/critical.c (critical_comparator): On s390, clear bit 32
	of pointer when comparing.
	* src/vmcore/options.h (opt_filter_verbosecall_include,
	opt_filter_verbosecall_exclude, opt_filter_show_method): Added.
	* src/vmcore/options.c: Likewise.
	* src/vmcore/method.h (struct methodinfo): Added filtermatches.
	* configure.ac: If no NDEBUG and regex.h header is present, define
	ENABLE_DEBUG_FILTER.
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/tests/dacapo.status, src/vm/jit/s390/patcher.c:
	Changed a lot.
	[606e1b6afbeb]

2007-05-24  michi  <michi>

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (link_class_intern) [__ARM_EABI__]: Fixed
	field alignment bug. Double and Long fields are 8-byte aligned with
	EABI.
	[c57105969efc]

2007-05-24  twisti  <twisti>

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigsegv): Fixed
	warning.
	[9841538af60f]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c (mm/memory.h): Added.
	(toolbox/list.h): Likewise. (threads_table): Removed. (list_threads,
	list_threads_free): Added. (threads_preinit): Initialize lists.
	(threads_table_init): Removed. (threads_table_add): Likewise.
	(threads_table_remove): Likewise. (threads_table_get): Likewise.
	(threads_table_get_threads): Likewise.
	(threads_table_get_non_daemons): Likewise. (threads_table_first):
	Likewise. (threads_table_next): Likewise. (threads_table_dump):
	Likewise. (threads_list_first): New function. (threads_list_next):
	Likewise. (threads_list_get_non_daemons): Likewise.
	(threads_thread_new): Likewise. (threads_thread_free): Likewise.
	(threads_thread_print_info): Added state-assert, print thread index.
	(threads_thread_state_runnable): New function.
	(threads_thread_state_waiting): Likewise.
	(threads_thread_state_timed_waiting): Likewise.
	(threads_thread_state_terminated): Likewise. (threads_dump): Use
	threads-list functions.

	* src/threads/threads-common.h: Likewise. (threads_table_entry_t):
	Removed. (threads_table_t): Likewise.

	* src/threads/native/threads.c (mutex_threads_table): Renamed to
	mutex_threads_list. (threads_cast_sendsignals): Use threads-list
	functions. (threads_table_lock): Renamed to threads_list_lock.
	(threads_table_unlock): Renamed to threads_list_unlock.
	(threads_startup_thread): Use threads-state functions.
	(threads_detach_thread): Likewise. (threads_wait_with_timeout):
	Likewise. (threads_join_all_threads): Use threads-list functions.

	* src/threads/native/threads.h (threadobject): Added linkage.
	[7119004b7671]

2007-05-23  ajordan  <ajordan>

	* src/vm/jit/sparc64/Makefile.am:
	* src/vm/jit/sparc64/Makefile.am: Added missing emit.h.
	[d043608db272]

	* src/vm/jit/sparc64/Makefile.am:
	* src/vm/jit/sparc64/Makefile.am: md-asm.h was not properly added to
	noinst_HEADERS.
	[a888e4ae3e58]

2007-05-23  twisti  <twisti>

	* configure.ac:
	* configure.ac (AM_INIT_AUTOMAKE): Added dist-bzip2.
	[b4f4c4d4a840]

	* src/threads/threads-common.h:
	* src/threads/threads-common.h (THREAD_STATE_NEW)
	(THREAD_STATE_RUNNABLE, THREAD_STATE_BLOCKED, THREAD_STATE_WAITING)
	(THREAD_STATE_TIMED_WAITING, THREAD_STATE_TERMINATED): Start states
	with 1, so we can catch unset states.
	[a1aa7edd50d1]

	* src/vm/jit/powerpc64/linux/md-os.c:
	* src/vm/jit/powerpc64/linux/md-os.c (md_critical_section_restart):
	Fixed typo.
	[5e15a6dbd074]

	* src/vm/jit/mips/Makefile.am:
	* src/vm/jit/mips/Makefile.am (DIST_SUBDIRS): Added uclinux.
	[4dc3d033c6ec]

	* src/vmcore/statistics.c:
	* src/vmcore/statistics.c (statistics_print_memory_usage): Smaller
	output changes.
	[8f1740856eee]

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/x86_64/linux/md-os.c
	(md_critical_section_restart): Removed debug output.
	[ad67481e544b]

	* src/threads/native/lock.c, src/threads/native/lock.h:
	* src/threads/native/lock.c: Set Id keyword.
	* src/threads/native/lock.h: Likewise.
	[88a0496626f3]

	* src/native/vm/gnu/java_lang_VMClassLoader.c:
	* src/native/vm/gnu/java_lang_VMClassLoader.c (getPrimitiveClass):
	Return NULL in error case.
	[fbb5d46a541f]

	* src/vm/jit/optimizing/profile.c:
	* src/vm/jit/optimizing/profile.c: Set Id keyword.
	[11900f141992]

	* src/vm/jit/optimizing/profile.c:
	* src/vm/jit/optimizing/profile.c (profile_thread): Replaced table-
	with list-functions.
	[ede8f3f4cb22]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Use vm_abort for profile_start_thread.
	[ed4f1df2d4de]

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_compile_intern): Fixed typo.
	[73e13518e0df]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_new_hardware_exception): Fixed
	warning.
	[679f3b09928b]

	* src/vm/jit/x86_64/linux/md-os.c, src/vm/jit/x86_64/md.c:
	* src/vm/jit/x86_64/md.c (md_get_method_patch_address): Fixed
	warning.
	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigsegv):
	Likewise.
	[215c17677a9c]

	* configure.ac:
	* configure.ac (OPT_CFLAGS): Changed to -O2.
	[a6ea45496841]

	* src/vm/jit/emit-common.h, src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (codegen_emit): ICMD_INSTANCEOF:
	Removed unused supervftbl.

	* src/vm/jit/emit-common.h [__POWERPC64__] (emit_bnan): Enabled.
	[8db39c7b9644]

2007-05-23  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c:
	* src/vm/jit/powerpc64/emit.c (MCODECHECK): Increase values to fix
	canary corruption.
	* src/vm/jit/powerpc64/codegen.c (MCODECHECK): Increase values to fix
	canary corruption.
	[595305514350]

2007-05-23  twisti  <twisti>

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (linker_compute_subclasses): We don't ship the
	critical-section stuff with this release, since it's broken on some
	architectures because of boehm.
	[e817500e30d3]

	* src/vm/exceptions.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vm/exceptions.c (threads/lock-common.h): Added.
	[ENABLE_THREADS] (threads/native/threads.h): Removed.
	[!ENABLE_THREADS] (threads/none/threads.h): Likewise. (threads
	/threads-common.h): Added. (new_exception_message): Removed.
	(exceptions_throw_classcircularityerror): Use
	exceptions_throw_utf_utf. (exceptions_throw_classformaterror):
	Likewise. (classnotfoundexception_to_noclassdeffounderror): Fixed
	warning. (exceptions_throw_incompatibleclasschangeerror): Use
	exceptions_throw_utf_utf. (exceptions_throw_internalerror):
	Likewise. (exceptions_throw_unsupportedclassversionerror): Likewise.
	(exceptions_throw_verifyerror): Likewise.
	(exceptions_throw_verifyerror_for_stack): Likewise.
	(exceptions_new_arithmeticexception): Likewise.
	(exceptions_new_classcastexception): Use exceptions_new_class_utf.
	(exceptions_print_exception): Fixed warnings.

	* src/vmcore/utf8.c (utf_division_by_zero): Added. (utf8_init):
	Likewise.

	* src/vmcore/utf8.h (utf_division_by_zero): Likewise.
	[b52c2cca5b7d]

	* src/native/native.c, src/native/native.h, src/vm/exceptions.c,
	src/vm/exceptions.h:
	* src/vm/exceptions.c (new_exception_int): Removed.
	* src/vm/exceptions.h (new_exception_int): Likewise.

	* src/native/native.c (native_new_and_init_int): Likewise.
	* src/native/native.h (native_new_and_init_int): Likewise.
	[6992a69c370d]

2007-05-23  michi  <michi>

	* src/native/include/Makefile.am, src/native/jni.c, src/vm/global.h,
	src/vm/jit/abi.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/codegen-common.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/patcher.c, src/vm/jit/x86_64/md.c:
	Merged revisions 7918-7939 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7926 | twisti | 2007-05-21 10:27:06 +0200 (Mon, 21 May
	2007) | 12 lines

	 * src/native/jni.c (_Jv_jni_CallLongMethodA): New function.
	(_Jv_jni_CallFloatMethodA): Likewise. (_Jv_jni_CallDoubleMethodA):
	Likewise. (_Jv_JNI_CallStaticBooleanMethodA): Implemented.
	(_Jv_JNI_CallStaticByteMethodA): Likewise.
	(_Jv_JNI_CallStaticCharMethodA): Likewise.
	(_Jv_JNI_CallStaticShortMethodA): Likewise.
	(_Jv_JNI_CallStaticIntMethodA): Likewise.
	(_Jv_JNI_CallStaticLongMethodA): Likewise.
	(_Jv_JNI_CallStaticFloatMethodA): Likewise.
	(_Jv_JNI_CallStaticDoubleMethodA): Likewise. ........ r7927 |
	twisti | 2007-05-21 10:48:46 +0200 (Mon, 21 May 2007) | 3 lines

	 * src/native/include/Makefile.am (CLEANFILES): Simply clean an *.h
	files. ........ r7929 | michi | 2007-05-21 13:45:31 +0200 (Mon, 21
	May 2007) | 8 lines

	 * src/vm/jit/arm/codegen.h (M_EORLE): Added.

	 * src/vm/jit/arm/codegen.c (codegen_emit): Fixed superindex
	overflow for ICMD_INSTANCEOF and ICMD_CHECKCAST.

	 * src/vm/jit/arm/patcher.c
	(patcher_checkcast_instanceof_interface): Adapted patcher to above
	changes. ........ r7930 | twisti | 2007-05-21 16:40:32 +0200 (Mon,
	21 May 2007) | 2 lines

	 * src/vm/global.h (ALIGN_2): Added. ........ r7931 | twisti |
	2007-05-21 16:42:28 +0200 (Mon, 21 May 2007) | 6 lines

	 * src/vm/jit/arm/md-abi.c (md_param_alloc): Use EABI internally.
	(ALIGN_2): Removed.

	 * src/vm/jit/arm/codegen.c (codegen_emit): Removed SPLIT-stuff.
	  * src/vm/jit/arm/emit.c (emit_store): Likewise. ........ r7932 |
	michi | 2007-05-22 09:00:57 +0200 (Tue, 22 May 2007) | 3 lines

	 * src/vm/jit/arm/md-abi.c (md_param_alloc): Align stack arguments
	as well.
	  * src/vm/jit/arm/asmpart.S (asm_vm_call_method): Use EABI internally.
	........ r7933 | michi | 2007-05-22 09:21:08 +0200 (Tue, 22 May
	2007) | 2 lines

	 * src/vm/jit/arm/emit.c (emit_verbosecall_enter): Removed obsolete
	SPLIT-stuff. ........ r7934 | michi | 2007-05-22 12:07:21 +0200
	(Tue, 22 May 2007) | 2 lines

	 * src/vm/jit/arm/codegen.c (codegen_emit_stub_native): Removed
	obsolete SPLIT-stuff. ........ r7935 | twisti | 2007-05-22
	13:18:15 +0200 (Tue, 22 May 2007) | 3 lines

	 * src/vm/jit/x86_64/md.c (md_get_method_patch_address): Replaced
	assert with vm_abort. ........ r7938 | tbfg | 2007-05-23 11:37:37
	+0200 (Wed, 23 May 2007) | 5 lines

	 * src/vm/jit/abi.h (abi_registers_address_name): Added.
	(abi_registers_address_argument): Likewise.
	(abi_registers_address_saved): Likewise.
	(abi_registers_address_temporary): Likewise. ........ r7939 | tbfg
	| 2007-05-23 11:40:05 +0200 (Wed, 23 May 2007) | 13 lines

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Remove NOP after each
	ICMD. Add NOP generation at end of basci block when patcher is
	longer than instruction to be patched.

	 * src/vm/jit/m68k/patcher.c (patcher_get_putfield): Implemented.

	 * src/vm/jit/m68k/codegen.h (COMPILERSTUB_CODESIZE): Correct
	value.

	 * src/vm/jit/codegen-common.c (codegen_increase): Enable NOP after
	patcher generation at end of basic block. ........
	[5e9239c03966]

2007-05-23  tbfg  <tbfg>

	* src/vm/jit/codegen-common.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit): Remove NOP after each
	ICMD. Add NOP generation at end of basci block when patcher is
	longer than instruction to be patched.

	* src/vm/jit/m68k/patcher.c (patcher_get_putfield): Implemented.

	* src/vm/jit/m68k/codegen.h (COMPILERSTUB_CODESIZE): Correct value.

	* src/vm/jit/codegen-common.c (codegen_increase): Enable NOP after
	patcher generation at end of basic block.
	[c06959f336b9]

	* src/vm/jit/abi.h:
	* src/vm/jit/abi.h (abi_registers_address_name): Added.
	(abi_registers_address_argument): Likewise.
	(abi_registers_address_saved): Likewise.
	(abi_registers_address_temporary): Likewise.
	[3c252b5dfa38]

2007-05-23  michi  <michi>

	* src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.h (stackframeinfo) [ENABLE_GC_CACAO]: Added
	adrregs for HAS_ADDRESS_REGISTER_FILE architectures.
	[30fcc084af90]

2007-05-22  michi  <michi>

	* src/vm/builtintable.inc, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/x86_64/md.c:
	* src/vm/builtintable.inc (builtintable_internal): Enabled builtin
	stubs for ICMD_NEWARRAY and ICMD_ANEWARRAY.
	[4f994b75bad7]

2007-05-22  twisti  <twisti>

	* src/vm/jit/x86_64/md.c:
	* src/vm/jit/x86_64/md.c (md_get_method_patch_address): Replaced
	assert with vm_abort.
	[1753c1c0dfb9]

2007-05-22  michi  <michi>

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen_emit_stub_native): Removed
	obsolete SPLIT-stuff.
	[cbbe265fb1ac]

	* src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Removed obsolete
	SPLIT-stuff.
	[d78bb0141f66]

	* src/vm/jit/arm/asmpart.S, src/vm/jit/arm/md-abi.c:
	* src/vm/jit/arm/md-abi.c (md_param_alloc): Align stack arguments as
	well.
	* src/vm/jit/arm/asmpart.S (asm_vm_call_method): Use EABI internally.
	[3942d11bd5a8]

2007-05-21  twisti  <twisti>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/arm/md-
	abi.c:
	* src/vm/jit/arm/md-abi.c (md_param_alloc): Use EABI internally.
	(ALIGN_2): Removed.

	* src/vm/jit/arm/codegen.c (codegen_emit): Removed SPLIT-stuff.
	* src/vm/jit/arm/emit.c (emit_store): Likewise.
	[9a3a5bb37f48]

	* src/vm/global.h:
	* src/vm/global.h (ALIGN_2): Added.
	[63d9afde94b7]

2007-05-21  michi  <michi>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/patcher.c:
	* src/vm/jit/arm/codegen.h (M_EORLE): Added.

	* src/vm/jit/arm/codegen.c (codegen_emit): Fixed superindex overflow
	for ICMD_INSTANCEOF and ICMD_CHECKCAST.

	* src/vm/jit/arm/patcher.c (patcher_checkcast_instanceof_interface):
	Adapted patcher to above changes.
	[9d9deb8bb043]

	* src/mm/cacao-gc/mark.c, src/native/include/Makefile.am:
	* src/mm/cacao-gc/mark.c (mark_me): Ifdefed statistics assertion.
	[5c577e7dc152]

2007-05-21  twisti  <twisti>

	* src/native/include/Makefile.am:
	* src/native/include/Makefile.am (CLEANFILES): Simply clean an *.h
	files.
	[5a05843da368]

	* src/native/jni.c, src/native/jni.h:
	* src/native/jni.c (_Jv_jni_CallLongMethodA): New function.
	(_Jv_jni_CallFloatMethodA): Likewise. (_Jv_jni_CallDoubleMethodA):
	Likewise. (_Jv_JNI_CallStaticBooleanMethodA): Implemented.
	(_Jv_JNI_CallStaticByteMethodA): Likewise.
	(_Jv_JNI_CallStaticCharMethodA): Likewise.
	(_Jv_JNI_CallStaticShortMethodA): Likewise.
	(_Jv_JNI_CallStaticIntMethodA): Likewise.
	(_Jv_JNI_CallStaticLongMethodA): Likewise.
	(_Jv_JNI_CallStaticFloatMethodA): Likewise.
	(_Jv_JNI_CallStaticDoubleMethodA): Likewise.
	[2d2693b5fc01]

2007-05-21  michi  <michi>

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigusr1): This
	function is no longer GC-specific, removed assertion.
	[06b76ff22ce6]

	* src/mm/cacao-gc/heap.c, src/mm/cacao-gc/mark.c, src/mm/cacao-
	gc/rootset.c, src/mm/cacao-gc/rootset.h:
	* src/mm/cacao-gc/rootset.c (rootset_from_globals): Uses registered
	references instead of Cacao-internal structures now.
	(rootset_readout) [ENABLE_THREADS]: Adapted to new threads table.

	* src/mm/cacao-gc/rootset.h: Minor changes.
	* src/mm/cacao-gc/heap.c: Likewise.
	* src/mm/cacao-gc/mark.c: Likewise.
	[efe66624fb2e]

2007-05-20  michi  <michi>

	* src/cacaoh/dummy.c, src/threads/threads-common.c,
	src/vmcore/linker.c:
	* src/threads/threads-common.c (threads_thread_new)
	[ENABLE_GC_CACAO]: Initialize GC-specific field.
	(threads_thread_start_internal): Register reference with the GC.
	(threads_thread_start): Likewise.

	* src/vmcore/linker.c: Functions are now called threads_stopworld
	and threads_startworld.

	* src/cacaoh/dummy.c: Likewise.
	[c75b79edb8ef]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c: Major fix after messed up merge from
	trunk, sorry for not beeing more precise here.
	[946bdd0b169e]

	* src/cacaoh/dummy.c, src/native/jni.c, src/native/jni.h,
	src/vmcore/loader.c, src/vmcore/loader.h:
	* src/cacaoh/dummy.c (gc_reference_register): Added.

	* src/vmcore/loader.c (hashtable_classloader): Made it static again.
	(loader_hashtable_classloader_add) [ENABLE_GC_CACAO]: Registers
	reference with the GC.

	* src/native/jni.c (hashtable_global_ref): Made it static again.
	(_Jv_JNI_NewGlobalRef) [ENABLE_GC_CACAO]: Registers reference with
	the GC. (_Jv_JNI_DeleteGlobalRef) [ENABLE_GC_CACAO]: Unregisters
	above reference.
	[7ea5ce46fe14]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/gc-common.h:
	* src/mm/gc-common.h (gc_reference_register,
	gc_reference_unregister): Added prototypes.

	* src/mm/cacao-gc/gc.h (list_gcref_entry_t): Added.

	* src/mm/cacao-gc/gc.c (gc_reflist): Added. (gc_reference_register):
	Implemented.
	[8bc119ebad52]

	* src/mm/cacao-gc/final.c, src/mm/cacao-gc/final.h:
	* src/mm/cacao-gc/final.h: Renamed final_entry to
	list_final_entry_t.
	* src/mm/cacao-gc/final.c: Likewise.
	[33e5ba33c62c]

	* .cvsignore, configure.ac, contrib/.cvsignore,
	contrib/check_dangerous_printf.pl, doc/.cvsignore,
	doc/handbook/.cvsignore, man/.cvsignore, src/.cvsignore,
	src/cacao/.cvsignore, src/cacaoh/.cvsignore, src/cacaoh/dummy.c,
	src/fdlibm/.cvsignore, src/lib/.cvsignore, src/lib/Makefile.am,
	src/lib/vm/reference/gnu/classpath/VMStackWalker.java,
	src/lib/vm/reference/gnu/classpath/VMSystemProperties.java, src/lib/
	vm/reference/gnu/java/lang/management/VMMemoryMXBeanImpl.java, src/l
	ib/vm/reference/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/vm/reference/java/lang/VMClassLoader.java,
	src/lib/vm/reference/java/lang/VMString.java,
	src/lib/vm/reference/java/lang/VMThread.java,
	src/lib/vm/reference/java/lang/VMThrowable.java,
	src/lib/vm/reference/java/security/VMAccessController.java,
	src/mm/.cvsignore, src/mm/boehm-gc/.cvsignore, src/mm/boehm-
	gc/doc/.cvsignore, src/mm/boehm-gc/include/.cvsignore, src/mm/boehm-
	gc/include/gc.h, src/mm/cacao-gc/.cvsignore, src/mm/memory.c,
	src/mm/memory.h, src/native/.cvsignore,
	src/native/include/.cvsignore, src/native/jni.c,
	src/native/jvmti/.cvsignore, src/native/native.c,
	src/native/native.h, src/native/tools/.cvsignore,
	src/native/vm/.cvsignore, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/.cvsignore,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/.cvsignore,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c, src/native/vm/
	gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/sun_misc_Unsafe.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	src/scripts/.cvsignore, src/threads/.cvsignore,
	src/threads/Makefile.am, src/threads/critical.c,
	src/threads/critical.h, src/threads/native/.cvsignore,
	src/threads/native/lock.c, src/threads/native/lock.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/.cvsignore, src/threads/none/lock.h, src/threads
	/threads-common.c, src/threads/threads-common.h,
	src/toolbox/.cvsignore, src/toolbox/avl.c, src/toolbox/avl.h,
	src/toolbox/hashtable.c, src/toolbox/list.c, src/toolbox/list.h,
	src/toolbox/worklist.c, src/toolbox/worklist.h, src/vm/.cvsignore,
	src/vm/Makefile.am, src/vm/builtin.c, src/vm/finalizer.c,
	src/vm/initialize.c, src/vm/jit/.cvsignore,
	src/vm/jit/allocator/.cvsignore, src/vm/jit/alpha/.cvsignore,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/freebsd/.cvsignore,
	src/vm/jit/alpha/linux/.cvsignore, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/arm/.cvsignore, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/.cvsignore,
	src/vm/jit/arm/linux/md-os.c, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vm/jit/dseg.h, src/vm/jit/emit-
	common.h, src/vm/jit/i386/.cvsignore, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/darwin/.cvsignore, src/vm/jit/i386/darwin/md-os.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/freebsd/.cvsignore,
	src/vm/jit/i386/linux/.cvsignore, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/inline/.cvsignore, src/vm/jit/inline/Makefile.am,
	src/vm/jit/inline/inline.c, src/vm/jit/inline/inline.h,
	src/vm/jit/intrp/.cvsignore, src/vm/jit/jit.c,
	src/vm/jit/loop/.cvsignore, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/mips/.cvsignore, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/irix/.cvsignore,
	src/vm/jit/mips/linux/.cvsignore, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/optimizing/.cvsignore,
	src/vm/jit/optimizing/dominators.c, src/vm/jit/optimizing/graph.c,
	src/vm/jit/optimizing/graph.h, src/vm/jit/optimizing/lifetimes.c,
	src/vm/jit/optimizing/lifetimes.h, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/lsra.h, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa.h, src/vm/jit/parisc/.cvsignore,
	src/vm/jit/parisc/linux/.cvsignore, src/vm/jit/parse.c,
	src/vm/jit/patcher.h, src/vm/jit/powerpc/.cvsignore,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/darwin/.cvsignore,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/.cvsignore,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/netbsd/.cvsignore,
	src/vm/jit/powerpc64/.cvsignore, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/.cvsignore, src/vm/jit/powerpc64/linux
	/md-os.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/.cvsignore, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390
	/machine-instr.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/schedule/.cvsignore,
	src/vm/jit/show.c, src/vm/jit/sparc64/.cvsignore,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/.cvsignore, src/vm/jit/sparc64/linux/md-
	os.c, src/vm/jit/sparc64/machine-instr.h, src/vm/jit/sparc64/md-
	abi.c, src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md-asm.h,
	src/vm/jit/sparc64/solaris/.cvsignore, src/vm/jit/sparc64/solaris
	/md-os.c, src/vm/jit/stack.c, src/vm/jit/stacktrace.c,
	src/vm/jit/tools/.cvsignore, src/vm/jit/verify/.cvsignore,
	src/vm/jit/x86_64/.cvsignore, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/freebsd/.cvsignore,
	src/vm/jit/x86_64/linux/.cvsignore, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/signal.c, src/vm/string.c, src/vm/vm.c,
	src/vmcore/.cvsignore, src/vmcore/class.c, src/vmcore/classcache.c,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/suck.c, src/vmcore/utf8.c,
	tests/.cvsignore, tests/Makefile.am, tests/regression/.cvsignore,
	tests/regression/codepatching/.cvsignore,
	tests/regression/native/.cvsignore, tests/stack/.cvsignore:
	Merged revisions 7797-7917 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7799 | twisti | 2007-04-24 01:03:31 +0200 (Tue, 24 Apr
	2007) | 4 lines

	 * configure.ac: Removed --enable-threads checks and call instead
	AC_CHECK_ENABLE_THREADS.
	  * m4/threads.m4: New file. ........ r7800 | twisti | 2007-04-24
	01:39:11 +0200 (Tue, 24 Apr 2007) | 2 lines

	 * .cvsignore: Removed. ........ r7801 | twisti | 2007-04-24
	01:51:37 +0200 (Tue, 24 Apr 2007) | 74 lines

	 * contrib/.cvsignore, doc/.cvsignore, doc/handbook/.cvsignore,
	man/.cvsignore, src/.cvsignore, src/cacao/.cvsignore,
	src/cacaoh/.cvsignore, src/fdlibm/.cvsignore,
	src/lib/.cvsignore, src/mm/.cvsignore, src/mm/boehm-
	gc/.cvsignore, src/mm/boehm-gc/doc/.cvsignore, src/mm/boehm-
	gc/include/.cvsignore, src/mm/cacao-gc/.cvsignore,
	src/native/.cvsignore, src/native/include/.cvsignore,
	src/native/jvmti/.cvsignore, src/native/tools/.cvsignore,
	src/native/vm/.cvsignore, src/native/vm/cldc1.1/.cvsignore,
	src/native/vm/gnu/.cvsignore, src/scripts/.cvsignore,
	src/threads/.cvsignore, src/threads/none/.cvsignore,
	src/threads/posix/.cvsignore, src/toolbox/.cvsignore,
	src/vm/.cvsignore, src/vm/jit/.cvsignore,
	src/vm/jit/allocator/.cvsignore, src/vm/jit/alpha/.cvsignore,
	src/vm/jit/alpha/freebsd/.cvsignore,
	src/vm/jit/alpha/linux/.cvsignore, src/vm/jit/arm/.cvsignore,
	src/vm/jit/arm/linux/.cvsignore, src/vm/jit/i386/.cvsignore,
	src/vm/jit/i386/cygwin/.cvsignore,
	src/vm/jit/i386/darwin/.cvsignore,
	src/vm/jit/i386/freebsd/.cvsignore,
	src/vm/jit/i386/linux/.cvsignore, src/vm/jit/inline/.cvsignore,
	src/vm/jit/intrp/.cvsignore, src/vm/jit/loop/.cvsignore,
	src/vm/jit/m68k/.cvsignore, src/vm/jit/m68k/linux/.cvsignore,
	src/vm/jit/mips/.cvsignore, src/vm/jit/mips/irix/.cvsignore,
	src/vm/jit/mips/linux/.cvsignore,
	src/vm/jit/optimizing/.cvsignore, src/vm/jit/parisc/.cvsignore,
	src/vm/jit/parisc/linux/.cvsignore, src/vm/jit/powerpc/.cvsignore,
	src/vm/jit/powerpc/darwin/.cvsignore,
	src/vm/jit/powerpc/linux/.cvsignore,
	src/vm/jit/powerpc/netbsd/.cvsignore,
	src/vm/jit/powerpc64/.cvsignore,
	src/vm/jit/powerpc64/linux/.cvsignore, src/vm/jit/s390/.cvsignore,
	src/vm/jit/schedule/.cvsignore, src/vm/jit/sparc64/.cvsignore,
	src/vm/jit/sparc64/linux/.cvsignore,
	src/vm/jit/sparc64/solaris/.cvsignore,
	src/vm/jit/tools/.cvsignore, src/vm/jit/verify/.cvsignore,
	src/vm/jit/x86_64/.cvsignore,
	src/vm/jit/x86_64/freebsd/.cvsignore,
	src/vm/jit/x86_64/linux/.cvsignore, src/vmcore/.cvsignore,
	tests/.cvsignore, tests/regression/.cvsignore,
	tests/regression/codepatching/.cvsignore,
	tests/regression/jasmin/.cvsignore,
	tests/regression/native/.cvsignore, tests/stack/.cvsignore:
	Removed. ........ r7802 | tbfg | 2007-04-24 12:20:05 +0200 (Tue,
	24 Apr 2007) | 2 lines

	 * threads.m4: Fixed a typo ........ r7803 | twisti | 2007-04-24
	16:23:40 +0200 (Tue, 24 Apr 2007) | 3 lines

	 * src/threads/threads-common.c (threads_dump): Also print integer
	thread id, so it's easier to compare with the ones from gdb.
	........ r7804 | twisti | 2007-04-24 16:29:20 +0200 (Tue, 24 Apr
	2007) | 3 lines

	 * src/threads/threads-common.c: Set Id keyword.
	  * src/threads/threads-common.h: Likewise. ........ r7805 | twisti |
	2007-04-25 13:47:15 +0200 (Wed, 25 Apr 2007) | 12 lines

	 * src/threads/threads-common.c (threads_create_thread)
	[ENABLE_GC_BOEHM]: Use GCNEW_UNCOLLECTABLE.
	(threads_start_javathread) [ENABLE_GC_BOEHM]: Likewise.

	 * src/threads/native/threads.c (threads_preinit)
	[ENABLE_GC_BOEHM]: Likewise. (threads_init): Removed resizing-
	of-threadobject code, we don't need it anymore.
	(threads_attach_current_thread) [ENABLE_GC_BOEHM]: Use
	GCNEW_UNCOLLECTABLE. (threads_detach_thread) [ENABLE_GC_BOEHM]:
	Use GCFREE. ........ r7806 | twisti | 2007-04-25 13:54:32 +0200
	(Wed, 25 Apr 2007) | 3 lines

	 * src/threads/native/threads.c (threads_init): Use variable t
	instead of mainthreadobj->object, makes code simpler. ........
	r7807 | twisti | 2007-04-25 16:24:18 +0200 (Wed, 25 Apr 2007) | 3
	lines

	 * contrib: Ignore TAGS.
	  * contrib/vmlog: Likewise. ........ r7808 | twisti | 2007-04-25
	17:12:20 +0200 (Wed, 25 Apr 2007) | 6 lines

	 * src/native/native.c (native/include/java_lang_Object.h): Include
	always. [ENABLE_JAVAME_CLDC1_1]
	(native/include/com_sun_cldc_io_ResourceInputStream.h)
	(native/include/com_sun_cldc_io_j2me_socket_Protocol.h): Added.
	........ r7809 | twisti | 2007-04-25 17:14:34 +0200 (Wed, 25 Apr
	2007) | 3 lines

	 * src/threads/native/threads.c (threads_preinit): We always need
	variable t. ........ r7810 | stefan | 2007-04-25 18:39:03 +0200
	(Wed, 25 Apr 2007) | 2 lines

	 * src/vmcore/linker.c (linker_init): added missing
	lock_init_object_lock. ........ r7811 | twisti | 2007-04-25
	20:33:30 +0200 (Wed, 25 Apr 2007) | 23 lines

	 * src/threads/threads-common.c (threads_create_thread): Renamed to
	threads_thread_create_internal and a new function.
	(threads_start_javathread): Use threads_create_thread.

	 * src/threads/threads-common.h (threads_create_thread): Changed
	signature. (threads_thread_create_internal): Added.

	 * src/threads/native/threads.c (threads_set_current_threadobject):
	Made non-static. (threads_init_threadobject): Likewise, use
	threads_create_thread. (threads_init): Cleanup.
	(threads_startup_thread): Likewise.
	(threads_attach_current_thread): Use threads_create_thread.

	 * src/vm/jit/optimizing/profile.c (profile_start_thread): Replaced
	threads_create_thread with threads_thread_create_internal.
	  * src/vm/jit/optimizing/recompile.c (recompile_start_thread):
	Likewise.
	  * src/vm/signal.c (signal_start_thread): Likewise.
	  * src/vm/finalizer.c (finalizer_start_thread): Likewise.
	  * src/mm/memory.c (memory_start_thread): Likewise. ........ r7812 |
	twisti | 2007-04-25 20:51:03 +0200 (Wed, 25 Apr 2007) | 2 lines

	 * src/mm/memory.h: Updated copyright header. ........ r7813 |
	twisti | 2007-04-25 21:20:13 +0200 (Wed, 25 Apr 2007) | 35 lines

	 * src/threads/lock-common.h: New file.

	 * src/threads/native/lock.h: Removed function prototypes.
	  * src/threads/none/lock.h (LOCK_INIT_OBJECT_LOCK): Added.

	 * src/mm/memory.c, src/native/jni.c, src/native/native.c,
	src/native/vm/java_lang_Object.c,
	src/native/vm/java_lang_Thread.c, src/threads/Makefile.am,
	src/threads/native/threads.c, src/threads/threads-common.c,
	src/toolbox/avl.c, src/toolbox/hashtable.c, src/toolbox/list.c,
	src/vm/builtin.c, src/vm/finalizer.c, src/vm/initialize.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/patcher.h, src/vm/jit/show.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/string.c, src/vmcore/class.c, src/vmcore/classcache.c,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/suck.c,
	src/vmcore/utf8.c: Updated headers. ........ r7814 | twisti |
	2007-04-25 21:36:15 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/powerpc/linux/md-abi.c
	(abi_registers_float_temporary): Fixed number of registers.
	........ r7815 | twisti | 2007-04-25 21:37:11 +0200 (Wed, 25 Apr
	2007) | 3 lines

	 * src/vm/jit/powerpc/codegen.c: Fixed lock include.
	  * src/vm/jit/powerpc/emit.c: Likewise. ........ r7816 | twisti |
	2007-04-25 21:38:46 +0200 (Wed, 25 Apr 2007) | 2 lines

	 * src/vm/jit/powerpc/emit.c: Set Id keyword. ........ r7817 |
	twisti | 2007-04-25 21:42:50 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/powerpc64/codegen.c: Changed lock includes.
	  * src/vm/jit/powerpc64/emit.c: Likewise. ........ r7818 | twisti |
	2007-04-25 21:47:50 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/i386/codegen.c: Changed lock include.
	  * src/vm/jit/i386/emit.c: Likewise. ........ r7819 | twisti |
	2007-04-25 21:54:01 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Use
	md->params to save and restore argument registers. ........ r7820
	| twisti | 2007-04-25 21:55:34 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/alpha/codegen.c: Changed lock include.
	  * src/vm/jit/alpha/emit.c: Likewise. ........ r7821 | twisti |
	2007-04-25 21:56:30 +0200 (Wed, 25 Apr 2007) | 2 lines

	 * src/vm/jit/alpha/emit.c: Set Id keyword. ........ r7822 |
	twisti | 2007-04-25 22:02:14 +0200 (Wed, 25 Apr 2007) | 5 lines

	 * src/vm/jit/arm/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	........ r7823 | twisti | 2007-04-25 22:03:04 +0200 (Wed, 25 Apr
	2007) | 3 lines

	 * src/vm/jit/arm/codegen.c: Changed lock include.
	  * src/vm/jit/arm/emit.c: Likewise. ........ r7824 | twisti |
	2007-04-25 22:07:37 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/mips/codegen.c: Changed lock includes.
	  * src/vm/jit/mips/emit.c: Likewise. ........ r7825 | twisti |
	2007-04-25 22:31:57 +0200 (Wed, 25 Apr 2007) | 11 lines

	 * src/threads/threads-common.c (threads_start_javathread): Changed
	signature.

	 * src/threads/lock-common.h (threads/threads-common.h): Added.
	[ENABLE_THREADS]: Only define functions when threads are enabled.

	 * src/threads/threads-common.h
	(native/include/java_lang_Thread.h): Removed. [ENABLE_THREADS]:
	Only define functions when threads are enabled.
	(threads_start_javathread): Changed signature. ........ r7826 |
	twisti | 2007-04-25 22:56:16 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/threads/threads-common.c (threads_dump) [!SIZEOF_VOID_P ==
	8]: Fixed warning. ........ r7827 | twisti | 2007-04-25 23:03:44
	+0200 (Wed, 25 Apr 2007) | 6 lines

	 * src/threads/lock-common.h (threads/threads-common.h): Removed
	that header again and added a comment about not including thread
	headers.

	 * src/threads/threads-common.c (threads_start_javathread):
	Reverted.
	  * src/threads/threads-common.h (threads_start_javathread): Likewise.
	........ r7828 | stefan | 2007-04-25 23:23:57 +0200 (Wed, 25 Apr
	2007) | 3 lines

	 * src/vm/jit/i386/darwin/md-os.c: attempt at porting the exception
	changes (see r7596 & r7648). ........ r7829 | stefan |
	2007-04-25 23:47:00 +0200 (Wed, 25 Apr 2007) | 3 lines

	 * src/vm/jit/i386/darwin/md-os.c: added threads/threads-common.h,
	removed vm/jit/i386/md-abi.h ........ r7830 | twisti | 2007-04-26
	13:14:39 +0200 (Thu, 26 Apr 2007) | 28 lines

	 * src/threads/threads-common.c (threads/critical.h): Added.
	(threads/native/threads.h): Removed. (threads_table): Added.
	(threads_preinit): New function. (threads_table_init): Moved from
	implementation file. (threads_table_add): Likewise.
	(threads_table_remove): Likewise. (threads_table_dump): Likewise.

	 * src/threads/threads-common.h (threads_table_entry_t)
	(threads_table_t): Added. (threads_preinit): Likewise.
	(threads_table_add): Likewise. (threads_table_remove): Likewise.
	(threads_impl_preinit): Likewise. (threads_init_threadobject):
	Likewise.

	 * src/threads/native/threads.c (threads_table): Removed.
	(threads_preinit): Renamed to threads_impl_preinit.
	(threads_table_init): Removed. (threads_table_add): Likewise.
	(threads_table_remove): Likewise. (threads_table_dump): Likewise.

	 * src/threads/native/threads.h (threads_table_entry_t)
	(threads_table_t): Removed. (threads_preinit): Likewise. ........
	r7831 | twisti | 2007-04-26 14:48:16 +0200 (Thu, 26 Apr 2007) | 23
	lines

	 * src/threads/threads-common.c (threads_thread_create_internal):
	Renamed to threads_thread_start_internal and start the thread.
	(threads_start_javathread): Renamed to threads_thread_start.
	  * src/threads/threads-common.h: Likewise.

	 * src/threads/native/threads.c (threads_start_thread): Renamed to
	threads_impl_thread_start.

	 * src/mm/memory.c (thread_memory): Removed.
	(memory_start_thread): Call threads_thread_start_internal.

	 * src/vm/finalizer.c (thread_finalizer): Removed.
	(finalizer_start_thread): Call threads_thread_start_internal.

	 * src/vm/signal.c (thread_signal): Removed.
	(signal_start_thread): Call threads_thread_start_internal.

	 * src/vm/jit/optimizing/profile.c (thread_profile): Removed.
	(profile_start_thread): Call threads_thread_start_internal.

	 * src/vm/jit/optimizing/recompile.c (thread_recompile): Removed.
	(recompile_start_thread): Call threads_thread_start_internal.
	........ r7832 | twisti | 2007-04-26 15:06:16 +0200 (Thu, 26 Apr
	2007) | 3 lines

	 * src/native/vm/java_lang_Thread.c (start): Renamed
	threads_start_javathread to threads_thread_start. ........ r7833 |
	twisti | 2007-04-26 15:07:05 +0200 (Thu, 26 Apr 2007) | 2 lines

	 * src/native/vm/java_lang_Thread.c: Set Id keyword. ........
	r7834 | twisti | 2007-04-26 15:32:08 +0200 (Thu, 26 Apr 2007) | 3
	lines

	 * src/vm/vm.c [ENABLE_THREADS] (threads/native/threads.h):
	Removed. (threads/threads-common.h): Added. ........ r7835 |
	twisti | 2007-04-26 15:43:08 +0200 (Thu, 26 Apr 2007) | 7 lines

	 * src/vm/jit/inline/inline.h (config.h): Added. (inline_inline):
	Likewise.

	 * src/vm/jit/jit.c (threads/threads-common.h): Added.
	[ENABLE_INLINING] (vm/jit/inline/inline.h): Likewise.
	[ENABLE_THREADS] (threads/native/threads.h): Removed. ........
	r7836 | ajordan | 2007-04-27 03:37:06 +0200 (Fri, 27 Apr 2007) | 9
	lines

	 * src/vm/jit/sparc64/emit.c: Keeping stack 16-byte aligned when
	calling C/native functions from the stack. (Solaris requires this)
	  * src/vm/jit/sparc64/codegen.c: Likewise.
	  * src/vm/jit/sparc64/codegen.h: Likewise.

	 * src/vm/jit/sparc64/md-abi.c: Removed zero sized abi_register_*
	arrays. (not allowed in ISO C)

	 * src/vm/jit/sparc64/solaris/md-os.c: Preliminary hardware
	exception handling. (untested) ........ r7837 | tbfg | 2007-04-27
	10:43:06 +0200 (Fri, 27 Apr 2007) | 27 lines

	 * src/vm/jit/m68k/emit.c (emit_arrayindexoutofbounds_check):
	Fixed.
	  * src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigill): AIOOB
	fixed. Editor boiler plate added.

	 * src/vm/jit/m68k/linux/md-os.h: Editor boiler plate.

	 * src/vm/jit/m68k/linux/md-abi.c: Likewise.

	 * src/vm/jit/m68k/md.c: Likewise.

	 * src/vm/jit/m68k/machine-instr.h: Likewise.

	 * src/vm/jit/m68k/patcher.c: Editor boiler plate.
	(patcher_invokeinterface): Implemented. (patcher_get_putfield):
	Implemented. (patcher_resolve_class): Implemented.
	(patcher_get_putstatic): Implemented.

	 * src/vm/jit/m68k/codegen.c: Editor boiler plate.
	(ICMD_GETSTATIC): Added patcher. (ICMD_AASTORE): Fixed.

	 * src/vm/jit/m68k/asmpart.S: Editor boiler plate.
	(asm_vm_call_method_exception_handler): Fixed used register.
	Return values in %d0 and %a0 as gcc sometimes expects pointers in
	%a0. ........ r7838 | ajordan | 2007-04-28 14:59:58 +0200 (Sat, 28
	Apr 2007) | 3 lines

	 * src/vm/jit/sparc64/asmpart.S (asm_call_jit_compiler): Fixed
	stack alignement in first save. ........ r7839 | pm | 2007-04-30
	00:46:56 +0200 (Mon, 30 Apr 2007) | 15 lines

	 * src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/emit.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/machine-instr.h,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/md-asm.h, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/md-abi.c: Adapted S390 port to changes from
	branches/twisti (hardware exceptions, emit_branch, abi_registers_*),
	jctest works again. Cleaned up almost all dead x86_64 code. ........
	r7840 | tbfg | 2007-04-30 12:53:13 +0200 (Mon, 30 Apr 2007) | 31
	lines

	 * src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Fixed.
	(emit_arithmetic_check): Implemented.

	 * src/vm/jit/m68k/md.c (md_get_method_patch_address): Changed
	invoking register. (md_stacktrace_get_returnaddress): Fix for
	linking words on stack.

	 * src/vm/jit/m68k/codegen.c (IUSHRCONST): Fix. (ICMD_IOR):
	Implemented. (ICMD_IORCONST): Likewise. (ICMD_IXOR): Likewise.
	(ICMD_IXORCONST): Likewise. (ICMD_INVOKEVIRTUAL): Changed invoking
	register. (ICMD_INVOKEINTERFACE): Likewise.

	 * src/vm/jit/m68k/patcher.c (patcher_invokevirtual): Changed
	invoking register.

	 * src/vm/jit/m68k/asmpart.S
	(asm_vm_call_method_exception_handler): Proper stack restauration.
	(L_asm_call_jit_compiler_exception): Implemented.
	(asm_patcher_wrapper): Fixses. (L_asm_patcher_wrapper_exception):
	Implemented.

	 * src/vm/jit/m68k/codegen.h (M_IXOR): Added. (M_IOR_IMM): Added.
	(M_IXOR_IMM): Added.

	 * src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframe):
	Comment and further m68k stuff. ........ r7841 | twisti |
	2007-04-30 13:58:57 +0200 (Mon, 30 Apr 2007) | 3 lines

	 * src/vm/jit/inline/Makefile.am (AM_CPPFLAGS): Added
	  -I$(top_builddir)/src. ........ r7842 | tbfg | 2007-04-30 14:44:47
	+0200 (Mon, 30 Apr 2007) | 3 lines

	 * src/vm/jit/m68k/asmpart.S (asm_handle_exception): Restore
	registers correctly. ........ r7843 | tbfg | 2007-05-01 15:00:12
	+0200 (Tue, 01 May 2007) | 22 lines

	 * src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigill):
	Support EXCEPTION_HARDWARE_ARITHMETIC.

	 * src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Use corret opcode for
	word forms.

	 * src/vm/jit/m68k/codegen.c (ICMD_IDIVPOW2): Implemented.
	(ICMD_IREMPOW2): Implemented. (ICMD_ISHLCONST): Fixed.
	(ICMD_ISHRCONST): Fixed. (ICMD_IUSHRCONST): Fixed.
	(ICMD_SALOAD): Signextension fix. (ICMD_LALOAD): Implemented.
	(ICMD_LASTORE): Fixed. (ICMD_IASTORE): Fixed.
	(ICMD_MULITANEWARRAY): Fixed.

	 * src/vm/jit/m68k/codegen.h (M_IADDX): Added. (M_IXOR): Fixed.
	(M_BCS): Fixed. ........ r7844 | pm | 2007-05-01 17:46:22 +0200
	(Tue, 01 May 2007) | 3 lines

	 * src/vm/jit/emit-common.h (BRANCH_LABEL_6): Added. ........
	r7845 | pm | 2007-05-01 18:05:07 +0200 (Tue, 01 May 2007) | 3 lines

	 * src/vm/jit/s390/codegen.c (codegen_emit): Use new emit_label and
	emit_label_* functions.
	  * src/vm/jit/s390/disass.c (disass_pseudo_instr): Nicer formatting for
	ill pseudo instruction. ........ r7846 | pm | 2007-05-01 18:14:00
	+0200 (Tue, 01 May 2007) | 2 lines

	 * src/vm/jit/s390/codegen.h (gen_bound_check,
	gen_nullptr_check_intern, gen_bound_check, N_LONG_0): Remove because
	obsolete. ........ r7847 | ajordan | 2007-05-01 19:35:55 +0200
	(Tue, 01 May 2007) | 6 lines

	 * src/vm/jit/sparc64/codegen.h: Removed unused var_to_reg_int
	define.

	 * src/vm/jit/sparc64/codegen.c: Fixed JIT float argument passing
	via stack.

	 * src/vm/jit/sparc64/asmpart.S (asm_vm_call): Fixed integer
	argument passing via stack args. ........ r7848 | pm | 2007-05-01
	23:40:26 +0200 (Tue, 01 May 2007) | 8 lines

	 * src/vm/jit/s390/md.c (md_dump_context): Added. Fatal signals now
	print the context and a stacktrace.
	  * src/vm/jit/s390/emit.h (emit_restore_pv): Added. Fixes bug where
	REG_PV recalculation uses dseg value to recalculate REG_PV.
	  * src/vm/jit/s390/emit.c: Likewise.
	  * src/vm/jit/s390/codegen.h (N_RI, N_RI2): Test immediate operand for
	correct signedness.
	  * src/vm/jit/s390/codegen.c (codegen_emit): Use emit_restore_pv for
	REG_PV recalculation/
	  * src/vm/jit/s390/disass.c (disass_pseudo_instr): Fix formating.
	  * src/vm/jit/s390/tests/dacapo.status: Added. ........ r7849 |
	twisti | 2007-05-02 11:57:22 +0200 (Wed, 02 May 2007) | 6 lines

	 * src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Added uClibc support. (md_signal_handler_sigtrap): Likewise.
	(md_signal_handler_sigusr2): Likewise.
	(thread_restartcriticalsection): Likewise. ........ r7850 | twisti
	| 2007-05-02 18:21:12 +0200 (Wed, 02 May 2007) | 37 lines

	 * src/threads/threads-common.c (threads_preinit): Create and
	initialize the main-thread. (threads_table_init): Changed
	signature, insert main-thread and maintain a used list too.
	(threads_table_add): Use locking and maintain used list.
	(threads_table_remove): Likewise. (threads_table_get): New
	function. (threads_table_get_non_daemons): Likewise.
	(threads_table_first): Likewise. (threads_table_next): Likewise.
	[!NDEBUG] (threads_table_dump): Use log_* functions.
	(threads_dump): Use threads-table and functions.

	 * src/threads/threads-common.h (threads_table_entry_t): Made a
	struct and renamed nextfree to next. (threads_table_get): Added
	(threads_table_get_non_daemons): Likewise. (threads_table_first):
	Likewise. (threads_table_next): Likewise. [!NDEBUG]
	(threads_table_dump): Likewise. (threads_impl_table_init):
	Likewise. (threads_table_lock): Likewise.
	(threads_table_unlock): Likewise.
	(threads_set_current_threadobject): Likewise.

	 * src/threads/native/threads.c (threadlistlock): Removed.
	(threads_impl_preinit): Removed main-thread initialization code.
	(threads_impl_table_init): New function. (threads_table_lock): New
	function. (threads_table_unlock): Likewise. (threads_init): Get
	main-thread from threads-table and removed thread-list code.
	(threads_attach_current_thread): Likewise.
	(threads_detach_thread): Removed thread-list code.
	(threads_find_non_daemon_thread): Removed.
	(threads_join_all_threads): Use threads_table_get_non_daemons.
	........ r7851 | twisti | 2007-05-02 21:57:07 +0200 (Wed, 02 May
	2007) | 3 lines

	 * src/vmcore/class.c (class_load_attributes): Disable annotation
	loading for the release. ........ r7852 | tbfg | 2007-05-02
	22:36:07 +0200 (Wed, 02 May 2007) | 3 lines

	 * java_lang_Double.c (Java_java_lang_Double_doubleToLongBits):
	Added missing JNIEnv* argument to signature. ........ r7853 |
	twisti | 2007-05-02 22:40:11 +0200 (Wed, 02 May 2007) | 8 lines

	 * src/threads/threads-common.c (threads_table_get_threads): New
	function.

	 * src/threads/threads-common.h (threads_table_get_threads): Added.

	 * src/threads/native/threads.c (threads_cast_sendsignals):
	Rewritten. (threads_cast_stopworld): Likewise. ........ r7854 |
	twisti | 2007-05-02 22:44:59 +0200 (Wed, 02 May 2007) | 4 lines

	 * src/native/vm/cldc1.1/java_lang_Double.c
	(native/include/java_lang_Double.h): Added. (longBitsToDouble):
	Fixed return type. ........ r7855 | twisti | 2007-05-02 22:46:56
	+0200 (Wed, 02 May 2007) | 3 lines

	 * src/native/vm/cldc1.1/java_lang_Float.c (native/native.h):
	Removed. (native/include/java_lang_Float.h): Added. ........
	r7856 | tbfg | 2007-05-03 00:28:04 +0200 (Thu, 03 May 2007) | 7
	lines

	 * src/vm/jit/m68k/codegen.c (ICMD_IDIVPOW2): Fixed. (ICMD_IREM):
	Fixed. (ICMD_LASTORE): Use M_LST. (ICMD_DASTORE): Use M_LST.
	(ICMD_LALOAD): Use M_LLD. (ICMD_DALOAD): Use M_LLD. ........
	r7857 | tbfg | 2007-05-03 02:33:48 +0200 (Thu, 03 May 2007) | 6
	lines

	 * src/vm/jit/m68k/codegen.c (ICMD_CALOAD): Fixed.

	 * src/vm/jit/m68k/patcher.c (*): Removed patching back of old
	opcodes from patcher_wrapper, moved into each patcher.
	(patcher_patch_back): Added. ........ r7858 | twisti | 2007-05-03
	10:16:14 +0200 (Thu, 03 May 2007) | 3 lines

	 * contrib/check_dangerous_printf.pl: Removed this file in favor of
	pscan. ........ r7859 | twisti | 2007-05-03 10:29:16 +0200 (Thu,
	03 May 2007) | 7 lines

	 * src/toolbox/avl.h (avl_tree): Renamed to avl_tree_t.
	(avl_node): Renamed to avl_node_t.

	 * src/toolbox/avl.c: Likewise.
	  * src/threads/critical.c: Likewise.
	  * src/vm/jit/codegen-common.c: Likewise. ........ r7860 | twisti |
	2007-05-03 14:30:05 +0200 (Thu, 03 May 2007) | 9 lines

	 * src/toolbox/avl.c (avl_insert_intern): Changed order of
	comparator-arguments. (avl_find): Likewise.

	 * src/toolbox/avl.h (avl_comparator): Renamed arguments, to
	reflect the change.

	 * src/vm/jit/codegen-common.c (methodtree_comparator): Likewise.
	........ r7861 | twisti | 2007-05-03 15:49:35 +0200 (Thu, 03 May
	2007) | 4 lines

	 * src/vm/jit/codegen-common.c (codegen_start_native_call)
	[ENABLE_JAVASE]: This has to be ENABLE_JNI.
	(codegen_finish_native_call): Likewise. ........ r7862 | twisti |
	2007-05-03 16:53:39 +0200 (Thu, 03 May 2007) | 7 lines

	 * src/toolbox/avl.c (toolbox/logging.h): Added. (vm/global.h):
	Likewise. (vm/vm.h): Likewise. (avl_insert_intern): Use vm_abort
	instead of assert. (avl_insert): Removed debug code. (avl_dump):
	Use logging functions. ........ r7863 | twisti | 2007-05-03
	22:58:54 +0200 (Thu, 03 May 2007) | 3 lines

	 * src/mm/boehm-gc/include/gc.h (GC_HAVE_BUILTIN_BACKTRACE):
	Commented, we don't need it and uClibc doesn't have it. ........
	r7864 | twisti | 2007-05-03 23:17:26 +0200 (Thu, 03 May 2007) | 47
	lines

	 * src/threads/critical.c (critical_compare): Renamed to
	critical_comparator. (critical_find): Removed.
	(critical_register_critical_section): Renamed to
	critical_section_register. (critical_find_restart_point): Call
	avl_find. (critical_register_asm_critical_sections): Call
	critical_section_register.

	 * src/threads/critical.h (critical_section_node_t): Renamed
	members. (thread_restartcriticalsection): Renamed to
	md_critical_section_restart.

	 * src/threads/native/threads.c (threads_cast_darwinstop): Call
	md_critical_section_restart. (threads_sigsuspend_handler):
	Likewise.

	 * src/vmcore/linker.c (linker_compute_subclasses): Call
	threads_cast_{start,stop}world, removed LOCK_MONITOR_{ENTER,EXIT}.

	 * src/cacaoh/dummy.c (threads_cast_stopworld): Added.
	(threads_cast_startworld): Likewise.

	 * src/vm/jit/codegen-common.c (codegen_setup): Setup listcritical.
	(codegen_reset): Likewise. (codegen_critical_section_new): New
	function. (codegen_critical_section_start): Likewise.
	(codegen_critical_section_end): Likwise.
	(codegen_critical_section_finish): Likewise. (codegen_finish):
	Call codegen_critical_section_finish. (codegen_threadcritrestart):
	Removed. (codegen_threadcritstart): Likewise.
	(codegen_threadcritstop): Likewise.

	 * src/vm/jit/codegen-common.h (codegen_critical_section_t):
	Renamed to critical_section_ref_t. (codegendata): Added
	listcritical, removed threadcrit, threadcritcurrent and
	threadcritcount. (CODEGEN_CRITICAL_SECTION_NEW,
	CODEGEN_CRITICAL_SECTION_START) (CODEGEN_CRITICAL_SECTION_END):
	Defined.

	 * src/vm/jit/powerpc/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/powerpc/linux/md-os.c
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart. ........ r7865 | twisti | 2007-05-03
	23:29:40 +0200 (Thu, 03 May 2007) | 6 lines

	 * src/vm/jit/i386/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/i386/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart. ........ r7866 | twisti |
	2007-05-04 00:32:11 +0200 (Fri, 04 May 2007) | 6 lines

	 * src/vm/jit/x86_64/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/x86_64/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart. ........ r7867 | tbfg |
	2007-05-04 01:31:01 +0200 (Fri, 04 May 2007) | 7 lines

	 * src/vm/jit/m68k/md.c (md_stacktrace_get_returnaddress): Removed
	braindead address check and fixed the real bug.

	 * src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Added float
	argument handling. (asm_call_jit_compiler): Fixed stack offset
	bug. ........ r7868 | tbfg | 2007-05-04 12:13:20 +0200 (Fri, 04
	May 2007) | 4 lines

	 * linker.c (linker_compute_subclasses): Only call
	threads_cast_[start|stop]world when ENABLE_THREADS. ........ r7869
	| pm | 2007-05-05 10:08:49 +0200 (Sat, 05 May 2007) | 3 lines

	 * contrib/vmlog/Makefile.am (AM_CPPFLAGS): Add include
	directories for vmlog.
	   * src/vm/Makefile.am: Likewise. ........ r7870 | tbfg | 2007-05-05
	15:46:11 +0200 (Sat, 05 May 2007) | 3 lines

	 * linker.c (linker_compute_subclasses):
	threads_cast_[start|stop]world only available when using GC.
	........ r7871 | tbfg | 2007-05-05 15:48:39 +0200 (Sat, 05 May
	2007) | 8 lines

	 * src/vm/jit/m68k/emit.c (emit_patcher_stubs): Add thread
	support. (emit_exception_check_areg): Removed dead code.

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Add thread support.

	 * src/vm/jit/m68k/asmpart.S (asm_patcher_wrapper): Likewise.
	........ r7872 | ajordan | 2007-05-06 15:32:49 +0200 (Sun, 06 May
	2007) | 5 lines

	 * src/vm/jit/sparc64/codegen.c: Implemented threads support.
	  * src/vm/jit/sparc64/machine-instr.h: Likewise.
	  * src/vm/jit/sparc64/linux/md-os.c: Likewise. ........ r7873 | tbfg
	| 2007-05-07 00:20:13 +0200 (Mon, 07 May 2007) | 16 lines

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Allocate 2 additional
	words in stackframe for long to double conversion.

	 * src/vm/jit/m68k/asmpart.S (asm_handle_exception): Copy exception
	object into correct register.

	 * src/vm/jit/m68k/codegen.h (M_FLD): Implemented. (M_DLD):
	Likewise. (M_FST): Likewise. (M_DST): Likewise. (M_FLTMOVE):
	Likewise. (M_INT2FLTMOVE): Likewise. (M_DBLMOVE): Likewise.
	(FCONST): Likewise. ........ r7874 | ajordan | 2007-05-07 03:44:47
	+0200 (Mon, 07 May 2007) | 7 lines

	 * src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Fixed
	fp arg passing.
	  * src/vm/jit/sparc64/md-abi.h: Likewise.

	 * src/vm/jit/sparc64/asmpart.S (asm_vm_call_method): Likewise, but
	the other way around.
	  * src/vm/jit/sparc64/md-asm.h: Likewise. ........ r7875 | twisti |
	2007-05-07 13:35:30 +0200 (Mon, 07 May 2007) | 10 lines

	 * src/threads/threads-common.c (threads_table_get): Made static
	and removed table lock. (threads_dump): Lock threads table.

	 * src/threads/threads-common.h (threads_table_get): Removed.

	 * src/threads/native/threads.c (threads_cast_stopworld): Lock
	threads table. (threads_cast_startworld): Likewise. ........
	r7876 | twisti | 2007-05-07 13:37:00 +0200 (Mon, 07 May 2007) | 2
	lines

	 * src/threads/threads-common.c (threads_dump): Typo. ........
	r7877 | tbfg | 2007-05-07 15:02:55 +0200 (Mon, 07 May 2007) | 38
	lines

	 * src/vm/jit/m68k/arch.h (SUPPORT_FLOAT): Enabled.
	(SUPPORT_FLOAT_CMP): Enabled. (SUPPORT_DOUBLE): Enabled.
	(SUPPORT_DOUBLE_CMP): Enabled.

	 * src/vm/jit/m68k/codegen.c (ICMD_FCMPL): Implemented.
	(ICMD_DCMPL): Likewise. (ICMD_FCMPG): Likewise. (ICMD_DCMPG):
	Likewise. (ICMD_FMUL): Likewise. (ICMD_DMUL): Likewise.
	(ICMD_FDIV): Likewise. (ICMD_DDIV): Likewise. (ICMD_FADD):
	Likewise. (ICMD_DADD): Likewise. (ICMD_FSUB): Likewise.
	(ICMD_DSUB): Likewise. (ICMD_F2D): Likewise. (ICMD_D2F):
	Likewise. (ICMD_BUILTIN): Handle float return values.
	(codegen_emit_stub_native): Handle float values.

	 * src/vm/jit/m68k/codegen.h (M_FCMP): Added. (M_BFEQ): Added.
	(M_BFLT): Added. (M_BFGT): Added. (M_BFUN): Added. (M_FADD):
	Added. (M_DADD): Added. (M_FSUB): Added. (M_DSUB): Added.
	(M_FMUL): Added. (M_DMUL): Added. (M_FDIV): Added. (M_DDIV):
	Added. (M_D2F): Added. (M_F2D): Added. ........ r7878 | twisti
	| 2007-05-07 15:31:18 +0200 (Mon, 07 May 2007) | 3 lines

	 * src/native/vm/java_lang_Thread.h (threads/native/threads.h):
	Removed. ........ r7879 | twisti | 2007-05-07 15:45:19 +0200 (Mon,
	07 May 2007) | 8 lines

	 * configure.ac (AC_CHECK_HEADERS): Added sys/mman.h,
	sys/resource.h. (AC_CHECK_FUNCS): Added getrusage, mprotect.

	 * src/vmcore/statistics.c [HAVE_SYS_TIME_H] (sys/time.h): Include
	conditionally. [HAVE_SYS_RESOURCE_H] (sys/resource.h): Likewise.
	(getcputime) [!HAVE_GETRUSAGE]: Return 0. ........ r7880 | twisti
	| 2007-05-07 16:13:45 +0200 (Mon, 07 May 2007) | 6 lines

	 * src/vm/jit/mips/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/mips/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart. ........ r7881 | twisti |
	2007-05-07 16:16:54 +0200 (Mon, 07 May 2007) | 7 lines

	 * configure.ac (AC_CONFIG_FILES): Added
	src/vm/jit/mips/uclinux/Makefile.

	 * src/vm/jit/mips/uclinux: New directory.
	  * src/vm/jit/mips/uclinux/md-os.c: New file.
	  * src/vm/jit/mips/uclinux/Makefile.am: Likewise. ........ r7882 |
	tbfg | 2007-05-07 16:23:32 +0200 (Mon, 07 May 2007) | 8 lines

	 * tests/exception_restore_registers.java: New test, tests if
	variables get restored in case of exceptions.

	 * tests/exception_restore_registers.output: New file, expected
	output.

	 * tests/Makefile.am: Added exception_restore_registers target.
	........ r7883 | tbfg | 2007-05-07 16:26:41 +0200 (Mon, 07 May
	2007) | 11 lines

	 * src/vm/jit/m68k/codegen.c (ICMD_FNEG): Implemented.
	(ICMD_DNEG): Implemented.

	 * src/vm/jit/m68k/asmpart.S (asm_call_jit_compiler): Store
	volatile floatregisters. (asm_patcher_wrapper): Likewise.
	(asm_handle_exception): Restore float registers.

	 * src/vm/jit/m68k/codegen.h (M_FNEG): Added. (M_DNEG): Added.
	........ r7884 | ajordan | 2007-05-07 17:07:03 +0200 (Mon, 07 May
	2007) | 4 lines

	 * src/vm/jit/sparc64/codegen.c (codegen_emit): Adapted to critical
	section renames.
	  * src/vm/jit/sparc64/linux/md-os.c: Likewise. ........ r7885 |
	twisti | 2007-05-07 23:29:55 +0200 (Mon, 07 May 2007) | 7 lines

	 * src/threads/native/threads.c (mainthreadobj): Removed.
	  * src/threads/native/threads.h (mainthreadobj): Likewise.

	 * src/vm/jit/optimizing/profile.c (threads/native/threads.h):
	Likewise. (profile_thread): Rewritten thread iteration. ........
	r7886 | twisti | 2007-05-07 23:34:01 +0200 (Mon, 07 May 2007) | 6
	lines

	 * src/vm/jit/alpha/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/alpha/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart. ........ r7887 | twisti |
	2007-05-08 15:03:07 +0200 (Tue, 08 May 2007) | 6 lines

	 * src/configure.ac (AC_CHECK_HEADERS): Added string.h.
	(AC_CHECK_FUNCS): Added strdup.

	 * src/src/vmcore/options.c [HAVE_STRING_H] (string.h): Added
	#ifdef. (options_get) HAVE_STRDUP]: Added. ........ r7888 | tbfg
	| 2007-05-09 10:36:16 +0200 (Wed, 09 May 2007) | 7 lines

	 * src/vm/jit/powerpc64/linux/md-os.c
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart.

	 * src/vm/jit/powerpc64/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros. ........ r7889 | tbfg |
	2007-05-09 10:52:11 +0200 (Wed, 09 May 2007) | 36 lines

	 * src/vm/jit/m68k/linux/md-abi.h (LA_SIZE_IN_POINTERS): Defined 0.
	(PA_SIZE_IN_POINTERS): Removed. (PA_SIZE): Removed.
	(LA_LR_OFFSET): Removed. (LA_SIZE_ALIGNED): Removed.

	 * src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Removed
	linking instructions, save only used registers.

	 (emit_verbosecall_exit): Likewise.

	 * src/vm/jit/m68k/arch.h (SUPPORT_FLOAT): Depends on configure
	option ENABLE_SOFTFLOAT.

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Use M_FSTORE/M_FLOAT
	to save/restore float registers without converting any values.
	Fixed offset of IsSync.

	 (codegen_emit_stub_native): Move floating point return values
	into floating point registers.

	 * src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Save/restore
	floating point registers.

	 (asm_call_jit_compiler): Save/restore volatile floating point
	registers.

	 (asm_patcher_wrapper): Likewise.

	 (asm_handle_exception): Use fmovemd instructions to restore
	floatng point registers without converting.

	 * src/vm/jit/m68k/codegen.h (M_FSTORE): Added. (M_FLOAT): Added.
	........ r7890 | twisti | 2007-05-09 18:05:58 +0200 (Wed, 09 May
	2007) | 7 lines

	 * src/lib/Makefile.am (VM_JAVA_FILES): Renamed vm/reference/ to
	gnu/.

	 * src/lib/vm: Removed.
	  * src/lib/gnu: Added.
	  * src/lib/gnu/java: Likewise.
	  * src/lib/gnu/gnu: Likewise. ........ r7891 | tbfg | 2007-05-09
	18:37:20 +0200 (Wed, 09 May 2007) | 5 lines

	 * src/vm/jit/powerpc64/codegen.c (ICMD_CHECKCAST): Use
	branch_label_* instead of harcoded jump offsets.

	 (ICMD_INSTANCEOF): Likewise. ........ r7892 | tbfg | 2007-05-10
	14:50:45 +0200 (Thu, 10 May 2007) | 3 lines

	 * src/vm/jit/powerpc64/patcher.c (patcher_checkcast_interface):
	Fixed not flushing all bytes written. ........ r7893 | twisti |
	2007-05-10 15:27:29 +0200 (Thu, 10 May 2007) | 7 lines

	 * src/threads/threads-common.c (threads_thread_start_internal):
	Set thread-flags. (threads_thread_start): Likewise.

	 * src/threads/native/threads.c (threads_startup_thread): Don't set
	thread-flags. ........ r7894 | twisti | 2007-05-10 16:04:05 +0200
	(Thu, 10 May 2007) | 19 lines

	 * src/vmcore/options.c (opt_verbosethreads): Added.
	  * src/vmcore/options.h (opt_verbosethreads): Likewise.

	 * src/vm/vm.c (XXusage): Added -verbose:threads. (vm_create):
	Likewise.

	 * src/threads/threads-common.c (threads_create_thread): Renamed
	variable thread to t. (threads_thread_print_info): New function.
	(threads_dump): Use threads_thread_print_info.

	 * src/threads/threads-common.h (threads_thread_print_info): Added.

	 * src/threads/native/threads.c (threads_init) [!NDEBUG]: Added
	  -verbose:threads debug-output. (threads_startup_thread): Likewise.
	(threads_attach_current_thread): Likewise.
	(threads_detach_thread): Likewise. ........ r7895 | tbfg |
	2007-05-10 16:34:05 +0200 (Thu, 10 May 2007) | 9 lines

	 * src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Make SOFTFLOAT
	clean. (emit_verbosecall_exit): Likewise.

	 * src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Mark comment
	about gcc abi wiredness.

	 * src/vm/jit/m68k/codegen.h (M_D2F): Fixed. (M_F2D): Fixed.
	........ r7896 | tbfg | 2007-05-11 19:15:08 +0200 (Fri, 11 May
	2007) | 9 lines

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Fix stackframesize
	allocation in not synchronized methods which call a builtin
	returning a double. Merged with ENABLE_THREADS case. Added code
	to copy interface registers.

	 * src/vm/jit/m68k/asmpart.S (asm_handle_exception): Save
	temporary registers, dunno if really needed, but its a slow path
	anyways. ........ r7897 | twisti | 2007-05-11 20:23:27 +0200 (Fri,
	11 May 2007) | 2 lines

	 * src/threads/native/threads.h (threadobject): Removed next and
	prev. ........ r7898 | tbfg | 2007-05-11 20:58:24 +0200 (Fri, 11
	May 2007) | 12 lines

	 * src/vm/jit/m68k/linux/md-abi.h (ADR_SAV_CNT): Increased by one
	(%fp). (ADR_RES_CNT): Decreased by one (%fp).

	 * src/vm/jit/m68k/linux/md-abi.c (nregdescadr): Declared %fp a
	REG_SAV.

	 * src/vm/jit/m68k/arch.h (SUPPORT_DIVISION): Defined.


	  * src/vm/jit/m68k/asmpart.S (asm_handle_exception): Additional logic
	to restore %fp when unwinding the stack. ........ r7899 | twisti |
	2007-05-11 21:31:04 +0200 (Fri, 11 May 2007) | 37 lines

	 * src/threads/threads-common.c (threads_create_thread): Removed
	lock_init_execution_env.

	 * src/threads/lock-common.h (lock_init_execution_env): Removed.
	(lock_record_free_pools): Likewise.

	 * src/threads/native/threads.h (threadobject): Removed ee.

	 * src/threads/native/lock.c (vm/finalizer.h): Added.
	[ENABLE_GC_BOEHM] (mm/boehm-gc/include/gc.h): Likewise.
	(lock_global_pool): Removed. (lock_global_pool_lock): Likewise.
	(lock_init): Don't initialize lock_global_pool_lock.
	(lock_record_init): Removed. (lock_init_execution_env): Likewise.
	(lock_record_alloc_new_pool): Likewise. (lock_record_alloc_pool):
	Likewise. (lock_record_free_pools): Likewise.
	(lock_record_alloc): Likewise. (lock_record_recycle): Likewise.
	(lock_hashtable_get_lock_record): Renamed to lock_hashtable_get.
	(lock_record_new): New function. (lock_record_free): Likewise.
	(lock_hashtable_remove): Likewise. [ENABLE_GC_BOEHM]
	(lock_record_finalizer): Likewise.

	 * src/threads/native/lock.h (lock_execution_env_t): Removed.
	(lock_record_pool_header_t): Likewise. (lock_record_pool_t):
	Likewise. (lock_record_t): Renamed obj to object, removed
	nextfree. [ENABLE_JVMTI] (lock_global_pool_lock,
	lock_global_pool): Removed.

	 * src/vmcore/statistics.c (size_lock_record_pool): Renamed to
	size_lock_record. (statistics_print_memory_usage): Likewise.
	  * src/vmcore/statistics.h: Likewise. ........ r7900 | twisti |
	2007-05-11 22:35:16 +0200 (Fri, 11 May 2007) | 6 lines

	 * src/vm/jit/arm/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	 * src/vm/jit/arm/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart. ........ r7901 | twisti |
	2007-05-11 23:18:51 +0200 (Fri, 11 May 2007) | 3 lines

	 * src/vmcore/statistics.c (statistics_print_memory_usage): Use
	log_println instead of printf. ........ r7902 | twisti |
	2007-05-12 00:33:15 +0200 (Sat, 12 May 2007) | 10 lines

	 * configure.ac (AC_CHECK_HEADERS): Added time.h.
	(AC_CHECK_FUNCS): Added localtime, localtime_r, time.

	 * src/vmcore/statistics.c [HAVE_TIME_H] (time.h): Added.
	(statistics_print_date): New function.
	  * src/vmcore/statistics.h (statistics_print_date): Added.

	 * src/mm/memory.c (memory_thread) [ENABLE_STATISTICS]: Call
	statistics_print_date. ........ r7903 | tbfg | 2007-05-14 13:15:33
	+0200 (Mon, 14 May 2007) | 15 lines

	 * src/vm/jit/dseg.h (dseg_adddata): Removed warning due to typo.

	 * src/vm/jit/m68k/arch.h (SUPPORT_LONG) Defined.
	(SUPPORT_LONG_ADD): Defined. (SUPPORT_CONST_LOGICAL): Defined.

	 * src/vm/jit/m68k/codegen.c (ICMD_LADD): Implemented.
	(ICMD_LADDCONST): Implemented. (ICMD_LSUB): Implemented.
	(ICMD_LSUBCONST): Implemented. (ICMD_LNEG): Implemented.

	 * src/vm/jit/m68k/codegen.h (M_ISUBX): Added. (M_INEGX): Added.
	........ r7904 | twisti | 2007-05-14 15:29:32 +0200 (Mon, 14 May
	2007) | 26 lines

	 * src/threads/threads-common.c (threads_create_thread): Renamed to
	threads_thread_new. (threads_thread_free): New function.
	(threads_preinit): Renamed threads_create_thread to
	threads_thread_new. (threads_thread_start_internal): Likewise.
	(threads_thread_start): Likewise.

	 * src/threads/threads-common.h (threads_create_thread): Renamed to
	threads_thread_new. (threads_thread_free): Added.
	(threads_init_threadobject): Renamed to threads_impl_thread_new.
	(threads_impl_thread_free): Added.

	 * src/threads/native/threads.c (toolbox/avl.h): Removed.
	(threadattr): Likewise. (threads_init_threadobject): Renamed to
	threads_impl_thread_new. (threads_impl_thread_free): New function.
	(threads_init): Use local pthread_attr_t.
	(threads_impl_thread_start): Use pthread_attr_setdetachstate (fixes
	memory leak), check more return values of pthread-calls.
	(threads_attach_current_thread): Renamed threads_create_thread to
	threads_thread_new. (threads_detach_thread): Removed lock-record
	pools comment, call threads_thread_free. ........ r7905 | twisti
	| 2007-05-14 16:11:33 +0200 (Mon, 14 May 2007) | 4 lines

	 * src/toolbox/list.c (list_add_first): Call
	list_add_first_unsynced. (list_add_first_unsynced): New function.
	  * src/toolbox/list.h (list_add_first_unsynced): Added. ........
	r7906 | twisti | 2007-05-14 19:25:33 +0200 (Mon, 14 May 2007) | 2
	lines

	 * src/native/native.c (native_class_getdeclaredannotations):
	Removed. ........ r7907 | tbfg | 2007-05-15 11:25:27 +0200 (Tue,
	15 May 2007) | 2 lines

	 * builtin.c (builtin_ldiv): Needed when DISABLE_GC. ........
	r7908 | christian | 2007-05-15 11:55:17 +0200 (Tue, 15 May 2007) |
	37 lines

	 * src/vm/jit/codegen-common.c: (codegen_emit_phi_moves): Added.
	(Former codegen_insert_phi_moves from codegen.c)

	 * src/vm/jit/codegen-common.h: Function prototype for
	codegen_emit_phi_moves added.

	 * src/vm/jit/optimizing/lsra.c: Adapted to new instruction format
	and unified variables.

	 * src/vm/jit/optimizing/lsra.h: Likewise.

	 * src/vm/jit/optimizing/ssa.c: Likewise.

	 * src/vm/jit/optimizing/ssa.h: Likewise.

	 * src/vm/jit/optimizing/graph.c: Likewise.

	 * src/vm/jit/optimizing/graph.h: Likewise.

	 * src/vm/jit/optimizing/dominators.c: Likewise.

	 * src/vm/jit/optimizing/lifetimes.c: Likewise and changed lifetime
	anaylsis to a worklist algorithmus.

	 * src/vm/jit/optimizing/lifetimes.h: Likewise.

	 * src/vm/jit/i386/codegen.c: (codegen_insert_phi_moves): Moved to
	src/vm/jit/codegen-common.c codegen_emit_phi_moves (codegen_emit):
	Necessary Adaptions for SSA.

	 * src/toolbox/worklist.c: (wl_reset): Added.

	 * src/toolbox/worklist.h: Function Prototype for wl_reset added.

	 * src/vm/jit/stack.c: Removed old SSA specific code. ........
	r7909 | tbfg | 2007-05-15 12:32:16 +0200 (Tue, 15 May 2007) | 12
	lines

	 * src/vm/jit/powerpc64/patcher.c
	(patcher_resolve_classref_to_classinfo): Patch back original code.

	 (patcher_resolve_classref_to_vftbl): Likewise.
	(patcher_resolve_classref_to_flags): Likewise.

	 * src/vm/jit/powerpc64/asmpart.S (DARWIN): Removed all darwin
	ifdefed code for readability. Needs to be ported carefully anyways.

	 (asm_vm_call_method): When handling arguments treat address type
	as long. ........ r7910 | twisti | 2007-05-16 10:02:52 +0200
	(Wed, 16 May 2007) | 59 lines

	 * src/native/native.c: Removed all native-includes.
	(dummynativetable): Removed. (mainhandle): Likewise.
	(native_init): Don't dlopen libjvm, initialize the native-methods
	tree. (native_tree_native_methods_comparator): New function.
	(native_method_symbol): Likewise. (native_method_find): Likewise.
	(native_resolve_function): Use native-methods tree for internal
	native methods.

	 * src/native/native.h (native/jni.h): Added.
	(NATIVE_METHODS_COUNT): Defined. (native_methods_node_t): New
	structure. (native_method_register): Added.

	 * src/native/vm/nativevm.c: New file.
	  * src/native/vm/nativevm.h: Likewise.

	 * src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	nativevm.[ch].

	 * src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c, src/native/v
	m/gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/sun_misc_Unsafe.c: Added methods table and init
	function to register the native methods. ........ r7911 | twisti |
	2007-05-16 11:01:10 +0200 (Wed, 16 May 2007) | 8 lines

	 * src/native/native.c (native_library_open): New function.
	(native_hashtable_library_add): Renamed to native_library_add.
	(native_hashtable_library_find): Renamed to native_library_find.
	  * src/native/native.h: Likewise.

	 * src/native/vm/java_lang_Runtime.c (loadLibrary): Use
	native_library_open. ........ r7912 | twisti | 2007-05-18 15:12:09
	+0200 (Fri, 18 May 2007) | 14 lines

	 * src/native/native.c (native_tree_native_methods_comparator):
	Compare classname, name and descriptor.
	(native_method_register): Set all structure members.
	(native_method_find): Changed argument-type to methodinfo.
	(native_resolve_function): Likewise.

	 * src/native/native.h (native_methods_node_t): Added classname and
	descriptor, renamed method to function.

	 * src/native/vm/gnu/java_lang_VMClass.c: Updated wrong signatures.
	  * src/native/vm/gnu/java_lang_VMObject.c: Likewise.
	  * src/native/vm/gnu/java_lang_VMThread.c: Likewise.
	  * src/native/vm/gnu/java_lang_reflect_Constructor.c: Likewise.
	........ r7913 | twisti | 2007-05-18 15:45:54 +0200 (Fri, 18 May
	2007) | 6 lines

	 * src/native/vm/cldc1.1/java_lang_String.c (methods): Removed
	quick-hack.

	 * src/native/vm/cldc1.1/java_lang_Throwable.c (fillInStackTrace):
	Fixed signature. ........ r7914 | twisti | 2007-05-18 16:17:34
	+0200 (Fri, 18 May 2007) | 4 lines

	 * src/threads/threads-common.c (threads_thread_get_state): Fixed
	compiler warning. (threads_thread_is_alive): Likewise. ........
	r7915 | twisti | 2007-05-18 16:22:19 +0200 (Fri, 18 May 2007) | 2
	lines

	 * src/toolbox/list.c (list_create): Use LOCK_INIT_OBJECT_LOCK-
	macro. ........ r7916 | twisti | 2007-05-18 16:24:21 +0200 (Fri,
	18 May 2007) | 10 lines

	 * src/vmcore/statistics.c (count_nstub_len): Renamed to
	size_stub_native. (statistics_print_memory_usage): Likewise.

	 * src/vmcore/statistics.h: Likewise.

	 * src/vm/jit/codegen-common.c (codegen_generate_stub_native):
	Likewise, moved statistics-calculation after codegen_finish(), so
	actually something is counted. ........ r7917 | twisti |
	2007-05-18 17:05:32 +0200 (Fri, 18 May 2007) | 3 lines

	 * src/native/vm/cldc1.1/java_lang_Object.c (getClass): Fixed
	signature. ........
	[4af05b527810]

2007-05-18  twisti  <twisti>

	* src/native/vm/cldc1.1/java_lang_Object.c:
	* src/native/vm/cldc1.1/java_lang_Object.c (getClass): Fixed
	signature.
	[54484f15560e]

	* src/vm/jit/codegen-common.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.c (count_nstub_len): Renamed to
	size_stub_native. (statistics_print_memory_usage): Likewise.

	* src/vmcore/statistics.h: Likewise.

	* src/vm/jit/codegen-common.c (codegen_generate_stub_native):
	Likewise, moved statistics-calculation after codegen_finish(), so
	actually something is counted.
	[63567965122d]

	* src/toolbox/list.c:
	* src/toolbox/list.c (list_create): Use LOCK_INIT_OBJECT_LOCK-macro.
	[8de6c89e9bf9]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_thread_get_state): Fixed
	compiler warning. (threads_thread_is_alive): Likewise.
	[8d74bfb4fb5c]

	* src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c:
	* src/native/vm/cldc1.1/java_lang_String.c (methods): Removed quick-
	hack.

	* src/native/vm/cldc1.1/java_lang_Throwable.c (fillInStackTrace):
	Fixed signature.
	[322b8d3496f1]

	* src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c:
	* src/native/native.c (native_tree_native_methods_comparator):
	Compare classname, name and descriptor. (native_method_register):
	Set all structure members. (native_method_find): Changed argument-
	type to methodinfo. (native_resolve_function): Likewise.

	* src/native/native.h (native_methods_node_t): Added classname and
	descriptor, renamed method to function.

	* src/native/vm/gnu/java_lang_VMClass.c: Updated wrong signatures.
	* src/native/vm/gnu/java_lang_VMObject.c: Likewise.
	* src/native/vm/gnu/java_lang_VMThread.c: Likewise.
	* src/native/vm/gnu/java_lang_reflect_Constructor.c: Likewise.
	[f36dae832c9a]

2007-05-16  twisti  <twisti>

	* src/native/native.c, src/native/native.h,
	src/native/vm/java_lang_Runtime.c:
	* src/native/native.c (native_library_open): New function.
	(native_hashtable_library_add): Renamed to native_library_add.
	(native_hashtable_library_find): Renamed to native_library_find.
	* src/native/native.h: Likewise.

	* src/native/vm/java_lang_Runtime.c (loadLibrary): Use
	native_library_open.
	[187f8d8411ff]

	* src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c, src/native/vm/
	gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/sun_misc_Unsafe.c, src/native/vm/nativevm.c,
	src/native/vm/nativevm.h:
	* src/native/native.c: Removed all native-includes.
	(dummynativetable): Removed. (mainhandle): Likewise. (native_init):
	Don't dlopen libjvm, initialize the native-methods tree.
	(native_tree_native_methods_comparator): New function.
	(native_method_symbol): Likewise. (native_method_find): Likewise.
	(native_resolve_function): Use native-methods tree for internal
	native methods.

	* src/native/native.h (native/jni.h): Added. (NATIVE_METHODS_COUNT):
	Defined. (native_methods_node_t): New structure.
	(native_method_register): Added.

	* src/native/vm/nativevm.c: New file.
	* src/native/vm/nativevm.h: Likewise.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	nativevm.[ch].

	* src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c, src/native/vm/
	gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMObject.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMString.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_lang_reflect_VMProxy.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/gnu/sun_misc_Unsafe.c: Added methods table and init
	function to register the native methods.
	[64c69300da3b]

2007-05-15  tbfg  <tbfg>

	* src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/patcher.c
	(patcher_resolve_classref_to_classinfo): Patch back original code.

	(patcher_resolve_classref_to_vftbl): Likewise.
	(patcher_resolve_classref_to_flags): Likewise.

	* src/vm/jit/powerpc64/asmpart.S (DARWIN): Removed all darwin
	ifdefed code for readability. Needs to be ported carefully anyways.

	(asm_vm_call_method): When handling arguments treat address type as
	long.
	[8b2523c8fe2b]

2007-05-15  christian  <christian>

	* src/toolbox/worklist.c, src/toolbox/worklist.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/optimizing/dominators.c, src/vm/jit/optimizing/graph.c,
	src/vm/jit/optimizing/graph.h, src/vm/jit/optimizing/lifetimes.c,
	src/vm/jit/optimizing/lifetimes.h, src/vm/jit/optimizing/lsra.c,
	src/vm/jit/optimizing/lsra.h, src/vm/jit/optimizing/ssa.c,
	src/vm/jit/optimizing/ssa.h, src/vm/jit/stack.c:
	* src/vm/jit/codegen-common.c: (codegen_emit_phi_moves): Added.
	(Former codegen_insert_phi_moves from codegen.c)

	* src/vm/jit/codegen-common.h: Function prototype for
	codegen_emit_phi_moves added.

	* src/vm/jit/optimizing/lsra.c: Adapted to new instruction format
	and unified variables.

	* src/vm/jit/optimizing/lsra.h: Likewise.

	* src/vm/jit/optimizing/ssa.c: Likewise.

	* src/vm/jit/optimizing/ssa.h: Likewise.

	* src/vm/jit/optimizing/graph.c: Likewise.

	* src/vm/jit/optimizing/graph.h: Likewise.

	* src/vm/jit/optimizing/dominators.c: Likewise.

	* src/vm/jit/optimizing/lifetimes.c: Likewise and changed lifetime
	anaylsis to a worklist algorithmus.

	* src/vm/jit/optimizing/lifetimes.h: Likewise.

	* src/vm/jit/i386/codegen.c: (codegen_insert_phi_moves): Moved to
	src/vm/jit/codegen-common.c codegen_emit_phi_moves (codegen_emit):
	Necessary Adaptions for SSA.

	* src/toolbox/worklist.c: (wl_reset): Added.

	* src/toolbox/worklist.h: Function Prototype for wl_reset added.

	* src/vm/jit/stack.c: Removed old SSA specific code.
	[6270ebe435fa]

2007-05-15  tbfg  <tbfg>

	* src/vm/builtin.c:
	* builtin.c (builtin_ldiv): Needed when DISABLE_GC.
	[cec8c00d844a]

2007-05-14  twisti  <twisti>

	* src/native/native.c:
	* src/native/native.c (native_class_getdeclaredannotations):
	Removed.
	[1fcaff874000]

	* src/toolbox/list.c, src/toolbox/list.h:
	* src/toolbox/list.c (list_add_first): Call list_add_first_unsynced.
	(list_add_first_unsynced): New function.
	* src/toolbox/list.h (list_add_first_unsynced): Added.
	[c982fd6285f2]

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_create_thread): Renamed to
	threads_thread_new. (threads_thread_free): New function.
	(threads_preinit): Renamed threads_create_thread to
	threads_thread_new. (threads_thread_start_internal): Likewise.
	(threads_thread_start): Likewise.

	* src/threads/threads-common.h (threads_create_thread): Renamed to
	threads_thread_new. (threads_thread_free): Added.
	(threads_init_threadobject): Renamed to threads_impl_thread_new.
	(threads_impl_thread_free): Added.

	* src/threads/native/threads.c (toolbox/avl.h): Removed.
	(threadattr): Likewise. (threads_init_threadobject): Renamed to
	threads_impl_thread_new. (threads_impl_thread_free): New function.
	(threads_init): Use local pthread_attr_t.
	(threads_impl_thread_start): Use pthread_attr_setdetachstate (fixes
	memory leak), check more return values of pthread-calls.
	(threads_attach_current_thread): Renamed threads_create_thread to
	threads_thread_new. (threads_detach_thread): Removed lock-record
	pools comment, call threads_thread_free.
	[f922505053e3]

2007-05-14  tbfg  <tbfg>

	* src/vm/jit/dseg.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h:
	* src/vm/jit/dseg.h (dseg_adddata): Removed warning due to typo.

	* src/vm/jit/m68k/arch.h (SUPPORT_LONG) Defined. (SUPPORT_LONG_ADD):
	Defined. (SUPPORT_CONST_LOGICAL): Defined.

	* src/vm/jit/m68k/codegen.c (ICMD_LADD): Implemented.
	(ICMD_LADDCONST): Implemented. (ICMD_LSUB): Implemented.
	(ICMD_LSUBCONST): Implemented. (ICMD_LNEG): Implemented.

	* src/vm/jit/m68k/codegen.h (M_ISUBX): Added. (M_INEGX): Added.
	[09becbd98429]

2007-05-11  twisti  <twisti>

	* configure.ac, src/mm/memory.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* configure.ac (AC_CHECK_HEADERS): Added time.h. (AC_CHECK_FUNCS):
	Added localtime, localtime_r, time.

	* src/vmcore/statistics.c [HAVE_TIME_H] (time.h): Added.
	(statistics_print_date): New function.
	* src/vmcore/statistics.h (statistics_print_date): Added.

	* src/mm/memory.c (memory_thread) [ENABLE_STATISTICS]: Call
	statistics_print_date.
	[25ead7bd5f52]

	* src/vmcore/statistics.c:
	* src/vmcore/statistics.c (statistics_print_memory_usage): Use
	log_println instead of printf.
	[061cff927754]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/arm/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[d18fe002c94f]

	* src/threads/lock-common.h, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threads.h, src/threads
	/threads-common.c, src/vmcore/statistics.c, src/vmcore/statistics.h:
	* src/threads/threads-common.c (threads_create_thread): Removed
	lock_init_execution_env.

	* src/threads/lock-common.h (lock_init_execution_env): Removed.
	(lock_record_free_pools): Likewise.

	* src/threads/native/threads.h (threadobject): Removed ee.

	* src/threads/native/lock.c (vm/finalizer.h): Added.
	[ENABLE_GC_BOEHM] (mm/boehm-gc/include/gc.h): Likewise.
	(lock_global_pool): Removed. (lock_global_pool_lock): Likewise.
	(lock_init): Don't initialize lock_global_pool_lock.
	(lock_record_init): Removed. (lock_init_execution_env): Likewise.
	(lock_record_alloc_new_pool): Likewise. (lock_record_alloc_pool):
	Likewise. (lock_record_free_pools): Likewise. (lock_record_alloc):
	Likewise. (lock_record_recycle): Likewise.
	(lock_hashtable_get_lock_record): Renamed to lock_hashtable_get.
	(lock_record_new): New function. (lock_record_free): Likewise.
	(lock_hashtable_remove): Likewise. [ENABLE_GC_BOEHM]
	(lock_record_finalizer): Likewise.

	* src/threads/native/lock.h (lock_execution_env_t): Removed.
	(lock_record_pool_header_t): Likewise. (lock_record_pool_t):
	Likewise. (lock_record_t): Renamed obj to object, removed nextfree.
	[ENABLE_JVMTI] (lock_global_pool_lock, lock_global_pool): Removed.

	* src/vmcore/statistics.c (size_lock_record_pool): Renamed to
	size_lock_record. (statistics_print_memory_usage): Likewise.
	* src/vmcore/statistics.h: Likewise.
	[6c9eb67b735c]

2007-05-11  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h:
	* src/vm/jit/m68k/linux/md-abi.h (ADR_SAV_CNT): Increased by one
	(%fp). (ADR_RES_CNT): Decreased by one (%fp).

	* src/vm/jit/m68k/linux/md-abi.c (nregdescadr): Declared %fp a
	REG_SAV.

	* src/vm/jit/m68k/arch.h (SUPPORT_DIVISION): Defined.


	* src/vm/jit/m68k/asmpart.S (asm_handle_exception): Additional logic
	to restore %fp when unwinding the stack.
	[2c693aa2e5a2]

2007-05-11  twisti  <twisti>

	* src/threads/native/threads.h:
	* src/threads/native/threads.h (threadobject): Removed next and
	prev.
	[f855349a44d5]

2007-05-11  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit): Fix stackframesize
	allocation in not synchronized methods which call a builtin
	returning a double. Merged with ENABLE_THREADS case. Added code to
	copy interface registers.

	* src/vm/jit/m68k/asmpart.S (asm_handle_exception): Save temporary
	registers, dunno if really needed, but its a slow path anyways.
	[90d247b28159]

2007-05-10  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Make SOFTFLOAT
	clean. (emit_verbosecall_exit): Likewise.

	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Mark comment about
	gcc abi wiredness.

	* src/vm/jit/m68k/codegen.h (M_D2F): Fixed. (M_F2D): Fixed.
	[1fce7d6e6eed]

2007-05-10  twisti  <twisti>

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vmcore/options.c (opt_verbosethreads): Added.
	* src/vmcore/options.h (opt_verbosethreads): Likewise.

	* src/vm/vm.c (XXusage): Added -verbose:threads. (vm_create):
	Likewise.

	* src/threads/threads-common.c (threads_create_thread): Renamed
	variable thread to t. (threads_thread_print_info): New function.
	(threads_dump): Use threads_thread_print_info.

	* src/threads/threads-common.h (threads_thread_print_info): Added.

	* src/threads/native/threads.c (threads_init) [!NDEBUG]: Added
	-verbose:threads debug-output. (threads_startup_thread): Likewise.
	(threads_attach_current_thread): Likewise. (threads_detach_thread):
	Likewise.
	[837d882ff4d7]

	* src/threads/native/threads.c, src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_thread_start_internal): Set
	thread-flags. (threads_thread_start): Likewise.

	* src/threads/native/threads.c (threads_startup_thread): Don't set
	thread-flags.
	[473c74e3b3f8]

2007-05-10  tbfg  <tbfg>

	* src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/patcher.c (patcher_checkcast_interface):
	Fixed not flushing all bytes written.
	[c68a841961bd]

2007-05-09  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (ICMD_CHECKCAST): Use
	branch_label_* instead of harcoded jump offsets.

	(ICMD_INSTANCEOF): Likewise.
	[42c458c7fbeb]

2007-05-09  twisti  <twisti>

	* src/lib/Makefile.am, src/lib/gnu/gnu/classpath/VMStackWalker.java,
	src/lib/gnu/gnu/classpath/VMSystemProperties.java,
	src/lib/gnu/gnu/java/lang/management/VMMemoryMXBeanImpl.java,
	src/lib/gnu/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/gnu/java/lang/VMClassLoader.java,
	src/lib/gnu/java/lang/VMString.java,
	src/lib/gnu/java/lang/VMThread.java,
	src/lib/gnu/java/lang/VMThrowable.java,
	src/lib/gnu/java/security/VMAccessController.java,
	src/lib/vm/reference/gnu/classpath/VMStackWalker.java,
	src/lib/vm/reference/gnu/classpath/VMSystemProperties.java, src/lib/
	vm/reference/gnu/java/lang/management/VMMemoryMXBeanImpl.java, src/l
	ib/vm/reference/gnu/java/lang/management/VMRuntimeMXBeanImpl.java,
	src/lib/vm/reference/java/lang/VMClassLoader.java,
	src/lib/vm/reference/java/lang/VMString.java,
	src/lib/vm/reference/java/lang/VMThread.java,
	src/lib/vm/reference/java/lang/VMThrowable.java,
	src/lib/vm/reference/java/security/VMAccessController.java:
	* src/lib/Makefile.am (VM_JAVA_FILES): Renamed vm/reference/ to
	gnu/.

	* src/lib/vm: Removed.
	* src/lib/gnu: Added.
	* src/lib/gnu/java: Likewise.
	* src/lib/gnu/gnu: Likewise.
	[b01c51c68bf2]

2007-05-09  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.h:
	* src/vm/jit/m68k/linux/md-abi.h (LA_SIZE_IN_POINTERS): Defined 0.
	(PA_SIZE_IN_POINTERS): Removed. (PA_SIZE): Removed. (LA_LR_OFFSET):
	Removed. (LA_SIZE_ALIGNED): Removed.

	* src/vm/jit/m68k/emit.c (emit_verbosecall_enter): Removed linking
	instructions, save only used registers.

	(emit_verbosecall_exit): Likewise.

	* src/vm/jit/m68k/arch.h (SUPPORT_FLOAT): Depends on configure
	option ENABLE_SOFTFLOAT.

	* src/vm/jit/m68k/codegen.c (codegen_emit): Use M_FSTORE/M_FLOAT to
	save/restore float registers without converting any values. Fixed
	offset of IsSync.

	(codegen_emit_stub_native): Move floating point return values into
	floating point registers.

	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Save/restore
	floating point registers.

	(asm_call_jit_compiler): Save/restore volatile floating point
	registers.

	(asm_patcher_wrapper): Likewise.

	(asm_handle_exception): Use fmovemd instructions to restore floatng
	point registers without converting.

	* src/vm/jit/m68k/codegen.h (M_FSTORE): Added. (M_FLOAT): Added.
	[223653956636]

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-os.c:
	* src/vm/jit/powerpc64/linux/md-os.c
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart.

	* src/vm/jit/powerpc64/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.
	[7e17b57deda1]

2007-05-08  twisti  <twisti>

	* configure.ac, src/vmcore/options.c:
	* src/configure.ac (AC_CHECK_HEADERS): Added string.h.
	(AC_CHECK_FUNCS): Added strdup.

	* src/src/vmcore/options.c [HAVE_STRING_H] (string.h): Added #ifdef.
	(options_get) HAVE_STRDUP]: Added.
	[ecf613150ffd]

2007-05-07  twisti  <twisti>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/alpha/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[8bb1aeffa059]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/jit/optimizing/profile.c:
	* src/threads/native/threads.c (mainthreadobj): Removed.
	* src/threads/native/threads.h (mainthreadobj): Likewise.

	* src/vm/jit/optimizing/profile.c (threads/native/threads.h):
	Likewise. (profile_thread): Rewritten thread iteration.
	[ae773419190f]

2007-05-07  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/linux/md-os.c:
	* src/vm/jit/sparc64/codegen.c (codegen_emit): Adapted to critical
	section renames.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	[7440f5ffe4e0]

2007-05-07  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h:
	* src/vm/jit/m68k/codegen.c (ICMD_FNEG): Implemented. (ICMD_DNEG):
	Implemented.

	* src/vm/jit/m68k/asmpart.S (asm_call_jit_compiler): Store volatile
	floatregisters. (asm_patcher_wrapper): Likewise.
	(asm_handle_exception): Restore float registers.

	* src/vm/jit/m68k/codegen.h (M_FNEG): Added. (M_DNEG): Added.
	[3c46ebb18bc6]

	* tests/Makefile.am, tests/exception_restore_registers.java,
	tests/exception_restore_registers.output:
	* tests/exception_restore_registers.java: New test, tests if
	variables get restored in case of exceptions.

	* tests/exception_restore_registers.output: New file, expected
	output.

	* tests/Makefile.am: Added exception_restore_registers target.
	[4903c88ec794]

2007-05-07  twisti  <twisti>

	* configure.ac, src/vm/jit/mips/uclinux/Makefile.am,
	src/vm/jit/mips/uclinux/md-os.c:
	* configure.ac (AC_CONFIG_FILES): Added
	src/vm/jit/mips/uclinux/Makefile.

	* src/vm/jit/mips/uclinux: New directory.
	* src/vm/jit/mips/uclinux/md-os.c: New file.
	* src/vm/jit/mips/uclinux/Makefile.am: Likewise.
	[a2f9e9b4c127]

	* src/vm/jit/mips/codegen.c, src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/mips/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[98af0627c6d6]

	* configure.ac, src/vmcore/statistics.c:
	* configure.ac (AC_CHECK_HEADERS): Added sys/mman.h, sys/resource.h.
	(AC_CHECK_FUNCS): Added getrusage, mprotect.

	* src/vmcore/statistics.c [HAVE_SYS_TIME_H] (sys/time.h): Include
	conditionally. [HAVE_SYS_RESOURCE_H] (sys/resource.h): Likewise.
	(getcputime) [!HAVE_GETRUSAGE]: Return 0.
	[eb6879201b23]

	* src/native/vm/java_lang_Thread.h:
	* src/native/vm/java_lang_Thread.h (threads/native/threads.h):
	Removed.
	[81608585fa81]

2007-05-07  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h:
	* src/vm/jit/m68k/arch.h (SUPPORT_FLOAT): Enabled.
	(SUPPORT_FLOAT_CMP): Enabled. (SUPPORT_DOUBLE): Enabled.
	(SUPPORT_DOUBLE_CMP): Enabled.

	* src/vm/jit/m68k/codegen.c (ICMD_FCMPL): Implemented. (ICMD_DCMPL):
	Likewise. (ICMD_FCMPG): Likewise. (ICMD_DCMPG): Likewise.
	(ICMD_FMUL): Likewise. (ICMD_DMUL): Likewise. (ICMD_FDIV): Likewise.
	(ICMD_DDIV): Likewise. (ICMD_FADD): Likewise. (ICMD_DADD): Likewise.
	(ICMD_FSUB): Likewise. (ICMD_DSUB): Likewise. (ICMD_F2D): Likewise.
	(ICMD_D2F): Likewise. (ICMD_BUILTIN): Handle float return values.
	(codegen_emit_stub_native): Handle float values.

	* src/vm/jit/m68k/codegen.h (M_FCMP): Added. (M_BFEQ): Added.
	(M_BFLT): Added. (M_BFGT): Added. (M_BFUN): Added. (M_FADD): Added.
	(M_DADD): Added. (M_FSUB): Added. (M_DSUB): Added. (M_FMUL): Added.
	(M_DMUL): Added. (M_FDIV): Added. (M_DDIV): Added. (M_D2F): Added.
	(M_F2D): Added.
	[b351752b3490]

2007-05-07  twisti  <twisti>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_dump): Typo.
	[3bc0b63b21b8]

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_table_get): Made static and
	removed table lock. (threads_dump): Lock threads table.

	* src/threads/threads-common.h (threads_table_get): Removed.

	* src/threads/native/threads.c (threads_cast_stopworld): Lock
	threads table. (threads_cast_startworld): Likewise.
	[0087aafbce90]

2007-05-07  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md-asm.h:
	* src/vm/jit/sparc64/codegen.c (codegen_emit_stub_native): Fixed fp
	arg passing.
	* src/vm/jit/sparc64/md-abi.h: Likewise.

	* src/vm/jit/sparc64/asmpart.S (asm_vm_call_method): Likewise, but
	the other way around.
	* src/vm/jit/sparc64/md-asm.h: Likewise.
	[fd7ab22fe3d1]

2007-05-06  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/codegen.c (codegen_emit): Allocate 2 additional
	words in stackframe for long to double conversion.

	* src/vm/jit/m68k/asmpart.S (asm_handle_exception): Copy exception
	object into correct register.

	* src/vm/jit/m68k/codegen.h (M_FLD): Implemented. (M_DLD): Likewise.
	(M_FST): Likewise. (M_DST): Likewise. (M_FLTMOVE): Likewise.
	(M_INT2FLTMOVE): Likewise. (M_DBLMOVE): Likewise. (FCONST):
	Likewise.
	[0a407cecd8df]

2007-05-06  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/machine-instr.h:
	* src/vm/jit/sparc64/codegen.c: Implemented threads support.
	* src/vm/jit/sparc64/machine-instr.h: Likewise.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	[962f3ac2f269]

2007-05-05  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c (emit_patcher_stubs): Add thread support.
	(emit_exception_check_areg): Removed dead code.

	* src/vm/jit/m68k/codegen.c (codegen_emit): Add thread support.

	* src/vm/jit/m68k/asmpart.S (asm_patcher_wrapper): Likewise.
	[2f26a013bf14]

	* src/vmcore/linker.c:
	* linker.c (linker_compute_subclasses):
	threads_cast_[start|stop]world only available when using GC.
	[ddaa473162cc]

2007-05-05  pm  <pm>

	* contrib/vmlog/Makefile.am, src/vm/Makefile.am:
	* contrib/vmlog/Makefile.am (AM_CPPFLAGS): Add include directories
	for vmlog.
	 * src/vm/Makefile.am: Likewise.
	[0200182415ca]

2007-05-04  tbfg  <tbfg>

	* src/vmcore/linker.c:
	* linker.c (linker_compute_subclasses): Only call
	threads_cast_[start|stop]world when ENABLE_THREADS.
	[8a12809e3939]

2007-05-03  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/md.c:
	* src/vm/jit/m68k/md.c (md_stacktrace_get_returnaddress): Removed
	braindead address check and fixed the real bug.

	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method): Added float
	argument handling. (asm_call_jit_compiler): Fixed stack offset bug.
	[4d450bf43726]

2007-05-03  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/x86_64/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[58f763abf182]

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/i386/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[1ea512b3aa7e]

	* src/cacaoh/dummy.c, src/threads/critical.c, src/threads/critical.h,
	src/threads/native/threads.c, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vmcore/linker.c:
	* src/threads/critical.c (critical_compare): Renamed to
	critical_comparator. (critical_find): Removed.
	(critical_register_critical_section): Renamed to
	critical_section_register. (critical_find_restart_point): Call
	avl_find. (critical_register_asm_critical_sections): Call
	critical_section_register.

	* src/threads/critical.h (critical_section_node_t): Renamed members.
	(thread_restartcriticalsection): Renamed to
	md_critical_section_restart.

	* src/threads/native/threads.c (threads_cast_darwinstop): Call
	md_critical_section_restart. (threads_sigsuspend_handler): Likewise.

	* src/vmcore/linker.c (linker_compute_subclasses): Call
	threads_cast_{start,stop}world, removed LOCK_MONITOR_{ENTER,EXIT}.

	* src/cacaoh/dummy.c (threads_cast_stopworld): Added.
	(threads_cast_startworld): Likewise.

	* src/vm/jit/codegen-common.c (codegen_setup): Setup listcritical.
	(codegen_reset): Likewise. (codegen_critical_section_new): New
	function. (codegen_critical_section_start): Likewise.
	(codegen_critical_section_end): Likwise.
	(codegen_critical_section_finish): Likewise. (codegen_finish): Call
	codegen_critical_section_finish. (codegen_threadcritrestart):
	Removed. (codegen_threadcritstart): Likewise.
	(codegen_threadcritstop): Likewise.

	* src/vm/jit/codegen-common.h (codegen_critical_section_t): Renamed
	to critical_section_ref_t. (codegendata): Added listcritical,
	removed threadcrit, threadcritcurrent and threadcritcount.
	(CODEGEN_CRITICAL_SECTION_NEW, CODEGEN_CRITICAL_SECTION_START)
	(CODEGEN_CRITICAL_SECTION_END): Defined.

	* src/vm/jit/powerpc/codegen.c (codegen_emit): Use
	CODEGEN_CRITICAL_SECTION_* macros.

	* src/vm/jit/powerpc/linux/md-os.c (thread_restartcriticalsection):
	Renamed to md_critical_section_restart.
	[7f54f774046b]

	* src/mm/boehm-gc/include/gc.h:
	* src/mm/boehm-gc/include/gc.h (GC_HAVE_BUILTIN_BACKTRACE):
	Commented, we don't need it and uClibc doesn't have it.
	[52f7bbb43963]

	* src/toolbox/avl.c:
	* src/toolbox/avl.c (toolbox/logging.h): Added. (vm/global.h):
	Likewise. (vm/vm.h): Likewise. (avl_insert_intern): Use vm_abort
	instead of assert. (avl_insert): Removed debug code. (avl_dump): Use
	logging functions.
	[6c16dd030e43]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_start_native_call)
	[ENABLE_JAVASE]: This has to be ENABLE_JNI.
	(codegen_finish_native_call): Likewise.
	[3953e7c5db17]

	* src/toolbox/avl.c, src/toolbox/avl.h, src/vm/jit/codegen-common.c:
	* src/toolbox/avl.c (avl_insert_intern): Changed order of
	comparator-arguments. (avl_find): Likewise.

	* src/toolbox/avl.h (avl_comparator): Renamed arguments, to reflect
	the change.

	* src/vm/jit/codegen-common.c (methodtree_comparator): Likewise.
	[d7c021bc6103]

	* src/threads/critical.c, src/toolbox/avl.c, src/toolbox/avl.h,
	src/vm/jit/codegen-common.c:
	* src/toolbox/avl.h (avl_tree): Renamed to avl_tree_t. (avl_node):
	Renamed to avl_node_t.

	* src/toolbox/avl.c: Likewise.
	* src/threads/critical.c: Likewise.
	* src/vm/jit/codegen-common.c: Likewise.
	[78a3161d59f0]

	* contrib/check_dangerous_printf.pl:
	* contrib/check_dangerous_printf.pl: Removed this file in favor of
	pscan.
	[01c3063dac5a]

2007-05-03  tbfg  <tbfg>

	* src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/codegen.c (ICMD_CALOAD): Fixed.

	* src/vm/jit/m68k/patcher.c (*): Removed patching back of old
	opcodes from patcher_wrapper, moved into each patcher.
	(patcher_patch_back): Added.
	[b5bd8907ff04]

2007-05-02  tbfg  <tbfg>

	* src/vm/jit/m68k/codegen.c:
	* src/vm/jit/m68k/codegen.c (ICMD_IDIVPOW2): Fixed. (ICMD_IREM):
	Fixed. (ICMD_LASTORE): Use M_LST. (ICMD_DASTORE): Use M_LST.
	(ICMD_LALOAD): Use M_LLD. (ICMD_DALOAD): Use M_LLD.
	[e53aa985f343]

2007-05-02  twisti  <twisti>

	* src/native/vm/cldc1.1/java_lang_Float.c:
	* src/native/vm/cldc1.1/java_lang_Float.c (native/native.h):
	Removed. (native/include/java_lang_Float.h): Added.
	[54ab8fef4a97]

	* src/native/vm/cldc1.1/java_lang_Double.c:
	* src/native/vm/cldc1.1/java_lang_Double.c
	(native/include/java_lang_Double.h): Added. (longBitsToDouble):
	Fixed return type.
	[c178e4019030]

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_table_get_threads): New
	function.

	* src/threads/threads-common.h (threads_table_get_threads): Added.

	* src/threads/native/threads.c (threads_cast_sendsignals):
	Rewritten. (threads_cast_stopworld): Likewise.
	[eb798e490771]

2007-05-02  tbfg  <tbfg>

	* src/native/vm/cldc1.1/java_lang_Double.c:
	* java_lang_Double.c (Java_java_lang_Double_doubleToLongBits): Added
	missing JNIEnv* argument to signature.
	[f3210d71cb99]

2007-05-02  twisti  <twisti>

	* src/vmcore/class.c:
	* src/vmcore/class.c (class_load_attributes): Disable annotation
	loading for the release.
	[0af4700c23ad]

	* src/threads/native/threads.c, src/threads/threads-common.c,
	src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_preinit): Create and
	initialize the main-thread. (threads_table_init): Changed signature,
	insert main-thread and maintain a used list too.
	(threads_table_add): Use locking and maintain used list.
	(threads_table_remove): Likewise. (threads_table_get): New function.
	(threads_table_get_non_daemons): Likewise. (threads_table_first):
	Likewise. (threads_table_next): Likewise. [!NDEBUG]
	(threads_table_dump): Use log_* functions. (threads_dump): Use
	threads-table and functions.

	* src/threads/threads-common.h (threads_table_entry_t): Made a
	struct and renamed nextfree to next. (threads_table_get): Added
	(threads_table_get_non_daemons): Likewise. (threads_table_first):
	Likewise. (threads_table_next): Likewise. [!NDEBUG]
	(threads_table_dump): Likewise. (threads_impl_table_init): Likewise.
	(threads_table_lock): Likewise. (threads_table_unlock): Likewise.
	(threads_set_current_threadobject): Likewise.

	* src/threads/native/threads.c (threadlistlock): Removed.
	(threads_impl_preinit): Removed main-thread initialization code.
	(threads_impl_table_init): New function. (threads_table_lock): New
	function. (threads_table_unlock): Likewise. (threads_init): Get
	main-thread from threads-table and removed thread-list code.
	(threads_attach_current_thread): Likewise. (threads_detach_thread):
	Removed thread-list code. (threads_find_non_daemon_thread): Removed.
	(threads_join_all_threads): Use threads_table_get_non_daemons.
	[0700dff8d4c1]

	* src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Added uClibc support. (md_signal_handler_sigtrap): Likewise.
	(md_signal_handler_sigusr2): Likewise.
	(thread_restartcriticalsection): Likewise.
	[059aa5d19855]

2007-05-01  pm  <pm>

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/disass.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/tests/dacapo.status:
	* src/vm/jit/s390/md.c (md_dump_context): Added. Fatal signals now
	print the context and a stacktrace.
	* src/vm/jit/s390/emit.h (emit_restore_pv): Added. Fixes bug where
	REG_PV recalculation uses dseg value to recalculate REG_PV.
	* src/vm/jit/s390/emit.c: Likewise.
	* src/vm/jit/s390/codegen.h (N_RI, N_RI2): Test immediate operand for
	correct signedness.
	* src/vm/jit/s390/codegen.c (codegen_emit): Use emit_restore_pv for
	REG_PV recalculation/
	* src/vm/jit/s390/disass.c (disass_pseudo_instr): Fix formating.
	* src/vm/jit/s390/tests/dacapo.status: Added.
	[ff3277613b53]

2007-05-01  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h:
	* src/vm/jit/sparc64/codegen.h: Removed unused var_to_reg_int
	define.

	* src/vm/jit/sparc64/codegen.c: Fixed JIT float argument passing via
	stack.

	* src/vm/jit/sparc64/asmpart.S (asm_vm_call): Fixed integer argument
	passing via stack args.
	[e33c45b78466]

2007-05-01  pm  <pm>

	* src/vm/jit/s390/codegen.h:
	* src/vm/jit/s390/codegen.h (gen_bound_check,
	gen_nullptr_check_intern, gen_bound_check, N_LONG_0): Remove because
	obsolete.
	[d859db890556]

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/disass.c:
	* src/vm/jit/s390/codegen.c (codegen_emit): Use new emit_label and
	emit_label_* functions.
	* src/vm/jit/s390/disass.c (disass_pseudo_instr): Nicer formatting for
	ill pseudo instruction.
	[cc1ac3e37507]

	* src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.h (BRANCH_LABEL_6): Added.
	[b90fe58b8782]

2007-05-01  tbfg  <tbfg>

	* src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-os.c:
	* src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigill): Support
	EXCEPTION_HARDWARE_ARITHMETIC.

	* src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Use corret opcode for
	word forms.

	* src/vm/jit/m68k/codegen.c (ICMD_IDIVPOW2): Implemented.
	(ICMD_IREMPOW2): Implemented. (ICMD_ISHLCONST): Fixed.
	(ICMD_ISHRCONST): Fixed. (ICMD_IUSHRCONST): Fixed. (ICMD_SALOAD):
	Signextension fix. (ICMD_LALOAD): Implemented. (ICMD_LASTORE):
	Fixed. (ICMD_IASTORE): Fixed. (ICMD_MULITANEWARRAY): Fixed.

	* src/vm/jit/m68k/codegen.h (M_IADDX): Added. (M_IXOR): Fixed.
	(M_BCS): Fixed.
	[89edfe323c24]

2007-04-30  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S:
	* src/vm/jit/m68k/asmpart.S (asm_handle_exception): Restore
	registers correctly.
	[967120c3cdb9]

2007-04-30  twisti  <twisti>

	* src/vm/jit/inline/Makefile.am:
	* src/vm/jit/inline/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	[e8368e38b6ec]

2007-04-30  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/stacktrace.c:
	* src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Fixed.
	(emit_arithmetic_check): Implemented.

	* src/vm/jit/m68k/md.c (md_get_method_patch_address): Changed
	invoking register. (md_stacktrace_get_returnaddress): Fix for
	linking words on stack.

	* src/vm/jit/m68k/codegen.c (IUSHRCONST): Fix. (ICMD_IOR):
	Implemented. (ICMD_IORCONST): Likewise. (ICMD_IXOR): Likewise.
	(ICMD_IXORCONST): Likewise. (ICMD_INVOKEVIRTUAL): Changed invoking
	register. (ICMD_INVOKEINTERFACE): Likewise.

	* src/vm/jit/m68k/patcher.c (patcher_invokevirtual): Changed
	invoking register.

	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method_exception_handler):
	Proper stack restauration. (L_asm_call_jit_compiler_exception):
	Implemented. (asm_patcher_wrapper): Fixses.
	(L_asm_patcher_wrapper_exception): Implemented.

	* src/vm/jit/m68k/codegen.h (M_IXOR): Added. (M_IOR_IMM): Added.
	(M_IXOR_IMM): Added.

	* src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframe):
	Comment and further m68k stuff.
	[2ac9ff4e6c4d]

2007-04-29  pm  <pm>

	* src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/disass.c, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/machine-instr.h,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390
	/md-asm.h, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/emit.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/machine-instr.h,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/arch.h, src/vm/jit/s390
	/md-asm.h, src/vm/jit/s390/disass.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md-abi.c: Adapted S390
	port to changes from branches/twisti (hardware exceptions,
	emit_branch, abi_registers_*), jctest works again. Cleaned up almost
	all dead x86_64 code.
	[2ec074267d97]

2007-04-28  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S:
	* src/vm/jit/sparc64/asmpart.S (asm_call_jit_compiler): Fixed stack
	alignement in first save.
	[65770b01fe81]

2007-04-27  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/linux/md-os.h,
	src/vm/jit/m68k/machine-instr.h, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/emit.c (emit_arrayindexoutofbounds_check): Fixed.
	* src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigill): AIOOB
	fixed. Editor boiler plate added.

	* src/vm/jit/m68k/linux/md-os.h: Editor boiler plate.

	* src/vm/jit/m68k/linux/md-abi.c: Likewise.

	* src/vm/jit/m68k/md.c: Likewise.

	* src/vm/jit/m68k/machine-instr.h: Likewise.

	* src/vm/jit/m68k/patcher.c: Editor boiler plate.
	(patcher_invokeinterface): Implemented. (patcher_get_putfield):
	Implemented. (patcher_resolve_class): Implemented.
	(patcher_get_putstatic): Implemented.

	* src/vm/jit/m68k/codegen.c: Editor boiler plate. (ICMD_GETSTATIC):
	Added patcher. (ICMD_AASTORE): Fixed.

	* src/vm/jit/m68k/asmpart.S: Editor boiler plate.
	(asm_vm_call_method_exception_handler): Fixed used register. Return
	values in %d0 and %a0 as gcc sometimes expects pointers in %a0.
	[5b6400d328af]

2007-04-27  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/solaris/md-os.c:
	* src/vm/jit/sparc64/emit.c: Keeping stack 16-byte aligned when
	calling C/native functions from the stack. (Solaris requires this)
	* src/vm/jit/sparc64/codegen.c: Likewise.
	* src/vm/jit/sparc64/codegen.h: Likewise.

	* src/vm/jit/sparc64/md-abi.c: Removed zero sized abi_register_*
	arrays. (not allowed in ISO C)

	* src/vm/jit/sparc64/solaris/md-os.c: Preliminary hardware exception
	handling. (untested)
	[e70daa591465]

2007-04-26  twisti  <twisti>

	* src/vm/jit/inline/inline.h, src/vm/jit/jit.c:
	* src/vm/jit/inline/inline.h (config.h): Added. (inline_inline):
	Likewise.

	* src/vm/jit/jit.c (threads/threads-common.h): Added.
	[ENABLE_INLINING] (vm/jit/inline/inline.h): Likewise.
	[ENABLE_THREADS] (threads/native/threads.h): Removed.
	[9544b7246cc7]

	* src/vm/vm.c:
	* src/vm/vm.c [ENABLE_THREADS] (threads/native/threads.h): Removed.
	(threads/threads-common.h): Added.
	[13c16140a43d]

	* src/native/vm/java_lang_Thread.c:
	* src/native/vm/java_lang_Thread.c: Set Id keyword.
	[a0083a667694]

	* src/native/vm/java_lang_Thread.c:
	* src/native/vm/java_lang_Thread.c (start): Renamed
	threads_start_javathread to threads_thread_start.
	[e25c3f63b5f1]

	* src/mm/memory.c, src/threads/native/threads.c, src/threads/threads-
	common.c, src/threads/threads-common.h, src/vm/finalizer.c,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/signal.c:
	* src/threads/threads-common.c (threads_thread_create_internal):
	Renamed to threads_thread_start_internal and start the thread.
	(threads_start_javathread): Renamed to threads_thread_start.
	* src/threads/threads-common.h: Likewise.

	* src/threads/native/threads.c (threads_start_thread): Renamed to
	threads_impl_thread_start.

	* src/mm/memory.c (thread_memory): Removed. (memory_start_thread):
	Call threads_thread_start_internal.

	* src/vm/finalizer.c (thread_finalizer): Removed.
	(finalizer_start_thread): Call threads_thread_start_internal.

	* src/vm/signal.c (thread_signal): Removed. (signal_start_thread):
	Call threads_thread_start_internal.

	* src/vm/jit/optimizing/profile.c (thread_profile): Removed.
	(profile_start_thread): Call threads_thread_start_internal.

	* src/vm/jit/optimizing/recompile.c (thread_recompile): Removed.
	(recompile_start_thread): Call threads_thread_start_internal.
	[cf0ec721a423]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c (threads/critical.h): Added.
	(threads/native/threads.h): Removed. (threads_table): Added.
	(threads_preinit): New function. (threads_table_init): Moved from
	implementation file. (threads_table_add): Likewise.
	(threads_table_remove): Likewise. (threads_table_dump): Likewise.

	* src/threads/threads-common.h (threads_table_entry_t)
	(threads_table_t): Added. (threads_preinit): Likewise.
	(threads_table_add): Likewise. (threads_table_remove): Likewise.
	(threads_impl_preinit): Likewise. (threads_init_threadobject):
	Likewise.

	* src/threads/native/threads.c (threads_table): Removed.
	(threads_preinit): Renamed to threads_impl_preinit.
	(threads_table_init): Removed. (threads_table_add): Likewise.
	(threads_table_remove): Likewise. (threads_table_dump): Likewise.

	* src/threads/native/threads.h (threads_table_entry_t)
	(threads_table_t): Removed. (threads_preinit): Likewise.
	[98b0208c933b]

2007-04-25  stefan  <stefan>

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: added threads/threads-common.h,
	removed vm/jit/i386/md-abi.h
	[b40b6e3adec2]

	* src/vm/jit/i386/darwin/md-os.c:
	* src/vm/jit/i386/darwin/md-os.c: attempt at porting the exception
	changes (see r7596 & r7648).
	[e46dd5485bb0]

2007-04-25  twisti  <twisti>

	* src/threads/lock-common.h, src/threads/threads-common.c, src/threads
	/threads-common.h:
	* src/threads/lock-common.h (threads/threads-common.h): Removed that
	header again and added a comment about not including thread headers.

	* src/threads/threads-common.c (threads_start_javathread): Reverted.
	* src/threads/threads-common.h (threads_start_javathread): Likewise.
	[823fb8fdda16]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_dump) [!SIZEOF_VOID_P == 8]:
	Fixed warning.
	[b96d90a7e7d5]

	* src/threads/lock-common.h, src/threads/threads-common.c, src/threads
	/threads-common.h:
	* src/threads/threads-common.c (threads_start_javathread): Changed
	signature.

	* src/threads/lock-common.h (threads/threads-common.h): Added.
	[ENABLE_THREADS]: Only define functions when threads are enabled.

	* src/threads/threads-common.h (native/include/java_lang_Thread.h):
	Removed. [ENABLE_THREADS]: Only define functions when threads are
	enabled. (threads_start_javathread): Changed signature.
	[744b5d438408]

	* src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c:
	* src/vm/jit/mips/codegen.c: Changed lock includes.
	* src/vm/jit/mips/emit.c: Likewise.
	[901b6ff89903]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/codegen.c: Changed lock include.
	* src/vm/jit/arm/emit.c: Likewise.
	[9fc8e573ad28]

	* src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_load): Use switch-case instead of if-
	else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	[a191766f4557]

	* src/vm/jit/alpha/emit.c:
	* src/vm/jit/alpha/emit.c: Set Id keyword.
	[b4b601dd0a67]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c:
	* src/vm/jit/alpha/codegen.c: Changed lock include.
	* src/vm/jit/alpha/emit.c: Likewise.
	[06bc88907312]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit_stub_native): Use
	md->params to save and restore argument registers.
	[1cf56ebf1324]

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c:
	* src/vm/jit/i386/codegen.c: Changed lock include.
	* src/vm/jit/i386/emit.c: Likewise.
	[3d8268805f33]

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c:
	* src/vm/jit/powerpc64/codegen.c: Changed lock includes.
	* src/vm/jit/powerpc64/emit.c: Likewise.
	[829ba893ab30]

	* src/vm/jit/powerpc/emit.c:
	* src/vm/jit/powerpc/emit.c: Set Id keyword.
	[3970210193ef]

	* src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c:
	* src/vm/jit/powerpc/codegen.c: Fixed lock include.
	* src/vm/jit/powerpc/emit.c: Likewise.
	[6d8fd28976c5]

	* src/vm/jit/powerpc/linux/md-abi.c:
	* src/vm/jit/powerpc/linux/md-abi.c (abi_registers_float_temporary):
	Fixed number of registers.
	[43002ce63f4b]

	* src/mm/memory.c, src/native/jni.c, src/native/native.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Thread.c,
	src/threads/Makefile.am, src/threads/lock-common.h,
	src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/none/lock.h, src/threads/threads-common.c,
	src/toolbox/avl.c, src/toolbox/hashtable.c, src/toolbox/list.c,
	src/vm/builtin.c, src/vm/finalizer.c, src/vm/initialize.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/patcher.h, src/vm/jit/show.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/string.c, src/vmcore/class.c, src/vmcore/classcache.c,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/suck.c,
	src/vmcore/utf8.c:
	* src/threads/lock-common.h: New file.

	* src/threads/native/lock.h: Removed function prototypes.
	* src/threads/none/lock.h (LOCK_INIT_OBJECT_LOCK): Added.

	* src/mm/memory.c, src/native/jni.c, src/native/native.c,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Thread.c,
	src/threads/Makefile.am, src/threads/native/threads.c, src/threads
	/threads-common.c, src/toolbox/avl.c, src/toolbox/hashtable.c,
	src/toolbox/list.c, src/vm/builtin.c, src/vm/finalizer.c,
	src/vm/initialize.c, src/vm/jit/inline/inline.c, src/vm/jit/jit.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/patcher.h, src/vm/jit/show.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/string.c, src/vmcore/class.c, src/vmcore/classcache.c,
	src/vmcore/linker.c, src/vmcore/loader.c, src/vmcore/suck.c,
	src/vmcore/utf8.c: Updated headers.
	[70b6420148e2]

	* src/mm/memory.h:
	* src/mm/memory.h: Updated copyright header.
	[c16a6646ceb2]

	* src/mm/memory.c, src/threads/native/threads.c, src/threads/threads-
	common.c, src/threads/threads-common.h, src/vm/finalizer.c,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/signal.c:
	* src/threads/threads-common.c (threads_create_thread): Renamed to
	threads_thread_create_internal and a new function.
	(threads_start_javathread): Use threads_create_thread.

	* src/threads/threads-common.h (threads_create_thread): Changed
	signature. (threads_thread_create_internal): Added.

	* src/threads/native/threads.c (threads_set_current_threadobject):
	Made non-static. (threads_init_threadobject): Likewise, use
	threads_create_thread. (threads_init): Cleanup.
	(threads_startup_thread): Likewise. (threads_attach_current_thread):
	Use threads_create_thread.

	* src/vm/jit/optimizing/profile.c (profile_start_thread): Replaced
	threads_create_thread with threads_thread_create_internal.
	* src/vm/jit/optimizing/recompile.c (recompile_start_thread):
	Likewise.
	* src/vm/signal.c (signal_start_thread): Likewise.
	* src/vm/finalizer.c (finalizer_start_thread): Likewise.
	* src/mm/memory.c (memory_start_thread): Likewise.
	[052522c1db52]

2007-04-25  stefan  <stefan>

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (linker_init): added missing
	lock_init_object_lock.
	[191964287e88]

2007-04-25  twisti  <twisti>

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_preinit): We always need
	variable t.
	[b88c5990edf2]

	* src/native/native.c:
	* src/native/native.c (native/include/java_lang_Object.h): Include
	always. [ENABLE_JAVAME_CLDC1_1]
	(native/include/com_sun_cldc_io_ResourceInputStream.h)
	(native/include/com_sun_cldc_io_j2me_socket_Protocol.h): Added.
	[f994e6222404]

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_init): Use variable t
	instead of mainthreadobj->object, makes code simpler.
	[a0a835dd24fe]

	* src/threads/native/threads.c, src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_create_thread)
	[ENABLE_GC_BOEHM]: Use GCNEW_UNCOLLECTABLE.
	(threads_start_javathread) [ENABLE_GC_BOEHM]: Likewise.

	* src/threads/native/threads.c (threads_preinit) [ENABLE_GC_BOEHM]:
	Likewise. (threads_init): Removed resizing-of-threadobject code, we
	don't need it anymore. (threads_attach_current_thread)
	[ENABLE_GC_BOEHM]: Use GCNEW_UNCOLLECTABLE. (threads_detach_thread)
	[ENABLE_GC_BOEHM]: Use GCFREE.
	[af7e5b77a250]

2007-04-24  twisti  <twisti>

	* src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c: Set Id keyword.
	* src/threads/threads-common.h: Likewise.
	[ae9e95a7b28d]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_dump): Also print integer
	thread id, so it's easier to compare with the ones from gdb.
	[249c326e0a4b]

2007-04-24  tbfg  <tbfg>

	* m4/threads.m4:
	* threads.m4: Fixed a typo
	[7a9720e29965]

2007-04-23  twisti  <twisti>

	* contrib/.cvsignore, doc/.cvsignore, doc/handbook/.cvsignore,
	man/.cvsignore, src/.cvsignore, src/cacao/.cvsignore,
	src/cacaoh/.cvsignore, src/fdlibm/.cvsignore, src/lib/.cvsignore,
	src/mm/.cvsignore, src/mm/boehm-gc/.cvsignore, src/mm/boehm-
	gc/doc/.cvsignore, src/mm/boehm-gc/include/.cvsignore, src/mm/cacao-
	gc/.cvsignore, src/native/.cvsignore, src/native/include/.cvsignore,
	src/native/jvmti/.cvsignore, src/native/tools/.cvsignore,
	src/native/vm/.cvsignore, src/native/vm/cldc1.1/.cvsignore,
	src/native/vm/gnu/.cvsignore, src/scripts/.cvsignore,
	src/threads/.cvsignore, src/threads/native/.cvsignore,
	src/threads/none/.cvsignore, src/toolbox/.cvsignore,
	src/vm/.cvsignore, src/vm/jit/.cvsignore,
	src/vm/jit/allocator/.cvsignore, src/vm/jit/alpha/.cvsignore,
	src/vm/jit/alpha/freebsd/.cvsignore,
	src/vm/jit/alpha/linux/.cvsignore, src/vm/jit/arm/.cvsignore,
	src/vm/jit/arm/linux/.cvsignore, src/vm/jit/i386/.cvsignore,
	src/vm/jit/i386/darwin/.cvsignore,
	src/vm/jit/i386/freebsd/.cvsignore,
	src/vm/jit/i386/linux/.cvsignore, src/vm/jit/inline/.cvsignore,
	src/vm/jit/intrp/.cvsignore, src/vm/jit/loop/.cvsignore,
	src/vm/jit/m68k/.cvsignore, src/vm/jit/m68k/linux/.cvsignore,
	src/vm/jit/mips/.cvsignore, src/vm/jit/mips/irix/.cvsignore,
	src/vm/jit/mips/linux/.cvsignore, src/vm/jit/optimizing/.cvsignore,
	src/vm/jit/parisc/.cvsignore, src/vm/jit/parisc/linux/.cvsignore,
	src/vm/jit/powerpc/.cvsignore, src/vm/jit/powerpc/darwin/.cvsignore,
	src/vm/jit/powerpc/linux/.cvsignore,
	src/vm/jit/powerpc/netbsd/.cvsignore,
	src/vm/jit/powerpc64/.cvsignore,
	src/vm/jit/powerpc64/linux/.cvsignore, src/vm/jit/s390/.cvsignore,
	src/vm/jit/schedule/.cvsignore, src/vm/jit/sparc64/.cvsignore,
	src/vm/jit/sparc64/linux/.cvsignore,
	src/vm/jit/sparc64/solaris/.cvsignore, src/vm/jit/tools/.cvsignore,
	src/vm/jit/verify/.cvsignore, src/vm/jit/x86_64/.cvsignore,
	src/vm/jit/x86_64/freebsd/.cvsignore,
	src/vm/jit/x86_64/linux/.cvsignore, src/vmcore/.cvsignore,
	tests/.cvsignore, tests/regression/.cvsignore,
	tests/regression/codepatching/.cvsignore,
	tests/regression/native/.cvsignore, tests/stack/.cvsignore:
	* contrib/.cvsignore, doc/.cvsignore, doc/handbook/.cvsignore,
	man/.cvsignore, src/.cvsignore, src/cacao/.cvsignore,
	src/cacaoh/.cvsignore, src/fdlibm/.cvsignore, src/lib/.cvsignore,
	src/mm/.cvsignore, src/mm/boehm-gc/.cvsignore, src/mm/boehm-
	gc/doc/.cvsignore, src/mm/boehm-gc/include/.cvsignore, src/mm/cacao-
	gc/.cvsignore, src/native/.cvsignore, src/native/include/.cvsignore,
	src/native/jvmti/.cvsignore, src/native/tools/.cvsignore,
	src/native/vm/.cvsignore, src/native/vm/cldc1.1/.cvsignore,
	src/native/vm/gnu/.cvsignore, src/scripts/.cvsignore,
	src/threads/.cvsignore, src/threads/none/.cvsignore,
	src/threads/posix/.cvsignore, src/toolbox/.cvsignore,
	src/vm/.cvsignore, src/vm/jit/.cvsignore,
	src/vm/jit/allocator/.cvsignore, src/vm/jit/alpha/.cvsignore,
	src/vm/jit/alpha/freebsd/.cvsignore,
	src/vm/jit/alpha/linux/.cvsignore, src/vm/jit/arm/.cvsignore,
	src/vm/jit/arm/linux/.cvsignore, src/vm/jit/i386/.cvsignore,
	src/vm/jit/i386/cygwin/.cvsignore,
	src/vm/jit/i386/darwin/.cvsignore,
	src/vm/jit/i386/freebsd/.cvsignore,
	src/vm/jit/i386/linux/.cvsignore, src/vm/jit/inline/.cvsignore,
	src/vm/jit/intrp/.cvsignore, src/vm/jit/loop/.cvsignore,
	src/vm/jit/m68k/.cvsignore, src/vm/jit/m68k/linux/.cvsignore,
	src/vm/jit/mips/.cvsignore, src/vm/jit/mips/irix/.cvsignore,
	src/vm/jit/mips/linux/.cvsignore, src/vm/jit/optimizing/.cvsignore,
	src/vm/jit/parisc/.cvsignore, src/vm/jit/parisc/linux/.cvsignore,
	src/vm/jit/powerpc/.cvsignore, src/vm/jit/powerpc/darwin/.cvsignore,
	src/vm/jit/powerpc/linux/.cvsignore,
	src/vm/jit/powerpc/netbsd/.cvsignore,
	src/vm/jit/powerpc64/.cvsignore,
	src/vm/jit/powerpc64/linux/.cvsignore, src/vm/jit/s390/.cvsignore,
	src/vm/jit/schedule/.cvsignore, src/vm/jit/sparc64/.cvsignore,
	src/vm/jit/sparc64/linux/.cvsignore,
	src/vm/jit/sparc64/solaris/.cvsignore, src/vm/jit/tools/.cvsignore,
	src/vm/jit/verify/.cvsignore, src/vm/jit/x86_64/.cvsignore,
	src/vm/jit/x86_64/freebsd/.cvsignore,
	src/vm/jit/x86_64/linux/.cvsignore, src/vmcore/.cvsignore,
	tests/.cvsignore, tests/regression/.cvsignore,
	tests/regression/codepatching/.cvsignore,
	tests/regression/jasmin/.cvsignore,
	tests/regression/native/.cvsignore, tests/stack/.cvsignore: Removed.
	[9cfa2b402d78]

	* .cvsignore:
	* .cvsignore: Removed.
	[de2254a5a0f4]

	* configure.ac, m4/threads.m4:
	* configure.ac: Removed --enable-threads checks and call instead
	AC_CHECK_ENABLE_THREADS.
	* m4/threads.m4: New file.
	[fd1ace174105]

2007-04-23  michi  <michi>

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_find_replacement_point_for_pc):
	Added assertion. (replace_recover_source_state) [ENABLE_GC_CACAO]:
	Now recovers native frames.
	[353654378d75]

	* configure.ac, contrib/Makefile.am, contrib/vmlog/Makefile,
	contrib/vmlog/README, contrib/vmlog/vmlog_cacao.patch,
	src/cacaoh/dummy.c, src/mm/cacao-gc/final.c, src/mm/cacao-
	gc/final.h, src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/threads/native/Makefile.am, src/threads/native/lock.c,
	src/threads/threads-common.h, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/Makefile.am, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/jit/Makefile.am, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/emit-common.c,
	src/vm/jit/intrp/asmpart.c, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/linux/md-os.h,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/optimizing/recompile.h, src/vm/jit/powerpc/darwin/md-
	abi.c, src/vm/jit/powerpc/darwin/md-abi.h, src/vm/jit/powerpc/darwin
	/md-os.c, src/vm/jit/replace.c, src/vm/jit/sparc64/arch.h,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md.c, src/vm/jit/stacktrace.c,
	src/vm/properties.c, src/vm/signal.c, src/vm/vm.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/suck.c,
	src/vmcore/suck.h, tests/regression/resolving/Makefile.am:
	Merged revisions 7766-7796 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7769 | tbfg | 2007-04-19 17:01:49 +0200 (Thu, 19 Apr
	2007) | 16 lines

	 * src/vm/jit/m68k/linux/md-abi.c (abi_registers_integer_saved):
	Fixed. (abi_registers_float_saved): Fixed.

	 * src/vm/jit/m68k/emit.c (emit_classcast_check): Fixed.

	 * src/vm/jit/m68k/codegen.c (codegen_emit): Temporary hacked a
	field for saved adr registers until real patch will be done.
	(ICMD_INSTANCEOF): Fixed. (ICMD_CHECKCAST): Fixed.
	(codegen_emit_stub_compiler): Removed useless code.

	 * src/vm/jit/m68k/asmpart.S (L_asm_handle_exception_not_catched):
	Implemented.

	 * src/vm/jit/m68k/codegen.h (M_BLS): Added. ........ r7770 |
	twisti | 2007-04-19 21:39:06 +0200 (Thu, 19 Apr 2007) | 20 lines

	 * src/vm/jit/powerpc/darwin/md-abi.h (REG_FA0, REG_FA1): Added.
	(REG_A0_A1_PACKED, REG_A2_A3_PACKED): Likewise.

	 * src/vm/jit/powerpc/darwin/md-os.c [ENABLE_THREADS]
	(threads/native/threads.h): Added. (md_signal_handler_sigsegv):
	Changed for hardware-exceptions. (md_signal_handler_sigtrap): New
	function.

	 * src/vm/jit/powerpc/darwin/md-abi.c (vm/descriptor.h): Changed to
	vmcore/descriptor.h. (regs): Renamed to
	abi_registers_integer_name. (abi_registers_integer_argument):
	Added. (abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise.
	(abi_registers_float_argument): Likewise.
	(abi_registers_float_saved): Likewise.
	(abi_registers_float_temporary): Likewise. (md_param_alloc): Use
	new register arrays. (md_param_alloc_native): New function.
	........ r7771 | twisti | 2007-04-19 21:41:08 +0200 (Thu, 19 Apr
	2007) | 5 lines

	 * src/cacaoh/dummy.c (exceptions_print_current_exception): Added
	abort. (exceptions_throw_outofmemoryerror): Removed.
	(exceptions_throw_illegalaccessexception): Likewise. ........
	r7772 | twisti | 2007-04-19 21:43:39 +0200 (Thu, 19 Apr 2007) | 5
	lines

	 * src/vm/signal.c (assert.h): Added. (vm/exceptions.h):
	Likewise. [ENABLE_STATISTICS] (vmcore/statistics.h): Likewise.
	(signal_init): Added hardware-exception assert. ........ r7773 |
	twisti | 2007-04-19 21:44:54 +0200 (Thu, 19 Apr 2007) | 3 lines

	 * src/vm/exceptions.h: Added a comment about the hardware-
	exception assert in signal_init. ........ r7774 | twisti |
	2007-04-19 21:58:08 +0200 (Thu, 19 Apr 2007) | 2 lines

	 * configure.ac (AC_INIT): Changed version to 0.98rc. ........
	r7775 | twisti | 2007-04-19 21:59:17 +0200 (Thu, 19 Apr 2007) | 3
	lines

	 * tests/regression/resolving/Makefile.am (check): Added missing
	JAVAFLAGS. ........ r7776 | twisti | 2007-04-19 23:31:47 +0200
	(Thu, 19 Apr 2007) | 3 lines

	 * src/vm/signal.c (signal_thread): Check return value of sig*
	functions. ........ r7777 | twisti | 2007-04-20 13:21:38 +0200
	(Fri, 20 Apr 2007) | 2 lines

	 * src/threads/threads-common.h (native/jni.h): Added. ........
	r7778 | twisti | 2007-04-20 14:40:05 +0200 (Fri, 20 Apr 2007) | 3
	lines

	 * src/vm/jit/codegen-common.c (codegen_finish_native_call): #ifdef
	lrt and plrt. Don't set lrt, we don't need it. ........ r7779 |
	twisti | 2007-04-20 14:48:55 +0200 (Fri, 20 Apr 2007) | 2 lines

	 * src/vm/vm.c (vm_create): Print unknown -verbose option. ........
	r7780 | twisti | 2007-04-20 14:53:45 +0200 (Fri, 20 Apr 2007) | 2
	lines

	 * src/vm/vm.c (version): Print libjvm.so path. ........ r7781 |
	twisti | 2007-04-20 15:06:45 +0200 (Fri, 20 Apr 2007) | 4 lines

	 * src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c (loadLibrary):
	Fixed string-internal warnings.
	  * src/native/vm/cldc1.1/java_lang_System.c (getProperty0): Likewise.
	........ r7782 | twisti | 2007-04-20 15:09:36 +0200 (Fri, 20 Apr
	2007) | 2 lines

	 * src/vm/vm.c: Changed header order to prevent a warning. ........
	r7783 | twisti | 2007-04-20 15:28:27 +0200 (Fri, 20 Apr 2007) | 16
	lines

	 * src/toolbox/list.h (listnode): Renamed to listnode_t. (list):
	Renamed to list_t.

	 * src/toolbox/list.c, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/emit-common.c,
	src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c,
	src/vm/jit/optimizing/recompile.h, src/vm/properties.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/suck.c,
	src/vmcore/suck.h: Likewise. ........ r7784 | twisti | 2007-04-20
	15:51:41 +0200 (Fri, 20 Apr 2007) | 9 lines

	 * src/toolbox/list.h (list_t): Added size.

	 * src/toolbox/list.c (list_create): Initialize size.
	(list_create_dump): Likewise. (list_add_first): Increase size.
	(list_add_last_unsynced): Likewise. (list_add_before): Likewise.
	(list_remove_unsynced): Decrease size. ........ r7785 | edwin |
	2007-04-21 12:55:30 +0200 (Sat, 21 Apr 2007) | 6 lines

	 * src/vm/jit/replace.c, src/vm/jit/intrp/asmpart.c, src/vm/jit
	/codegen-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/vm.c, src/threads/native/lock.c (ENABLE_VMLOG): Applied the
	vmlog patch and wrapped all inserted code with #if
	defined(ENABLE_VMLOG). ........ r7786 | edwin | 2007-04-21
	14:37:47 +0200 (Sat, 21 Apr 2007) | 6 lines

	 * configure.ac (--enable-vmlog): New configure option.

	 * src/vm/jit/Makefile.am, src/vm/Makefile.am,
	src/threads/native/Makefile.am (AM_CPPFLAGS): Added -I for vmlog
	includes. ........ r7787 | edwin | 2007-04-21 14:48:14 +0200 (Sat,
	21 Apr 2007) | 3 lines

	 * contrib/vmlog/vmlog_cacao.patch: Removed. It is no longer
	needed.
	  * contrib/vmlog/README: Updated for CACAO's --enable-vmlog. ........
	r7788 | edwin | 2007-04-21 18:26:34 +0200 (Sat, 21 Apr 2007) | 2
	lines

	 * contrib/vmlog/Makefile: Renamed to maintain.mk. ........ r7789
	| edwin | 2007-04-21 18:42:52 +0200 (Sat, 21 Apr 2007) | 4 lines

	 * configure.ac: Generate vmlog Makefiles.
	  * contrib/Makefile.am: Added vmlog to SUBDIRS.
	  * contrib/vmlog/Makefile.am, contrib/vmlog/t/Makefile.am: New files.
	........ r7790 | edwin | 2007-04-21 20:56:43 +0200 (Sat, 21 Apr
	2007) | 3 lines

	 * tests/regression/resolving/Makefile.am: Added "-classpath ." to
	javac options so the tests work with ecj out-of-the-box. ........
	r7791 | ajordan | 2007-04-22 17:55:51 +0200 (Sun, 22 Apr 2007) | 13
	lines

	 * src/vm/jit/sparc64/arch.h: Properly activated all FP features
	SPARC64 supports in hardware.

	 * src/vm/jit/sparc64/asmpart.S: Added functions to read/write the
	FP state register.
	  * src/vm/jit/sparc64/md.c: Added prototypes here.

	 * src/vm/jit/sparc64/codegen.h: Added 'branch on FP condition
	codes' macros.

	 * src/vm/jit/sparc64/emit.c (emit_verbosecall_enter): Fixed FP
	argument passing.

	 * src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed FP conversion
	functions to (a) use unique slots in the data segment (doh!), (b)
	catch the case where NaN is converted to an integer value. (JVMS and
	SPARC do not inherently agree here). ........ r7792 | tbfg |
	2007-04-22 22:02:05 +0200 (Sun, 22 Apr 2007) | 31 lines

	 * src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigsegv):
	Implemented. (md_signal_handler_sigill): More exceptions handled.
	Some fixes.

	 * src/vm/jit/m68k/linux/md-os.h
	(M68K_EXCEPTION_HARDWARE_NULLPOINTER): Used instead of
	EXCEPTION_HARDWARE_NULLPOINTER, because a trap with value #0 will
	not be taken.

	 * src/vm/jit/m68k/emit.c (emit_load_[low|high]): Fixed assertion.
	(emit_arrayindexoutofbounds_check): Implemented.
	(emit_nullpointer_check): Implemented.
	(emit_exception_check_ireg): Renamed emit_exception_check.
	(emit_exception_check_areg): Disabled code.
	(emit_exception_check): Implemented.

	 * src/vm/jit/m68k/codegen.c (ICMD_LALOAD): Implemented.
	(ICMD_FALOAD): Implemented. (ICMD_DALOAD): Implemented.
	(ICMD_LASTORE): Implemented. (ICMD_FASTORE): Implemented.
	(ICMD_DASTORE): Implemented. (ICMD_BUILTIN): Exception check
	enabled. (ICMD_MULTIANEWARRAY): Implemented.
	(codegen_emit_stub_native): Exception check implemented.

	 * src/vm/jit/m68k/asmpart.S (asm_handle_nat_exception): Symbol
	exported and implemented.

	 * src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframe):
	More m68k fixes. ........ r7793 | twisti | 2007-04-23 16:29:48
	+0200 (Mon, 23 Apr 2007) | 3 lines

	 * src/vm/signal.c (signal_thread): Don't check for an error on
	sigwait (revisit this patch with the exact-GC). ........ r7795 |
	twisti | 2007-04-23 22:03:38 +0200 (Mon, 23 Apr 2007) | 2 lines

	 * src/vm/builtin.h (md-abi.h): Added. ........ r7796 | twisti |
	2007-04-23 22:04:44 +0200 (Mon, 23 Apr 2007) | 4 lines

	 * configure.ac: Removed all classpath related checks and made
	functions for them.
	  * m4/classpath.m4: New file. ........
	[260c33906953]

2007-04-23  twisti  <twisti>

	* configure.ac, m4/classpath.m4:
	* configure.ac: Removed all classpath related checks and made
	functions for them.
	* m4/classpath.m4: New file.
	[a6ecb4be61c9]

	* src/vm/builtin.h:
	* src/vm/builtin.h (md-abi.h): Added.
	[27f5944a2194]

2007-04-23  michi  <michi>

	* configure.ac, contrib/vmlog/Makefile, contrib/vmlog/README,
	contrib/vmlog/vmlog_cacao.patch, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/Makefile.am, src/vm/exceptions.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/powerpc/darwin/md-os.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit): Builtin stubs are
	called for ICMD_BUILTIN if available.

	* src/vm/jit/i386/codegen.c (codegen_emit): Likewise.
	(codegen_emit_stub_builtin): Adapted to new signature and a bugfix.
	[f8c80a7d7861]

2007-04-23  twisti  <twisti>

	* src/vm/signal.c:
	* src/vm/signal.c (signal_thread): Don't check for an error on
	sigwait (revisit this patch with the exact-GC).
	[316672080a9f]

2007-04-22  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/linux/md-os.h,
	src/vm/jit/stacktrace.c:
	* src/vm/jit/m68k/linux/md-os.c (md_signal_handler_sigsegv):
	Implemented. (md_signal_handler_sigill): More exceptions handled.
	Some fixes.

	* src/vm/jit/m68k/linux/md-os.h
	(M68K_EXCEPTION_HARDWARE_NULLPOINTER): Used instead of
	EXCEPTION_HARDWARE_NULLPOINTER, because a trap with value #0 will
	not be taken.

	* src/vm/jit/m68k/emit.c (emit_load_[low|high]): Fixed assertion.
	(emit_arrayindexoutofbounds_check): Implemented.
	(emit_nullpointer_check): Implemented. (emit_exception_check_ireg):
	Renamed emit_exception_check. (emit_exception_check_areg): Disabled
	code. (emit_exception_check): Implemented.

	* src/vm/jit/m68k/codegen.c (ICMD_LALOAD): Implemented.
	(ICMD_FALOAD): Implemented. (ICMD_DALOAD): Implemented.
	(ICMD_LASTORE): Implemented. (ICMD_FASTORE): Implemented.
	(ICMD_DASTORE): Implemented. (ICMD_BUILTIN): Exception check
	enabled. (ICMD_MULTIANEWARRAY): Implemented.
	(codegen_emit_stub_native): Exception check implemented.

	* src/vm/jit/m68k/asmpart.S (asm_handle_nat_exception): Symbol
	exported and implemented.

	* src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframe):
	More m68k fixes.
	[f5b35b44de35]

2007-04-22  ajordan  <ajordan>

	* src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/arch.h: Properly activated all FP features
	SPARC64 supports in hardware.

	* src/vm/jit/sparc64/asmpart.S: Added functions to read/write the FP
	state register.
	* src/vm/jit/sparc64/md.c: Added prototypes here.

	* src/vm/jit/sparc64/codegen.h: Added 'branch on FP condition codes'
	macros.

	* src/vm/jit/sparc64/emit.c (emit_verbosecall_enter): Fixed FP
	argument passing.

	* src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed FP conversion
	functions to (a) use unique slots in the data segment (doh!), (b)
	catch the case where NaN is converted to an integer value. (JVMS and
	SPARC do not inherently agree here).
	[2871672fa702]

2007-04-21  edwin  <edwin>

	* tests/regression/resolving/Makefile.am:
	* tests/regression/resolving/Makefile.am: Added "-classpath ." to
	javac options so the tests work with ecj out-of-the-box.
	[7854d14c2197]

	* configure.ac, contrib/Makefile.am, contrib/vmlog/Makefile.am,
	contrib/vmlog/t/Makefile.am:
	* configure.ac: Generate vmlog Makefiles.
	* contrib/Makefile.am: Added vmlog to SUBDIRS.
	* contrib/vmlog/Makefile.am, contrib/vmlog/t/Makefile.am: New files.
	[c695e40c9ca0]

	* contrib/vmlog/Makefile, contrib/vmlog/maintain.mk:
	* contrib/vmlog/Makefile: Renamed to maintain.mk.
	[cf73c926d5a8]

	* contrib/vmlog/README, contrib/vmlog/vmlog_cacao.patch:
	* contrib/vmlog/vmlog_cacao.patch: Removed. It is no longer needed.
	* contrib/vmlog/README: Updated for CACAO's --enable-vmlog.
	[550f98d25763]

	* configure.ac, src/threads/native/Makefile.am, src/vm/Makefile.am,
	src/vm/jit/Makefile.am:
	* configure.ac (--enable-vmlog): New configure option.

	* src/vm/jit/Makefile.am, src/vm/Makefile.am,
	src/threads/native/Makefile.am (AM_CPPFLAGS): Added -I for vmlog
	includes.
	[686e27b2c775]

	* src/threads/native/lock.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/jit/codegen-common.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/replace.c, src/vm/vm.c:
	* src/vm/jit/replace.c, src/vm/jit/intrp/asmpart.c, src/vm/jit
	/codegen-common.c, src/vm/builtin.c, src/vm/exceptions.c,
	src/vm/vm.c, src/threads/native/lock.c (ENABLE_VMLOG): Applied the
	vmlog patch and wrapped all inserted code with #if
	defined(ENABLE_VMLOG).
	[79cd1ec1bdfe]

2007-04-20  twisti  <twisti>

	* src/toolbox/list.c, src/toolbox/list.h:
	* src/toolbox/list.h (list_t): Added size.

	* src/toolbox/list.c (list_create): Initialize size.
	(list_create_dump): Likewise. (list_add_first): Increase size.
	(list_add_last_unsynced): Likewise. (list_add_before): Likewise.
	(list_remove_unsynced): Decrease size.
	[a3b9de93ae36]

	* src/toolbox/list.c, src/toolbox/list.h, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vm/jit/emit-common.c,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/optimizing/recompile.h, src/vm/properties.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/suck.c,
	src/vmcore/suck.h:
	* src/toolbox/list.h (listnode): Renamed to listnode_t. (list):
	Renamed to list_t.

	* src/toolbox/list.c, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/emit-common.c,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/optimizing/recompile.h, src/vm/properties.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/suck.c,
	src/vmcore/suck.h: Likewise.
	[d364c8e90caf]

	* src/vm/vm.c:
	* src/vm/vm.c: Changed header order to prevent a warning.
	[e2130afe6ce2]

	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/cldc1.1/java_lang_System.c:
	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c (loadLibrary):
	Fixed string-internal warnings.
	* src/native/vm/cldc1.1/java_lang_System.c (getProperty0): Likewise.
	[3392e29dc096]

	* src/vm/vm.c:
	* src/vm/vm.c (version): Print libjvm.so path.
	[cf8bfa7aacd0]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Print unknown -verbose option.
	[1e0587f7990c]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_finish_native_call): #ifdef
	lrt and plrt. Don't set lrt, we don't need it.
	[4adb6a2ff2e2]

	* src/threads/threads-common.h:
	* src/threads/threads-common.h (native/jni.h): Added.
	[46a14c79e619]

2007-04-19  twisti  <twisti>

	* src/vm/signal.c:
	* src/vm/signal.c (signal_thread): Check return value of sig*
	functions.
	[c9b703e40679]

	* tests/regression/resolving/Makefile.am:
	* tests/regression/resolving/Makefile.am (check): Added missing
	JAVAFLAGS.
	[ef74f05c14af]

	* configure.ac:
	* configure.ac (AC_INIT): Changed version to 0.98rc.
	[54cbdd59db94]

	* src/vm/exceptions.h:
	* src/vm/exceptions.h: Added a comment about the hardware-exception
	assert in signal_init.
	[577088fbe91e]

	* src/vm/signal.c:
	* src/vm/signal.c (assert.h): Added. (vm/exceptions.h): Likewise.
	[ENABLE_STATISTICS] (vmcore/statistics.h): Likewise. (signal_init):
	Added hardware-exception assert.
	[f7ec08f8ba16]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (exceptions_print_current_exception): Added
	abort. (exceptions_throw_outofmemoryerror): Removed.
	(exceptions_throw_illegalaccessexception): Likewise.
	[975230caffb6]

	* src/vm/jit/powerpc/darwin/md-abi.c, src/vm/jit/powerpc/darwin/md-
	abi.h, src/vm/jit/powerpc/darwin/md-os.c:
	* src/vm/jit/powerpc/darwin/md-abi.h (REG_FA0, REG_FA1): Added.
	(REG_A0_A1_PACKED, REG_A2_A3_PACKED): Likewise.

	* src/vm/jit/powerpc/darwin/md-os.c [ENABLE_THREADS]
	(threads/native/threads.h): Added. (md_signal_handler_sigsegv):
	Changed for hardware-exceptions. (md_signal_handler_sigtrap): New
	function.

	* src/vm/jit/powerpc/darwin/md-abi.c (vm/descriptor.h): Changed to
	vmcore/descriptor.h. (regs): Renamed to abi_registers_integer_name.
	(abi_registers_integer_argument): Added.
	(abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise.
	(abi_registers_float_argument): Likewise.
	(abi_registers_float_saved): Likewise.
	(abi_registers_float_temporary): Likewise. (md_param_alloc): Use new
	register arrays. (md_param_alloc_native): New function.
	[c7ade92ec34b]

2007-04-19  tbfg  <tbfg>

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/parse.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/linux/Makefile.am, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/stack.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/emit.c:
	* src/vm/jit/m68k/linux/md-abi.c (abi_registers_integer_saved):
	Fixed. (abi_registers_float_saved): Fixed.

	* src/vm/jit/m68k/emit.c (emit_classcast_check): Fixed.

	* src/vm/jit/m68k/codegen.c (codegen_emit): Temporary hacked a field
	for saved adr registers until real patch will be done.
	(ICMD_INSTANCEOF): Fixed. (ICMD_CHECKCAST): Fixed.
	(codegen_emit_stub_compiler): Removed useless code.

	* src/vm/jit/m68k/asmpart.S (L_asm_handle_exception_not_catched):
	Implemented.

	* src/vm/jit/m68k/codegen.h (M_BLS): Added.
	[84e697c2d473]

2007-04-19  michi  <michi>

	* src/mm/cacao-gc/final.c, src/mm/cacao-gc/gc.c, src/mm/cacao-
	gc/mark.c:
	* src/mm/cacao-gc/final.c: Cleaned up debug code.
	* src/mm/cacao-gc/gc.c: Likewise.
	* src/mm/cacao-gc/mark.c: Likewise.
	[9f8ef49fa79b]

	* src/mm/cacao-gc/heap.c, src/mm/cacao-gc/heap.h:
	* src/mm/cacao-gc/heap.h: Removed finalizer header flag.

	* src/mm/cacao-gc/heap.c (heap_alloc): Adapted to above changes.
	(heap_print_object): Handle invalid heap references correctly.
	[f2937900eaac]

	* src/native/vm/java_lang_ClassLoader.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/builtintable.inc,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/codegen-
	common.c, src/vm/jit/emit-common.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/emit.c, src/vm/jit/inline/inline.c,
	src/vm/jit/jit.h, src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/parse.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/emit.c, src/vm/jit/powerpc64/linux/Makefile.am,
	src/vm/jit/replace.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/emit.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/stack.c, src/vm/jit/verify
	/typecheck-common.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, tests/regression/jasmin/Makefile.am,
	tests/regression/resolving/Makefile.am:
	Merged revisions 7732-7765 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7733 | twisti | 2007-04-17 00:56:37 +0200 (Tue, 17 Apr
	2007) | 3 lines

	 * src/vm/jit/x86_64/codegen.c (codegen_emit): Made argument
	passing cleaner. ........ r7734 | twisti | 2007-04-17 13:15:15
	+0200 (Tue, 17 Apr 2007) | 3 lines

	 * src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Use
	simpler code to save and restore argument registers. ........
	r7735 | edwin | 2007-04-17 20:47:50 +0200 (Tue, 17 Apr 2007) | 3
	lines

	 * src/vm/jit/parse.c (parse): Small cleanup of local variable
	renaming. (No code changes.) ........ r7736 | edwin | 2007-04-17
	21:24:05 +0200 (Tue, 17 Apr 2007) | 5 lines

	 * src/vm/jit/stack.c (stack_analyse): The javalocals array can
	have negative values != UNUSED (these values < UNUSED represent
	returnAddresses of local subroutines). Thus >= 0 must be used to
	check for normal indices. ........ r7737 | edwin | 2007-04-17
	21:57:55 +0200 (Tue, 17 Apr 2007) | 2 lines

	 * src/vm/jit/stack.c (stack_javalocals_store): Added an assert.
	........ r7738 | edwin | 2007-04-17 22:06:44 +0200 (Tue, 17 Apr
	2007) | 2 lines

	 * src/vm/jit/jit.h (jitdata): Cleaned up comments for local_map.
	........ r7739 | twisti | 2007-04-17 22:17:01 +0200 (Tue, 17 Apr
	2007) | 10 lines

	 * src/threads/threads-common.c (threads_print_stacktrace): Renamed
	to threads_thread_print_stacktrace. (threads_print_stacktrace):
	New function. (threads_dump): Use threads_thread_print_stacktrace.

	 * src/threads/threads-common.h: Likewise.

	 * src/vm/jit/codegen-common.c (codegen_get_pv_from_pc): Use new
	threads_print_stacktrace. ........ r7740 | twisti | 2007-04-17
	22:25:55 +0200 (Tue, 17 Apr 2007) | 4 lines

	 * src/threads/native/threads.c (threads_init): Fixed string-
	internal warnings. (threads_attach_current_thread): Likewise.
	........ r7741 | edwin | 2007-04-17 22:30:09 +0200 (Tue, 17 Apr
	2007) | 4 lines

	 * src/vm/jit/jit.h (basicblock): Document the javalocal array.
	(JAVALOCAL_FROM_RETADDR): New macro. (RETADDR_FROM_JAVALOCAL):
	Likewise. ........ r7742 | edwin | 2007-04-17 22:37:36 +0200 (Tue,
	17 Apr 2007) | 4 lines

	 * src/vm/jit/stack.c, src/vm/jit/show.c,
	src/vm/jit/inline/inline.c, src/vm/jit/replace.c,
	src/vm/jit/jit.h: Fix and use the new macros for calculating
	javalocals values representing returnAddresses. ........ r7743 |
	edwin | 2007-04-17 22:53:41 +0200 (Tue, 17 Apr 2007) | 6 lines

	 * src/vm/jit/stack.c, src/vm/jit/verify/typecheck-common.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/inline/inline.c,
	src/vm/jit/allocator/simplereg.c: Clarification: Renamed variables
	that are indices into jd->var to "varindex". Renamed variables that
	are bytecode variable indices to "javaindex". ........ r7744 |
	twisti | 2007-04-17 22:54:04 +0200 (Tue, 17 Apr 2007) | 2 lines

	 * tests/regression/jasmin/Makefile.am (check): Set
	LD_LIBRARY_PATH. ........ r7745 | twisti | 2007-04-17 22:59:52
	+0200 (Tue, 17 Apr 2007) | 3 lines

	 * src/vm/builtintable.inc (builtintable_function) [ENABLE_JIT]: We
	need the entries only for JIT. ........ r7746 | edwin | 2007-04-17
	23:01:15 +0200 (Tue, 17 Apr 2007) | 2 lines

	 * src/vm/jit/verify/typecheck.c: More variable renaming for
	clarity. ........ r7747 | edwin | 2007-04-17 23:11:20 +0200 (Tue,
	17 Apr 2007) | 3 lines

	 * src/vm/jit/stack.c (stack_reanalyse_block, stack_analyse):
	Renamed variable "j" to a more obvious "varindex". ........
	r7748 | edwin | 2007-04-17 23:25:55 +0200 (Tue, 17 Apr 2007) | 3
	lines

	 * src/vm/jit/stack.c (stack_analyse): Do not abuse poor "i" for
	types, use a separate variable for that. ........ r7749 | edwin
	| 2007-04-17 23:30:20 +0200 (Tue, 17 Apr 2007) | 4 lines

	 * src/vm/jit/stack.c (stack_init_javalocals): Use "type" as
	variable for the type. (stack_analyse): Likewise. ........
	r7750 | twisti | 2007-04-17 23:37:12 +0200 (Tue, 17 Apr 2007) | 3
	lines

	 * tests/regression/resolving/Makefile.am (check): Use
	LD_LIBRARY_PATH for JAVA. ........ r7751 | twisti | 2007-04-18
	00:06:01 +0200 (Wed, 18 Apr 2007) | 3 lines

	 * src/vm/jit/alpha/codegen.c (codegen_emit): Fixed bug in float-
	argument passing. ........ r7752 | twisti | 2007-04-18 00:50:49
	+0200 (Wed, 18 Apr 2007) | 2 lines

	 * src/vm/jit/m68k/codegen.c: Boilerplate added. ........ r7753 |
	twisti | 2007-04-18 00:55:21 +0200 (Wed, 18 Apr 2007) | 2 lines

	 * src/vm/jit/m68k/emit.c: boilerplate added. ........ r7754 |
	twisti | 2007-04-18 01:18:15 +0200 (Wed, 18 Apr 2007) | 23 lines

	 * src/vm/jit/emit-common.h (emit_copy): Changed signature.

	 * src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c: Likewise.
	........ r7755 | twisti | 2007-04-18 11:59:58 +0200 (Wed, 18 Apr
	2007) | 3 lines

	 * src/native/vm/java_lang_ClassLoader.c [ENABLE_STATISTICS]
	(vmcore/statistics.h): Added. ........ r7756 | twisti | 2007-04-18
	16:11:56 +0200 (Wed, 18 Apr 2007) | 12 lines

	 * src/threads/native/threads.c (mutex_join, cond_join): Added.
	(threads_init_threadobject): Don't initalize join-mutex and cond.
	(threads_preinit): Initialize mutex_join and cond_join.
	(threads_startup_thread): Added vm_abort. (threads_detach_thread):
	Don't reset thread id and use global mutex and condition.
	(threads_find_non_daemon_thread): Lock thread list.
	(threads_join_all_threads): Use global mutex and condition.

	 * src/threads/native/threads.h (threadobject): Removed joinmutex
	and joincond. ........ r7757 | tbfg | 2007-04-18 16:49:18 +0200
	(Wed, 18 Apr 2007) | 6 lines

	 * src/vm/jit/powerpc64/codegen.c (sign_ext): Removed from
	ICMD_INEG, ICMD_IDIV, ICMD_IREM, ICMD_IMUL, ICMD_IAND and ICMD_IOR
	to save the if runtime costs.

	 (ICMD_IUSHR): Needs sign extension for 0 bit shift case. ........
	r7758 | michi | 2007-04-18 17:31:07 +0200 (Wed, 18 Apr 2007) | 3
	lines

	 * src/vm/jit/powerpc64/linux/Makefile.am (AM_CPPFLAGS): Added
	  -I$(top_builddir)/src. ........ r7759 | ajordan | 2007-04-18
	23:04:01 +0200 (Wed, 18 Apr 2007) | 5 lines

	 * src/vm/jit/sparc64/emit.c: Migrated to
	abi_registers_{integer,float}_argument.
	  * src/vm/jit/sparc64/codegen.c: Likewise.
	  * src/vm/jit/sparc64/md-abi.c: Likewise. ........ r7761 | twisti |
	2007-04-19 11:18:20 +0200 (Thu, 19 Apr 2007) | 13 lines

	 * src/threads/native/threads.c (threads_start_javathread):
	Removed. (threads_detach_thread): Added some comments.

	 * src/threads/native/threads.h (threads_start_javathread):
	Removed.

	 * src/threads/threads-common.c (assert.h): Added.
	[ENABLE_STATISTICS] (vmcore/options.h, vmcore/statistics.h): Added.
	(threads_start_javathread): Added.

	 * src/threads/threads-common.h (vm/global.h): Added.
	(native/include/java_lang_Thread.h): Likewise.
	(threads_start_javathread): Likewise. ........ r7762 | twisti |
	2007-04-19 11:19:33 +0200 (Thu, 19 Apr 2007) | 3 lines

	 * src/threads/threads-common.c (threads_start_javathread)
	[ENABLE_JAVASE]: Check for daemon thread and set the flag. ........
	r7763 | michi | 2007-04-19 14:19:19 +0200 (Thu, 19 Apr 2007) | 4
	lines

	 * src/vm/jit/arm/asmpart.S (asm_patcher_wrapper): Use long branch
	construct for exception handling here. This fixes a crash in the
	following jasmin regression testcase:
	jasmin/test_verify_fail_areturn_wrong_reftype. ........
	[d1f4bb13f44d]

2007-04-19  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_builtin): Changed
	signature and use register number directly to save registers.
	[5e24d4db20dd]

	* src/vm/builtin.c, src/vm/jit/arm/asmpart.S, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h:
	* src/vm/jit/codegen-common.c (vm/builtin.h): Added.
	(codegen_generate_stub_builtin): New function.
	(codegen_generate_stub_native): Moved codegen_finish before
	statistics generation, otherwise the numbers are wrong.
	(codegen_stub_builtin_enter): New function.
	(codegen_stub_builtin_exit): Likewise.

	* src/vm/jit/codegen-common.h (vm/builtin.h): Added.
	(codegen_generate_stub_builtin): Likewise.
	(codegen_emit_stub_builtin): Likewise. (codegen_stub_builtin_enter):
	Likewise. (codegen_stub_builtin_exit): Likewise.

	* src/vm/builtin.c (builtintable_init): Call
	codegen_generate_stub_builtin when required.
	[117933a6743e]

2007-04-19  michi  <michi>

	* src/vm/jit/arm/asmpart.S:
	* src/vm/jit/arm/asmpart.S (asm_patcher_wrapper): Use long branch
	construct for exception handling here. This fixes a crash in the
	following jasmin regression testcase:
	jasmin/test_verify_fail_areturn_wrong_reftype.
	[8aa425921124]

2007-04-19  twisti  <twisti>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_start_javathread)
	[ENABLE_JAVASE]: Check for daemon thread and set the flag.
	[8306a271a6c1]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/native/threads.c (threads_start_javathread): Removed.
	(threads_detach_thread): Added some comments.

	* src/threads/native/threads.h (threads_start_javathread): Removed.

	* src/threads/threads-common.c (assert.h): Added.
	[ENABLE_STATISTICS] (vmcore/options.h, vmcore/statistics.h): Added.
	(threads_start_javathread): Added.

	* src/threads/threads-common.h (vm/global.h): Added.
	(native/include/java_lang_Thread.h): Likewise.
	(threads_start_javathread): Likewise.
	[c4a3107b7978]

2007-04-19  michi  <michi>

	* src/mm/cacao-gc/rootset.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.h,
	src/vm/jit/mips/codegen.c, src/vm/jit/parse.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/stack.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/emit.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Add javastack
	references to the rootset as well.
	[baaa57d14785]

2007-04-18  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c:
	* src/vm/jit/sparc64/emit.c: Migrated to
	abi_registers_{integer,float}_argument.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	* src/vm/jit/sparc64/md-abi.c: Likewise.
	[d958a61d6165]

2007-04-18  michi  <michi>

	* src/vm/jit/powerpc64/linux/Makefile.am:
	* src/vm/jit/powerpc64/linux/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	[16714b42b207]

2007-04-18  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (sign_ext): Removed from ICMD_INEG,
	ICMD_IDIV, ICMD_IREM, ICMD_IMUL, ICMD_IAND and ICMD_IOR to save the
	if runtime costs.

	(ICMD_IUSHR): Needs sign extension for 0 bit shift case.
	[14d9b6039acb]

2007-04-18  twisti  <twisti>

	* src/threads/native/threads.c, src/threads/native/threads.h:
	* src/threads/native/threads.c (mutex_join, cond_join): Added.
	(threads_init_threadobject): Don't initalize join-mutex and cond.
	(threads_preinit): Initialize mutex_join and cond_join.
	(threads_startup_thread): Added vm_abort. (threads_detach_thread):
	Don't reset thread id and use global mutex and condition.
	(threads_find_non_daemon_thread): Lock thread list.
	(threads_join_all_threads): Use global mutex and condition.

	* src/threads/native/threads.h (threadobject): Removed joinmutex and
	joincond.
	[9ebf23aa7207]

	* src/native/vm/java_lang_ClassLoader.c:
	* src/native/vm/java_lang_ClassLoader.c [ENABLE_STATISTICS]
	(vmcore/statistics.h): Added.
	[a79842fdacee]

2007-04-17  twisti  <twisti>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/emit-
	common.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c:
	* src/vm/jit/emit-common.h (emit_copy): Changed signature.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/emit.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c: Likewise.
	[76e94dbd7a3a]

	* src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c: boilerplate added.
	[1ff409db43be]

	* src/vm/jit/m68k/codegen.c:
	* src/vm/jit/m68k/codegen.c: Boilerplate added.
	[760d14d37bcb]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): Fixed bug in float-
	argument passing.
	[b29395e453c9]

	* tests/regression/resolving/Makefile.am:
	* tests/regression/resolving/Makefile.am (check): Use
	LD_LIBRARY_PATH for JAVA.
	[3d01fe59eafc]

2007-04-17  edwin  <edwin>

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_init_javalocals): Use "type" as variable
	for the type. (stack_analyse): Likewise.
	[d41dd80098e8]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Do not abuse poor "i" for
	types, use a separate variable for that.
	[159f24ccdc9c]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_reanalyse_block, stack_analyse): Renamed
	variable "j" to a more obvious "varindex".
	[27c7f7048652]

	* src/vm/jit/verify/typecheck.c:
	* src/vm/jit/verify/typecheck.c: More variable renaming for clarity.
	[3ed0eebead11]

2007-04-17  twisti  <twisti>

	* src/vm/builtintable.inc:
	* src/vm/builtintable.inc (builtintable_function) [ENABLE_JIT]: We
	need the entries only for JIT.
	[720be9b2f3e9]

	* tests/regression/jasmin/Makefile.am:
	* tests/regression/jasmin/Makefile.am (check): Set LD_LIBRARY_PATH.
	[0f69c60c1908]

2007-04-17  edwin  <edwin>

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/inline/inline.c,
	src/vm/jit/stack.c, src/vm/jit/verify/typecheck-common.c,
	src/vm/jit/verify/typeinfo.c:
	* src/vm/jit/stack.c, src/vm/jit/verify/typecheck-common.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/inline/inline.c,
	src/vm/jit/allocator/simplereg.c: Clarification: Renamed variables
	that are indices into jd->var to "varindex". Renamed variables that
	are bytecode variable indices to "javaindex".
	[620f945a729d]

	* src/vm/jit/inline/inline.c, src/vm/jit/jit.h, src/vm/jit/replace.c,
	src/vm/jit/show.c, src/vm/jit/stack.c:
	* src/vm/jit/stack.c, src/vm/jit/show.c, src/vm/jit/inline/inline.c,
	src/vm/jit/replace.c, src/vm/jit/jit.h: Fix and use the new macros
	for calculating javalocals values representing returnAddresses.
	[1c7d8fa48924]

	* src/vm/jit/jit.h:
	* src/vm/jit/jit.h (basicblock): Document the javalocal array.
	(JAVALOCAL_FROM_RETADDR): New macro. (RETADDR_FROM_JAVALOCAL):
	Likewise.
	[75abe41b937a]

2007-04-17  twisti  <twisti>

	* src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_init): Fixed string-internal
	warnings. (threads_attach_current_thread): Likewise.
	[e043ec7c3f97]

	* src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/jit/codegen-common.c:
	* src/threads/threads-common.c (threads_print_stacktrace): Renamed
	to threads_thread_print_stacktrace. (threads_print_stacktrace): New
	function. (threads_dump): Use threads_thread_print_stacktrace.

	* src/threads/threads-common.h: Likewise.

	* src/vm/jit/codegen-common.c (codegen_get_pv_from_pc): Use new
	threads_print_stacktrace.
	[c3afb76242b9]

2007-04-17  edwin  <edwin>

	* src/vm/jit/jit.h:
	* src/vm/jit/jit.h (jitdata): Cleaned up comments for local_map.
	[4a6ac5bcba92]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_javalocals_store): Added an assert.
	[447e21183701]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): The javalocals array can have
	negative values != UNUSED (these values < UNUSED represent
	returnAddresses of local subroutines). Thus >= 0 must be used to
	check for normal indices.
	[7ac59dbc963c]

	* src/vm/jit/parse.c:
	* src/vm/jit/parse.c (parse): Small cleanup of local variable
	renaming. (No code changes.)
	[bcddd3d2a4e6]

2007-04-17  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_native): Use
	simpler code to save and restore argument registers.
	[7d8cd9be641b]

2007-04-16  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit): Made argument passing
	cleaner.
	[7943e3406a26]

2007-04-16  michi  <michi>

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/inline/inline.c:
	Merged revisions 7727-7731 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7731 | twisti | 2007-04-17 00:24:30 +0200 (Tue, 17 Apr
	2007) | 7 lines

	 * src/vm/jit/codegen-common.c (codegen_setup): Removed maxstack
	stuff.
	  * src/vm/jit/codegen-common.h (codegendata): Likewise.

	 * src/vm/jit/inline/inline.c: Fixed includes.
	(inline_jit_compile): Removed maxstack stuff. (inline_transform):
	Removed basicblockindex. ........
	[33abc694205d]

2007-04-16  twisti  <twisti>

	* src/vm/jit/Makefile.am, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/inline/inline.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-abi.c:
	* src/vm/jit/codegen-common.c (codegen_setup): Removed maxstack
	stuff.
	* src/vm/jit/codegen-common.h (codegendata): Likewise.

	* src/vm/jit/inline/inline.c: Fixed includes. (inline_jit_compile):
	Removed maxstack stuff. (inline_transform): Removed basicblockindex.
	[e472140655af]

2007-04-16  michi  <michi>

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h:
	* src/mm/cacao-gc/gc.h [!ENABLE_STATISTICS]: Added dummy defines.

	* src/mm/cacao-gc/gc.c [ENABLE_STATISTICS]: Added gcstat_collections
	and gcstat_collections_forced.
	[ad29c1300cb4]

2007-04-16  twisti  <twisti>

	* src/mm/cacao-gc/Makefile.am:
	* src/mm/cacao-gc/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	[669b0ff5327d]

2007-04-16  michi  <michi>

	* src/mm/cacao-gc/compact.c:
	* src/mm/cacao-gc/compact.c (compact_move): Fixed ifdef.
	[466da41ce969]

	* src/mm/cacao-gc/Makefile.am, src/vm/jit/Makefile.am,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c:
	Merged revisions 7723-7726 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7724 | twisti | 2007-04-16 23:07:10 +0200 (Mon, 16 Apr
	2007) | 5 lines

	 * src/vm/jit/powerpc64/linux/md-abi.c: Argument register changes
	ported (rev7713).
	  * src/vm/jit/powerpc64/emit.c: Likewise.
	  * src/vm/jit/powerpc64/codegen.c: Likewise. ........ r7725 | twisti
	| 2007-04-16 23:09:39 +0200 (Mon, 16 Apr 2007) | 3 lines

	 * src/vm/jit/Makefile.am (DIST_SUBDIRS): Added m68k.
	  * src/mm/cacao-gc/Makefile.am (libgc_la_SOURCES): Removed heap.c.
	........
	[0f5d540918d1]

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-abi.c,
	tests/gc/ClassInit.java:
	* tests/gc/ClassInit.java: Added testcase (static initializer
	calling gc).
	[3a0594ed3067]

2007-04-16  twisti  <twisti>

	* src/mm/cacao-gc/Makefile.am, src/vm/jit/Makefile.am:
	* src/vm/jit/Makefile.am (DIST_SUBDIRS): Added m68k.
	* src/mm/cacao-gc/Makefile.am (libgc_la_SOURCES): Removed heap.c.
	[daa4ed3c8940]

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c:
	* src/vm/jit/powerpc64/linux/md-abi.c: Argument register changes
	ported (rev7713).
	* src/vm/jit/powerpc64/emit.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	[e454c133c9aa]

2007-04-16  michi  <michi>

	* src/native/jni.c, src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Runtime.c, src/threads/threads-common.c,
	src/vm/builtin.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.c, src/vm/jit/arm/md-
	abi.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-
	abi.h, src/vm/jit/reg.c, src/vm/jit/reg.h, src/vm/jit/stack.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vmcore/utf8.c:
	Merged revisions 7707-7722 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7712 | twisti | 2007-04-15 23:13:03 +0200 (Sun, 15 Apr
	2007) | 4 lines

	 * src/vm/jit/mips/emit.c (emit_load): Bugfix: Added missing float
	instruction. (emit_store): Likewise. ........ r7713 | twisti |
	2007-04-15 23:49:48 +0200 (Sun, 15 Apr 2007) | 29 lines

	 * src/vm/jit/reg.c (reg_setup): Removed arg{int,flt}regs stuff.
	  * src/vm/jit/reg.h (registerdata): Removed arg{int,flt}regs.

	 * src/vm/jit/stack.c (stack_analyse): regoff now contains the
	register number instead of an offset.

	 * src/vm/jit/allocator/simplereg.c: Use
	abi_registers_{integer,float}_argument instead of arg{int,flt}regs.

	 * src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.c, src/vm/jit/arm
	/md-abi.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c: A lot of
	changes like the ones above. ........ r7714 | twisti | 2007-04-16
	16:11:14 +0200 (Mon, 16 Apr 2007) | 4 lines

	 * src/vm/builtin.c (builtin_print_argument): Removed
	java_lang_String until we know what we do with strings internally
	(more patches to come). ........ r7715 | twisti | 2007-04-16
	16:28:30 +0200 (Mon, 16 Apr 2007) | 5 lines

	 * src/threads/threads-common.c
	(native/include/java_lang_String.h): Added.
	(threads_create_thread): Fixed string-internal warnings.
	(threads_dump): Likewise. ........ r7716 | twisti | 2007-04-16
	16:29:53 +0200 (Mon, 16 Apr 2007) | 2 lines

	 * src/vmcore/utf8.c (utf_get_number_of_u2s): Return 0 instead of
	NULL. ........ r7717 | twisti | 2007-04-16 17:23:32 +0200 (Mon, 16
	Apr 2007) | 5 lines

	 * src/native/vm/gnu/java_lang_VMClassLoader.c (loadClass): Fixed
	string-internal warnings. (nativeGetResources): Likewise.
	(findLoadedClass): Likewise. ........ r7718 | twisti | 2007-04-16
	17:26:01 +0200 (Mon, 16 Apr 2007) | 3 lines

	 * src/native/vm/gnu/java_lang_VMRuntime.c (mapLibraryName): Fixed
	string-internal warnings. ........ r7719 | twisti | 2007-04-16
	17:29:29 +0200 (Mon, 16 Apr 2007) | 3 lines

	 * src/native/vm/gnu/java_lang_reflect_Method.c (getSignature):
	Fixed string-internal warnings. ........ r7720 | twisti |
	2007-04-16 17:49:09 +0200 (Mon, 16 Apr 2007) | 13 lines

	 * src/native/vm/java_lang_ClassLoader.c (defineClass): Fixed
	string-internal warnings.

	 * src/native/vm/java_lang_Runtime.c (loadLibrary): Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Field.c (getSignature):
	Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getSignature): Likewise.

	 * src/native/vm/gnu/java_lang_VMThrowable.c (getStackTrace):
	Likewise. ........ r7721 | twisti | 2007-04-16 17:53:53 +0200
	(Mon, 16 Apr 2007) | 7 lines

	 * src/native/vm/java_lang_Class.c (forName): Fixed string-internal
	warnings. (getDeclaredFields): Likewise. (getDeclaredMethods):
	Likewise. (getEnclosingMethod): Likewise. (getClassSignature):
	Likewise. ........ r7722 | twisti | 2007-04-16 17:57:21 +0200
	(Mon, 16 Apr 2007) | 5 lines

	 * src/native/jni.c (_Jv_JNI_DefineClass): Fixed string-internal
	warnings. (_Jv_JNI_NewStringUTF): Likewise.
	(_Jv_JNI_GetStringUTFChars): Likewise. ........
	[24a7a762a076]

2007-04-16  twisti  <twisti>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_DefineClass): Fixed string-internal
	warnings. (_Jv_JNI_NewStringUTF): Likewise.
	(_Jv_JNI_GetStringUTFChars): Likewise.
	[a37bf09a362e]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c (forName): Fixed string-internal
	warnings. (getDeclaredFields): Likewise. (getDeclaredMethods):
	Likewise. (getEnclosingMethod): Likewise. (getClassSignature):
	Likewise.
	[07c0a68486d0]

	* src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_Runtime.c:
	* src/native/vm/java_lang_ClassLoader.c (defineClass): Fixed string-
	internal warnings.

	* src/native/vm/java_lang_Runtime.c (loadLibrary): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Field.c (getSignature):
	Likewise.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c (getSignature):
	Likewise.

	* src/native/vm/gnu/java_lang_VMThrowable.c (getStackTrace):
	Likewise.
	[c8536d3e324b]

	* src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Method.c (getSignature): Fixed
	string-internal warnings.
	[5e143a12f2f0]

	* src/native/vm/gnu/java_lang_VMRuntime.c:
	* src/native/vm/gnu/java_lang_VMRuntime.c (mapLibraryName): Fixed
	string-internal warnings.
	[ce5133d6a085]

	* src/native/vm/gnu/java_lang_VMClassLoader.c:
	* src/native/vm/gnu/java_lang_VMClassLoader.c (loadClass): Fixed
	string-internal warnings. (nativeGetResources): Likewise.
	(findLoadedClass): Likewise.
	[bf7462d48bc1]

	* src/vmcore/utf8.c:
	* src/vmcore/utf8.c (utf_get_number_of_u2s): Return 0 instead of
	NULL.
	[c6d33c63976b]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (native/include/java_lang_String.h):
	Added. (threads_create_thread): Fixed string-internal warnings.
	(threads_dump): Likewise.
	[9dffdfeeb62e]

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_print_argument): Removed
	java_lang_String until we know what we do with strings internally
	(more patches to come).
	[99f554aec90e]

2007-04-15  twisti  <twisti>

	* src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c, src/vm/jit/arm/md-
	abi.c, src/vm/jit/arm/md-abi.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/md-abi.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/md-abi.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-
	abi.h, src/vm/jit/reg.c, src/vm/jit/reg.h, src/vm/jit/stack.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/reg.c (reg_setup): Removed arg{int,flt}regs stuff.
	* src/vm/jit/reg.h (registerdata): Removed arg{int,flt}regs.

	* src/vm/jit/stack.c (stack_analyse): regoff now contains the
	register number instead of an offset.

	* src/vm/jit/allocator/simplereg.c: Use
	abi_registers_{integer,float}_argument instead of arg{int,flt}regs.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.c, src/vm/jit/arm/md-
	abi.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/powerpc/linux/md-
	abi.h, src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c: A lot of changes like the ones above.
	[a3fefe287703]

	* src/vm/jit/mips/emit.c:
	* src/vm/jit/mips/emit.c (emit_load): Bugfix: Added missing float
	instruction. (emit_store): Likewise.
	[9851f06e8ca3]

2007-04-15  michi  <michi>

	* src/vm/builtintable.inc:
	* src/vm/builtintable.inc: Fixed flags for builtin_new and
	builtin_fast_new.
	[7308c5bf0f60]

	* src/vm/builtin.h, src/vm/builtintable.inc:
	* src/vm/builtin.h (builtintable_entry): Added stub pointer.
	* src/vm/builtintable.inc: Adapted to above changes. Added vim boiler
	plate.
	[22c4d550cf29]

	* src/vm/jit/i386/codegen.c, src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_builtin): Different
	function signature. Fixed argument passing. Saving return value.

	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_builtin): Different
	function signature.
	[1d72eeb5cb8e]

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_builtin):
	Implemented. (codegen_emit_stub_native): Now uses
	abi_registers_integer_saved.
	[66d503d68d4a]

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/md-abi.c,
	tests/regression/resolving/Makefile.am,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/Makefile.am:
	Merged revisions 7701-7706 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7703 | twisti | 2007-04-15 13:37:55 +0200 (Sun, 15 Apr
	2007) | 6 lines

	 * tests/regression/resolving/Makefile.am: Added GNU header and
	fixed srcdir != builddir.
	  * tests/regression/resolving/classes1/Makefile.am: Likewise.
	  * tests/regression/resolving/classes2/Makefile.am: Likewise.
	  * tests/regression/resolving/classes3/Makefile.am: Likewise. ........
	r7704 | michi | 2007-04-15 13:55:25 +0200 (Sun, 15 Apr 2007) | 3
	lines

	 * src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Fixed
	calculation of stackframesize. ........ r7705 | michi | 2007-04-15
	14:15:01 +0200 (Sun, 15 Apr 2007) | 4 lines

	 * src/vm/jit/i386/md-abi.c (abi_registers_integer_argument):
	Added. (abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise. ........ r7706 |
	michi | 2007-04-15 14:17:02 +0200 (Sun, 15 Apr 2007) | 2 lines

	 * src/vm/jit/i386/md-abi.c (abi_registers_integer_argument):
	Fixed. ........
	[84a0c74bbb13]

	* src/vm/jit/i386/md-abi.c:
	* src/vm/jit/i386/md-abi.c (abi_registers_integer_argument): Fixed.
	[7105b50d6de2]

	* src/vm/jit/i386/md-abi.c:
	* src/vm/jit/i386/md-abi.c (abi_registers_integer_argument): Added.
	(abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise.
	[fb1cc05ded0e]

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen_emit_stub_native): Fixed
	calculation of stackframesize.
	[ad58732e3821]

2007-04-15  twisti  <twisti>

	* tests/regression/resolving/Makefile.am,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/Makefile.am:
	* tests/regression/resolving/Makefile.am: Added GNU header and fixed
	srcdir != builddir.
	* tests/regression/resolving/classes1/Makefile.am: Likewise.
	* tests/regression/resolving/classes2/Makefile.am: Likewise.
	* tests/regression/resolving/classes3/Makefile.am: Likewise.
	[9fa46231f8d7]

2007-04-15  michi  <michi>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_builtin): Removed
	call of codegen_finish.
	[e47ffd6fee4f]

	* src/cacao/cacao.c, src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/codegen.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/stack.c,
	src/vm/jit/x86_64/arch.h:
	Merged revisions 7693-7700 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7694 | tbfg | 2007-04-12 17:35:13 +0200 (Thu, 12 Apr
	2007) | 8 lines

	 * src/vm/jit/powerpc64/emit.c (emit_patcher_stubs): Removed dead
	code.

	 * src/vm/jit/powerpc64/codegen.c (ICMD_ISUB): Fixed evil bug.
	(ICMD_LSHR): Fixed a bug. (createnativestub): Use
	emit_patcher_stub.

	 * src/vm/jit/powerpc64/patcher.c (patcher_resolve_native): Fixed.
	........ r7695 | twisti | 2007-04-12 21:49:34 +0200 (Thu, 12 Apr
	2007) | 14 lines

	 * src/vm/jit/stack.c (stack_analyse): Removed USEBUILTINTABLE,
	always check for automatic-builtins (compile this is not
	affected).

	 * src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/mips/arch.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/s390/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/x86_64/arch.h
	(USEBUILTINTABLE): Removed. ........ r7698 | twisti | 2007-04-13
	12:12:04 +0200 (Fri, 13 Apr 2007) | 5 lines

	 * src/cacao/cacao.c (main): Save the error message of the first
	lt_dlopenext and print it too when the second fails (thanks
	Dalibor). Although there's still a problem, when the first fails
	for some reason and the second picks up and old installed one
	silently. ........ r7699 | twisti | 2007-04-13 12:42:05 +0200
	(Fri, 13 Apr 2007) | 2 lines

	 * src/vm/jit/mips/md-abi.c (md_param_alloc): Code beautified.
	........ r7700 | twisti | 2007-04-13 13:48:48 +0200 (Fri, 13 Apr
	2007) | 3 lines

	 * src/vm/jit/mips/codegen.c (codegen_emit): ICMD_LDIV, ICMD_LREM:
	Use REG_Ax_Ax_PACKED defines. ........
	[cdaa70dc40b0]

2007-04-13  twisti  <twisti>

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): ICMD_LDIV, ICMD_LREM:
	Use REG_Ax_Ax_PACKED defines.
	[11e93792d728]

	* src/vm/jit/mips/md-abi.c:
	* src/vm/jit/mips/md-abi.c (md_param_alloc): Code beautified.
	[63916a5952b0]

	* src/cacao/cacao.c:
	* src/cacao/cacao.c (main): Save the error message of the first
	lt_dlopenext and print it too when the second fails (thanks
	Dalibor). Although there's still a problem, when the first fails for
	some reason and the second picks up and old installed one silently.
	[7486bf60943a]

2007-04-12  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c:
	* src/vm/jit/x86_64/codegen.c (codegen_emit_stub_builtin): New
	function.
	[05a68242fab2]

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/builtintable.inc,
	src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/mips/arch.h,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/arch.h, src/vm/jit/stack.c,
	src/vm/jit/x86_64/arch.h:
	* src/vm/builtin.c (builtintable_replace_function): Replaced
	checkexception with flags and check for exception flag.

	* src/vm/builtin.h (builtintable_entry): Removed checkexception,
	added flags. (BUILTINTABLE_FLAG_STUB): Defined.
	(BUILTINTABLE_FLAG_EXCEPTION): Likewise.

	* src/vm/builtintable.inc (builtintable_internal): Moved position of
	flags. (builtintable_automatic): Likewise. (builtintable_function):
	Likewise.
	[b63c7f9b5333]

	* src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/mips/arch.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/s390/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/stack.c,
	src/vm/jit/x86_64/arch.h:
	* src/vm/jit/stack.c (stack_analyse): Removed USEBUILTINTABLE,
	always check for automatic-builtins (compile this is not affected).

	* src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/mips/arch.h, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/s390/arch.h,
	src/vm/jit/sparc64/arch.h, src/vm/jit/x86_64/arch.h
	(USEBUILTINTABLE): Removed.
	[9112dbd911db]

2007-04-12  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/emit.c (emit_patcher_stubs): Removed dead
	code.

	* src/vm/jit/powerpc64/codegen.c (ICMD_ISUB): Fixed evil bug.
	(ICMD_LSHR): Fixed a bug. (createnativestub): Use emit_patcher_stub.

	* src/vm/jit/powerpc64/patcher.c (patcher_resolve_native): Fixed.
	[2f53b0ece37e]

2007-04-12  michi  <michi>

	* src/cacaoh/dummy.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/codegen.h, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/linux/md-os.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/jit.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/codegen.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit_interface.h,
	src/vmcore/linker.c, src/vmcore/loader.c:
	Merged revisions 7688-7692 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7690 | twisti | 2007-04-12 13:56:05 +0200 (Thu, 12 Apr
	2007) | 3 lines

	 * src/vm/jit/arm/linux/md-os.c (mm/memory.h): Removed.
	[ENABLE_THREADS] (threads/native/threads.h): Added. ........ r7691
	| twisti | 2007-04-12 14:45:10 +0200 (Thu, 12 Apr 2007) | 36 lines

	 * src/vm/jit/codegen-common.c (codegen_generate_stub_compiler):
	New function.

	 * src/vm/jit/codegen-common.h (createcompilerstub): Removed.
	(codegen_generate_stub_compiler): Added.
	  * src/vm/jit_interface.h: Likewise.
	  * src/cacaoh/dummy.c: Likewise.

	 * src/vmcore/linker.c (link_class_intern): Replaced
	createcompilerstub with codegen_generate_stub_compiler.

	 * src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(COMPILERSTUB_DATASIZE) (COMPILERSTUB_SIZE): Removed.
	(createcompilerstub): Renamed to codegen_emit_stub_compiler and
	changed signature.

	 * src/vm/jit/alpha/codegen.h, src/vm/jit/arm/codegen.h,
	src/vm/jit/i386/codegen.h, src/vm/jit/m68k/codegen.h,
	src/vm/jit/mips/codegen.h, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/s390/codegen.h,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/x86_64/codegen.h
	(COMPILERSTUB_CODESIZE): Added. ........ r7692 | twisti |
	2007-04-12 16:47:24 +0200 (Thu, 12 Apr 2007) | 26 lines

	 * src/vm/jit/codegen-common.c (codegen_createnativestub): Renamed
	to codegen_generate_stub_native and call codegen_finish.

	 * src/vm/jit/codegen-common.h (codegen_createnativestub): Removed.
	(codegen_generate_stub_native): Added.
	  * src/vm/jit_interface.h: Likewise.
	  * src/cacaoh/dummy.c: Likewise.

	 * src/vmcore/loader.c (load_newly_created_array): Renamed
	codegen_createnativestub to codegen_generate_stub_native and changed
	signature.
	  * src/vm/jit/jit.c (jit_compile_intern): Likewise.

	 * src/vm/jit/arm/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/x86_64/codegen.c
	(createnativestub): Renamed to codegen_emit_stub_native and
	changed signature, don't call codegen_finish. ........
	[c9aa605344f9]

2007-04-12  twisti  <twisti>

	* src/cacaoh/dummy.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/i386/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit_interface.h,
	src/vmcore/loader.c:
	* src/vm/jit/codegen-common.c (codegen_createnativestub): Renamed to
	codegen_generate_stub_native and call codegen_finish.

	* src/vm/jit/codegen-common.h (codegen_createnativestub): Removed.
	(codegen_generate_stub_native): Added.
	* src/vm/jit_interface.h: Likewise.
	* src/cacaoh/dummy.c: Likewise.

	* src/vmcore/loader.c (load_newly_created_array): Renamed
	codegen_createnativestub to codegen_generate_stub_native and changed
	signature.
	* src/vm/jit/jit.c (jit_compile_intern): Likewise.

	* src/vm/jit/arm/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/m68k/codegen.c, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/x86_64/codegen.c
	(createnativestub): Renamed to codegen_emit_stub_native and changed
	signature, don't call codegen_finish.
	[bdea958b9063]

	* src/cacaoh/dummy.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/codegen.h, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/codegen-common.c, src/vm/jit
	/codegen-common.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/codegen.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/codegen.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit_interface.h,
	src/vmcore/linker.c:
	* src/vm/jit/codegen-common.c (codegen_generate_stub_compiler): New
	function.

	* src/vm/jit/codegen-common.h (createcompilerstub): Removed.
	(codegen_generate_stub_compiler): Added.
	* src/vm/jit_interface.h: Likewise.
	* src/cacaoh/dummy.c: Likewise.

	* src/vmcore/linker.c (link_class_intern): Replaced
	createcompilerstub with codegen_generate_stub_compiler.

	* src/vm/jit/alpha/codegen.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/m68k/codegen.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/x86_64/codegen.c
	(COMPILERSTUB_DATASIZE) (COMPILERSTUB_SIZE): Removed.
	(createcompilerstub): Renamed to codegen_emit_stub_compiler and
	changed signature.

	* src/vm/jit/alpha/codegen.h, src/vm/jit/arm/codegen.h,
	src/vm/jit/i386/codegen.h, src/vm/jit/m68k/codegen.h,
	src/vm/jit/mips/codegen.h, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/s390/codegen.h,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/x86_64/codegen.h
	(COMPILERSTUB_CODESIZE): Added.
	[604ac021c387]

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c (mm/memory.h): Removed.
	[ENABLE_THREADS] (threads/native/threads.h): Added.
	[d360d51a6405]

2007-04-12  michi  <michi>

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/mark.c:
	* src/mm/cacao-gc/gc.h (gc_collect): Added prototype.
	* src/mm/cacao-gc/heap.c: Fixed includes.
	* src/mm/cacao-gc/mark.c: Fixed includes.
	[aad7ee5bcc5b]

	* src/cacaoh/dummy.c, src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/threads/native/threads.c, src/toolbox/logging.c,
	src/vm/global.h, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/emit.c, src/vm/jit/arm/asmpart.S, src/vm/jit
	/codegen-common.c, src/vm/jit/i386/asmpart.S,
	src/vm/jit/intrp/asmpart.c, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/x86_64/asmpart.S,
	src/vmcore/linker.c, src/vmcore/linker.h:
	Merged revisions 7674-7687 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7675 | michi | 2007-04-05 16:23:04 +0200 (Thu, 05 Apr
	2007) | 10 lines

	 * src/vm/global.h (compiler_lock, compiler_unlock): Removed.
	  * src/cacaoh/dummy.c (compiler_lock, compiler_unlock): Removed.
	  * src/threads/native/threads.c (compiler_lock, compiler_unlock):
	Removed.

	 * src/vmcore/linker.h (linker_classrenumber_lock): Added.
	  * src/vmcore/linker.c (linker_classrenumber_lock): Added.
	(linker_compute_subclasses): Uses above lock object instead of
	compiler_lock.

	 * src/vm/jit/intrp/asmpart.c (intrp_asm_getclassvalues_atomic):
	Likewise. ........ r7676 | twisti | 2007-04-08 23:14:40 +0200
	(Sun, 08 Apr 2007) | 3 lines

	 * src/native/vm/cldc1.1/java_lang_Object.c (notifyAll):
	Implemented.
	  * src/native/vm/cldc1.1/java_lang_String.c (lastIndexOf__I): Likewise.
	........ r7677 | twisti | 2007-04-09 13:51:25 +0200 (Mon, 09 Apr
	2007) | 8 lines

	 * src/vm/jit/mips/codegen.h (BRANCH_NOPS): Added long-branches
	case.

	 * src/vm/jit/mips/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	(emit_branch): Implemented conditional long-branches. ........
	r7678 | twisti | 2007-04-09 19:23:55 +0200 (Mon, 09 Apr 2007) | 11
	lines

	 * src/vm/jit/alpha/asmpart.S: Use % instead of @ for progbits as
	ARM's assembler uses @ as comment character.
	  * src/vm/jit/arm/asmpart.S: Likewise.
	  * src/vm/jit/i386/asmpart.S: Likewise.
	  * src/vm/jit/mips/asmpart.S: Likewise.
	  * src/vm/jit/powerpc/asmpart.S: Likewise.
	  * src/vm/jit/powerpc64/asmpart.S: Likewise.
	  * src/vm/jit/s390/asmpart.S: Likewise.
	  * src/vm/jit/sparc64/asmpart.S: Likewise.
	  * src/vm/jit/x86_64/asmpart.S: Likewise. ........ r7679 | twisti |
	2007-04-09 23:17:36 +0200 (Mon, 09 Apr 2007) | 2 lines

	 * src/vm/jit/alpha/emit.c (emit_copy): Check src-type, not dst-
	type. ........ r7680 | pm | 2007-04-10 07:02:20 +0200 (Tue, 10 Apr
	2007) | 8 lines

	 * src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/tests/tests.java.pp: Changed very much. ........
	r7681 | twisti | 2007-04-10 14:22:16 +0200 (Tue, 10 Apr 2007) | 3
	lines

	 * src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Set
	val accordingly. ........ r7682 | twisti | 2007-04-10 23:24:14
	+0200 (Tue, 10 Apr 2007) | 3 lines

	 * src/vm/jit/mips/codegen.c (codegen_emit): Fixed ICMD_IF_Lxx
	instructions for 64-bit. ........ r7683 | twisti | 2007-04-10
	23:37:03 +0200 (Tue, 10 Apr 2007) | 3 lines

	 * src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): We
	only need to check the cause for pre glibc-2.5. ........ r7684 |
	twisti | 2007-04-11 10:11:49 +0200 (Wed, 11 Apr 2007) | 3 lines

	 * src/vm/jit/codegen-common.c (codegen_generate): Added re-
	generating debug message. ........ r7685 | twisti | 2007-04-11
	10:21:06 +0200 (Wed, 11 Apr 2007) | 2 lines

	 * src/toolbox/logging.c (log_finish): Also print a \n in the log-
	file. ........ r7687 | tbfg | 2007-04-11 18:39:22 +0200 (Wed, 11
	Apr 2007) | 19 lines

	 * src/vm/jit/powerpc64/arch.h (SUPPORT_LONG_SHIFT): Enabled.

	 * src/vm/jit/powerpc64/codegen.c (ICMD_LSHLCONST): Implemented.
	(ICMD_LSHRCONST): Likewise. (ICMD_LUSHRCONST): Likewise.
	(ICMD_LSHL): Likewise. (ICMD_LSHR): Likewise. (ICMD_LUSHR):
	Likewise. (ICMD_IUSHR): Fixed. (ICMD_IUSHRCONST): Fixed.

	 * src/vm/jit/powerpc64/codegen.h (M_SRL): Use 64bit opcode.
	(M_SRA): Likewise. (M_SRA_IMM): Likewise. (M_SRL_IMM): Likewise.
	(M_SSL_IMM): Likewise. (M_SSL): Likewise. (M_CLR_HIGH): Added.
	........
	[7a123c32db11]

2007-04-11  tbfg  <tbfg>

	* src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h:
	* src/vm/jit/powerpc64/arch.h (SUPPORT_LONG_SHIFT): Enabled.

	* src/vm/jit/powerpc64/codegen.c (ICMD_LSHLCONST): Implemented.
	(ICMD_LSHRCONST): Likewise. (ICMD_LUSHRCONST): Likewise.
	(ICMD_LSHL): Likewise. (ICMD_LSHR): Likewise. (ICMD_LUSHR):
	Likewise. (ICMD_IUSHR): Fixed. (ICMD_IUSHRCONST): Fixed.

	* src/vm/jit/powerpc64/codegen.h (M_SRL): Use 64bit opcode. (M_SRA):
	Likewise. (M_SRA_IMM): Likewise. (M_SRL_IMM): Likewise. (M_SSL_IMM):
	Likewise. (M_SSL): Likewise. (M_CLR_HIGH): Added.
	[8b91afea2648]

2007-04-11  twisti  <twisti>

	* src/vm/builtin.h, src/vm/builtintable.inc,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/x86_64/asmpart.S, src/vmcore/linker.c:
	* src/vm/builtin.h (builtin_fast_new): Added. (BUILTIN_FAST_new):
	Likewise.

	* src/vm/builtintable.inc (builtintable_internal): Added
	BUILTIN_FAST_new.
	[2c1970a9e98f]

	* src/toolbox/logging.c:
	* src/toolbox/logging.c (log_finish): Also print a \n in the log-
	file.
	[45a5bb68dac8]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_generate): Added re-
	generating debug message.
	[5d40e61513e2]

2007-04-10  twisti  <twisti>

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): We only
	need to check the cause for pre glibc-2.5.
	[ba356d7fb5f0]

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): Fixed ICMD_IF_Lxx
	instructions for 64-bit.
	[c6d5b478aef0]

	* src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Set val
	accordingly.
	[3e43374d7974]

2007-04-10  pm  <pm>

	* src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/tests/tests.java.pp:
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/tests/tests.java.pp: Changed very much.
	[8991ec608963]

2007-04-09  twisti  <twisti>

	* src/vm/jit/alpha/emit.c:
	* src/vm/jit/alpha/emit.c (emit_copy): Check src-type, not dst-type.
	[1d86f11b4c3a]

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/mips/asmpart.S,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/s390/asmpart.S, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/alpha/asmpart.S: Use % instead of @ for progbits as
	ARM's assembler uses @ as comment character.
	* src/vm/jit/arm/asmpart.S: Likewise.
	* src/vm/jit/i386/asmpart.S: Likewise.
	* src/vm/jit/mips/asmpart.S: Likewise.
	* src/vm/jit/powerpc/asmpart.S: Likewise.
	* src/vm/jit/powerpc64/asmpart.S: Likewise.
	* src/vm/jit/s390/asmpart.S: Likewise.
	* src/vm/jit/sparc64/asmpart.S: Likewise.
	* src/vm/jit/x86_64/asmpart.S: Likewise.
	[8e4b092d8838]

	* src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c:
	* src/vm/jit/mips/codegen.h (BRANCH_NOPS): Added long-branches case.

	* src/vm/jit/mips/emit.c (emit_load): Use switch-case instead of if-
	else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	(emit_branch): Implemented conditional long-branches.
	[2b31d3ab64e9]

2007-04-08  twisti  <twisti>

	* src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c:
	* src/native/vm/cldc1.1/java_lang_Object.c (notifyAll): Implemented.
	* src/native/vm/cldc1.1/java_lang_String.c (lastIndexOf__I): Likewise.
	[020417ffe9f4]

2007-04-05  michi  <michi>

	* src/cacaoh/dummy.c, src/threads/native/threads.c, src/vm/global.h,
	src/vm/jit/intrp/asmpart.c, src/vmcore/linker.c,
	src/vmcore/linker.h:
	* src/vm/global.h (compiler_lock, compiler_unlock): Removed.
	* src/cacaoh/dummy.c (compiler_lock, compiler_unlock): Removed.
	* src/threads/native/threads.c (compiler_lock, compiler_unlock):
	Removed.

	* src/vmcore/linker.h (linker_classrenumber_lock): Added.
	* src/vmcore/linker.c (linker_classrenumber_lock): Added.
	(linker_compute_subclasses): Uses above lock object instead of
	compiler_lock.

	* src/vm/jit/intrp/asmpart.c (intrp_asm_getclassvalues_atomic):
	Likewise.
	[b6b122d1b5da]

	* src/native/native.c, src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/exceptions.c, src/vm/jit/codegen-common.c:
	Merged revisions 7665-7673 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7666 | twisti | 2007-04-05 02:14:57 +0200 (Thu, 05 Apr
	2007) | 4 lines

	 * src/threads/threads-common.c (threads_print_stacktrace): Removed
	!ENABLE_THREADS code, since this file is only compiled with
	ENABLE_THREADS. ........ r7669 | twisti | 2007-04-05 13:39:58
	+0200 (Thu, 05 Apr 2007) | 27 lines

	 * src/native/vm/java_lang_Thread.c [ENABLE_THREADS]
	(threads/native/threads.h): Removed. (threads/threads-common.h):
	Added. (vm/stringlocal.h): Likewise. (vm/vm.h): Removed.
	(getState): Implemented.

	 * src/threads/threads-common.c (vm/vm.h): Added.
	(threads_get_state): New function. (threads_dump): Print thread
	state.

	 * src/threads/threads-common.h (THREAD_STATE_NEW)
	(THREAD_STATE_RUNNABLE, THREAD_STATE_BLOCKED, THREAD_STATE_WAITING)
	(THREAD_STATE_TIMED_WAITING, THREAD_STATE_TERMINATED): Defined.
	(threads_get_state): Added.

	 * src/threads/native/threads.c (threads_init): Set thread-state.
	(threads_startup_thread): Likewise.
	(threads_attach_current_thread): Likewise.
	(threads_detach_thread): Likewise. (threads_wait_with_timeout):
	Likewise.

	 * src/threads/native/threads.h (threadobject): Added state field.

	 * src/native/native.c (dummynativetable) [ENABLE_JAVASE]: Added
	Java_java_lang_VMThread_getState. ........ r7670 | twisti |
	2007-04-05 13:57:59 +0200 (Thu, 05 Apr 2007) | 13 lines

	 * src/threads/threads-common.c (threads_get_state): Renamed to
	threads_thread_get_state. (threads_thread_is_alive): New function.

	 * src/threads/threads-common.h: Likewise.

	 * src/native/vm/java_lang_Thread.c (isAlive): New function.
	(getState): Renamed threads_get_state to threads_thread_get_state.

	 * src/native/vm/java_lang_Thread.h (isAlive): Added.

	 * src/native/vm/cldc1.1/java_lang_Thread.c (isAlive): New
	function. ........ r7671 | twisti | 2007-04-05 14:06:28 +0200
	(Thu, 05 Apr 2007) | 3 lines

	 * src/vm/exceptions.c (exceptions_throw_nosuchmethoderror)
	[!ENABLE_JAVASE]: Throw an error. ........ r7673 | michi |
	2007-04-05 15:22:37 +0200 (Thu, 05 Apr 2007) | 3 lines

	 * src/vm/jit/codegen-common.c (codegen_get_pv_from_pc): Inserted
	ifdef to fix compiler error with disabled threads. ........
	[c1e618e7a27b]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_get_pv_from_pc): Inserted
	ifdef to fix compiler error with disabled threads.
	[bab8588a9998]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/gc.c, src/mm/cacao-
	gc/heap.c, src/vm/exceptions.c:
	* src/mm/cacao-gc/heap.c: Added include to fix compile warning.

	* src/mm/cacao-gc/compact.c: Made most functions static.

	* src/mm/cacao-gc/gc.c (gc_collect): Fixed debug output for current
	stacktrace.
	[f0c3b9c0ed44]

2007-04-05  twisti  <twisti>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_throw_nosuchmethoderror)
	[!ENABLE_JAVASE]: Throw an error.
	[bc502afcb318]

	* src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/java_lang_Thread.c, src/native/vm/java_lang_Thread.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/threads/threads-common.c (threads_get_state): Renamed to
	threads_thread_get_state. (threads_thread_is_alive): New function.

	* src/threads/threads-common.h: Likewise.

	* src/native/vm/java_lang_Thread.c (isAlive): New function.
	(getState): Renamed threads_get_state to threads_thread_get_state.

	* src/native/vm/java_lang_Thread.h (isAlive): Added.

	* src/native/vm/cldc1.1/java_lang_Thread.c (isAlive): New function.
	[60d709c07fc6]

	* src/native/native.c, src/native/vm/java_lang_Thread.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h:
	* src/native/vm/java_lang_Thread.c [ENABLE_THREADS]
	(threads/native/threads.h): Removed. (threads/threads-common.h):
	Added. (vm/stringlocal.h): Likewise. (vm/vm.h): Removed. (getState):
	Implemented.

	* src/threads/threads-common.c (vm/vm.h): Added.
	(threads_get_state): New function. (threads_dump): Print thread
	state.

	* src/threads/threads-common.h (THREAD_STATE_NEW)
	(THREAD_STATE_RUNNABLE, THREAD_STATE_BLOCKED, THREAD_STATE_WAITING)
	(THREAD_STATE_TIMED_WAITING, THREAD_STATE_TERMINATED): Defined.
	(threads_get_state): Added.

	* src/threads/native/threads.c (threads_init): Set thread-state.
	(threads_startup_thread): Likewise. (threads_attach_current_thread):
	Likewise. (threads_detach_thread): Likewise.
	(threads_wait_with_timeout): Likewise.

	* src/threads/native/threads.h (threadobject): Added state field.

	* src/native/native.c (dummynativetable) [ENABLE_JAVASE]: Added
	Java_java_lang_VMThread_getState.
	[2ef27aeb36c1]

2007-04-05  michi  <michi>

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_collect) [!ENABLE_THREADS]: Temporarly
	defined away printing of current stacktrace.
	[7a3f09dfa9ab]

	* configure.ac, src/mm/cacao-gc/gc.c, src/native/native.c,
	src/native/vm/gnu/sun_misc_Unsafe.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/exceptions.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/arm/md.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/jit.h, src/vm/jit/mips/asmpart.S, src/vm/jit/mips/md-
	abi.h, src/vm/jit/parse.c, src/vm/jit/parse.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/replace.c, src/vm/jit/replace.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/show.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/stack.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-stackbased-
	gen.inc, src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/linux/md-os.c, src/vmcore/statistics.c:
	Merged revisions 7642-7664 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7643 | twisti | 2007-04-03 13:35:40 +0200 (Tue, 03 Apr
	2007) | 3 lines

	 * src/vmcore/statistics.c (statistics_print_memory_usage): Prevent
	compiler warning on 64-bit machines. ........ r7644 | twisti |
	2007-04-03 13:37:30 +0200 (Tue, 03 Apr 2007) | 3 lines

	 * src/vm/jit/x86_64/emit.c (emit_replacement_stubs): Removed
	unused variable disp. ........ r7645 | twisti | 2007-04-03
	13:46:50 +0200 (Tue, 03 Apr 2007) | 3 lines

	 * src/vm/jit/allocator/simplereg.c (simplereg_make_statistics):
	Fixed compiler warning. ........ r7646 | twisti | 2007-04-03
	13:56:21 +0200 (Tue, 03 Apr 2007) | 3 lines

	 * src/vm/jit/replace.c (native/include/java_lang_String.h):
	Removed. (java_value_print): Don't cast to java_lang_String.
	........ r7647 | twisti | 2007-04-03 14:10:22 +0200 (Tue, 03 Apr
	2007) | 2 lines

	 * src/vm/jit/jit.h: Includes alpha-sorted. ........ r7648 |
	twisti | 2007-04-03 15:14:09 +0200 (Tue, 03 Apr 2007) | 3 lines

	 * src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigfpe): Use
	exceptions_new_hardware_exception. ........ r7649 | twisti |
	2007-04-03 15:47:39 +0200 (Tue, 03 Apr 2007) | 4 lines

	 * src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigsegv): Use
	exceptions_new_hardware_exception. [ENABLE_THREADS]
	(md_signal_handler_sigusr2): New function. ........ r7650 | twisti
	| 2007-04-03 15:48:10 +0200 (Tue, 03 Apr 2007) | 2 lines

	 * configure.ac: Added armv4 architecture. ........ r7651 |
	twisti | 2007-04-03 16:00:32 +0200 (Tue, 03 Apr 2007) | 13 lines

	 * src/vm/jit/stacktrace.c
	(stacktrace_create_inline_stackframeinfo): Removed.
	(stacktrace_inline_arithmeticexception): Likewise.
	(stacktrace_inline_arrayindexoutofboundsexception): Likewise.
	(stacktrace_inline_arraystoreexception): Likewise.
	(stacktrace_inline_classcastexception): Likewise.
	(stacktrace_inline_nullpointerexception): Likewise.
	(stacktrace_inline_fillInStackTrace): Likewise.
	(stacktrace_hardware_arithmeticexception): Likewise.
	(stacktrace_hardware_nullpointerexception): Likewise.

	 * src/vm/jit/stacktrace.h: Likewise. ........ r7652 | twisti |
	2007-04-03 16:23:16 +0200 (Tue, 03 Apr 2007) | 15 lines

	 * src/threads/native/threads.h (STACKFRAMEINFO): Return
	stackframeinfo instead of a pointer to it.
	  * src/threads/none/threads.h (STACKFRAMEINFO): Likewise.

	 * src/vm/jit/codegen-common.c (codegen_finish_native_call):
	STACKFRAMEINFO changes.

	 * src/vm/jit/replace.c (replace_recover_source_state): Likewise.

	 * src/vm/jit/stacktrace.c (stacktrace_create_stackframeinfo):
	Likewise. (stacktrace_create_extern_stackframeinfo): Likewise.
	(stacktrace_create_native_stackframeinfo): Likewise.
	(stacktrace_remove_stackframeinfo): Likewise. ........ r7653 |
	twisti | 2007-04-03 16:34:23 +0200 (Tue, 03 Apr 2007) | 5 lines

	 * src/vm/jit/arm/emit.c (emit_exception_stubs): Removed.

	 * src/vm/jit/arm/md.c (md_codegen_patch_branch): Likewise.
	(md_stacktrace_get_returnaddress): Removed debug code. ........
	r7654 | twisti | 2007-04-03 17:22:21 +0200 (Tue, 03 Apr 2007) | 4
	lines

	 * src/vm/exceptions.c (exceptions_fillinstacktrace)
	[ENABLE_JAVAME_CLDC1_1]: fillInStackTrace has another signature in
	CLDC-1.1. ........ r7655 | twisti | 2007-04-03 17:22:57 +0200
	(Tue, 03 Apr 2007) | 3 lines

	 * src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigfpe): Use
	exceptions_new_hardware_exception. ........ r7656 | twisti |
	2007-04-03 17:29:26 +0200 (Tue, 03 Apr 2007) | 5 lines

	 * src/vm/jit/replace.c (threads/threads-common.h): Added.

	 * src/vm/jit/replace.h: Moved empty defines to the top of the file
	to see what's happening when !defined(ENABLE_REPLACEMENT).
	........ r7657 | twisti | 2007-04-03 17:51:52 +0200 (Tue, 03 Apr
	2007) | 24 lines

	 * src/vm/jit/stacktrace.c (stacktrace_create): Changed signature.

	 (stacktrace_fillInStackTrace): Pass stackframeinfo to
	stacktrace_create. (stacktrace_getClassContext): Likewise.
	(stacktrace_getCurrentClass): Likewise. (stacktrace_getStack):
	Likewise. (stacktrace_dump_trace): Removed.

	 * src/vm/jit/stacktrace.h (threads/native/threads.h)
	(threads/none/threads.h): Removed. (stacktrace_create): Added.
	(stacktrace_dump_trace): Removed.

	 * src/threads/native/threads.c (threads_dump): Removed.
	  * src/threads/native/threads.h (threads_dump): Likewise.

	 * src/threads/threads-common.c (vm/jit/stacktrace.h): Added.
	(threads_dump): Added. (threads_print_stacktrace): Likewise.

	 * src/threads/threads-common.h (threads_dump): Added.
	(threads_print_stacktrace): Likewise. ........ r7658 | twisti |
	2007-04-03 18:06:30 +0200 (Tue, 03 Apr 2007) | 10 lines

	 * src/threads/threads-common.c (threads_print_stacktrace): Pass
	stackframeinfo to stacktrace_create.

	 * src/vm/jit/codegen-common.c (threads/native/threads.h): Removed.
	(threads/threads-common.h): Added. (codegen_get_pv_from_pc):
	Replaced stacktrace_dump_trace with threads_print_stacktrace.

	 * src/vm/jit/stacktrace.h (stacktrace_print_trace_from_buffer):
	Added. ........ r7659 | twisti | 2007-04-03 20:02:48 +0200 (Tue,
	03 Apr 2007) | 2 lines

	 * src/vm/jit/mips/md-abi.h (REG_FA0, REG_FA1, REG_FA2): Defined.
	........ r7660 | twisti | 2007-04-03 23:30:13 +0200 (Tue, 03 Apr
	2007) | 2 lines

	 * src/vm/jit/i386/linux/md-os.c (threads/threads-common.h): Added.
	........ r7661 | twisti | 2007-04-04 00:29:59 +0200 (Wed, 04 Apr
	2007) | 11 lines

	 * src/vm/jit/alpha/asmpart.S: Replaced __GNU__ with __linux__ for
	exec-stacks.
	  * src/vm/jit/arm/asmpart.S: Likewise.
	  * src/vm/jit/i386/asmpart.S: Likewise.
	  * src/vm/jit/mips/asmpart.S: Likewise.
	  * src/vm/jit/powerpc/asmpart.S: Likewise.
	  * src/vm/jit/powerpc64/asmpart.S: Likewise.
	  * src/vm/jit/s390/asmpart.S: Likewise.
	  * src/vm/jit/sparc64/asmpart.S: Likewise.
	  * src/vm/jit/x86_64/asmpart.S: Likewise. ........ r7662 | twisti |
	2007-04-04 16:16:37 +0200 (Wed, 04 Apr 2007) | 8 lines

	 * src/native/vm/gnu/sun_misc_Unsafe.c: Header changes.

	 * src/native/native.c [ENABLE_JAVASE]
	(native/include/sun_misc_Unsafe.h): Added. [ENABLE_JAVASE]
	(dummynativetable): Added Java_sun_misc_Unsafe_objectFieldOffset
	and Java_sun_misc_Unsafe_compareAndSwapInt. ........ r7663 |
	twisti | 2007-04-05 00:14:42 +0200 (Thu, 05 Apr 2007) | 24 lines

	 * src/vm/jit/parse.c (BYTECODEINDEX_TO_BASICBLOCK): Added.
	(parsedata_t): Removed instructionstart, added bytecodestart,
	basicblockstart, bytecodemap, instructionmap. (parse_setup):
	Allocate new arrays. (parse_bytecodeindex_to_basicblock): New
	function. (parse_mark_exception_boundaries): Pass parsedata_t.
	(parse_resolve_exception_table): Likewise. (parse): Completely
	rewritten so we are able to have basic block boundaries on IR
	instruction level. We now also resolve basic block pointers in
	this pass.

	 * src/vm/jit/parse.h (MARK_BASICBLOCK): Pass parsedata_t.
	(BLOCK_OF): Removed.

	 * src/vm/jit/jit.h (jitdata): Removed basicblockindex.

	 * src/vm/jit/show.c (SHOW_TARGET): Print block instead of
	insindex. (show_icmd): Likewise.

	 * src/vm/jit/stack.c (BRANCH_TARGET): Directly use block.
	(stack_analyse): Likewise.
	  * src/vm/jit/verify/icmds.c: Likewise.
	  * src/vm/jit/verify/typecheck-stackbased.c: Likewise. ........ r7664
	| twisti | 2007-04-05 00:29:36 +0200 (Thu, 05 Apr 2007) | 4 lines

	 * src/vm/jit/verify/typecheck-stackbased.c: Use block directly
	instead of insindex.
	  * src/vm/jit/verify/typecheck-stackbased-gen.inc: Newly generated.
	........
	[9d86f2708920]

2007-04-05  twisti  <twisti>

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_print_stacktrace): Removed
	!ENABLE_THREADS code, since this file is only compiled with
	ENABLE_THREADS.
	[502ecbd2fba0]

2007-04-05  michi  <michi>

	* configure.ac, src/mm/cacao-gc/rootset.h, src/vm/exceptions.c,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/md.c,
	src/vm/jit/i386/asmpart.S, src/vm/jit/jit.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/parse.c, src/vm/jit/parse.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/s390/asmpart.S, src/vm/jit/stack.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/emit.c, src/vmcore/statistics.c:
	* src/mm/cacao-gc/rootset.h [!ENABLE_THREADS]: Added missing
	include.
	[604173540cca]

2007-04-04  twisti  <twisti>

	* src/vm/jit/verify/typecheck-stackbased-gen.inc, src/vm/jit/verify
	/typecheck-stackbased.c:
	* src/vm/jit/verify/typecheck-stackbased.c: Use block directly
	instead of insindex.
	* src/vm/jit/verify/typecheck-stackbased-gen.inc: Newly generated.
	[9c43f6bf257b]

	* src/vm/jit/jit.h, src/vm/jit/parse.c, src/vm/jit/parse.h,
	src/vm/jit/show.c, src/vm/jit/stack.c, src/vm/jit/verify/icmds.c,
	src/vm/jit/verify/typecheck-stackbased.c:
	* src/vm/jit/parse.c (BYTECODEINDEX_TO_BASICBLOCK): Added.
	(parsedata_t): Removed instructionstart, added bytecodestart,
	basicblockstart, bytecodemap, instructionmap. (parse_setup):
	Allocate new arrays. (parse_bytecodeindex_to_basicblock): New
	function. (parse_mark_exception_boundaries): Pass parsedata_t.
	(parse_resolve_exception_table): Likewise. (parse): Completely
	rewritten so we are able to have basic block boundaries on IR
	instruction level. We now also resolve basic block pointers in this
	pass.

	* src/vm/jit/parse.h (MARK_BASICBLOCK): Pass parsedata_t.
	(BLOCK_OF): Removed.

	* src/vm/jit/jit.h (jitdata): Removed basicblockindex.

	* src/vm/jit/show.c (SHOW_TARGET): Print block instead of insindex.
	(show_icmd): Likewise.

	* src/vm/jit/stack.c (BRANCH_TARGET): Directly use block.
	(stack_analyse): Likewise.
	* src/vm/jit/verify/icmds.c: Likewise.
	* src/vm/jit/verify/typecheck-stackbased.c: Likewise.
	[1c98fd306ae9]

	* src/native/native.c, src/native/vm/gnu/sun_misc_Unsafe.c:
	* src/native/vm/gnu/sun_misc_Unsafe.c: Header changes.

	* src/native/native.c [ENABLE_JAVASE]
	(native/include/sun_misc_Unsafe.h): Added. [ENABLE_JAVASE]
	(dummynativetable): Added Java_sun_misc_Unsafe_objectFieldOffset and
	Java_sun_misc_Unsafe_compareAndSwapInt.
	[567b543c09f0]

2007-04-03  twisti  <twisti>

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/i386/asmpart.S, src/vm/jit/mips/asmpart.S,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/s390/asmpart.S, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/alpha/asmpart.S: Replaced __GNU__ with __linux__ for
	exec-stacks.
	* src/vm/jit/arm/asmpart.S: Likewise.
	* src/vm/jit/i386/asmpart.S: Likewise.
	* src/vm/jit/mips/asmpart.S: Likewise.
	* src/vm/jit/powerpc/asmpart.S: Likewise.
	* src/vm/jit/powerpc64/asmpart.S: Likewise.
	* src/vm/jit/s390/asmpart.S: Likewise.
	* src/vm/jit/sparc64/asmpart.S: Likewise.
	* src/vm/jit/x86_64/asmpart.S: Likewise.
	[444cc6a0252c]

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (threads/threads-common.h): Added.
	[eb056f855d16]

	* src/vm/jit/mips/md-abi.h:
	* src/vm/jit/mips/md-abi.h (REG_FA0, REG_FA1, REG_FA2): Defined.
	[68805417d49c]

	* src/threads/threads-common.c, src/vm/jit/codegen-common.c,
	src/vm/jit/stacktrace.h:
	* src/threads/threads-common.c (threads_print_stacktrace): Pass
	stackframeinfo to stacktrace_create.

	* src/vm/jit/codegen-common.c (threads/native/threads.h): Removed.
	(threads/threads-common.h): Added. (codegen_get_pv_from_pc):
	Replaced stacktrace_dump_trace with threads_print_stacktrace.

	* src/vm/jit/stacktrace.h (stacktrace_print_trace_from_buffer):
	Added.
	[92e3e05961c1]

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.c (stacktrace_create): Changed signature.

	(stacktrace_fillInStackTrace): Pass stackframeinfo to
	stacktrace_create. (stacktrace_getClassContext): Likewise.
	(stacktrace_getCurrentClass): Likewise. (stacktrace_getStack):
	Likewise. (stacktrace_dump_trace): Removed.

	* src/vm/jit/stacktrace.h (threads/native/threads.h)
	(threads/none/threads.h): Removed. (stacktrace_create): Added.
	(stacktrace_dump_trace): Removed.

	* src/threads/native/threads.c (threads_dump): Removed.
	* src/threads/native/threads.h (threads_dump): Likewise.

	* src/threads/threads-common.c (vm/jit/stacktrace.h): Added.
	(threads_dump): Added. (threads_print_stacktrace): Likewise.

	* src/threads/threads-common.h (threads_dump): Added.
	(threads_print_stacktrace): Likewise.
	[63bf8943ed5b]

	* src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/replace.c (threads/threads-common.h): Added.

	* src/vm/jit/replace.h: Moved empty defines to the top of the file
	to see what's happening when !defined(ENABLE_REPLACEMENT).
	[9bff9dceafb9]

	* src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/x86_64/linux/md-os.c (md_signal_handler_sigfpe): Use
	exceptions_new_hardware_exception.
	[76a092e62a17]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_fillinstacktrace)
	[ENABLE_JAVAME_CLDC1_1]: fillInStackTrace has another signature in
	CLDC-1.1.
	[86cf630e9ed0]

	* src/vm/jit/arm/emit.c, src/vm/jit/arm/md.c:
	* src/vm/jit/arm/emit.c (emit_exception_stubs): Removed.

	* src/vm/jit/arm/md.c (md_codegen_patch_branch): Likewise.
	(md_stacktrace_get_returnaddress): Removed debug code.
	[c10040663367]

	* src/threads/native/threads.h, src/threads/none/threads.h, src/vm/jit
	/codegen-common.c, src/vm/jit/replace.c, src/vm/jit/stacktrace.c:
	* src/threads/native/threads.h (STACKFRAMEINFO): Return
	stackframeinfo instead of a pointer to it.
	* src/threads/none/threads.h (STACKFRAMEINFO): Likewise.

	* src/vm/jit/codegen-common.c (codegen_finish_native_call):
	STACKFRAMEINFO changes.

	* src/vm/jit/replace.c (replace_recover_source_state): Likewise.

	* src/vm/jit/stacktrace.c (stacktrace_create_stackframeinfo):
	Likewise. (stacktrace_create_extern_stackframeinfo): Likewise.
	(stacktrace_create_native_stackframeinfo): Likewise.
	(stacktrace_remove_stackframeinfo): Likewise.
	[a871084ee7e0]

	* src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h:
	* src/vm/jit/stacktrace.c (stacktrace_create_inline_stackframeinfo):
	Removed. (stacktrace_inline_arithmeticexception): Likewise.
	(stacktrace_inline_arrayindexoutofboundsexception): Likewise.
	(stacktrace_inline_arraystoreexception): Likewise.
	(stacktrace_inline_classcastexception): Likewise.
	(stacktrace_inline_nullpointerexception): Likewise.
	(stacktrace_inline_fillInStackTrace): Likewise.
	(stacktrace_hardware_arithmeticexception): Likewise.
	(stacktrace_hardware_nullpointerexception): Likewise.

	* src/vm/jit/stacktrace.h: Likewise.
	[af68330ce7c0]

	* configure.ac:
	* configure.ac: Added armv4 architecture.
	[c937cb3cea57]

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigsegv): Use
	exceptions_new_hardware_exception. [ENABLE_THREADS]
	(md_signal_handler_sigusr2): New function.
	[e9e777a56623]

	* src/vm/jit/i386/linux/md-os.c:
	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigfpe): Use
	exceptions_new_hardware_exception.
	[a97e8e6dc1e0]

	* src/vm/jit/jit.h:
	* src/vm/jit/jit.h: Includes alpha-sorted.
	[3500fd328b80]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c (native/include/java_lang_String.h): Removed.
	(java_value_print): Don't cast to java_lang_String.
	[ad5d673f7d24]

	* src/vm/jit/allocator/simplereg.c:
	* src/vm/jit/allocator/simplereg.c (simplereg_make_statistics):
	Fixed compiler warning.
	[1055a2f64e7f]

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_replacement_stubs): Removed unused
	variable disp.
	[2e50907d43f4]

	* src/vmcore/statistics.c:
	* src/vmcore/statistics.c (statistics_print_memory_usage): Prevent
	compiler warning on 64-bit machines.
	[ab67f899c788]

2007-04-02  michi  <michi>

	* src/vm/jit/replace.c:
	Merged revisions 7639-7641 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7641 | michi | 2007-04-03 01:13:55 +0200 (Tue, 03 Apr
	2007) | 2 lines

	 * src/vm/jit/replace.c: Added include to fix crash on x86_64.
	........
	[4680535245f6]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c: Added include to fix crash on x86_64.
	[ebc64b980d76]

2007-04-02  twisti  <twisti>

	* src/mm/cacao-gc/gc.h, src/vm/jit/alpha/codegen.c:
	* src/mm/cacao-gc/gc.h: Enable __ALPHA__.

	* src/vm/jit/alpha/codegen.c (vm/jit/abi.h): Added.
	(createnativestub) [ENABLE_GC_CACAO]: Save and restore callee saved
	integer registers in the stackframe info for the GC.
	[137d30680194]

2007-04-02  michi  <michi>

	* src/vm/jit/alpha/linux/md-os.c, src/vm/jit/alpha/md-abi.c:
	Merged revisions 7632-7638 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7637 | twisti | 2007-04-02 22:58:30 +0200 (Mon, 02 Apr
	2007) | 4 lines

	 * src/vm/jit/alpha/md-abi.c (abi_registers_integer_argument):
	Added. (abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise. ........ r7638 |
	twisti | 2007-04-02 23:24:59 +0200 (Mon, 02 Apr 2007) | 4 lines

	 * src/vm/jit/alpha/linux/md-os.c [ENABLE_THREADS]
	(threads/native/threads.h): Added. [ENABLE_THREADS]
	(md_signal_handler_sigusr2): Added #ifdef. ........
	[cd78728131f5]

2007-04-02  twisti  <twisti>

	* src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c [ENABLE_THREADS]
	(threads/native/threads.h): Added. [ENABLE_THREADS]
	(md_signal_handler_sigusr2): Added #ifdef.
	[cee6cdea0943]

	* src/vm/jit/alpha/md-abi.c:
	* src/vm/jit/alpha/md-abi.c (abi_registers_integer_argument): Added.
	(abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise.
	[8acb739340f8]

	* src/mm/cacao-gc/gc.h, src/vm/jit/x86_64/codegen.c:
	* src/mm/cacao-gc/gc.h: Enable __X86_64__.

	* src/vm/jit/x86_64/codegen.c (vm/jit/abi.h): Added.
	(createnativestub) [ENABLE_GC_CACAO]: Save and restore callee saved
	integer registers in the stackframe info for the GC.
	[d62d435e5ddf]

2007-04-02  michi  <michi>

	* tests/gc/New.java:
	* tests/gc/New.java: Added testcase.
	[5ee8dcaa0074]

2007-04-02  twisti  <twisti>

	* src/mm/cacao-gc/gc.h, src/vm/jit/powerpc/codegen.c:
	* src/mm/cacao-gc/gc.h: Enable __POWERPC__.

	* src/vm/jit/powerpc/codegen.c (vm/jit/abi.h): Added.
	(createnativestub) [ENABLE_GC_CACAO]: Save and restore callee saved
	integer registers in the stackframe info for the GC.
	[5a0de1a6ba64]

2007-04-02  michi  <michi>

	* src/mm/cacao-gc/heap.c:
	* src/mm/cacao-gc/heap.c (heap_print_object): Fixed for 64 bit
	architectures.
	[1ed0f8681b94]

	* src/vm/jit/parse.c, src/vm/jit/stacktrace.c, src/vm/jit/x86_64/md-
	abi.c:
	Merged revisions 7628-7631 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7629 | twisti | 2007-04-02 21:45:20 +0200 (Mon, 02 Apr
	2007) | 3 lines

	 * src/vm/jit/parse.c (parse): JAVA_GOTO_W must be converted to a
	ICMD_GOTO. ........ r7630 | twisti | 2007-04-02 21:56:14 +0200
	(Mon, 02 Apr 2007) | 4 lines

	 * src/vm/jit/x86_64/md-abi.c (abi_registers_integer_argument):
	Added. (abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise. ........ r7631 |
	michi | 2007-04-02 22:04:22 +0200 (Mon, 02 Apr 2007) | 3 lines

	 * src/vm/jit/stacktrace.c (stacktrace_create): Returns NULL if
	there is no stacktrace available for the given thread. Fixed
	comments. ........
	[1e29fb9df8ce]

	* src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_create): Returns NULL if there
	is no stacktrace available for the given thread. Fixed comments.
	[63577053a131]

2007-04-02  twisti  <twisti>

	* src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/x86_64/md-abi.c (abi_registers_integer_argument):
	Added. (abi_registers_integer_saved): Likewise.
	(abi_registers_integer_temporary): Likewise.
	[3da24dcecde5]

	* src/vm/jit/parse.c:
	* src/vm/jit/parse.c (parse): JAVA_GOTO_W must be converted to a
	ICMD_GOTO.
	[6261bb84b822]

2007-04-02  michi  <michi>

	* THIRDPARTY, src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/jit.h,
	src/vm/jit/parse.c, src/vm/jit/parse.h, src/vm/jit/powerpc/darwin
	/md-asm.h, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/stack.c:
	Merged revisions 7616-7627 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7617 | twisti | 2007-03-30 01:22:07 +0200 (Fri, 30 Mar
	2007) | 3 lines

	 * src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Fixed address check (thanks Michi). ........ r7619 | twisti |
	2007-03-30 13:41:27 +0200 (Fri, 30 Mar 2007) | 9 lines

	 * src/vm/jit/parse.c (parse_realloc_instructions): Renamed ipc to
	icount. (parse): Renamed ipc to icount, set method variables at
	the very end and use local variables before.

	 * src/vm/jit/parse.h (INSTRUCTIONS_CHECK): Renamed ipc to icount.
	(PINC): Likewise. (OP_PREPARE_FLAGS): Likewise. ........ r7620 |
	edwin | 2007-04-01 12:50:39 +0200 (Sun, 01 Apr 2007) | 3 lines

	 * contrib/vmlog: Committed vmlog 0.0.5.
	  * THIRDPARTY: Added copyright notice for vmlog. ........ r7621 |
	stefan | 2007-04-01 18:18:16 +0200 (Sun, 01 Apr 2007) | 3 lines

	 * src/vm/jit/powerpc/darwin/md-asm.h, src/vm/jit/i386/darwin/md-
	asm.h: added missing symbol asm_vm_call_method_end. ........ r7622
	| ajordan | 2007-04-02 00:53:59 +0200 (Mon, 02 Apr 2007) | 3 lines

	 * src/vm/jit/sparc64/codegen.c: Implemented float argument passing
	for builtin calls.
	  * src/vm/jit/sparc64/codegen.h: Likewise. ........ r7623 | twisti |
	2007-04-02 15:45:30 +0200 (Mon, 02 Apr 2007) | 5 lines

	 * src/vm/jit/stack.c (stack_mark_reached): Added assert on b.
	(stack_mark_reached_from_outvars): Likewise.
	(stack_reach_next_block): Use NULL instead of !. (stack_analyse):
	Indent. ........ r7624 | twisti | 2007-04-02 18:09:44 +0200 (Mon,
	02 Apr 2007) | 3 lines

	 * src/vm/jit/stack.c (stack_reach_next_block): Reformatted
	comments. (stack_analyse): Likewise. ........ r7627 | twisti |
	2007-04-02 20:56:59 +0200 (Mon, 02 Apr 2007) | 8 lines

	 * src/vm/jit/jit.h (INS_FLAG_BASICBLOCK): Defined.
	(INS_FLAG_ID_SHIFT): Changed to 5.
	(INSTRUCTION_STARTS_BASICBLOCK): Added.

	 * src/vm/jit/parse.c (parse): Changed basic block determination.
	Now basic blocks can start at IR instruction level. This is
	required for slow-fast path builtins. ........
	[f9d0a4f6327b]

2007-04-02  twisti  <twisti>

	* src/vm/jit/jit.h, src/vm/jit/parse.c:
	* src/vm/jit/jit.h (INS_FLAG_BASICBLOCK): Defined.
	(INS_FLAG_ID_SHIFT): Changed to 5. (INSTRUCTION_STARTS_BASICBLOCK):
	Added.

	* src/vm/jit/parse.c (parse): Changed basic block determination. Now
	basic blocks can start at IR instruction level. This is required for
	slow-fast path builtins.
	[ef50941ead84]

2007-04-02  michi  <michi>

	* tests/gc/ThreadJava.java, tests/gc/ThreadSleep.java:
	* tests/gc/ThreadJava.java: Added testcase.
	* tests/gc/ThreadSleep.java: Added testcase.
	[0a205fe910b4]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/mark.c, src/vm/jit/parse.c,
	src/vm/jit/parse.h, src/vm/jit/stack.c:
	* src/mm/cacao-gc/gc.c (gc_collect): Moved notification of finalizer
	thread.
	* src/mm/cacao-gc/mark.c (mark_me): Cleaned up and ifdefed finalizer
	code.
	[0eb8853e9bf6]

2007-04-02  twisti  <twisti>

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_reach_next_block): Reformatted comments.
	(stack_analyse): Likewise.
	[3e3bfb01e253]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_mark_reached): Added assert on b.
	(stack_mark_reached_from_outvars): Likewise.
	(stack_reach_next_block): Use NULL instead of !. (stack_analyse):
	Indent.
	[72e9bd12289b]

2007-04-01  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h:
	* src/vm/jit/sparc64/codegen.c: Implemented float argument passing
	for builtin calls.
	* src/vm/jit/sparc64/codegen.h: Likewise.
	[90c476ea0a77]

2007-04-01  stefan  <stefan>

	* src/vm/jit/i386/darwin/md-asm.h, src/vm/jit/powerpc/darwin/md-asm.h:
	* src/vm/jit/powerpc/darwin/md-asm.h, src/vm/jit/i386/darwin/md-
	asm.h: added missing symbol asm_vm_call_method_end.
	[81dbc8f328aa]

2007-04-01  edwin  <edwin>

	* THIRDPARTY, contrib/vmlog/COPYING, contrib/vmlog/Makefile,
	contrib/vmlog/README, contrib/vmlog/t/concat.c,
	contrib/vmlog/t/file.c, contrib/vmlog/t/hash.c,
	contrib/vmlog/t/log.c, contrib/vmlog/t/memdup.c,
	contrib/vmlog/t/opt.c, contrib/vmlog/t/prolog.h,
	contrib/vmlog/t/ring.c, contrib/vmlog/t/string.c,
	contrib/vmlog/t/tags.c, contrib/vmlog/t/threadhash.c,
	contrib/vmlog/vmlog.c, contrib/vmlog/vmlog.h,
	contrib/vmlog/vmlog_cacao.c, contrib/vmlog/vmlog_cacao.h,
	contrib/vmlog/vmlog_cacao.patch, contrib/vmlog/vmlog_jamvm.c,
	contrib/vmlog/vmlog_jamvm.h, contrib/vmlog/vmlog_jamvm.patch,
	contrib/vmlog/vmlogdiff.c, contrib/vmlog/vmlogdump.c,
	contrib/vmlog/vmlogindex.c:
	* contrib/vmlog: Committed vmlog 0.0.5.
	* THIRDPARTY: Added copyright notice for vmlog.
	[13140b8f0f3d]

2007-03-30  twisti  <twisti>

	* src/vm/jit/parse.c, src/vm/jit/parse.h:
	* src/vm/jit/parse.c (parse_realloc_instructions): Renamed ipc to
	icount. (parse): Renamed ipc to icount, set method variables at the
	very end and use local variables before.

	* src/vm/jit/parse.h (INSTRUCTIONS_CHECK): Renamed ipc to icount.
	(PINC): Likewise. (OP_PREPARE_FLAGS): Likewise.
	[5f89b928fab8]

2007-03-30  michi  <michi>

	* tests/gc/Makefile, tests/gc/NativeGlobalRef.java, tests/gc/native.c:
	* tests/gc/NativeGlobalRef.java: Added testcase for global
	references.
	* tests/gc/native.c: Added native library for all testcases.
	* tests/gc/Makefile: Added for easy handling of native testcases.
	[cad98d81e6c1]

2007-03-29  twisti  <twisti>

	* src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h:
	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Fixed address check (thanks Michi).
	[5d97b9265241]

2007-03-29  michi  <michi>

	* src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/md.c:
	Merged revisions 7599,7601-7615 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7604 | pm | 2007-03-29 08:52:15 +0200 (Thu, 29 Mar 2007)
	| 7 lines

	 * src/vm/jit/s390/md-abi.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/arch.h: Changed a lot.
	........ r7605 | twisti | 2007-03-29 13:04:25 +0200 (Thu, 29 Mar
	2007) | 3 lines

	 * src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Check for addr == NULL in NPE case. ........ r7611 | ajordan |
	2007-03-29 23:37:40 +0200 (Thu, 29 Mar 2007) | 6 lines

	 * src/vm/jit/sparc64/md.c (md_get_pv_from_pc): Implemented sethi
	hanlding.

	 * src/vm/jit/sparc64/codegen.c (createnativestub): Fixed
	window/stack handling in case of exception.
	  * src/vm/jit/sparc64/asmpart.S (asm_call_jit_compiler): Likewise.
	........ r7612 | michi | 2007-03-29 23:56:35 +0200 (Thu, 29 Mar
	2007) | 2 lines

	 * src/mm/nogc.c: Fixed merging conflict which was commited to that
	file. ........ r7614 | ajordan | 2007-03-30 01:01:58 +0200 (Fri,
	30 Mar 2007) | 5 lines

	 * src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed
	ICMD_IREMPOW2. Added ICMD_L2F and ICMD_L2D. Fixed constant
	creation in IF_L* compares. ........
	[5fa9158bb902]

	* src/mm/boehm.c, src/mm/cacao-gc/copy.c, src/mm/cacao-gc/heap.c,
	src/mm/gc-common.h, src/mm/memory.h, src/mm/nogc.c,
	src/vm/builtin.c, src/vm/jit/mips/irix/md-os.c,
	src/vm/jit/mips/linux/md-os.c, src/vmcore/class.c:
	* src/vm/builtin.c (builtin_fast_new): Added.

	* src/mm/memory.h: Defined away GC macros for cacao gc.

	* src/vm/jit/mips/linux/md-os.c (md_init): Better use macro here.
	* src/vm/jit/mips/irix/md-os.c (md_init): See above.

	* src/vmcore/class.c (class_create_classinfo): Do not use GC macro.

	* src/mm/gc-common.h (heap_alloc): Changed signature of old
	heap_allocate.

	* src/mm/nogc.c (heap_alloc): Adapted to above changes.
	* src/mm/boehm.c (heap_alloc): See above.
	* src/mm/cacao-gc/heap.c (heap_alloc): See above.

	* src/mm/cacao-gc/copy.c: Removed wrongly placed comment.
	[53d07e4ed5dc]

2007-03-29  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c:
	* src/vm/jit/sparc64/codegen.c (codegen_emit): Fixed ICMD_IREMPOW2.
	Added ICMD_L2F and ICMD_L2D. Fixed constant creation in IF_L*
	compares.
	[67e44799d296]

2007-03-29  michi  <michi>

	* src/mm/cacao-gc/final.c, src/mm/cacao-gc/final.h, src/mm/cacao-
	gc/gc.c, src/mm/nogc.c:
	* src/mm/cacao-gc/gc.c (gc_finalizer_all): Implemented
	* src/mm/cacao-gc/final.c (final_set_all_reclaimable): Added.
	* src/mm/cacao-gc/final.h (final_set_all_reclaimable): Added
	prototype.
	[46e450965b78]

	* src/mm/nogc.c:
	* src/mm/nogc.c: Fixed merging conflict which was commited to that
	file.
	[c0c73c75fa54]

2007-03-29  ajordan  <ajordan>

	* src/vm/exceptions.h, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/md.c (md_get_pv_from_pc): Implemented sethi
	hanlding.

	* src/vm/jit/sparc64/codegen.c (createnativestub): Fixed
	window/stack handling in case of exception.
	* src/vm/jit/sparc64/asmpart.S (asm_call_jit_compiler): Likewise.
	[ab2fb8fcf377]

2007-03-29  michi  <michi>

	* src/mm/cacao-gc/final.c, tests/gc/Final.java,
	tests/gc/FinalExit.java, tests/gc/FinalForce.java:
	* src/mm/cacao-gc/final.c (final_register): Uses list_add_first
	instead of list_add_last to be more Sun-like.

	* tests/gc/Final.java: Added testcase for finalization testing.
	* tests/gc/FinalExit.java: See above.
	* tests/gc/FinalForce.java: See above.
	[9d2bb56faa1c]

	* src/vm/exceptions.h:
	Merged revisions 7600 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7600 | twisti | 2007-03-29 00:59:52 +0200 (Thu, 29 Mar
	2007) | 3 lines

	 * src/vm/exceptions.h (exceptionptr): Removed.
	(_no_threads_exceptionptr): Likewise. ........
	[099d13dd30cc]

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_collect): Added a global gc lock.
	[07040b7c00cc]

	* tests/gc/ThreadStress.java:
	* tests/gc/ThreadStress.java: Added stress test for threads.
	[1bae1bedc255]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/heap.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/replace.c,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.h:
	* src/mm/cacao-gc/heap.c (heap_increase_size): Uses vm_abort on
	error now.
	* src/mm/cacao-gc/gc.c (gc_finalize_all): Added.
	* src/vm/jit/replace.c (replace_me) [ENABLE_GC_CACAO]: Fixed ifdef
	here.
	[2bfff1dfed66]

2007-03-29  twisti  <twisti>

	* src/vm/jit/powerpc/linux/md-os.c:
	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv):
	Check for addr == NULL in NPE case.
	[be47a420f840]

2007-03-29  pm  <pm>

	* src/vm/jit/s390/arch.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.h:
	* src/vm/jit/s390/md-abi.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/arch.h: Changed a lot.
	[3c5a76b228f4]

2007-03-28  michi  <michi>

	* tests/gc/Chain.java, tests/gc/Hashcode.java, tests/gc/Simple.java:
	* test/gc: Added directory to contain Garbage Collector testcases.

	* test/gc/Chain.java: Added.
	* tests/gc/Simple.java: Added.
	* tests/gc/Hashcode.java: Added.
	[53b6c706a55f]

	* src/mm/cacao-gc/Makefile.am, src/mm/cacao-gc/compact.c, src/mm
	/cacao-gc/compact.h, src/mm/cacao-gc/copy.c, src/mm/cacao-gc/copy.h,
	src/mm/cacao-gc/final.c, src/mm/cacao-gc/final.h, src/mm/cacao-
	gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/heap.h, src/mm/cacao-gc/mark.c, src/mm/cacao-gc/mark.h, src/mm
	/cacao-gc/region.c, src/mm/cacao-gc/region.h, src/mm/cacao-
	gc/rootset.c, src/mm/cacao-gc/rootset.h:
	Removed author and contact from header, sorry for not listing every
	file here.
	[3791f0859589]

	* AUTHORS, configure.ac, src/Makefile.am, src/cacaoh/dummy.c, src/mm
	/boehm-gc/include/private/gc_locks.h, src/mm/nogc.c,
	src/native/include/Makefile.am, src/native/jni.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/threads/native/lock.c,
	src/threads/native/threads.c, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/access.c, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/global.h, src/vm/jit/abi.h, src/vm/jit/alpha/arch.h,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/codegen.h, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/linux/md-os.c, src/vm/jit/alpha/md.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/Makefile.am, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/arm/md.c, src/vm/jit/asmpart.h, src/vm/jit/code.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/codegen-
	common.h, src/vm/jit/disass-common.c, src/vm/jit/disass.h,
	src/vm/jit/dseg.c, src/vm/jit/dseg.h, src/vm/jit/emit-common.c,
	src/vm/jit/emit-common.h, src/vm/jit/i386/arch.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/codegen.h, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/m68k/Makefile.am, src/vm/jit/m68k/arch.h,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c, src/vm/jit/m68k
	/machine-instr.h, src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/m68k/uclinux/Makefile.am, src/vm/jit/m68k/uclinux/md-
	abi.c, src/vm/jit/m68k/uclinux/md-abi.h, src/vm/jit/m68k/uclinux/md-
	asm.h, src/vm/jit/m68k/uclinux/md-os.c, src/vm/jit/mips/arch.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/linux/md-
	abi.h, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/reg.c, src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/sparc64/arch.h,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/verify/typecheck-invoke.inc,
	src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/emit.h,
	src/vm/jit/x86_64/linux/md-os.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/signal.c, src/vm/signallocal.h,
	src/vm/string.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/descriptor.h, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/statistics.c,
	src/vmcore/statistics.h, src/vmcore/zip.c,
	tests/regression/native/Makefile.am:
	Merged revisions 7501-7598 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7503 | twisti | 2007-03-12 11:11:33 +0100 (Mon, 12 Mar
	2007) | 11 lines

	 * src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c
	(vm/vm.h): Added. (open): Call vm_abort.

	 * src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c
	(unistd.h): Added. (readByte): New function. (writeBuf):
	Likewise. (available0): Likewise. (close0): Likewise. ........
	r7504 | twisti | 2007-03-12 14:17:07 +0100 (Mon, 12 Mar 2007) | 2
	lines

	 * src/vm/jit/arm/md.c (vm/jit/codegen-common.h): Added. ........
	r7505 | twisti | 2007-03-12 14:34:37 +0100 (Mon, 12 Mar 2007) | 8
	lines

	 * src/vm/jit/codegen.c (codegen): Change the operand direction of
	some macros. Started to implement long-compares differently.

	 * src/vm/jit/codegen.h (M_AND, M_ORR, M_EOR, M_AND_IMM, M_MOVEQ)
	(M_MOVVS_IMM, M_MOVNE_IMM, M_MOVLT_IMM, M_MOVLS_IMM): Changed
	operand direction. (M_ORR_S, M_CMPEQ, M_CMPLE): New macro.
	........ r7510 | michi | 2007-03-13 14:19:07 +0100 (Tue, 13 Mar
	2007) | 2 lines

	 * src/vm/jit/arm/linux/Makefile.am: Fixed include path to care
	about builddir. ........ r7511 | michi | 2007-03-13 17:32:56 +0100
	(Tue, 13 Mar 2007) | 6 lines

	 * src/vm/jit/arm/codegen.c (codegen): Long branches are
	implemented differently now.

	 * src/vm/jit/arm/codegen.h (M_COMPARE): Easier macros without
	overjumps. (M_MOVEQ_IMM, M_MOVGT_IMM, M_ADDHI_IMM, M_SUBLO_IMM,
	M_CMPEQ_IMM): New macro. ........ r7513 | twisti | 2007-03-13
	21:31:23 +0100 (Tue, 13 Mar 2007) | 2 lines

	 * src/vm/jit/i386/codegen.c (codegen): Fixed compiler warning.
	........ r7514 | twisti | 2007-03-13 21:31:51 +0100 (Tue, 13 Mar
	2007) | 5 lines

	 * src/vm/jit/i386/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	........ r7516 | michi | 2007-03-14 13:00:07 +0100 (Wed, 14 Mar
	2007) | 2 lines

	 * src/mm/nogc.c: Fixed includes and exceptions. ........ r7518 |
	michi | 2007-03-14 17:44:05 +0100 (Wed, 14 Mar 2007) | 3 lines

	 * src/vm/jit/arm/emit.c (emit_verbosecall_enter): Fixed bug with
	inmemory arguments, which caused some crashes with verbose-calls.
	........ r7519 | michi | 2007-03-14 18:31:05 +0100 (Wed, 14 Mar
	2007) | 3 lines

	 * src/vm/jit/arm/codegen.c (codegen): All the long compares have a
	different implementation now. ........ r7520 | twisti |
	2007-03-14 22:16:04 +0100 (Wed, 14 Mar 2007) | 2 lines

	 * src/vm/jit/alpha/md.c (vm/jit/codegen-common.h): Added
	temporarily. ........ r7521 | twisti | 2007-03-14 22:18:00 +0100
	(Wed, 14 Mar 2007) | 5 lines

	 * src/vm/jit/alpha/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	........ r7522 | twisti | 2007-03-14 22:54:49 +0100 (Wed, 14 Mar
	2007) | 7 lines

	 * src/vmcore/statistics.c (size_string): Added.
	(statistics_print_memory_usage): Likewise.
	  * src/vmcore/statistics.h (size_string): Likewise.

	 * src/vm/string.c (vmcore/statistics.h): Added.
	(literalstring_u2): Added statistics. ........ r7524 | pm |
	2007-03-15 08:07:51 +0100 (Thu, 15 Mar 2007) | 7 lines

	 * src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h: Changed
	a lot.
	  * src/vm/jit/s390/tests, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/s390/tests/Makefile: Added opcode tests in java. ........
	r7525 | pm | 2007-03-15 09:23:19 +0100 (Thu, 15 Mar 2007) | 2 lines

	 * src/vm/jit/s390/tests/tests.java.pp: added INT2CHAR test testing
	negative values. ........ r7526 | twisti | 2007-03-15 10:28:56
	+0100 (Thu, 15 Mar 2007) | 3 lines

	 * src/native/jni.c (_Jv_jni_invokeNative): Release memory in
	exception case. ........ r7534 | pm | 2007-03-17 00:00:18 +0100
	(Sat, 17 Mar 2007) | 11 lines

	 * src/vm/exceptions.c (exceptions_handle_exception): 31 bit
	address comparison for S390. These address comparison macros need to
	be moved to some header.
	  * src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/s390/tests/Makefile: Changed a lot. ........ r7535 |
	twisti | 2007-03-17 13:57:32 +0100 (Sat, 17 Mar 2007) | 2 lines

	 * src/vm/builtin.c (builtin_isanysubclass): Cleanup and comments.
	........ r7536 | twisti | 2007-03-17 14:10:04 +0100 (Sat, 17 Mar
	2007) | 2 lines

	 * src/native/vm/gnu/java_lang_reflect_Method.c (vm/resolve.h):
	Added. ........ r7537 | twisti | 2007-03-17 14:11:11 +0100 (Sat,
	17 Mar 2007) | 3 lines

	 * src/vm/builtin.c (builtin_isanysubclass): Code cleanup.
	(builtin_isanysubclass_vftbl): Likewise. ........ r7538 | twisti |
	2007-03-17 14:12:00 +0100 (Sat, 17 Mar 2007) | 3 lines

	 * src/vm/builtin.h (builtin_isanysubclass_vftbl): Removed, made
	static. ........ r7543 | ajordan | 2007-03-20 01:25:19 +0100 (Tue,
	20 Mar 2007) | 3 lines

	 * src/vm/jit/sparc64/md-abi.c (md_param_alloc_native): using this
	for native param allocation. No need for my own version of this
	anymore.
	  * src/vm/jit/sparc64/codegen.c: Likewise. ........ r7547 | twisti |
	2007-03-21 14:18:20 +0100 (Wed, 21 Mar 2007) | 4 lines

	 * src/vmcore/linker.c (link_primitivetype_table): Set super class
	explicitly to NULL. (linker_compute_subclasses): Indent. ........
	r7548 | twisti | 2007-03-21 14:19:44 +0100 (Wed, 21 Mar 2007) | 3
	lines

	 * src/vmcore/zip.c (zip_get): Don't assign in if-statement, this
	makes debugging a bit easier. ........ r7549 | twisti |
	2007-03-21 14:27:14 +0100 (Wed, 21 Mar 2007) | 22 lines

	 * src/vmcore/statistics.c (size_threadobject, size_lock_hashtable)
	(size_lock_waiter): Added. (statistics_print_memory_usage): Print
	new variables.

	 * src/vmcore/statistics.h (size_threadobject, size_lock_hashtable)
	(size_lock_waiter): Added.

	 * src/threads/native/lock.c (vmcore/options.h): Added.
	[ENABLE_STATISTICS] (vmcore/statistics.h): Added.
	(lock_hashtable_init): Added statistics. (lock_hashtable_grow):
	Likewise. (lock_record_add_waiter): Likewise.
	(lock_record_remove_waiter): Likewise.

	 * src/threads/native/threads.c [ENABLE_STATISTICS]
	(vmcore/statistics.h): Added. (threads_preinit): Added statistics.
	(threads_init): Likewise. (threads_start_javathread): Likewise.
	(threads_attach_current_thread): Likewise.
	(threads_detach_thread): Likewise. ........ r7551 | twisti |
	2007-03-21 15:26:09 +0100 (Wed, 21 Mar 2007) | 8 lines

	 * src/vmcore/statistics.c (size_lock_record_pool): Added.
	(statistics_print_memory_usage): Print new variable.

	 * src/vmcore/statistics.h (size_lock_record_pool): Added.

	 * src/threads/native/lock.c (lock_record_alloc_new_pool): Added
	statistics. ........ r7554 | michi | 2007-03-22 14:55:44 +0100
	(Thu, 22 Mar 2007) | 3 lines

	 * src/vm/jit/arm/codegen.c (codegen) [!ENABLE_SOFTFLOAT]: Fixed
	position of soft null pointer checks in PUTFIELD and GETFIELD.
	........ r7559 | twisti | 2007-03-23 12:56:31 +0100 (Fri, 23 Mar
	2007) | 5 lines

	 * src/vm/jit/powerpc/emit.c (emit_load): Use switch-case instead
	of if-else contruct. (emit_store): Likewise. (emit_copy):
	Likewise. ........ r7560 | twisti | 2007-03-23 19:51:41 +0100
	(Fri, 23 Mar 2007) | 4 lines

	 * src/vmcore/classcache.c (classcache_add_constraint)
	[CLASSCACHE_VERBOSE]: Started to use log-functions.
	(classcache_debug_dump): Likewise. ........ r7561 | twisti |
	2007-03-23 20:10:35 +0100 (Fri, 23 Mar 2007) | 7 lines

	 * src/vm/global.h (ACC_CLASS_PRIMITIVE): Defined.

	 * src/vm/builtin.c (builtin_isanysubclass): Check for primitive
	classes.

	 * src/vmcore/linker.c (link_primitivetype_table): Set primitive
	flag. ........ r7562 | twisti | 2007-03-23 21:38:14 +0100 (Fri, 23
	Mar 2007) | 4 lines

	 * src/vm/builtin.c (builtin_isanysubclass_vftbl): Removed.
	(builtin_descriptorscompatible): Use builtin_isanysubclass instead
	of builtin_isanysubclass_vftbl. ........ r7563 | twisti |
	2007-03-23 22:33:53 +0100 (Fri, 23 Mar 2007) | 22 lines

	 * src/vm/builtin.c (builtin_isanysubclass): Removed.
	(builtin_instanceof): Replaced builtin_isanysubclass with
	class_isanysubclass. (builtin_descriptorscompatible): Likewise.

	 * src/vm/builtin.h (builtin_isanysubclass): Removed.

	 * src/vm/access.c (access_is_accessible_member): Replaced
	builtin_isanysubclass with class_isanysubclass.
	  * src/native/vm/java_lang_Class.c (isAssignableFrom): Likewise.

	 * src/vm/jit/asmpart.h (castinfo): Removed.

	 * src/vmcore/class.c (vm/jit/asmpart.h): Added.
	(class_isanysubclass): New function.

	 * src/vmcore/class.h (castinfo): Added. (class_isanysubclass):
	Likewise.

	 * src/cacaoh/dummy.c (asm_getclassvalues_atomic): New function.
	(intrp_asm_getclassvalues_atomic): Likewise. ........ r7573 |
	twisti | 2007-03-25 20:55:02 +0200 (Sun, 25 Mar 2007) | 21 lines

	 * src/native/native.c (native_get_parametertypes): Removed.
	(native_get_exceptiontypes): Likewise.
	  * src/native/native.h: Likewise.

	 * src/vmcore/method.c (vm/builtin.h): Added. (vm/resolve.h):
	Likewise. (method_get_parametertypearray): New function.
	(method_get_exceptionarray): Likewise.
	  * src/vmcore/method.h (method_get_parametertypearray): Added.
	(method_get_exceptionarray): Likewise.

	 * src/cacaoh/dummy.c (builtin_anewarray): Added.
	(resolve_class_from_typedesc): Likewise.

	 * src/native/vm/gnu/java_lang_reflect_Method.c
	(getParameterTypes): Use method function. (getExceptionTypes):
	Likewise.
	  * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getParameterTypes): Likewise. (getExceptionTypes): Likewise.
	........ r7575 | twisti | 2007-03-25 22:30:50 +0200 (Sun, 25 Mar
	2007) | 9 lines

	 Reverted patch 7268.

	 * src/vm/jit/code.c: Reverted.
	  * src/vm/jit/code.h: Likewise.
	  * src/vm/jit/jit.c: Likewise.
	  * src/vm/jit/jit.h: Likewise.
	  * src/vmcore/loader.c: Likewise.
	  * src/vmcore/method.h: Likewise. ........ r7581 | pm | 2007-03-26
	09:23:16 +0200 (Mon, 26 Mar 2007) | 10 lines

	 * src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/emit.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/tests/tests.java.pp, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/md-abi.c: Chaned a lot. ........ r7587 | twisti |
	2007-03-28 15:29:09 +0200 (Wed, 28 Mar 2007) | 19 lines

	 * src/vm/exceptions.c (throw_exception_exit_intern): Removed.
	(throw_exception): Likewise. (throw_exception_exit): Likewise.
	(throw_main_exception): Likewise. (throw_main_exception_exit):
	Likewise. (throw_cacao_exception_exit): Likewise.
	(exceptions_print_stacktrace): New function.
	  * src/vm/exceptions.h: Likewise.

	 * src/vm/vm.c (vm_create): Use vm_abort or
	exceptions_print_stacktrace instead of throw_main_exception_exit.
	(vm_run): Likewise. (vm_exit): Likewise.
	(vm_get_mainclass_from_jar): Likewise.

	 * src/threads/native/threads.c (threads_init): Use return instead
	of throw_exception_exit. (threads_startup_thread): Use vm_abort.
	........ r7593 | twisti | 2007-03-28 22:22:13 +0200 (Wed, 28 Mar
	2007) | 3 lines

	 Initialized merge tracking via "svnmerge" with revisions "1-7592"
	from svn+ssh://c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/bran
	ches/twisti ........ r7594 | twisti | 2007-03-28 22:28:37 +0200
	(Wed, 28 Mar 2007) | 3 lines

	 Initialized merge tracking via "svnmerge" with revisions "1-6086"
	from svn+ssh://c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/bran
	ches/twisti ........ r7595 | twisti | 2007-03-28 22:50:34 +0200
	(Wed, 28 Mar 2007) | 3 lines

	 Initialized merge tracking via "svnmerge" with revisions "1-6085"
	from file:///ahome/cacao/svn/cacao/branches/twisti ........
	r7596 | twisti | 2007-03-28 23:05:53 +0200 (Wed, 28 Mar 2007) | 2
	lines

	 * Merged in twisti-branch. ........ r7597 | michi | 2007-03-29
	00:25:44 +0200 (Thu, 29 Mar 2007) | 2 lines

	 * AUTHORS: Added myself to the list of authors (finally). ........
	r7598 | twisti | 2007-03-29 00:32:13 +0200 (Thu, 29 Mar 2007) | 2
	lines

	 * svnmerge uninit. ........
	[2ba675aeac92]

2007-03-28  twisti  <twisti>

	* m4/cacaoh.m4, src/native/include/Makefile.am, src/native/jni.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/access.c, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/exceptions.h, src/vm/global.h,
	src/vm/jit/abi.h, src/vm/jit/alpha/arch.h,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/codegen.h, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/arch.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/md.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/disass-common.c,
	src/vm/jit/disass.h, src/vm/jit/dseg.c, src/vm/jit/dseg.h,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/md.c, src/vm/jit/i386/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/m68k/.cvsignore,
	src/vm/jit/m68k/disass.c, src/vm/jit/m68k/emit.h,
	src/vm/jit/m68k/linux/.cvsignore, src/vm/jit/m68k/linux/Makefile.am,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/linux/md-asm.h, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/mips/arch.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/codegen.h,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/linux/md-
	abi.h, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/reg.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/emit.h, src/vm/jit/stacktrace.c,
	src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/emit.h,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c,
	src/vm/signal.c, src/vm/signallocal.h, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/descriptor.h, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, tests/regression/native/Makefile.am:
	* src/vm/exceptions.h (exceptionptr): Removed.
	(_no_threads_exceptionptr): Likewise.
	[444d6d50b065]

2007-03-28  michi  <michi>

	* configure.ac, src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm
	/cacao-gc/rootset.c, src/vm/builtin.c, src/vm/builtin.h,
	src/vm/jit/alpha/md.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/parse.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/replace.c,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/patcher.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/emit.h,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c,
	src/vmcore/classcache.c, src/vmcore/linker.c, src/vmcore/method.c,
	src/vmcore/method.h, src/vmcore/options.c, src/vmcore/options.h,
	src/vmcore/statistics.c:
	* src/mm/cacao-gc/gc.h: Added GC_EXECUTIONSTATE and GC_SOURCESTATE
	defines.
	* src/mm/cacao-gc/gc.c [!ENABLE_THREADS]: Added _no_threads variables
	for above defines.

	* src/mm/cacao-gc/rootset.c: Now uses above defines.
	* src/vm/jit/replace.c (replace_me, replace_gc_from_native): Same.
	[f6b1620d87fe]

	* AUTHORS:
	* AUTHORS: Added myself to the list of authors (finally).
	[0b44275eac74]

2007-03-28  twisti  <twisti>

	* AUTHORS, configure.ac, src/Makefile.am, src/cacaoh/dummy.c, src/mm
	/boehm-gc/include/private/gc_locks.h, src/mm/nogc.c,
	src/native/include/Makefile.am, src/native/jni.c,
	src/toolbox/list.c, src/toolbox/list.h, src/vm/builtin.c,
	src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/abi.h,
	src/vm/jit/alpha/arch.h, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/codegen.h,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/arch.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/arm/md.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-
	common.c, src/vm/jit/codegen-common.h, src/vm/jit/disass-common.c,
	src/vm/jit/disass.h, src/vm/jit/dseg.c, src/vm/jit/dseg.h,
	src/vm/jit/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/codegen.h,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/i386/md.c, src/vm/jit/i386/patcher.c, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/m68k/uclinux/Makefile.am, src/vm/jit/m68k/uclinux/md-
	abi.c, src/vm/jit/m68k/uclinux/md-abi.h, src/vm/jit/m68k/uclinux/md-
	asm.h, src/vm/jit/m68k/uclinux/md-os.c, src/vm/jit/mips/arch.h,
	src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/codegen.h,
	src/vm/jit/powerpc/darwin/md-os.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/codegen.h, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/linux/md-
	abi.h, src/vm/jit/powerpc64/linux/md-os.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/reg.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit-arch.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/stacktrace.c,
	src/vm/jit/verify/typecheck-invoke.inc, src/vm/jit/x86_64/arch.h,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c,
	src/vm/signal.c, src/vm/signallocal.h, src/vm/vm.c,
	src/vmcore/descriptor.h, src/vmcore/loader.c, src/vmcore/options.c,
	src/vmcore/options.h, tests/regression/native/Makefile.am:
	* Merged in twisti-branch.
	[584c104cdec1]

	* src/vm/jit/powerpc/codegen.h, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-os.c, src/vm/signal.c,
	src/vm/signallocal.h:
	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigtrap): New
	function.

	* src/vm/jit/powerpc/emit.c (emit_arrayindexoutofbounds_check): Use
	trap instruction.

	* src/vm/jit/powerpc/codegen.h (M_OP3_GET_A, M_OP3_GET_B): New
	macros. (M_TRAPGEU): Likewise.

	* src/vm/signal.c [__POWERPC__] (signal_init): Install SIGTRAP
	handler.

	* src/vm/signallocal.h [__POWERPC__] (md_signal_handler_sigtrap):
	Added.
	[db686946cce5]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/emit.c (emit_branch): Replaced BRANCH_A with
	BRANCH_UGT. (emit_arithmetic_check): Use new hardware-exception
	defines. (emit_nullpointer_check): Likewise.
	(emit_nullpointer_check_force): Likewise.
	(emit_arrayindexoutofbounds_check): Likewise.
	(emit_classcast_check): Likewise. (emit_exception_check): Likewise.

	* src/vm/jit/arm/codegen.c (codegen_emit): Generate correct NPE-
	check, smaller branch changes.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill):
	Restructured to be more like the other architectures.
	[b1866e6f3a4e]

	* src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/emit.h, src/vm/jit/x86_64/linux/md-os.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c:
	* src/vm/jit/x86_64/emit.c (vm/exceptions.h): Added. (emit_branch):
	New function. (emit_arithmetic_check,
	emit_arrayindexoutofbounds_check) (emit_classcast_check,
	emit_nullpointer_check, emit_exception_check): Use hardware-
	exception instruction. (emit_exception_stubs): Removed.
	(emit_mov_mem_reg): New function. (emit_alul_imm32_reg): Likewise.
	* src/vm/jit/x86_64/emit.h: Likewise.

	* src/vm/jit/x86_64/md.c (md_codegen_patch_branch): Removed.


	* src/vm/jit/x86_64/codegen.c (codegen): Renamed to codegen_emit and a
	zillion changes.

	* src/vm/jit/x86_64/codegen.h (CALCOFFSETBYTES, CALCIMMEDIATEBYTES):
	Removed. (ALIGNCODENOP): Implemented correctly.
	(BRANCH_UNCONDITIONAL_SIZE, BRANCH_CONDITIONAL_SIZE): Added.
	(BRANCH_NOPS): Added one nop. (M_ALD_MEM, M_ALD_MEM_GET_OPC,
	M_ALD_MEM_GET_MOD, M_ALD_MEM_GET_REG) (M_ALD_MEM_GET_RM,
	M_ALD_MEM_GET_DISP): New macro. (M_ISUB_IMM32): Likewise.
	(M_ICMP_IMM32): Likewise. (M_BAE): Renamed to M_BUGE. (M_BA):
	Renamed to M_BUGT. (M_BULT, M_BULE): New macros. (M_CMOVEQ_MEMBASE,
	M_CMOVNE_MEMBASE, M_CMOVLT_MEMBASE) (M_CMOVLE_MEMBASE,
	M_CMOVGE_MEMBASE, M_CMOVGT_MEMBASE): Removed. (M_CMOVB): Renamed to
	M_CMOVULT. (M_CMOVA): Renamed to M_CMOVUGT.

	* src/vm/jit/x86_64/linux/md-os.c (vm/types.h): Added.
	(vm/jit/x86_64/codegen.h): Likewise. (vm/exceptions.h): Likewise.
	(md_signal_handler_sigsegv): Rewritten for hardware-exceptions.

	* src/vm/jit/x86_64/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS)
	(SUPPORT_BRANCH_CONDITIONAL_UNSIGNED_CONDITIONS): Defined.

	* src/vm/jit/x86_64/patcher.c
	(patcher_checkcast_instanceof_interface): Renamed to
	patcher_checkcast_interface. (patcher_instanceof_interface): New
	function.
	[9cbaee9cb174]

	* AUTHORS:
	* AUTHORS: Keep it alpha-sorted.
	[c261d9c6b664]

	* src/threads/native/threads.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/tests.java.pp, src/vm/vm.c:
	* Merged with trunk.
	[b65b5373c1e3]

	* src/threads/native/threads.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/vm.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vm/exceptions.c (throw_exception_exit_intern): Removed.
	(throw_exception): Likewise. (throw_exception_exit): Likewise.
	(throw_main_exception): Likewise. (throw_main_exception_exit):
	Likewise. (throw_cacao_exception_exit): Likewise.
	(exceptions_print_stacktrace): New function.
	* src/vm/exceptions.h: Likewise.

	* src/vm/vm.c (vm_create): Use vm_abort or
	exceptions_print_stacktrace instead of throw_main_exception_exit.
	(vm_run): Likewise. (vm_exit): Likewise.
	(vm_get_mainclass_from_jar): Likewise.

	* src/threads/native/threads.c (threads_init): Use return instead of
	throw_exception_exit. (threads_startup_thread): Use vm_abort.
	[093dd11f1414]

2007-03-28  tbfg  <tbfg>

	* AUTHORS, src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/disass.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/emit.h, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/linux/md-os.h,
	src/vm/jit/m68k/machine-instr.h, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c:
	* AUTHORS: Added Roland Lezuo.

	* src/vm/jit/m68k/linux/md-os.c: Added GPL license header.
	* src/vm/jit/m68k/linux/md-os.h: Likewise.
	* src/vm/jit/m68k/linux/md-abi.c: Likewise.
	* src/vm/jit/m68k/emit.c: Likewise.
	* src/vm/jit/m68k/md.c: Likewise.
	* src/vm/jit/m68k/emit.h: Likewise.
	* src/vm/jit/m68k/codegen.c: Likewise.
	* src/vm/jit/m68k/disass.c: Likewise.
	* src/vm/jit/m68k/machine-instr.h: Likewise.
	* src/vm/jit/m68k/patcher.c: Likewise.
	* src/vm/jit/m68k/codegen.h: Likewise.
	[2f5a7fa77fd0]

2007-03-28  twisti  <twisti>

	* src/vm/vm.c, src/vmcore/options.c, src/vmcore/options.h:
	* src/vmcore/options.c (checknull): Removed.
	* src/vmcore/options.h: Likewise.

	* src/vm/vm.c (opts): Removed softnull. (vm_create): Likewise.
	[67aae9ed164f]

2007-03-27  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/linux/md-os.c, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c, src/vm/jit/stacktrace.c:
	* m68k/linux/md-abi.h (REG_ITMP1_XPTR): Renamed REG_ATMP1_XPTR.
	(REG_ITMP2_XPC): Renamed REG_ATMP2_XPC.

	* m68k/linux/md-os.c (md_signal_handler_sigill): Use REG_ATMP1_XPTR
	and REG_ATMP2_XPC.

	* m68k/md.c (md_stacktrace_get_returnaddress): Removed frame linking
	code, adpat offset.

	* m68k/codegen.c (codegen_emit): Removed frame linking code.
	(ICMD_ATHROW): Fixed. (createnativestub): Removed frame linking
	code.

	* m68k/asmpart.S (asm_vm_call_method_long): Removed frame linking
	code. (asm_vm_call_method_exception_handler): Implemented.
	(asm_call_jit_compiler): Removed frame linking code.
	(asm_patcher_wrapper): Simpler code. (asm_handle_exception): Partial
	implementation.

	* stacktrace.c (stacktrace_create): M68k has a return word on stack.
	[1df61ce55fe6]

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/Makefile.am, src/vm/jit/m68k/linux/md-os.c,
	src/vm/jit/m68k/linux/md-os.h, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c:
	* linux/md-os.h (md_init_linux): Prototyp.
	(md_signal_handler_sigill): Likewise.

	* linux/md-os.c (actual_ucontext_t): Correct defines for ucontext_t.
	(md_init_linux): New function. (md_signal_handler_sigill):
	Implemented.

	* linux/Makefile.am (libmd_la_SOURCES): Added md-os.h. to
	dependencies.

	* emit.c (emit_load_low): Implemented. (emit_load_high):
	Implemented. (emit_classcast_check): Implemented. (emit_branch):
	BRANCH_UGT added.

	* md.c (md_init): Call md_init_linux if on linux.

	* arch.h (HAS_4BYTE_STACKSLOT): Defined true.
	(SUPPORT_BRANCH_CONDITIONAL_UNSIGNED_CONDITIONS): Likewise.

	* codegen.c: Various fixes. (ICMD_INEG): Implemented. (ICMD_IDIV):
	Implemented. (ICMD_IREM): Implemented. (ICMD_LDIV): Implemented.
	(ICMD_LREM): Implemented. (ICMD_ISHL): Implemented.
	(ICMD_ISHLCONST): Implemented. (ICMD_ISHR): Implemented.
	(ICMD_ISHRCONST): Implemented. (ICMD_IUSHR): Implemented.
	(ICMD_IUSHRCONST): Implemented. (ICMD_IAND): Implemented.
	(ICMD_IANDCONST): Implemented. (ICMD_AASTORE): Implemented.
	(ICMD_INVOKEINTERFACE): Implemented. (ICMD_TABLESWITCH):
	Implemented. (ICMD_LOOKUPSWITCH): Implemented.

	* patcher.c (patcher_instanceof_interface): Implemented.
	(patcher_checkcast_interface): Implemented.
	(patcher_invokeinterface): Added.

	* codegen.h (ENABLE_SOFTFLOAT): Some ifdefs fors floats. (M_LLD):
	Implemented. (M_LST): Implemented. (M_ISUB_IMM): Added. (M_IMUL):
	Added. (M_IDIV): Added. (M_ISSL): Added. (M_ISSR): Added. (M_IUSR):
	Added. (M_IAND): Added. (M_IOR): Added. (M_IREM): Added. (M_INEG):
	Added. (OPWORD_ASSERT): Added. (M_ICMPI): Renamed M_ICMP_IMM.
	(M_BLE): Fixed. (M_BHI, M_BHI16, M_BHI32): Added. (M_ASUBINT):
	Added. (M_ISSL_IMM): Added (M_ISRL_IMM): Added. (M_IUSR_IMM): Added.
	(M_TRAP_SETREGISTER): Added. (M_TRAP): Added.
	[b6f5f3f696f2]

2007-03-26  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/tests.java.pp:
	* src/vm/jit/powerpc64/linux/md-os.c (md_signal_handler_sigsegv):
	Use new exceptions_new_hardware_exception.

	* src/vm/jit/powerpc64/emit.c: Use new hardwareexception defines.

	* src/vm/jit/powerpc64/codegen.c: Likewise.
	[826c4444d17a]

2007-03-26  pm  <pm>

	* src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/access.c,
	src/vm/builtin.h, src/vm/global.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/tests.java.pp, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c, src/vmcore/linker.c,
	src/vmcore/method.c, src/vmcore/method.h:
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/emit.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/tests/tests.java.pp, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/md-abi.c: Chaned a lot.
	[41183fe2f8bb]

2007-03-25  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c:
	* src/vm/jit/sparc64/emit.c: Adapted to changed BRANCH_U defines.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	[9179df5f161b]

2007-03-25  twisti  <twisti>

	* src/vm/jit/codegen-common.h, src/vm/jit/emit-common.c, src/vm/jit
	/emit-common.h, src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c:
	* src/vm/jit/codegen-common.h (BRANCH_LTU): Renamed to BRANCH_ULT,
	to be consistent with Alpha compare instructions. (BRANCH_LEU):
	Renamed to BRANCH_ULE. (BRANCH_GEU): Renamed to BRANCH_UGE.
	(BRANCH_GTU): Renamed to BRANCH_UGT.

	* src/vm/jit/emit-common.c (emit_bltu): Renamed to emit_bult.
	(emit_bleu): Renamed to emit_bule. (emit_bgeu): Renamed to
	emit_buge. (emit_bgtu): Renamed to emit_bugt.
	* src/vm/jit/emit-common.h: Likewise.

	* src/vm/jit/i386/emit.c (emit_branch): Use new function names.
	* src/vm/jit/i386/codegen.c (codegen_emit): Likewise.
	[6f04f5dea964]

2007-03-25  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit-arch.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/emit.h:
	* src/vm/jit/sparc64/emit-arch.h: Renamed to emit.h.
	* src/vm/jit/sparc64/emit.c: Updated include name.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	[b52ac55e15ff]

2007-03-25  twisti  <twisti>

	* src/cacaoh/dummy.c, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_Class.c, src/vm/access.c, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/global.h, src/vm/jit/asmpart.h,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vm/jit/powerpc/emit.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h:
	* Merged with trunk.
	[95bff0b38745]

2007-03-25  ajordan  <ajordan>

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h, src/vm/jit
	/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit-arch.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/patcher.c:
	* src/vm/jit/codegen-common.h (codegen_add_branch_ref): Options
	added to branchrefs. (codegen_branch_label_add): Likewise.
	* src/vm/jit/codegen-common.c: Likewise.
	* src/vm/jit/emit-common.h (emit_label_bccz): Added options.
	(emit_label_bcc): Likewise.
	* src/vm/jit/emit-common.c (emit_label_*): Adapted to options.

	* src/vm/jit/sparc64/emit-arch.h: Added for SPARC specific branch
	otpions and emit_b* wrappers.

	* src/vm/jit/sparc64/emit.c: Adapted to outside changes.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.

	* src/vm/jit/sparc64/patcher.c: Fixed classcast_interface patcher.

	* src/vm/jit/sparc64/codegen.h: Fixed M_SHFT macro.
	* src/vm/jit/sparc64/codegen.c: Fixed 32-bit shifts and various other
	bugs.
	[5b5ff31f30a0]

2007-03-25  twisti  <twisti>

	* src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vmcore/loader.c, src/vmcore/method.h:
	Reverted patch 7268.

	* src/vm/jit/code.c: Reverted.
	* src/vm/jit/code.h: Likewise.
	* src/vm/jit/jit.c: Likewise.
	* src/vm/jit/jit.h: Likewise.
	* src/vmcore/loader.c: Likewise.
	* src/vmcore/method.h: Likewise.
	[2080e200a6d6]

	* src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/jit/codegen-
	common.h, src/vm/jit/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c:
	* src/vm/jit/codegen-common.h (BRANCH_B): Renamed to BRANCH_LTU.
	(BRANCH_BE): Renamed to BRANCH_LEU. (BRANCH_AE): Renamed to
	BRANCH_GEU. (BRANCH_A): Renamed to BRANCH_GTU.

	* src/vm/jit/emit-common.c (emit_bb): Renamed to emit_bltu.
	(emit_bbe): Renamed to emit_bleu. (emit_bae): Renamed to emit_bgeu.
	(emit_ba): Renamed to emit_bgtu.
	* src/vm/jit/emit-common.h: Likewise.

	* src/vm/jit/i386/emit.c (emit_branch): Use new unsigned-branch
	defines.
	* src/vm/jit/i386/codegen.c (codegen_emit): Use new unsigned-branch
	functions.
	[0389cd4d3375]

	* src/cacaoh/dummy.c, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/vm/jit/i386/patcher.c, src/vmcore/method.c, src/vmcore/method.h:
	* src/native/native.c (native_get_parametertypes): Removed.
	(native_get_exceptiontypes): Likewise.
	* src/native/native.h: Likewise.

	* src/vmcore/method.c (vm/builtin.h): Added. (vm/resolve.h):
	Likewise. (method_get_parametertypearray): New function.
	(method_get_exceptionarray): Likewise.
	* src/vmcore/method.h (method_get_parametertypearray): Added.
	(method_get_exceptionarray): Likewise.

	* src/cacaoh/dummy.c (builtin_anewarray): Added.
	(resolve_class_from_typedesc): Likewise.

	* src/native/vm/gnu/java_lang_reflect_Method.c (getParameterTypes):
	Use method function. (getExceptionTypes): Likewise.
	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(getParameterTypes): Likewise. (getExceptionTypes): Likewise.
	[491366802e0d]

2007-03-25  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c:
	* src/vm/jit/sparc64/codegen.c (emit_codegen): Fixed incoming
	argument handling, 'stack arg -> spilled' case. Fixed compares in
	ICMD_IF_XX (integer ones) by removing branch on reg optimization
	when val == 0. Doesn't work when there is junk in the upper 32-bits.
	Fixed lookupswitch.
	[7a9636db4b25]

2007-03-24  twisti  <twisti>

	* src/vm/jit/i386/arch.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/codegen.h, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/linux/md-os.c, src/vm/jit/i386/md.c,
	src/vm/jit/i386/patcher.c:
	* src/vm/jit/i386/emit.c (vm/exceptions.h): Added. (emit_branch):
	New function. (emit_arithmetic_check,
	emit_arrayindexoutofbounds_check) (emit_classcast_check,
	emit_nullpointer_check, emit_exception_check): Use hardware-
	exception instructions. (emit_exception_stubs): Removed.

	* src/vm/jit/i386/md.c (md_codegen_patch_branch): Removed.

	* src/vm/jit/i386/codegen.c (codegen): Renamed to codegen_emit and a
	zillion changes.

	* src/vm/jit/i386/codegen.h (M_ALD_MEM): Added. (M_ALD_MEM_GET_OPC,
	M_ALD_MEM_GET_MOD, M_ALD_MEM_GET_REG) (M_ALD_MEM_GET_RM,
	M_ALD_MEM_GET_DISP): Likewise.

	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigsegv):
	Rewritten for hardware-exceptions.

	* src/vm/jit/i386/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS)
	(SUPPORT_BRANCH_CONDITIONAL_UNSIGNED_CONDITIONS): Defined.

	* src/vm/jit/i386/patcher.c
	(patcher_checkcast_instanceof_interface): Renamed to
	patcher_checkcast_interface. (patcher_instanceof_interface): New
	function.
	[0d1bc9f817e7]

	* src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/linux/md-os.c:
	* src/vm/jit/mips/linux/md-os.c (md_signal_handler_sigsegv): Use new
	exceptions_new_hardware_exception.

	* src/vm/jit/powerpc/emit.c (emit_arithmetic_check)
	(emit_arrayindexoutofbounds_check, emit_classcast_check)
	(emit_nullpointer_check, emit_exception_check): Use new hardware-
	exception defines.
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Likewise.
	[421de52e290f]

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h:
	* src/vm/jit/codegen-common.c (codegen_setup): Don't set
	exceptionrefs. (codegen_reset): Likewise.
	(codegen_add_exception_ref): Removed.
	(codegen_add_arithmeticexception_ref): Likewise.
	(codegen_add_arrayindexoutofboundsexception_ref): Likewise.
	(codegen_add_arraystoreexception_ref): Likewise.
	(codegen_add_classcastexception_ref): Likewise.
	(codegen_add_nullpointerexception_ref): Likewise.
	(codegen_add_fillinstacktrace_ref): Likewise.

	* src/vm/jit/codegen-common.h (codegendata): Removed exceptionrefs.
	(exceptionref): Removed. (codegen_add_arithmeticexception_ref):
	Likewise. (codegen_add_arrayindexoutofboundsexception_ref):
	Likewise. (codegen_add_arraystoreexception_ref): Likewise.
	(codegen_add_classcastexception_ref): Likewise.
	(codegen_add_nullpointerexception_ref): Likewise.
	(codegen_add_fillinstacktrace_ref): Likewise.
	[fd308cb27a30]

2007-03-24  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/patcher.c:
	This is the hello world runs commit.

	* emit.c (emit_branch): Fixed.

	* codegen.c (ICMD_*ASTORE): Fixed. (ICMD_*ALOAD): Fixed.

	* patcher.c (patcher_resolve_classref_to_flags): Implemented.
	(patcher_resolve_classref_to_vftbl): Implemented.

	* asmpart.S (asm_patcher_wrapper): Store scratch registers.
	(asm_getclassvalues_atomic): Implemented.

	* codegen.h (M_IMOV_IMM32): Added, for use with patchers.
	[ad44ea32e5dc]

2007-03-23  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/patcher.c:
	* linux/md-abi.h (ENABLE_SOFTFLOAT): Ifdefed stuff.

	* linux/md-abi.c (ENABLE_SOFTFLOAT): Ifdefed stuff.

	* emit.c (ENABLE_SOFTFLOAT): Ifdefed stuff.
	(emit_nullpointer_check): Added.

	* arch.h (SUPPORT_CONST_MUL): Yes.

	* codegen.c (codegen_emit): ENABLE_SOFTFLOAT stuff. (ICMD_*CONST):
	Added. (ICMD_INT2*): Added. (ICMD_IMUL*): Added. (ICMD_IADD,
	ICMD_ISUB): Fixes.

	* patcher.c (patcher_invokevirtual): Implemented.

	* codegen.h: Lots of new opcodes implemented.
	[bc42d1195a58]

2007-03-23  twisti  <twisti>

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/linux/md-os.c:
	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv): Use
	new exceptions_new_hardware_exception.

	* src/vm/jit/alpha/emit.c (emit_arithmetic_check)
	(emit_arrayindexoutofbounds_check, emit_classcast_check)
	(emit_nullpointer_check, emit_exception_check): Use new hardware-
	exception defines.
	* src/vm/jit/alpha/codegen.c (codegen_emit): Likewise.
	[2cd307710e39]

	* src/vm/jit/alpha/md.c:
	* src/vm/jit/alpha/md.c (vm/jit/codegen-common.h): Removed.
	(md_codegen_patch_branch): Likewise.
	[6d2d08670841]

	* src/vm/access.c, src/vm/builtin.h, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/global.h, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-os.c,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/linker.c:
	* src/vm/exceptions.c (exceptions_new_hardware_exception): Changed
	signature and rewritten.

	* src/vm/exceptions.h (EXCEPTION_LOAD_DISP_*): Renamed to
	EXCEPTION_HARDWARE_*. (exceptions_new_hardware_exception): Changed
	signature.

	* src/vm/jit/powerpc/linux/md-os.c (md_signal_handler_sigsegv): Use
	new exceptions_new_hardware_exception.

	* src/vm/jit/powerpc/emit.c (emit_arithmetic_check)
	(emit_arrayindexoutofbounds_check, emit_classcast_check)
	(emit_nullpointer_check, emit_exception_check): Use new defines.
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Likewise.
	[e891bd9a01e9]

	* src/cacaoh/dummy.c, src/native/vm/java_lang_Class.c,
	src/vm/access.c, src/vm/builtin.c, src/vm/builtin.h,
	src/vm/jit/asmpart.h, src/vmcore/class.c, src/vmcore/class.h:
	* src/vm/builtin.c (builtin_isanysubclass): Removed.
	(builtin_instanceof): Replaced builtin_isanysubclass with
	class_isanysubclass. (builtin_descriptorscompatible): Likewise.

	* src/vm/builtin.h (builtin_isanysubclass): Removed.

	* src/vm/access.c (access_is_accessible_member): Replaced
	builtin_isanysubclass with class_isanysubclass.
	* src/native/vm/java_lang_Class.c (isAssignableFrom): Likewise.

	* src/vm/jit/asmpart.h (castinfo): Removed.

	* src/vmcore/class.c (vm/jit/asmpart.h): Added.
	(class_isanysubclass): New function.

	* src/vmcore/class.h (castinfo): Added. (class_isanysubclass):
	Likewise.

	* src/cacaoh/dummy.c (asm_getclassvalues_atomic): New function.
	(intrp_asm_getclassvalues_atomic): Likewise.
	[f259f2de6309]

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_isanysubclass_vftbl): Removed.
	(builtin_descriptorscompatible): Use builtin_isanysubclass instead
	of builtin_isanysubclass_vftbl.
	[86da5e869cbf]

	* src/vm/builtin.c, src/vm/global.h, src/vmcore/linker.c:
	* src/vm/global.h (ACC_CLASS_PRIMITIVE): Defined.

	* src/vm/builtin.c (builtin_isanysubclass): Check for primitive
	classes.

	* src/vmcore/linker.c (link_primitivetype_table): Set primitive
	flag.
	[0ff0eb43786d]

	* src/vmcore/classcache.c:
	* src/vmcore/classcache.c (classcache_add_constraint)
	[CLASSCACHE_VERBOSE]: Started to use log-functions.
	(classcache_debug_dump): Likewise.
	[9b93f8cd8dc9]

	* src/vm/jit/powerpc/emit.c:
	* src/vm/jit/powerpc/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	[e24ec626da8a]

2007-03-23  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/emit.c:
	* src/vm/jit/m68k/emit.c (emit_verbosecall_exit): Fixed.

	* src/vm/jit/m68k/codegen.c (ICMD_IRETURN): Fixed.
	(createnativestub): Fixed.

	* src/vm/jit/m68k/asmpart.S (L_asm_vm_call_method_copy_done):
	Removed assertion.
	[9fbd34c11819]

2007-03-22  michi  <michi>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_nullpointer_check_force): Added.
	* src/vm/jit/arm/codegen.h (gen_nullptr_check_intern): Removed.
	* src/vm/jit/arm/codegen.c (codegen_emit): Adapted to above changes.
	[6c0669c61b9c]

2007-03-22  tbfg  <tbfg>

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/dseg.c, src/vm/jit/dseg.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/patcher.c:
	* src/vm/jit/codegen-common.h (datareferences): Enabled for m68k.

	* src/vm/jit/dseg.c (dseg_adddata): Enabled for m68k.
	(dseg_resolve_datareferences): Enalbed for m68k.

	* src/vm/jit/dseg.h: Likewise.

	* src/vm/jit/m68k/linux/md-abi.h (REG_D0): Added. (REG_D1, REG_A0,
	REG_A1, REG_F0, REG_F1): Added.


	* src/vm/jit/m68k/emit.c (emit_patcher_stubs): Fixed.

	* src/vm/jit/m68k/codegen.c (createnativestub): Implemented.

	* src/vm/jit/m68k/patcher.c (patcher_resolve_native_function):
	Added.

	* src/vm/jit/m68k/codegen.h (M_AMOV): Fixed. (M_AADD_IMM): Fixed.
	(M_IADD_IMM): Fixed.

	* src/vm/jit/codegen-common.c (codegen_setup): Datareferences
	enabled for m68k.
	[de445ee3cb19]

2007-03-22  twisti  <twisti>

	* src/vm/jit/arm/codegen.c:
	* Merged with trunk.
	[e13a0efc99c5]

2007-03-22  michi  <michi>

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen) [!ENABLE_SOFTFLOAT]: Fixed
	position of soft null pointer checks in PUTFIELD and GETFIELD.
	[0241cda4051a]

2007-03-21  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/emit.h, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/linux/md-abi.h (REG_FRESULT2): Removed, all float
	registers are 64bit. (REG_A0_A1_PACKED): Removed, no argument
	registers.

	* src/vm/jit/m68k/linux/md-abi.c (md_return_alloc): Implemented, we
	can alway precolor the result register as no argument registers are
	used.

	* src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Fixed. (emit_branch):
	Implemented. (emit_classcast_check): Implemented.
	(emit_arrayindexoutofbounds_check): Implemented.

	* src/vm/jit/m68k/md.c (md_get_method_patch_address): Implemented
	invokevirtual case. (md_return_alloc): Moved to linux/md-abi.c.

	* src/vm/jit/m68k/emit.h (emit_jsr): Removed. (emit_jmp): Removed.

	* src/vm/jit/m68k/codegen.c (codegen_emit): Added branch resolving.
	(ICMD_IADD): Implemented. (ICMD_IINC): Implemented.
	(ICMD_IADDCONST): Implemented. (ICMD_ASTORE): Implemented.
	(ICMD_IF*): Implemented. (ICMD_IF_ICMP*): Implemented.
	(ICMD_IF_ACMP*): Implemented. (ICMD_ARRAYLENGTH): Implemented.
	(ICMD_*LOAD): Implemented, but not long, float and double.
	(ICMD_*STORE): Likewise. (ICMD_INVOKEVIRTUAL): Fixed.
	(ICMD_INSTANCEOF): Partially implemented. (ICMD_CHECKCAST):
	Likewise.

	* src/vm/jit/m68k/patcher.c (patcher_resolve_classref_to_flags):
	Added. (patcher_resolve_classref_to_vftbl): Added.
	(patcher_instanceof_interface): Added.
	(patcher_checkcast_interface): Added.

	* src/vm/jit/m68k/asmpart.S (asm_call_jit_compiler): Fixed mptr.

	* src/vm/jit/m68k/codegen.h (BRANCH_NOPS): Implemented. (M_MOV_IMM):
	Renamed M_IMOV_IMM. (M_IMOV): Added. (M_AMOV): Added. (M_ICLR):
	Added. (M_PUSH): Renamed M_IPUSH. (M_POP): Renamed M_IPOP.
	(M_PUSH_IMM): Renamed M_IPUSH_IMM. (M_IADD_IMM): Added. (M_ISUB):
	Added. (M_IADD): Added. (M_TST): Renamed M_ITST. (M_ICMPI): Added.
	(M_ACMPI): Added. (M_ICMP): Added. (M_ACMP): Added. (M_IAND_IMM):
	Added. (M_B[R|EQ|NE|LT|GE|GT|LE|NAN]_[16|32]): Added. (M_LBZX):
	Added. (M_LHZX): Added. (M_LWZX): Added. (M_LAX): Added. (M_STBX):
	Added. (M_STHX): Added. (M_STWX): Added. (M_STAX): Added. (M_BSEXT):
	Added. (M_HSEXT): Added. (M_AADDINT): Added. (M_ISSL_IMM): Added.
	[c577767cfb92]

2007-03-21  twisti  <twisti>

	* src/threads/native/lock.c, src/vmcore/statistics.c:
	* Merged with trunk.
	[66e2171855c4]

	* src/threads/native/lock.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.c (size_lock_record_pool): Added.
	(statistics_print_memory_usage): Print new variable.

	* src/vmcore/statistics.h (size_lock_record_pool): Added.

	* src/threads/native/lock.c (lock_record_alloc_new_pool): Added
	statistics.
	[de5df327235c]

	* src/native/jni.c, src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/native/lock.c, src/threads/native/threads.c,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/exceptions.c,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/md-abi.c,
	src/vmcore/linker.c, src/vmcore/statistics.c:
	* Merged with trunk.
	[044d295cad35]

	* src/threads/native/lock.c, src/threads/native/threads.c,
	src/vmcore/statistics.c, src/vmcore/statistics.h:
	* src/vmcore/statistics.c (size_threadobject, size_lock_hashtable)
	(size_lock_waiter): Added. (statistics_print_memory_usage): Print
	new variables.

	* src/vmcore/statistics.h (size_threadobject, size_lock_hashtable)
	(size_lock_waiter): Added.

	* src/threads/native/lock.c (vmcore/options.h): Added.
	[ENABLE_STATISTICS] (vmcore/statistics.h): Added.
	(lock_hashtable_init): Added statistics. (lock_hashtable_grow):
	Likewise. (lock_record_add_waiter): Likewise.
	(lock_record_remove_waiter): Likewise.

	* src/threads/native/threads.c [ENABLE_STATISTICS]
	(vmcore/statistics.h): Added. (threads_preinit): Added statistics.
	(threads_init): Likewise. (threads_start_javathread): Likewise.
	(threads_attach_current_thread): Likewise. (threads_detach_thread):
	Likewise.
	[0e6bc4048dbd]

	* src/vmcore/zip.c:
	* src/vmcore/zip.c (zip_get): Don't assign in if-statement, this
	makes debugging a bit easier.
	[9f9318ee0bec]

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (link_primitivetype_table): Set super class
	explicitly to NULL. (linker_compute_subclasses): Indent.
	[0179eeef5747]

2007-03-21  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/disass.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/linux/md-abi.h (ADR_RES_CNT): Increased, as %fp
	should not be used. (TRACE_ARGS_NUM): Removed.

	* src/vm/jit/m68k/linux/md-abi.c (nregdescadr): Reserved %fp.

	* src/vm/jit/m68k/emit.c (emit_mov_imm_reg): Generated moveql for
	short immideates. (emit_load): Implemented.
	(emit_verbosecall_enter): Implemented. (emit_verbosecall_exit):
	Implemented.

	* src/vm/jit/m68k/md.c (md_codegen_get_pv_from_pc): Comment fixed.
	(md_get_method_patch_address): Fixed. (cacheflush): Method defintion
	added. (md_cacheflush): Implemented. (md_dcacheflush): Implemented.
	(md_icacheflush): Implemented. (comment): Kernel patch for
	sys_cacheflush to work added.

	* src/vm/jit/m68k/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER): Defined.
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER): Undefined.
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Undefined.

	* src/vm/jit/m68k/codegen.c (codegen_emit): Used callee saved
	registers are stored. Arguments copied into local map. Function
	calls properly linked. Stack freed, calle saved register restored.
	(createcompilerstub): Fixed. (ICMD_ICONST): Implemented.
	(ICMD_ATHROW): Likewise. (ICMD_GOTO): Likewise. (ICMD_RET):
	Likewise. (ICMD_JSR): Likewise. (ICMD_IFNULL): Likewise.
	(ICMD_IFNONNULL): Likewise. (ICMD_GETFIELD): Likewise.
	(ICMD_PUTFIELD): Likewise. (ICMD_BUILTIN): Fixed argument handling.
	(ICMD_IRETURN): Fixed address return type issue.

	* src/vm/jit/m68k/disass.c (disassinstr): Even prettier output.

	* src/vm/jit/m68k/patcher.c (patcher_wrapper): Fixed.
	(patcher_get_putfield): Implemented.

	* src/vm/jit/m68k/asmpart.S (asm_handle_exception): Symbol added.
	(asm_vm_call_method): Fixed argument passing.
	(asm_call_jit_compiler): Removes stackframe. Invoked jitcode without
	linking.

	* src/vm/jit/m68k/codegen.h (M_NOP): Added. (ALIGNCODENOP): Added.
	(M_BSR): Renamed M_BSR_IMM. (M_JSR_PCREL): Added. (M_PUSHALL):
	Likewise. (M_POPALL): Likewise. (M_AADD_IMM): Likewise.
	(M_INT2ADRMOVE): Likewise. (M_ADR2INTMOVE): Likewise. (M_TST):
	Likewise. (M_ATST): Likewise.
	[d0b36959ff46]

2007-03-20  ajordan  <ajordan>

	* src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/codegen.h: Fixed load/stores with large
	displacements (SETHI).

	* src/vm/jit/sparc64/codegen.c: Implemented hardware exceptions.
	* src/vm/jit/sparc64/md.c: Likwise.
	* src/vm/jit/sparc64/linux/md-os.c: Likewise.
	* src/vm/jit/sparc64/arch.h: Likewise.
	[63e0d09e3f85]

2007-03-20  michi  <michi>

	* src/vm/exceptions.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c,
	src/vm/jit/arm/linux/md-os.c, src/vm/signal.c, src/vm/signallocal.h:
	* src/vm/jit/arm/codegen.c (codegen_emit): No longer emit exception
	stubs.

	* src/vm/jit/arm/codegen.h: Trap instructions added.

	* src/vm/jit/arm/emit.c: (emit_arithmetic_check): Use hardware-
	exception instructions. (emit_arrayindexoutofbounds_check):
	Likewise. (emit_classcast_check): Likewise.
	(emit_nullpointer_check): Likewise. (emit_exception_check):
	Likewise.

	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigill): Added.

	* src/vm/signal.c (signal_init) [__ARM__]: Catch SIGILL for
	hardware-exceptions.

	* src/vm/signallocal.h [__ARM__]: Added prototype for
	md_signal_handler_sigill.

	* src/vm/exceptions.c (exceptions_new_hardware_exception) [__ARM__]:
	Adapted to ARM since there is no REG_ZERO on this arch.
	[2627837d967b]

2007-03-20  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/md-abi.c:
	* src/vm/jit/sparc64/md-abi.c (md_param_alloc_native): using this
	for native param allocation. No need for my own version of this
	anymore.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	[a9e82fd0d81d]

2007-03-20  michi  <michi>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_new_hardware_exception): Added
	comment and assertion for ARM, since there is no REG_ZERO there.
	[066bff2c61cd]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c:
	Lots of the stuff in this commit was done by twisti, I only
	completed his work.

	* src/vm/jit/arm/emit.c (emit_branch, emit_arithmetic_check)
	(emit_classcast_check, emit_exception_check): Added.
	(emit_exception_stubs): Fixed.

	* src/vm/jit/arm/codegen.h (load_var_to_reg, store_reg_to_var_lng):
	Removed. (gen_resolvebranch, gen_nullptr_check, gen_div_check,
	gen_bound_check): Removed.

	* src/vm/jit/arm/codegen.c (codegen): Renamed to codegen_emit.
	Changed to use emit-branch and emit-check functions.
	[cf7ed6d495a5]

	* src/vm/jit/arm/arch.h, src/vm/jit/arm/md.c:
	* src/vm/jit/arm/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_UNSIGNED_CONDITIONS)
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Added.

	* src/vm/jit/arm/md.c (md_codegen_patch_branch): Added assertion.
	[6e95c5f34111]

2007-03-17  ajordan  <ajordan>

	* src/native/vm/gnu/java_lang_reflect_Method.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c, src/vm/jit
	/codegen-common.c, src/vm/jit/codegen-common.h, src/vm/jit/emit-
	common.c, src/vm/jit/emit-common.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/emit.c,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md.c,
	src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md.c:
	* src/vm/jit/emit-common.h: Functions which branch on unsigned
	conditions can be enabled by defining
	SUPPORT_BRANCH_CONDITIONAL_UNSIGNED_CONDITIONS to 1 in arch.h.
	(emit_branch): Added option argument to machine dependent branch
	emitting function, to accomodate special flags some architectures
	might allow to set in the branch. (eg. selecting condition codes,
	setting prediction) (emit_bccz): Added option argument. (emit_bcc):
	Likewise.
	* src/vm/jit/codegen-common.h: Added define for empty branch options
	argument.
	* src/vm/jit/emit-common.c: All branch emitting functions changed to
	pass an empty options argument.

	* src/vm/jit/codegen-common.c (codegen_resolve_branchrefs): Call to
	emit_b* adapted to new brach emitting signature.
	* src/vm/jit/powerpc/emit.c (emit_branch): Likewise.
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Likewise.
	* src/vm/jit/alpha/emit.c (emit_branch): Likewise.
	* src/vm/jit/alpha/codegen.c (codegen_emit): Likewise.
	* src/vm/jit/mips/emit.c (emit_branch): Likewise.
	* src/vm/jit/mips/codegen.c (codegen_emit): Likewise.
	* src/vm/jit/m68k/emit.c (emit_branch): Likewise.
	* src/vm/jit/powerpc64/emit.c (emit_branch): Likewise.
	* src/vm/jit/powerpc64/codegen.c (codegen_emit): Likewise.

	* src/vm/jit/sparc64/*: Ported code to work with branch and
	exception changes.
	[082d27818cb9]

2007-03-17  twisti  <twisti>

	* src/vm/builtin.h:
	* src/vm/builtin.h (builtin_isanysubclass_vftbl): Removed, made
	static.
	[40dbf088ff86]

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_isanysubclass): Code cleanup.
	(builtin_isanysubclass_vftbl): Likewise.
	[35e3a6da581a]

	* src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/vm/gnu/java_lang_reflect_Method.c (vm/resolve.h):
	Added.
	[e18a539bc7ef]

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_isanysubclass): Cleanup and comments.
	[da83167dc0e7]

2007-03-16  pm  <pm>

	* src/vm/exceptions.c, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/tests/Makefile, src/vm/jit/s390/tests/tests.java.pp:
	* src/vm/exceptions.c (exceptions_handle_exception): 31 bit address
	comparison for S390. These address comparison macros need to be
	moved to some header.
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/md.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/arch.h, src/vm/jit/s390/patcher.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/s390/tests/Makefile: Changed a lot.
	[b5435a3d596b]

2007-03-16  tbfg  <tbfg>

	* src/vm/jit/powerpc64/asmpart.S:
	* src/vm/jit/powerpc64/asmpart.S (libjvm): Fix libjvm build.
	[f84ce133c86f]

	* src/vm/jit/emit-common.c, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c:
	* powerpc64/emit.c (emit_branch): Removed superflous vm_abort.

	* powerpc64/codegen.c (codegen_emit): Adopt ppc change.

	* powerpc64/asmpart.S (__ASSEMBLY__): Define needed for newer libc.
	(global): Fixed things for static build.

	* emit-common.c (emit_bnan): Enabled for __POWERPC64__.
	[773024452f4e]

2007-03-16  twisti  <twisti>

	* src/cacaoh/dummy.c, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vmcore/loader.c:
	* src/vm/exceptions.c
	(exceptions_throw_noclassdeffounderror_wrong_name): New function.
	(exceptions_new_hardware_exception): Distinguish pointer-size.

	* src/vm/exceptions.h
	(exceptions_throw_noclassdeffounderror_wrong_name): Added.
	* src/cacaoh/dummy.c: Likewise.

	* src/vmcore/loader.c (load_class_from_classbuffer): Use
	exceptions_throw_noclassdeffounderror_wrong_name.
	[10d06f982050]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen_emit): Use label-branches
	instead of hardcoded ones (maybe there are some left).
	[af55245327e3]

	* src/vm/jit/emit-common.c, src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.c (emit_label_bne, emit_label_blt)
	(emit_label_bge, emit_label_bgt, emit_label_ble): New function.
	* src/vm/jit/emit-common.h: Likewise.
	[edc6c51ac2df]

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/emit.c:
	* src/vm/jit/codegen-common.c (codegen_generate): Removed debug
	code.
	* src/vm/jit/powerpc/emit.c (emit_branch): Likewise.
	[532c70a3d6b6]

2007-03-15  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/patcher.c:
	* codegen.c (ICMD_CALOAD): Do not use sign extending load for char.
	Dacapo antlr now passes. (opt_showdisassemble): Removed from various
	places.

	* patcher.c (opt_showdisassemble): Replaced by opt_shownops. cacao
	-so works again.
	[e31fbfe92629]

2007-03-15  twisti  <twisti>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_jni_invokeNative): Release memory in
	exception case.
	[8caf33a3260a]

2007-03-15  pm  <pm>

	* src/vm/jit/s390/tests/tests.java.pp:
	* src/vm/jit/s390/tests/tests.java.pp: added INT2CHAR test testing
	negative values.
	[aa554a26fc64]

	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/tests/Makefile, src/vm/jit/s390/tests/tests.java.pp:
	* src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h: Changed a
	lot.
	* src/vm/jit/s390/tests, src/vm/jit/s390/tests/tests.java.pp,
	src/vm/jit/s390/tests/Makefile: Added opcode tests in java.
	[7cf85b556eef]

2007-03-14  twisti  <twisti>

	* src/mm/nogc.c, src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/emit.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c, src/vm/string.c,
	src/vmcore/statistics.c:
	* Merged with trunk.
	[8305ef91befc]

	* src/vm/string.c, src/vmcore/statistics.c, src/vmcore/statistics.h:
	* src/vmcore/statistics.c (size_string): Added.
	(statistics_print_memory_usage): Likewise.
	* src/vmcore/statistics.h (size_string): Likewise.

	* src/vm/string.c (vmcore/statistics.h): Added. (literalstring_u2):
	Added statistics.
	[4848e755769f]

	* src/vm/jit/alpha/emit.c:
	* src/vm/jit/alpha/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	[1eb3f98f544d]

	* src/vm/jit/alpha/md.c:
	* src/vm/jit/alpha/md.c (vm/jit/codegen-common.h): Added
	temporarily.
	[ce089b68b9b5]

2007-03-14  michi  <michi>

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen): All the long compares have a
	different implementation now.
	[7da8dcbce235]

	* src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Fixed bug with
	inmemory arguments, which caused some crashes with verbose-calls.
	[1564b2409e4a]

2007-03-14  tbfg  <tbfg>

	* src/vm/jit/powerpc64/asmpart.S:
	* asmpart.S (asm_cacheflush): Create correct ppc64 alf abi function
	descriptor for gcc-4.1. gcc-3.4 works too.

	(asm_getclassvalues_atomic): Likewise.
	[b16c7b5c46c9]

2007-03-14  michi  <michi>

	* src/mm/nogc.c:
	* src/mm/nogc.c: Fixed includes and exceptions.
	[17f4c0aa0bb1]

2007-03-13  twisti  <twisti>

	* src/vm/jit/i386/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.h:
	* src/vm/jit/powerpc64/linux/md-abi.h (REG_A3, REG_FA0, REG_FA1):
	Added.

	* src/vm/jit/powerpc64/emit.c (emit_verbosecall_exit): Adopted
	signature change of builtin_verbosecall_exit.
	[5b5201b65647]

	* src/vm/jit/i386/emit.c:
	* src/vm/jit/i386/emit.c (emit_load): Use switch-case instead of if-
	else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	[bdbfe4ab81d9]

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen): Fixed compiler warning.
	[d04aaed44b74]

	* src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/md.c:
	* Merged with trunk.
	[e65251d81071]

2007-03-13  michi  <michi>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h:
	* src/vm/jit/arm/codegen.c (codegen): Long branches are implemented
	differently now.

	* src/vm/jit/arm/codegen.h (M_COMPARE): Easier macros without
	overjumps. (M_MOVEQ_IMM, M_MOVGT_IMM, M_ADDHI_IMM, M_SUBLO_IMM,
	M_CMPEQ_IMM): New macro.
	[baa7f5e2d7d7]

	* src/vm/jit/arm/linux/Makefile.am:
	* src/vm/jit/arm/linux/Makefile.am: Fixed include path to care about
	builddir.
	[25fb1683004a]

2007-03-12  twisti  <twisti>

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_add_patch_ref): Removed
	ifdef.
	[1b260c15209b]

	* src/vm/jit/codegen-common.h:
	* src/vm/jit/codegen-common.h (BRANCH_B, BRANCH_BE, BRANCH_AE)
	(BRANCH_A, BRANCH_NAN): Defined.
	[d6a77d9ac5f6]

	* src/vm/jit/emit-common.c, src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.c [__I386__ || __X86_64__] (emit_bb): New
	function. (emit_bbe): Likewise. (emit_bae): Likewise. (emit_ba):
	Likewise. [__POWERPC__] (emit_bnan): #ifdef'ed.
	* src/vm/jit/emit-common.h: Likewise.
	[f7a65ebf9dd9]

2007-03-12  tbfg  <tbfg>

	* src/mm/boehm.c, src/mm/gc-common.h, src/mm/memory.c,
	src/mm/memory.h, src/native/jni.h, src/native/native.c,
	src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/global.h, src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/md.c, src/vm/jit/i386/codegen.c,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/stacktrace.h, src/vm/signal.c, src/vm/signallocal.h,
	src/vmcore/class.c, src/vmcore/class.h, src/vmcore/loader.c:
	* md.c (md_codegen_get_pv_from_pc): Fixed comment.
	(md_get_method_patch_address): Added case for invokespecial and
	invokestatic.

	* codegen.c (codegen_emit): Fixed invokespecial/static.
	(createcompilerstub): Invoke without linking.
	* patcher.c (patcher_invokevirtual): Implemented.

	* asmpart.S (asm_call_jit_compiler): Save correct registers.
	[90b6edd36d00]

2007-03-12  twisti  <twisti>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h:
	* src/vm/jit/codegen.c (codegen): Change the operand direction of
	some macros. Started to implement long-compares differently.

	* src/vm/jit/codegen.h (M_AND, M_ORR, M_EOR, M_AND_IMM, M_MOVEQ)
	(M_MOVVS_IMM, M_MOVNE_IMM, M_MOVLT_IMM, M_MOVLS_IMM): Changed
	operand direction. (M_ORR_S, M_CMPEQ, M_CMPLE): New macro.
	[2509f70f8505]

	* src/vm/jit/arm/md.c:
	* src/vm/jit/arm/md.c (vm/jit/codegen-common.h): Added.
	[d11d179c49bd]

	* src/mm/boehm.c, src/mm/gc-common.h, src/mm/memory.c,
	src/mm/memory.h, src/native/jni.h, src/native/native.c,
	src/native/native.h,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/global.h, src/vm/jit/i386/codegen.c, src/vm/jit/stacktrace.h,
	src/vm/signal.c, src/vm/signallocal.h, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/loader.c:
	* src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c
	(vm/vm.h): Added. (open): Call vm_abort.

	* src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c
	(unistd.h): Added. (readByte): New function. (writeBuf): Likewise.
	(available0): Likewise. (close0): Likewise.
	[00bc809f0d2a]

2007-03-12  michi  <michi>

	* src/mm/cacao-gc/heap.c:
	* src/mm/cacao-gc/heap.c: Fixed includes.
	[575b62e7001e]

	* src/mm/cacao-gc/gc.c:
	* src/mm/cacao-gc/gc.c (gc_suspend): Implemented. (gc_collect): Now
	properly suspends threads before collecting.
	[2c58bad749e7]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c [ENABLE_GC_CACAO] (replace_gc_from_native):
	Added. (replace_me) [ENABLE_GC_CACAO]: Different execution path for
	the exact GC. (replace_map_source_state_identity): Added.
	[d881dd686fb0]

	* src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Local references
	are added.
	[6749b3d61efa]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/mark.c:
	* src/mm/cacao-gc/compact.c: Class fields are no longer threaded
	directly.
	* src/mm/cacao-gc/mark.c: Class fields are no longer marked directly.
	[3b706ddc3bfd]

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/rootset.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/jit/i386/linux/md-os.c:
	* src/threads/native/threads.h (threadobject): Struct now contains
	es and ss.
	* src/threads/native/threads.c (threads_suspend_ack): Informs GC about
	suspend.
	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigusr1): Pass SP
	as well.
	* src/mm/cacao-gc/gc.h (gc_suspend): Adapted prototype.
	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Uses ss of
	threadobject.
	[132ecadd6b9b]

2007-03-11  michi  <michi>

	* src/vm/jit/code.c, src/vm/jit/code.h:
	* src/vm/jit/code.c (code_find_codeinfo_for_pc_nocheck): Added.
	* src/vm/jit/code.h (code_find_codeinfo_for_pc_nocheck): Added
	prototype.
	[39fc2c9ba668]

	* configure.ac, src/mm/cacao-gc/heap.c, src/mm/cacao-gc/region.c,
	src/mm/cacao-gc/region.h, src/vm/builtin.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/x86_64/asmpart.S:
	* src/mm/cacao-gc/region.h (regioninfo_t): Added object header for
	locking.
	* src/mm/cacao-gc/region.c (region_create): Header mentioned above is
	initiated.
	* src/mm/cacao-gc/heap.c (heap_alloc_intern): Lock regions while
	allocating.
	[afd084a060d6]

2007-03-09  twisti  <twisti>

	* src/cacaoh/headers.c, src/mm/boehm.c, src/mm/gc-common.h,
	src/mm/memory.c, src/mm/memory.h, src/native/jni.h,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/Makefile.am, src/vm/builtin.h, src/vm/global.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/inline/inline.c,
	src/vm/jit/intrp/intrp.h, src/vm/jit/intrp/patcher.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/stacktrace.h,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c,
	src/vm/jit_interface.h, src/vm/resolve.c, src/vm/resolve.h,
	src/vm/signal.c, src/vm/signallocal.h, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.c,
	src/vmcore/descriptor.c, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/statistics.c,
	tests/regression/Makefile.am:
	* tests/regression/resolving (svn:ignore): Added.
	* tests/regression/resolving/classes1: Likewise.
	* tests/regression/resolving/classes2: Likewise.
	* tests/regression/resolving/classes3: Likewise.
	[644c9406eb42]

2007-03-09  tbfg  <tbfg>

	* src/vm/jit/codegen-common.c, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/emit.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/emit.c (emit_copy): Implemented. (emit_load):
	Implemented. (emit_patcher_stubs): Using bsrl instrad of jsr to
	easily spot patchers ind assembler output.

	* src/vm/jit/m68k/md.c (md_dcacheflush): Added.

	* src/vm/jit/m68k/codegen.c (ICMD_*LOAD): Implemented.
	(ICMD_PUTSTATIC): Implemented. (ICMD_BUILTIN): Implemented.

	* src/vm/jit/m68k/patcher.c (patcher_wrapper): Correctyl patching
	back original code. (patcher_invokestatic_special): Implemented.
	(patcher_resolve_classref_to_classinfo): Implemented.
	(patcher_get_putstatic): Implemented.

	* src/vm/jit/m68k/asmpart.S (asm_patcher_wrapper): Return to jit
	code.

	* src/vm/jit/m68k/codegen.h (M_AMOV_IMM): Fixed. (M_JMP_IMM): Added.
	(M_BSR): Added. (OPWORD_COND): Added for M_*MOVE opcodes. (M_*MOVE):
	Added.

	* src/vm/jit/codegen-common.c (codegen_add_patch_ref): Show
	opt_shownops for m68k enabled.
	[e2ec759779d3]

2007-03-08  michi  <michi>

	* src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/jit/i386/linux/md-os.c:
	Added support for thread suspension!

	* src/threads/native/threads.h (threadobject): Needed fields added.
	* src/threads/native/threads.c (threads_stopworld,
	threads_startworld): Improved. (threads_suspend_thread,
	threads_resume_thread, threads_suspend_ack): Added.

	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigusr1): Adapted
	to changes.
	[4c8c428f0906]

	* src/mm/cacao-gc/rootset.c, src/vm/jit/replace.c:
	* src/vm/jit/replace.c (replace_me): Loads sfi of current thread.
	(replace_recover_source_state): No longer bound to current thread.

	* src/mm/cacao-gc/rootset.c (rootset_from_thread): Loads sfi from
	passed thread.
	[71ccc40f0313]

	* src/cacaoh/headers.c, src/native/vm/gnu/java_lang_reflect_Field.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/Makefile.am, src/vm/builtin.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/codegen-common.c, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/patcher.c, src/vm/jit/inline/inline.c,
	src/vm/jit/intrp/intrp.h, src/vm/jit/intrp/patcher.c,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/jit_interface.h,
	src/vm/resolve.c, src/vm/resolve.h, src/vm/vm.c,
	src/vmcore/classcache.c, src/vmcore/descriptor.c,
	src/vmcore/linker.c, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h, src/vmcore/statistics.c,
	tests/regression/Makefile.am:
	* src/threads/native/threads.h: Added THREAD_FLAG_IN_NATIVE and
	gc_critical.
	* src/threads/native/threads.c: Init and dump the above flags.

	* src/vm/vm.c: Change the THREAD_IN_NATIVE_FLAG accordingly.
	* src/vm/jit/codegen-common.c: Same as above.
	[32d0b0323e17]

2007-03-08  tbfg  <tbfg>

	* src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/patcher.c:
	* src/vm/jit/m68k/linux/md-abi.h (REG_FP): Added. (REG_METHODPTR):
	Added. (REG_ITMP12_PACKED): Added. (REG_ITMP23_PACKED): Added.

	* src/vm/jit/m68k/emit.c (emit_jsr): Removed. (emit_jmp): Removed.
	(emit_store): Implemented. (emit_patcher_stubs): Implemented.


	* src/vm/jit/m68k/md.c (md_init): Asserting the offsets generated in
	build process.

	* src/vm/jit/m68k/codegen.c (INVOKE_VIRTUAL): Generate method
	header. (ICMD_*RETURN): Implemented.

	* src/vm/jit/m68k/patcher.c (patcher_wrapper): Implemented.
	(patcher_initialize_class): Implemented. (patcher_invokevirtual):
	Implemented. (patcher_resolve_class): Implemented.

	* src/vm/jit/m68k/asmpart.S (asm_patcher_wrapper): Implemented.

	* src/vm/jit/m68k/codegen.h (MCODECHECK): Implemented.
	(OPWORD_IMM16): Added. (OPWORD_IMM32): Added. (PATCHER_CALL_SIZE):
	Defined. (M_TPF):Added. (M_TPFW): Added. (M_TPFL): Added. (M_JMP):
	Added. (M_JSR): Added. (M_JSR_IMM): Added. (M_RET): Added. (M_LINK):
	Added. (M_UNLK): Added. (M_PUSH_IMM): Added. (M_ILD): Added.
	(M_ALD): Added. (M_IST): Added. (M_AST): Added. (M_INTMOVE): Added.
	(M_ADRMOVE): Added.
	[083ace5e9428]

2007-03-08  twisti  <twisti>

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen_emit): Use label-branches.
	[f2f8fcaa5e5e]

	* configure.ac, src/cacaoh/dummy.c, src/cacaoh/headers.c,
	src/native/jni.c, src/native/native.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Thread.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/vm/Makefile.am, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/replace.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/md-asm.h, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/jit_interface.h,
	src/vm/resolve.c, src/vm/resolve.h, src/vm/signal.c, src/vm/vm.c,
	src/vmcore/Makefile.am, src/vmcore/class.c, src/vmcore/classcache.c,
	src/vmcore/descriptor.c, src/vmcore/linker.c, src/vmcore/loader.c,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/resolve.c, src/vmcore/resolve.h,
	src/vmcore/statistics.c, tests/regression/Makefile.am,
	tests/regression/resolving/Makefile.am,
	tests/regression/resolving/TestController.java,
	tests/regression/resolving/TestLoader.java,
	tests/regression/resolving/classes1/BarPassFoo.java,
	tests/regression/resolving/classes1/BarUseFoo.java,
	tests/regression/resolving/classes1/Foo.java,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/BarPassFoo.java,
	tests/regression/resolving/classes2/BarUseFoo.java,
	tests/regression/resolving/classes2/DerivedFoo.java,
	tests/regression/resolving/classes2/Foo.java,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/BarPassFoo.java,
	tests/regression/resolving/classes3/BarUseFoo.java,
	tests/regression/resolving/classes3/DerivedFoo.java,
	tests/regression/resolving/classes3/Foo.java,
	tests/regression/resolving/classes3/Makefile.am,
	tests/regression/resolving/test_instance_subtype_violated.java, test
	s/regression/resolving/test_param_loading_constraint_violated.java, t
	ests/regression/resolving/test_param_loading_constraint_violated_der
	ived.java,
	tests/regression/resolving/test_param_subtype_violated.java,
	tests/regression/resolving/test_return_subtype_ok.java,
	tests/regression/resolving/test_return_subtype_violated.java, tests/
	regression/resolving/test_retval_loading_constraint_violated.java,
	tests/regression/resolving/test_simple_lazy_load.java:
	* Merged with trunk.
	[ecc23547cf56]

	* src/vm/jit/alpha/codegen.c:
	* src/vm/jit/alpha/codegen.c (codegen_emit): Use label-branches.
	[760b24bc4183]

	* src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h, src/vm/jit
	/emit-common.c, src/vm/jit/emit-common.h:
	* src/vm/jit/codegen-common.c (codegen_setup): Create brancheslabel
	list. (codegen_reset): Likewise. (codegen_branch_label_add): New
	function.

	* src/vm/jit/codegen-common.h (codegendata): Added brancheslabel.
	(branch_label_ref_t): New structure. (codegen_branch_label_add):
	Added.

	* src/vm/jit/emit-common.c (emit_label_bccz): New function.
	(emit_label): Likewise. (emit_label_bcc): Likewise. (emit_label_br):
	Likewise. (emit_label_beqz): Likewise. (emit_label_beq): Likewise.

	* src/vm/jit/emit-common.h (BRANCH_LABEL_1, BRANCH_LABEL_2)
	(BRANCH_LABEL_3, BRANCH_LABEL_4, BRANCH_LABEL_5): Defined.
	(emit_label_bccz): Added. (emit_label): Likewise. (emit_label_bcc):
	Likewise. (emit_label_br): Likewise. (emit_label_beqz): Likewise.
	(emit_label_beq): Likewise.
	[8a343a0e70e3]

2007-03-08  michi  <michi>

	* src/cacaoh/dummy.c, src/cacaoh/headers.c, src/mm/cacao-gc/rootset.c,
	src/native/jni.c, src/native/native.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Thread.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/threads-common.c, src/vm/Makefile.am, src/vm/builtin.c,
	src/vm/builtin.h, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/replace.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/md-asm.h, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/stacktrace.h, src/vm/jit/verify
	/typecheck-typeinferer.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/patcher.c,
	src/vm/jit_interface.h, src/vm/resolve.c, src/vm/resolve.h,
	src/vm/signal.c, src/vm/vm.c, src/vmcore/Makefile.am,
	src/vmcore/class.c, src/vmcore/descriptor.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h, src/vmcore/resolve.c,
	src/vmcore/resolve.h, src/vmcore/statistics.c,
	tests/regression/resolving/Makefile.am,
	tests/regression/resolving/classes2/BarPassFoo.java,
	tests/regression/resolving/test_return_subtype_ok.java,
	tests/regression/resolving/test_return_subtype_violated.java:
	Merged revisions 7441-7480 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7442 | pm | 2007-03-03 00:28:37 +0100 (Sat, 03 Mar 2007)
	| 8 lines

	 * src/vm/jit/s390/emit.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c, src/vm/jit/s390/asmpart.S: Changed a
	lot in S390 codegen. ........ r7444 | edwin | 2007-03-04 13:28:37
	+0100 (Sun, 04 Mar 2007) | 5 lines

	 * tests/regression/resolving/test_return_subtype_violated.java:
	New test.

	 * tests/regression/resolving/Makefile.am: Added new test. ........
	r7445 | edwin | 2007-03-04 13:32:59 +0100 (Sun, 04 Mar 2007) | 4
	lines

	 * tests/regression/resolving/test_return_subtype_ok.java: New
	test.

	 * tests/regression/resolving/Makefile.am: Added new test. ........
	r7446 | edwin | 2007-03-04 15:02:49 +0100 (Sun, 04 Mar 2007) | 2
	lines

	 * src/vm/jit/inline/inline.c: Committed breadth-first inlining
	code. ........ r7447 | edwin | 2007-03-04 15:22:42 +0100 (Sun, 04
	Mar 2007) | 6 lines

	 * src/vmcore/method.h (methodinfo): Added hitcountdown field.
	(Only if ENABLE_REPLACEMENT).

	 * src/vmcore/loader.c (loader_load_method): Initialize
	hitcountdown field. ........ r7448 | edwin | 2007-03-04 15:46:21
	+0100 (Sun, 04 Mar 2007) | 5 lines

	 * src/vm/jit/i386/codegen.c (codegen): Emit code for countdown
	traps.

	 * src/vm/jit/i386/emit.c (emit_replacement_stubs): Add jump
	reference for countdown traps. ........ r7449 | twisti |
	2007-03-04 19:07:55 +0100 (Sun, 04 Mar 2007) | 5 lines

	 * src/vm/jit/x86_64/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	........ r7450 | edwin | 2007-03-04 20:13:29 +0100 (Sun, 04 Mar
	2007) | 8 lines

	 * src/vmcore/options.h, src/vmcore/options.c, src/vmcore/method.c,
	src/vmcore/linker.c: Replayed lost parts of commit 7228.

	 * src/vm/jit/intrp/intrp.h: Added missing #include to make it
	compile.

	 * src/vm/jit/inline/inline.c: Fixed names of vmcore/ #include
	files. ........ r7451 | edwin | 2007-03-04 21:10:18 +0100 (Sun, 04
	Mar 2007) | 7 lines

	 * src/vm/jit/replace.c: Handle countdown traps. Request
	optimization of hot methods and their callers.

	 * src/vm/jit/jit.c (jit_compile): Set JITDATA_FLAG_COUNTDOWN for
	inlining. (jit_recompile): Set JITDATA_FLAG_INLINE for inlining.
	........ r7453 | pm | 2007-03-05 09:38:29 +0100 (Mon, 05 Mar 2007)
	| 8 lines

	 * src/vm/jit/s390/md-abi.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/patcher.c: Changed a
	lot. ........ r7457 | edwin | 2007-03-05 17:53:45 +0100 (Mon, 05
	Mar 2007) | 3 lines

	 * src/vmcore/resolve.h, src/vmcore/resolve.c
	(resolve_classref_or_classinfo_eager): New function. ........
	r7458 | edwin | 2007-03-05 18:32:38 +0100 (Mon, 05 Mar 2007) | 2
	lines

	 * src/vm/jit/code.c (code_get_methodinfo_from_pv): New function.
	........ r7459 | edwin | 2007-03-05 18:34:43 +0100 (Mon, 05 Mar
	2007) | 4 lines

	 * src/vm/builtin.h (builtintable_replace_function): Don't use
	instruction * to avoid bootstrapping problems.
	  * src/vm/builtin.c (builtintable_replace_function): Likewise. ........
	r7460 | edwin | 2007-03-05 18:44:20 +0100 (Mon, 05 Mar 2007) | 5
	lines

	 * src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getSuperclass),
	(_Jv_java_lang_Class_getDeclaringClass)
	(_Jv_java_lang_Class_getDeclaredClasses): Use
	resolve_classref_or_classinfo_eager. ........ r7461 | edwin |
	2007-03-06 00:50:33 +0100 (Tue, 06 Mar 2007) | 3 lines

	 * src/native/native.c (native_get_exceptiontypes): Use
	resolve_classref_or_classinfo_eager. ........ r7462 | edwin |
	2007-03-06 00:56:41 +0100 (Tue, 06 Mar 2007) | 2 lines

	 * src/cacaoh/headers.c: Don't include asmpart.h. ........ r7463
	| edwin | 2007-03-06 01:02:04 +0100 (Tue, 06 Mar 2007) | 3 lines

	 * src/vmcore/linker.c (link_class_intern): Use
	resolve_classref_or_classinfo_eager. ........ r7464 | edwin |
	2007-03-06 01:26:31 +0100 (Tue, 06 Mar 2007) | 30 lines

	 * src/vmcore/resolve.c: Moved back to src/vm/resolve.c.
	  * src/vmcore/resolve.h: Moved back to src/vm/resolve.h.
	  * src/vm/jit/code.h (codeinfo): Moved typedef to method.h.
	(code_get_methodinfo_for_pv): Added prototype.
	  * src/vmcore/method.h (codeinfo): Moved typedef here.

	 * src/vm/jit_interface.h: New file.

	 * src/vm/Makefile.am: Added resolve.[ch] and jit_interface.h.
	  * src/vmcore/Makefile.am: Removed resolve.[ch].

	 * src/vmcore/class.c: Include "arch.h", but don't include
	"resolve.h".

	 * src/vmcore/method.c (method_vftbl_lookup): Use
	code_get_methodinfo_for_pv.

	 * src/vmcore/linker.c (resolve_classref_or_classinfo_eager): Added
	copy of prototype to avoid bootstrapping issues.

	 * src/cacaoh/dummy.c (code_get_methodinfo_for_pv): New dummy.
	(resolve_classref_or_classinfo_eager): Simple implementation that
	does not use resolve.c code. (typeinfo_init_class): Removed
	dummy. (typeinfo_init_classinfo): Likewise.
	(typeinfo_is_assignable_to_class): Likewise. (typeinfo_print):
	Likewise.

	 * many other files: Changed #include "vmcore/resolve.h" to
	"vm/resolve.h". ........ r7465 | edwin | 2007-03-06 01:27:12 +0100
	(Tue, 06 Mar 2007) | 2 lines

	 * src/vm/jit_interface.h: Added Id keyword. ........ r7468 |
	twisti | 2007-03-06 12:12:03 +0100 (Tue, 06 Mar 2007) | 11 lines

	 * src/vmcore/statistics.c (vm/jit/code.h): Added for codeinfo.
	(vmcore/class.h): Added. (vmcore/field.h): Likewise.
	(vmcore/method.h): Likewise.

	 * src/vm/jit/optimizing/recompile.c (vm/jit/code.h): Likewise.
	(vm/jit/jit.h): Likewise.

	 * src/vm/jit/x86_64/md.c (vm/jit/codegen-common.h): Likewise.
	  * src/vm/jit/x86_64/md-abi.c (vm/jit/jit.h): Likewise. ........
	r7470 | twisti | 2007-03-06 18:01:19 +0100 (Tue, 06 Mar 2007) | 6
	lines

	 * src/vm/vm.c (vm_create): Reenabled signal-thread. This only
	works on NPTL-threads and NOT with linuxthreads!

	 * src/vm/signal.c (signal_init): Reenabled blocking for SIGINT and
	SIGQUIT. ........ r7471 | twisti | 2007-03-06 18:01:49 +0100 (Tue,
	06 Mar 2007) | 2 lines

	 * src/vm/signal.c (arch.h): Added. ........ r7472 | ajordan |
	2007-03-06 19:55:12 +0100 (Tue, 06 Mar 2007) | 10 lines

	 * src/vm/jit/sparc64/emit.c: emit_{load,store,copy} changed to
	switch/case for handling different types.

	 * src/vm/jit/sparc64/codegen.h: fixed f2d and d2f conversion.

	 * src/vm/jit/sparc64/md-abi.c: removed md_native_reg_setup(), not
	needed any longer.

	 * src/vm/jit/sparc64/codegen.c: implemented ICMD_MULTIANEWARRAY.
	fixed FRETURN, DRETURN. repaired native float arg passing.
	........ r7473 | ajordan | 2007-03-07 01:32:35 +0100 (Wed, 07 Mar
	2007) | 6 lines

	 * src/vm/jit/sparc64/md-abi.h: increased number of JIT float
	argument registers to 5.
	  * src/vm/jit/sparc64/md-asm.h: likewise.
	  * src/vm/jit/sparc64/md-abi.c: likewise.

	 * src/vm/jit/sparc64/asmpart.S: added floating point argument
	handling in asm_vm_call. ........ r7474 | michi | 2007-03-07
	12:47:45 +0100 (Wed, 07 Mar 2007) | 9 lines

	 * src/threads/native/threads.h (threadobject): This structure is
	no longer an instance of java.lang.Thread, but contains a
	reference to it.

	 * src/threads/native/threads.c (threads_start_javathread): Added.

	 * src/threads/threads-common.c: Adapted to above changes.
	  * src/threads/native/threads.c: See above.
	  * src/native/vm/java_lang_Thread.c: See above. ........ r7475 |
	twisti | 2007-03-07 13:37:34 +0100 (Wed, 07 Mar 2007) | 3 lines

	 * src/vm/jit/x86_64/asmpart.S (asm_compare_and_swap): New
	function. (asm_memory_barrier): Likewise. ........ r7476 |
	twisti | 2007-03-07 14:12:01 +0100 (Wed, 07 Mar 2007) | 2 lines

	 * src/vm/jit/x86_64/emit.c (emit_call_reg): Call emit_rex with
	size 0. ........ r7477 | twisti | 2007-03-07 15:05:04 +0100 (Wed,
	07 Mar 2007) | 2 lines

	 * src/vm/jit/mips/md.c (vm/jit/codegen-common.h): Temporarily
	added. ........ r7478 | michi | 2007-03-08 03:59:31 +0100 (Thu, 08
	Mar 2007) | 5 lines

	 * src/threads/native/threads.c (threads_init) [!ENABLE_GC_CACAO]:
	Fixed bug for lost java.lang.Thread object of mainthread with
	BoehmGC.

	 * src/native/vm/java_lang_Thread.c: Fixed includes to prevend
	compiler warnings. ........
	[d775c359cb66]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/vm/jit/i386/linux
	/md-os.c:
	* src/vm/jit/i386/linux/md-os.c: Cleaned up.
	* src/mm/cacao-gc/gc.h: Fixed includes.
	* src/mm/cacao-gc/gc.c (gc_pending): Added global variable.
	[c1f89c958f8d]

2007-03-08  twisti  <twisti>

	* src/mm/boehm.c, src/mm/cacao-gc/compact.c, src/mm/gc-common.h,
	src/mm/memory.c, src/mm/memory.h, src/native/jni.h,
	src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/java_lang_ClassLoader.c, src/toolbox/list.c,
	src/toolbox/list.h, src/vm/global.h, src/vm/jit/stacktrace.h,
	src/vm/signallocal.h, src/vmcore/class.h, src/vmcore/classcache.h,
	src/vmcore/loader.h, src/vmcore/rt-timing.c, src/vmcore/rt-timing.h:
	* src/toolbox/list.c (list_remove): Call list_remove_unsynced.
	(list_remove_unsynced): New function.

	* src/toolbox/list.h (list_remove_unsynced): Added.
	[b65a6efba3aa]

2007-03-08  michi  <michi>

	* configure.ac, src/cacaoh/headers.c, src/mm/cacao-gc/gc.h,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/vm/Makefile.am, src/vm/builtin.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/linux/md-os.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/patcher.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/stack.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, src/vm/signal.c, src/vm/signallocal.h,
	src/vmcore/classcache.c, src/vmcore/descriptor.c,
	src/vmcore/options.c, src/vmcore/options.h, src/vmcore/statistics.c,
	tests/regression/Makefile.am:
	* src/mm/cacao-gc/gc.h (gc_suspend): Added prototype.

	* src/vm/signale.c (signale_init) [ENABLE_GC_CACAO]: Handler for
	SIGUSR1.
	* src/vm/signallocal.h: Added prototype for SIGUSR1 handler.

	* src/vm/jit/i386/linux/md-os.c (md_signal_handler_sigusr1): Added.
	[186d485732de]

2007-03-08  twisti  <twisti>

	* src/native/vm/java_lang_Thread.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/vm/jit/alpha/arch.h,
	src/vm/jit/alpha/codegen.h, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/emit-common.c, src/vm/jit/emit-common.h, src/vm/signal.c:
	* src/vm/jit/alpha/codegen.h (M_INSTR_MEM_A): Renamed to
	M_MEM_GET_A. (M_INSTR_MEM_B): Renamed to M_MEM_GET_B.
	(M_INSTR_MEM_DISP): Renamed to M_MEM_GET_DISP.

	* src/vm/jit/alpha/linux/md-os.c (md_signal_handler_sigsegv):
	Likewise.

	* src/vm/jit/alpha/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER): Defined.
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER): Likewise.
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Likewise.

	* src/vm/jit/emit-common.c (arch.h): Added.
	* src/vm/jit/emit-common.h (arch.h): Likewise.
	[872d8003e23f]

2007-03-08  michi  <michi>

	* src/native/vm/java_lang_Thread.c, src/threads/native/threads.c:
	* src/threads/native/threads.c (threads_init) [!ENABLE_GC_CACAO]:
	Fixed bug for lost java.lang.Thread object of mainthread with
	BoehmGC.

	* src/native/vm/java_lang_Thread.c: Fixed includes to prevend
	compiler warnings.
	[41366642f3af]

2007-03-07  twisti  <twisti>

	* src/vm/jit/mips/md.c:
	* src/vm/jit/mips/md.c (vm/jit/codegen-common.h): Temporarily added.
	[58f73c63ef03]

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_call_reg): Call emit_rex with size
	0.
	[f1b6321c7bea]

	* src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/x86_64/asmpart.S (asm_compare_and_swap): New function.
	(asm_memory_barrier): Likewise.
	[eab404e7f39b]

2007-03-07  michi  <michi>

	* src/native/vm/java_lang_Thread.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/threads-common.c:
	* src/threads/native/threads.h (threadobject): This structure is no
	longer an instance of java.lang.Thread, but contains a reference to
	it.

	* src/threads/native/threads.c (threads_start_javathread): Added.

	* src/threads/threads-common.c: Adapted to above changes.
	* src/threads/native/threads.c: See above.
	* src/native/vm/java_lang_Thread.c: See above.
	[e0154f388f07]

2007-03-07  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md-asm.h:
	* src/vm/jit/sparc64/md-abi.h: increased number of JIT float
	argument registers to 5.
	* src/vm/jit/sparc64/md-asm.h: likewise.
	* src/vm/jit/sparc64/md-abi.c: likewise.

	* src/vm/jit/sparc64/asmpart.S: added floating point argument
	handling in asm_vm_call.
	[2ead47c5f866]

2007-03-06  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md-abi.c:
	* src/vm/jit/sparc64/emit.c: emit_{load,store,copy} changed to
	switch/case for handling different types.

	* src/vm/jit/sparc64/codegen.h: fixed f2d and d2f conversion.

	* src/vm/jit/sparc64/md-abi.c: removed md_native_reg_setup(), not
	needed any longer.

	* src/vm/jit/sparc64/codegen.c: implemented ICMD_MULTIANEWARRAY.
	fixed FRETURN, DRETURN. repaired native float arg passing.
	[9980961f1055]

2007-03-06  twisti  <twisti>

	* src/vm/signal.c:
	* src/vm/signal.c (arch.h): Added.
	[3d116d2fe39a]

	* src/vm/signal.c, src/vm/vm.c:
	* src/vm/vm.c (vm_create): Reenabled signal-thread. This only works
	on NPTL-threads and NOT with linuxthreads!

	* src/vm/signal.c (signal_init): Reenabled blocking for SIGINT and
	SIGQUIT.
	[be5ff32af719]

2007-03-06  tbfg  <tbfg>

	* src/cacaoh/headers.c, src/native/native.c,
	src/native/vm/gnu/java_lang_reflect_Field.c, src/vm/Makefile.am,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/intrp/patcher.c,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/md.c, src/vm/jit/stack.c, src/vm/jit/verify
	/typecheck-typeinferer.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, src/vmcore/Makefile.am, src/vmcore/class.c,
	src/vmcore/descriptor.c, src/vmcore/statistics.c:
	* src/vm/jit/m68k/md.c (md_get_method_patch_address): Implemented.

	* src/vm/jit/m68k/asmpart.S (call_jit_dummy): Dummy memory slot to
	fake jit like invocation of asm_call_jit_compiler.

	(asm_vm_call_method): Invoke jit compiler like from jitted code.
	(asm_call_jit_compiler): Invoke compiled method.
	[5cd56b546f0e]

2007-03-06  twisti  <twisti>

	* src/vm/jit/optimizing/recompile.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, src/vmcore/statistics.c:
	* src/vmcore/statistics.c (vm/jit/code.h): Added for codeinfo.
	(vmcore/class.h): Added. (vmcore/field.h): Likewise.
	(vmcore/method.h): Likewise.

	* src/vm/jit/optimizing/recompile.c (vm/jit/code.h): Likewise.
	(vm/jit/jit.h): Likewise.

	* src/vm/jit/x86_64/md.c (vm/jit/codegen-common.h): Likewise.
	* src/vm/jit/x86_64/md-abi.c (vm/jit/jit.h): Likewise.
	[846bb32a87d2]

2007-03-06  michi  <michi>

	* src/mm/cacao-gc/Makefile.am, src/mm/cacao-gc/copy.c, src/mm/cacao-
	gc/copy.h, src/mm/cacao-gc/gc.c, src/mm/cacao-gc/heap.c:
	* src/mm/cacao-gc/copy.c: Added file.
	* src/mm/cacao-gc/copy.h: Added file.
	* src/mm/cacao-gc/Makefile.am: See above.

	* src/mm/cacao-gc/heap.c: Moved copy specific stuff to own file.

	* src/mm/cacao-gc/gc.c: Now tests copy collections.
	[57611210cc37]

	* configure.ac, src/mm/cacao-gc/rootset.c, src/mm/cacao-gc/rootset.h,
	src/vm/builtin.h, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/emit.c,
	src/vm/jit/x86_64/emit.c, src/vmcore/classcache.c,
	tests/regression/Makefile.am:
	Static class references are now explicitly added to the rootset.

	* src/mm/cacao-gc/rootset.c (rootset_from_classes): Added.
	* src/mm/cacao-gc/rootset.h (REFTYPE_CLASSREF): Added.
	[2eb5b5cfca2f]

2007-03-06  edwin  <edwin>

	* src/vm/jit_interface.h:
	* src/vm/jit_interface.h: Added Id keyword.
	[920caf1ce50d]

	* src/cacaoh/dummy.c, src/native/jni.c, src/native/native.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/java_lang_Class.c, src/vm/Makefile.am,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/code.h,
	src/vm/jit/i386/patcher.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/patcher.c, src/vm/jit/jit.h,
	src/vm/jit/mips/patcher.c, src/vm/jit/parse.c,
	src/vm/jit/powerpc/patcher.c, src/vm/jit/powerpc64/patcher.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/patcher.c, src/vm/jit_interface.h,
	src/vm/resolve.c, src/vm/resolve.h, src/vmcore/Makefile.am,
	src/vmcore/class.c, src/vmcore/descriptor.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/resolve.c, src/vmcore/resolve.h:
	* src/vmcore/resolve.c: Moved back to src/vm/resolve.c.
	* src/vmcore/resolve.h: Moved back to src/vm/resolve.h.
	* src/vm/jit/code.h (codeinfo): Moved typedef to method.h.
	(code_get_methodinfo_for_pv): Added prototype.
	* src/vmcore/method.h (codeinfo): Moved typedef here.

	* src/vm/jit_interface.h: New file.

	* src/vm/Makefile.am: Added resolve.[ch] and jit_interface.h.
	* src/vmcore/Makefile.am: Removed resolve.[ch].

	* src/vmcore/class.c: Include "arch.h", but don't include
	"resolve.h".

	* src/vmcore/method.c (method_vftbl_lookup): Use
	code_get_methodinfo_for_pv.

	* src/vmcore/linker.c (resolve_classref_or_classinfo_eager): Added
	copy of prototype to avoid bootstrapping issues.

	* src/cacaoh/dummy.c (code_get_methodinfo_for_pv): New dummy.
	(resolve_classref_or_classinfo_eager): Simple implementation that
	does not use resolve.c code. (typeinfo_init_class): Removed dummy.
	(typeinfo_init_classinfo): Likewise.
	(typeinfo_is_assignable_to_class): Likewise. (typeinfo_print):
	Likewise.

	* many other files: Changed #include "vmcore/resolve.h" to
	"vm/resolve.h".
	[a6ae28360f65]

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (link_class_intern): Use
	resolve_classref_or_classinfo_eager.
	[8b56688900be]

2007-03-05  edwin  <edwin>

	* src/cacaoh/headers.c:
	* src/cacaoh/headers.c: Don't include asmpart.h.
	[899764f7a0ce]

	* src/native/native.c:
	* src/native/native.c (native_get_exceptiontypes): Use
	resolve_classref_or_classinfo_eager.
	[f5aff9934af5]

	* src/native/vm/java_lang_Class.c:
	* src/native/vm/java_lang_Class.c
	(_Jv_java_lang_Class_getSuperclass),
	(_Jv_java_lang_Class_getDeclaringClass)
	(_Jv_java_lang_Class_getDeclaredClasses): Use
	resolve_classref_or_classinfo_eager.
	[1390ab8b3bd2]

	* src/vm/builtin.c, src/vm/builtin.h:
	* src/vm/builtin.h (builtintable_replace_function): Don't use
	instruction * to avoid bootstrapping problems.
	* src/vm/builtin.c (builtintable_replace_function): Likewise.
	[19a54ed5e016]

	* src/vm/jit/code.c:
	* src/vm/jit/code.c (code_get_methodinfo_from_pv): New function.
	[e6e6f9540e1e]

	* src/vm/jit/i386/asmpart.S, src/vmcore/resolve.c,
	src/vmcore/resolve.h:
	* src/vmcore/resolve.h, src/vmcore/resolve.c
	(resolve_classref_or_classinfo_eager): New function.
	[3ead6ad73d97]

2007-03-05  tbfg  <tbfg>

	* src/vm/jit/abi.h, src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/m68k/linux/md-abi.h,
	src/vm/jit/m68k/md.c, src/vm/jit/reg.c, src/vmcore/descriptor.h:
	* src/vm/jit/abi.h (HAS_ADDRESS_REGISTER_FILE): Include arch.h
	(nregdescadr): Declare extern when HAS_ADDRESS_REGISTER_FILE.

	* src/vm/jit/m68k/linux/md-abi.h (REF_FP): Added.

	* src/vm/jit/m69k/linux/md-abi.c (nregdescadr): Fixed typo.
	(md_param_alloc): Implemented.

	* src/vm/jit/m68k/md.c (md_codegen_get_pv_from_pc): Implemented.
	(md_stacktrace_get_returnaddress): Implemented.

	* src/vm/jit/m68k/arch.h (HAS_ADDRESS_REGISTER_FILE): Defined.

	* src/vm/jit/m68k/asmpart.S (asm_vm_call_method_end): Added.
	(asm_call_jit_compiler): Implemented.

	* src/vm/jit/reg.c (reg_setup): rd->adrreg_argnum is missing.

	* src/vmcore/descriptor.h (arch.h): Included as needed for
	HAS_ADDRESS_REGISTER_FILE.
	[629a0a1b6da3]

	* src/vm/jit/mips/asmpart.S, src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/mips/asmpart.S (asm_vm_call_method_end): Added.
	* src/vm/jit/x86_64/asmpart.S (asm_vm_call_method_end): Added.
	[781fb227cc5e]

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/arm/asmpart.S,
	src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c,
	src/vm/jit/i386/asmpart.S, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.h,
	src/vm/jit/sparc64/asmpart.S:
	* asmpart.h (asm_vm_call_method_end): Dummy method to readable mark
	end of the asm_vm_call_method which is needed to insert it into avl
	tree.

	* codegen-common.c (codegen_init): Use asm_vm_call_method_end.

	* arm/asmpart.S (asm_vm_call_method_end): Added.
	* powerpc/asmpart.S (asm_vm_call_method_end): Added.
	* sparc64/asmpart.S (asm_vm_call_method_end): Added.
	* alpha/asmpart.S (asm_vm_call_method_end): Added.
	* s390/asmpart.S (asm_vm_call_method_end): Added.
	* powerpc64/asmpart.S (asm_vm_call_method_end): Added.
	* i386/asmpart.S (asm_vm_call_method_end): Added.
	[aa13999923b1]

2007-03-05  pm  <pm>

	* configure.ac, src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c,
	src/vm/jit/codegen-common.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/patcher.c, src/vm/jit/x86_64/patcher.c,
	src/vmcore/classcache.c, src/vmcore/resolve.c, src/vmcore/resolve.h,
	tests/regression/Makefile.am:
	* src/vm/jit/s390/md-abi.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/emit.h, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/patcher.c: Changed a lot.
	[cb92a55875c8]

2007-03-04  twisti  <twisti>

	* src/mm/boehm.c, src/native/vm/gnu/java_lang_reflect_Method.c,
	src/vm/access.c, src/vm/access.h, src/vm/jit/i386/codegen.c,
	src/vm/jit/inline/inline.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md-asm.h, src/vm/jit/stack.c,
	src/vm/jit/verify/typecheck.c, src/vmcore/linker.c,
	src/vmcore/loader.c, src/vmcore/method.c, src/vmcore/method.h,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/powerpc64/linux/md-abi.c (regs): Renamed to
	abi_registers_integer_name. (md_param_alloc_native): New function.

	* src/vm/jit/powerpc64/emit.c (emit_verbosecall_enter): Replaced
	builtin_trace_args with builtin_verbosecall_enter.
	(emit_verbosecall_exit): Replaced builtin_displaymethodstop with
	builtin_verbosecall_exit

	* src/vm/jit/powerpc64/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER): Defined.
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER): Likewise.
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Likewise.
	[8b515435fe56]

2007-03-04  edwin  <edwin>

	* src/vm/jit/jit.c, src/vm/jit/replace.c:
	* src/vm/jit/replace.c: Handle countdown traps. Request optimization
	of hot methods and their callers.

	* src/vm/jit/jit.c (jit_compile): Set JITDATA_FLAG_COUNTDOWN for
	inlining. (jit_recompile): Set JITDATA_FLAG_INLINE for inlining.
	[25d019f7504b]

	* src/vm/jit/inline/inline.c, src/vm/jit/intrp/intrp.h,
	src/vmcore/linker.c, src/vmcore/method.c, src/vmcore/options.c,
	src/vmcore/options.h:
	* src/vmcore/options.h, src/vmcore/options.c, src/vmcore/method.c,
	src/vmcore/linker.c: Replayed lost parts of commit 7228.

	* src/vm/jit/intrp/intrp.h: Added missing #include to make it
	compile.

	* src/vm/jit/inline/inline.c: Fixed names of vmcore/ #include files.
	[b12f334a12da]

2007-03-04  twisti  <twisti>

	* src/vm/jit/x86_64/emit.c:
	* src/vm/jit/x86_64/emit.c (emit_load): Use switch-case instead of
	if-else contruct. (emit_store): Likewise. (emit_copy): Likewise.
	[262f592df737]

2007-03-04  edwin  <edwin>

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c:
	* src/vm/jit/i386/codegen.c (codegen): Emit code for countdown
	traps.

	* src/vm/jit/i386/emit.c (emit_replacement_stubs): Add jump
	reference for countdown traps.
	[5fd5b2811199]

	* src/vmcore/loader.c, src/vmcore/method.h:
	* src/vmcore/method.h (methodinfo): Added hitcountdown field. (Only
	if ENABLE_REPLACEMENT).

	* src/vmcore/loader.c (loader_load_method): Initialize hitcountdown
	field.
	[efeadd853ac8]

	* src/vm/jit/inline/inline.c:
	* src/vm/jit/inline/inline.c: Committed breadth-first inlining code.
	[38ec32d5f074]

	* tests/regression/resolving/Makefile.am,
	tests/regression/resolving/test_return_subtype_ok.java:
	* tests/regression/resolving/test_return_subtype_ok.java: New test.

	* tests/regression/resolving/Makefile.am: Added new test.
	[7644200c297b]

	* src/mm/boehm.c, tests/regression/resolving/Makefile.am,
	tests/regression/resolving/classes2/BarPassFoo.java,
	tests/regression/resolving/test_return_subtype_violated.java:
	* tests/regression/resolving/test_return_subtype_violated.java: New
	test.

	* tests/regression/resolving/Makefile.am: Added new test.
	[498b290fa85e]

2007-03-03  michi  <michi>

	* src/mm/boehm.c, src/mm/cacao-gc/heap.c, src/vm/jit/s390/emit.c,
	src/vmcore/rt-timing.c, src/vmcore/rt-timing.h:
	* src/vmcore/rt-timing.c: Added rt-timing for heap allocation time.
	* src/vmcore/rt-timing.h: See above.

	* src/mm/boehm.c (heap_allocate): Heap allocation time is measured.

	* src/mm/cacao-gc/heap.c (heap_allocate): Heap allocation time is
	measured.
	[01335840ae08]

2007-03-02  pm  <pm>

	* configure.ac, src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/access.c,
	src/vm/access.h, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c, src/vm/jit/stack.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/x86_64/patcher.c,
	src/vmcore/classcache.c, src/vmcore/resolve.c, src/vmcore/resolve.h,
	tests/regression/Makefile.am:
	* src/vm/jit/s390/emit.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c, src/vm/jit/s390/asmpart.S: Changed a lot
	in S390 codegen.
	[b5859fd89dd5]

2007-03-02  michi  <michi>

	* configure.ac, src/cacaoh/dummy.c, src/native/jni.c,
	src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h, src/vm/access.c,
	src/vm/access.h, src/vm/jit/alpha/patcher.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/sparc64/solaris/md-os.c, src/vm/jit/stack.c,
	src/vm/jit/stacktrace.h, src/vm/jit/verify/typecheck.c,
	src/vm/jit/x86_64/patcher.c, src/vm/vm.c, src/vmcore/classcache.c,
	src/vmcore/resolve.c, src/vmcore/resolve.h,
	tests/regression/Makefile.am, tests/regression/jasmin/Makefile.am, t
	ests/regression/jasmin/test_verify_ok_local_as_retaddr_and_reference
	.j, tests/regression/resolving/Makefile.am,
	tests/regression/resolving/TestController.java,
	tests/regression/resolving/TestLoader.java,
	tests/regression/resolving/classes1/BarPassFoo.java,
	tests/regression/resolving/classes1/BarUseFoo.java,
	tests/regression/resolving/classes1/Foo.java,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/BarPassFoo.java,
	tests/regression/resolving/classes2/BarUseFoo.java,
	tests/regression/resolving/classes2/DerivedFoo.java,
	tests/regression/resolving/classes2/Foo.java,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/BarPassFoo.java,
	tests/regression/resolving/classes3/BarUseFoo.java,
	tests/regression/resolving/classes3/DerivedFoo.java,
	tests/regression/resolving/classes3/Foo.java,
	tests/regression/resolving/classes3/Makefile.am,
	tests/regression/resolving/test_instance_subtype_violated.java, test
	s/regression/resolving/test_param_loading_constraint_violated.java, t
	ests/regression/resolving/test_param_loading_constraint_violated_der
	ived.java,
	tests/regression/resolving/test_param_subtype_violated.java, tests/r
	egression/resolving/test_retval_loading_constraint_violated.java,
	tests/regression/resolving/test_simple_lazy_load.java:
	Merged revisions 7407-7440 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7408 | twisti | 2007-02-26 23:11:38 +0100 (Mon, 26 Feb
	2007) | 15 lines

	 * src/native/vm/java_lang_ClassLoader.c: New file.
	  * src/native/vm/java_lang_ClassLoader.h: Likewise.

	 * src/native/vm/gnu/java_lang_VMClassLoader.c
	(native/vm/java_lang_ClassLoader.h): Added. (defineClass): Removed
	code and call _Jv_java_lang_ClassLoader_defineClass.

	 * src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	java_lang_ClassLoader.[ch].

	 * src/native/jni.c [ENABLE_JAVASE]
	(native/vm/java_lang_ClassLoader.h): Added. (_Jv_JNI_DefineClass):
	Removed env and NULL arguments. ........ r7409 | ajordan |
	2007-02-27 03:07:00 +0100 (Tue, 27 Feb 2007) | 8 lines

	 * configure.ac: added solaris specific stuff: arch defines,
	libintl dependency and solaris subdir makefile.

	 * src/vm/jit/stacktrace.h: declared SPARC specific functions.

	 * src/vm/jit/sparc64/emit.c: fixed call to
	builtin_verbosecall_exit.

	 * src/vm/jit/sparc64/solaris/md-os.c: signal handling disabled,
	can't test right now. ........ r7412 | twisti | 2007-02-27
	22:13:26 +0100 (Tue, 27 Feb 2007) | 2 lines

	 * src/vm/jit/sparc64/solaris: Set ignore-properties. ........
	r7414 | pm | 2007-02-28 08:22:04 +0100 (Wed, 28 Feb 2007) | 5 lines

	 * src/vm/jit/s390/codegen.c (codegen): Added ICMD_AASTORE.
	  * src/vm/jit/s390/asmpart.S (asm_patcher_wrapper): Added exception
	handler.
	  * src/vm/jit/s390/asmpart.S (asm_call_jit_compiler): Likewise.
	........ r7415 | twisti | 2007-02-28 14:23:54 +0100 (Wed, 28 Feb
	2007) | 3 lines

	 * src/native/vm/java_lang_ClassLoader.c (defineClass): Added
	loader-variable for convenience. ........ r7416 | twisti |
	2007-02-28 14:25:56 +0100 (Wed, 28 Feb 2007) | 2 lines

	 * src/native/vm/java_lang_ClassLoader.c (vm/stringlocal.h): Added.
	........ r7418 | twisti | 2007-02-28 21:07:06 +0100 (Wed, 28 Feb
	2007) | 13 lines

	 * src/vm/access.c (access_check_caller): Renamed to
	access_check_member. Don't call access_is_accessible_class, this is
	wrong.

	 * src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Use access_check_member.

	 * src/native/vm/gnu/java_lang_reflect_Field.c (CHECKFIELDACCESS):
	Removed. (cacao_get_field_address): Use access_check_member.

	 * src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative):
	Likewise. ........ r7419 | twisti | 2007-02-28 23:00:50 +0100
	(Wed, 28 Feb 2007) | 3 lines

	 * src/vm/access.h (access_check_caller): Renamed to
	access_check_member. ........ r7420 | edwin | 2007-02-28 23:30:31
	+0100 (Wed, 28 Feb 2007) | 3 lines

	 * src/vm/jit/stack.c (stack_analyse): Fix: reset TYPE_VOID to
	TYPE_ADR at the end of stack_analyse. ........ r7421 | twisti |
	2007-02-28 23:31:50 +0100 (Wed, 28 Feb 2007) | 4 lines

	 * src/vm/vm.c (vm_create): Changed initialization order. Call
	properties_postinit later, since it puts a pointer to
	_Jv_bootclasspath into the properties list. ........ r7422 | edwin
	| 2007-02-28 23:50:28 +0100 (Wed, 28 Feb 2007) | 4 lines

	 * tests/regression/jasmin/test_verify_ok_local_as_retaddr_and_refe
	rence.j: New test.
	  * tests/regression/jasmin/Makefile.am: Added new test. ........
	r7423 | edwin | 2007-03-01 00:20:58 +0100 (Thu, 01 Mar 2007) | 2
	lines

	 * src/vm/jit/stack.c (stack_analyse): Minor STACK_VERBOSE
	improvements. ........ r7424 | edwin | 2007-03-01 00:27:15 +0100
	(Thu, 01 Mar 2007) | 3 lines

	 * src/vm/jit/verify/typecheck.c (handle_basic_block): Move the
	printing of the block to a point where jd->var is already valid.
	........ r7425 | twisti | 2007-03-01 00:39:48 +0100 (Thu, 01 Mar
	2007) | 2 lines

	 * src/cacaoh/dummy.c (typeinfo_print): Added. ........ r7426 |
	twisti | 2007-03-01 00:57:39 +0100 (Thu, 01 Mar 2007) | 5 lines

	 * src/vmcore/classcache.c (toolbox/logging.h): Added.
	(classcache_merge_class_entries): Replace log_text with log_println.
	(classcache_store): Likewise. (classcache_store_defined):
	Likewise. ........ r7427 | edwin | 2007-03-01 13:32:10 +0100 (Thu,
	01 Mar 2007) | 3 lines

	 * src/vmcore/resolve.c (resolve_classref_or_classinfo): Always use
	refmethod->class as the referring class, if it is available.
	........ r7428 | twisti | 2007-03-01 13:39:45 +0100 (Thu, 01 Mar
	2007) | 6 lines

	 * src/native/vm/Makefile.am [ENABLE_JAVASE] (CLASSLOADER_SOURCES):
	Added. (libnativevm_la_SOURCES): Use CLASSLOADER_SOURCES.

	 * src/native/vm/java_lang_ClassLoader.c (native/jni.h): Added.
	........ r7431 | edwin | 2007-03-01 14:49:14 +0100 (Thu, 01 Mar
	2007) | 14 lines

	 * src/vmcore/resolve.h, src/vmcore/resolve.c
	(resolve_class_eager_no_access_check): New function.

	 * src/vm/jit/powerpc/patcher.c: Use
	resolve_class_eager_no_access_check.
	  * src/vm/jit/arm/patcher.c: Likewise.
	  * src/vm/jit/sparc64/patcher.c: Likewise.
	  * src/vm/jit/alpha/patcher.c: Likewise.
	  * src/vm/jit/s390/patcher.c: Likewise.
	  * src/vm/jit/mips/patcher.c: Likewise.
	  * src/vm/jit/powerpc64/patcher.c: Likewise.
	  * src/vm/jit/i386/patcher.c: Likewise.
	  * src/vm/jit/x86_64/patcher.c: Likewise. ........ r7433 | edwin |
	2007-03-02 20:42:13 +0100 (Fri, 02 Mar 2007) | 3 lines

	 * tests/regression/resolving: Added resolving test suite. These
	tests check lazy loading, classloader handling, loading & subtype
	constraints. ........ r7434 | edwin | 2007-03-02 20:44:53 +0100
	(Fri, 02 Mar 2007) | 2 lines

	 * configure.ac: Added Makefiles of resolving test suite. ........
	r7435 | edwin | 2007-03-02 20:45:42 +0100 (Fri, 02 Mar 2007) | 2
	lines

	 * src/vmcore/classcache.c: Print debug messages to stdout.
	........
	[16cce40a0a12]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/heap.h, src/vmcore/rt-
	timing.c, src/vmcore/rt-timing.h:
	* src/vmcore/rt-timing.h: Added gc rt-timing defines.
	* src/vmcore/rt-timing.c [ENABLE_GC_CACAO]: Added gc rt-timing
	entries.
	* src/mm/cacao-gc/gc.c: Added realtime-timing.

	* src/mm/cacao-gc/heap.h: Removed unused global variables.
	[3f7144c5e402]

	* src/native/jni.c, src/native/jni.h:
	* src/native/jni.h (hashtable_global_ref): Added.
	* src/native/jni.c (hashtable_global_ref): Made non-static for the
	exact gc.
	[369806a4aae8]

	* src/mm/cacao-gc/rootset.c:
	* src/mm/cacao-gc/rootset.c [!ENABLE_THREADS]: Now compiles again.
	[d942f1db75bc]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/gc.h, src/mm/cacao-
	gc/heap.c, src/mm/cacao-gc/mark.c, src/vm/global.h,
	src/vm/jit/arm/patcher.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/x86_64/patcher.c,
	tests/regression/Makefile.am:
	* src/vm/global.h (HDRFLAG_REFERENCING): Added.

	* src/mm/cacao-gc/heap.c: Sets above header flag now.
	* src/mm/cacao-gc/compact.c: Check for above header flag now.
	* src/mm/cacao-gc/mark.c: See above.

	* src/mm/cacao-gc/gc.h: Added configuration define for the above
	behavior.
	[080b239a5aaa]

2007-03-02  tbfg  <tbfg>

	* configure.ac, src/vm/jit/arm/patcher.c, src/vm/jit/disass-common.c,
	src/vm/jit/disass.h, src/vm/jit/i386/patcher.c,
	src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/disass.c,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/emit.h,
	src/vm/jit/m68k/linux/md-abi.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/x86_64/patcher.c, src/vmcore/classcache.c,
	src/vmcore/resolve.c, src/vmcore/resolve.h,
	tests/regression/Makefile.am:
	* src/vm/jit/disass-common.c(disass_buf): Enabled for m68k.

	* src/vm/jit/disass.h(disass_buf): Likewise.

	* src/vm/jit/m68k/linux/md-abi.c(nregdescaddr): Added.

	* src/vm/jit/m68k/emit.c(emit_jsr): Added. (emit_jmp): Added.
	(emit_store): Added. (emit_load): Added. (emit_load_low): Added.
	(emit_load_high): Added. (emit_branch): Added.
	(emit_verbosecall_enter): Added. (emit_verbosecall_exit): Added.

	* src/vm/jit/m68k/emit.h: Like emit.c

	* src/vm/jit/m68k/codegen.c(codegen_emit): Some dummy code added.
	(createnativestub): Likewise.

	* src/vm/jit/m68k/disass.c(disassinstr): Implemented and tested.

	* src/vm/jit/m68k/asmpart.S(asm_vm_call_method): Implemented
	argument passing.

	* src/vm/jit/m68k/codegen.h(M_ILLEGAL): Added. (M_PUSH): Likewise.
	(M_APUSH): Likewise. (M_POP): Likewise. (M_APOP): Likewise. (M_JMP):
	Likewise. (M_JSR): Likewise.

	* configure.ac (ENABLE_DISASSEMBLER): Enabled for m68k.
	[bac4f948b59c]

2007-03-02  edwin  <edwin>

	* src/vmcore/classcache.c:
	* src/vmcore/classcache.c: Print debug messages to stdout.
	[ba6016da118e]

	* configure.ac:
	* configure.ac: Added Makefiles of resolving test suite.
	[4313663128f6]

	* tests/regression/Makefile.am,
	tests/regression/resolving/Makefile.am,
	tests/regression/resolving/TestController.java,
	tests/regression/resolving/TestLoader.java,
	tests/regression/resolving/classes1/BarPassFoo.java,
	tests/regression/resolving/classes1/BarUseFoo.java,
	tests/regression/resolving/classes1/Foo.java,
	tests/regression/resolving/classes1/Makefile.am,
	tests/regression/resolving/classes2/BarPassFoo.java,
	tests/regression/resolving/classes2/BarUseFoo.java,
	tests/regression/resolving/classes2/DerivedFoo.java,
	tests/regression/resolving/classes2/Foo.java,
	tests/regression/resolving/classes2/Makefile.am,
	tests/regression/resolving/classes3/BarPassFoo.java,
	tests/regression/resolving/classes3/BarUseFoo.java,
	tests/regression/resolving/classes3/DerivedFoo.java,
	tests/regression/resolving/classes3/Foo.java,
	tests/regression/resolving/classes3/Makefile.am,
	tests/regression/resolving/test_instance_subtype_violated.java, test
	s/regression/resolving/test_param_loading_constraint_violated.java, t
	ests/regression/resolving/test_param_loading_constraint_violated_der
	ived.java,
	tests/regression/resolving/test_param_subtype_violated.java, tests/r
	egression/resolving/test_retval_loading_constraint_violated.java,
	tests/regression/resolving/test_simple_lazy_load.java:
	* tests/regression/resolving: Added resolving test suite. These
	tests check lazy loading, classloader handling, loading & subtype
	constraints.
	[cdc72aade335]

2007-03-02  michi  <michi>

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/rootset.c, src/mm/cacao-
	gc/rootset.h:
	* src/mm/cacao-gc/gc.c (gc_collect): Moved rootset creation to
	rootset_readout.
	* src/mm/cacao-gc/rootset.c (rootset_readout): Added

	* src/mm/cacao-gc/rootset.c (rootset_from_globals): Now adds
	threadobjects and global references.

	* src/mm/cacao-gc/rootset.h: Added refs_type field to rootset.
	[ad0c808325c4]

2007-03-01  edwin  <edwin>

	* src/vm/jit/alpha/patcher.c, src/vm/jit/arm/patcher.c, src/vm/jit
	/codegen-common.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/x86_64/patcher.c,
	src/vmcore/resolve.c, src/vmcore/resolve.h:
	* src/vmcore/resolve.h, src/vmcore/resolve.c
	(resolve_class_eager_no_access_check): New function.

	* src/vm/jit/powerpc/patcher.c: Use
	resolve_class_eager_no_access_check.
	* src/vm/jit/arm/patcher.c: Likewise.
	* src/vm/jit/sparc64/patcher.c: Likewise.
	* src/vm/jit/alpha/patcher.c: Likewise.
	* src/vm/jit/s390/patcher.c: Likewise.
	* src/vm/jit/mips/patcher.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/x86_64/patcher.c: Likewise.
	[188ce45e94a5]

2007-03-01  michi  <michi>

	* src/mm/cacao-gc/mark.c, src/vm/jit/codegen-common.c:
	* src/mm/cacao-gc/mark.c (mark_me): Fixed a bug for "outside
	pointers".
	[00cb4e70477b]

2007-03-01  twisti  <twisti>

	* src/cacaoh/dummy.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/access.c,
	src/vm/access.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/stack.c,
	src/vm/jit/verify/typecheck.c, src/vm/vm.c,
	tests/regression/jasmin/Makefile.am:
	* Merged with trunk.
	[39040c757ae6]

	* src/native/vm/Makefile.am, src/native/vm/java_lang_ClassLoader.c:
	* src/native/vm/Makefile.am [ENABLE_JAVASE] (CLASSLOADER_SOURCES):
	Added. (libnativevm_la_SOURCES): Use CLASSLOADER_SOURCES.

	* src/native/vm/java_lang_ClassLoader.c (native/jni.h): Added.
	[020ca26f54f1]

2007-03-01  edwin  <edwin>

	* src/vmcore/resolve.c:
	* src/vmcore/resolve.c (resolve_classref_or_classinfo): Always use
	refmethod->class as the referring class, if it is available.
	[a671bb862433]

2007-02-28  twisti  <twisti>

	* src/vmcore/classcache.c:
	* src/vmcore/classcache.c (toolbox/logging.h): Added.
	(classcache_merge_class_entries): Replace log_text with log_println.
	(classcache_store): Likewise. (classcache_store_defined): Likewise.
	[5c13c1877eaf]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (typeinfo_print): Added.
	[269225303ad5]

2007-02-28  edwin  <edwin>

	* src/vm/jit/verify/typecheck.c:
	* src/vm/jit/verify/typecheck.c (handle_basic_block): Move the
	printing of the block to a point where jd->var is already valid.
	[23c03d745eca]

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Minor STACK_VERBOSE
	improvements.
	[1c941917218d]

	* tests/regression/jasmin/Makefile.am, tests/regression/jasmin/test_ve
	rify_ok_local_as_retaddr_and_reference.j:
	* tests/regression/jasmin/test_verify_ok_local_as_retaddr_and_refere
	nce.j: New test.
	* tests/regression/jasmin/Makefile.am: Added new test.
	[fe03a2bb9cf6]

2007-02-28  twisti  <twisti>

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Changed initialization order. Call
	properties_postinit later, since it puts a pointer to
	_Jv_bootclasspath into the properties list.
	[61e332c57634]

2007-02-28  edwin  <edwin>

	* src/vm/jit/stack.c:
	* src/vm/jit/stack.c (stack_analyse): Fix: reset TYPE_VOID to
	TYPE_ADR at the end of stack_analyse.
	[5042bb6ae3af]

2007-02-28  twisti  <twisti>

	* src/vm/access.h:
	* src/vm/access.h (access_check_caller): Renamed to
	access_check_member.
	[96cd6de1d0b8]

	* src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c, src/vm/access.c:
	* src/vm/access.c (access_check_caller): Renamed to
	access_check_member. Don't call access_is_accessible_class, this is
	wrong.

	* src/native/vm/gnu/java_lang_reflect_Constructor.c
	(constructNative): Use access_check_member.

	* src/native/vm/gnu/java_lang_reflect_Field.c (CHECKFIELDACCESS):
	Removed. (cacao_get_field_address): Use access_check_member.

	* src/native/vm/gnu/java_lang_reflect_Method.c (invokeNative):
	Likewise.
	[a0b49cb1bccc]

2007-02-28  michi  <michi>

	* src/mm/cacao-gc/mark.c, src/vm/jit/codegen-common.c:
	* src/mm/cacao-gc/mark.c: Added MARK() as helper macro.
	[2994cd00c958]

2007-02-28  twisti  <twisti>

	* src/native/vm/java_lang_ClassLoader.c:
	* src/native/vm/java_lang_ClassLoader.c (vm/stringlocal.h): Added.
	[3c44ad680b4b]

	* src/native/vm/java_lang_ClassLoader.c:
	* src/native/vm/java_lang_ClassLoader.c (defineClass): Added loader-
	variable for convenience.
	[de55c5da2485]

2007-02-28  pm  <pm>

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen): Added ICMD_AASTORE.
	* src/vm/jit/s390/asmpart.S (asm_patcher_wrapper): Added exception
	handler.
	* src/vm/jit/s390/asmpart.S (asm_call_jit_compiler): Likewise.
	[6e6fd1de31b1]

2007-02-27  twisti  <twisti>

	* configure.ac, src/native/Makefile.am, src/native/jni.c,
	src/native/vm/Makefile.am, src/vm/exceptions.c, src/vm/global.h,
	src/vm/jit/codegen-common.c, src/vm/jit/replace.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/solaris/md-os.c,
	src/vm/jit/stacktrace.h, src/vm/vm.c, src/vmcore/class.h:
	* Merged with trunk.
	[8277a27cd172]

	* * src/vm/jit/sparc64/solaris: Set ignore-properties.
	[89b8897dd615]

2007-02-27  michi  <michi>

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/gc.h:
	* src/mm/cacao-gc/gc.h: Fixed typo in POINTS_INTO.
	* src/mm/cacao-gc/compact.c (compact_move): Fixed typo.
	[f17d8ca4a302]

	* src/mm/cacao-gc/gc.c, src/mm/cacao-gc/gc.h:
	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/gc.c: Added define
	(GCCONF_FINALIZER) to disable finalization.
	[e15792241f6f]

2007-02-27  ajordan  <ajordan>

	* configure.ac, src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/solaris
	/md-os.c, src/vm/jit/stacktrace.h:
	* configure.ac: added solaris specific stuff: arch defines, libintl
	dependency and solaris subdir makefile.

	* src/vm/jit/stacktrace.h: declared SPARC specific functions.

	* src/vm/jit/sparc64/emit.c: fixed call to builtin_verbosecall_exit.

	* src/vm/jit/sparc64/solaris/md-os.c: signal handling disabled,
	can't test right now.
	[9ae2ff45937d]

2007-02-26  twisti  <twisti>

	* src/native/jni.c, src/native/vm/Makefile.am,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/java_lang_ClassLoader.c,
	src/native/vm/java_lang_ClassLoader.h, src/vm/jit/codegen-common.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-asm.h, src/vmcore/zip.c:
	* src/native/vm/java_lang_ClassLoader.c: New file.
	* src/native/vm/java_lang_ClassLoader.h: Likewise.

	* src/native/vm/gnu/java_lang_VMClassLoader.c
	(native/vm/java_lang_ClassLoader.h): Added. (defineClass): Removed
	code and call _Jv_java_lang_ClassLoader_defineClass.

	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	java_lang_ClassLoader.[ch].

	* src/native/jni.c [ENABLE_JAVASE]
	(native/vm/java_lang_ClassLoader.h): Added. (_Jv_JNI_DefineClass):
	Removed env and NULL arguments.
	[f4e073f67460]

2007-02-26  michi  <michi>

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-asm.h,
	src/vmcore/zip.c:
	Merged revisions 7390-7406 via svnmerge from
	svn+ssh://michi@c1.complang.tuwien.ac.at/ahome/cacao/svn/cacao/trunk

	........ r7395 | michi | 2007-02-23 23:57:53 +0100 (Fri, 23 Feb
	2007) | 2 lines

	 * src/vm/jit/replace.c: Renamed regs to
	abi_registers_integer_name. ........ r7402 | twisti | 2007-02-24
	15:47:12 +0100 (Sat, 24 Feb 2007) | 4 lines

	 * src/vmcore/zip.c (errno.h): Added. (vm/vm.h): Likewise.
	(zip_get): Replaced asserts with vm_abort. ........ r7403 | pm |
	2007-02-25 22:31:58 +0100 (Sun, 25 Feb 2007) | 6 lines

	 * src/vm/jit/codegen-common.c (methodtree_comparator): Fixed S390
	related comment.
	  * src/vm/jit/s390/codegen.h: Fixed M_JSR macro, did not store RA.
	  * src/vm/jit/s390/md-asm.h: Added (LOAD|STORE)_TEMPORARY_REGISTERS and
	(LOAD|STORE)_ARGUMENT_REGISTERS macros.
	  * src/vm/jit/s390/asmpart.S: Implemented asm_handle_exception and
	asm_vm_call_method_exception_handler.
	  * src/vm/jit/s390/md-abi.c (abi_registers_integer_temporary): did not
	contain %r0, added. ........ r7404 | pm | 2007-02-25 23:02:16
	+0100 (Sun, 25 Feb 2007) | 2 lines

	 * src/vm/jit/s390/asmpart.S (asm_getclassvalues_atomic,
	asm_criticalsections): Added. ........ r7405 | pm | 2007-02-25
	23:34:27 +0100 (Sun, 25 Feb 2007) | 3 lines

	 * src/vm/jit/s390/codegen.c (codegen): Fixed ICMD_IF_ACMPNE
	  * src/vm/jit/s390/asmpart.S (asm_call_jit_compiler): Handling NULL
	return value of jit_asm_compile. ........
	[1b285f944716]

	* src/mm/cacao-gc/Makefile.am, src/mm/cacao-gc/compact.c, src/mm
	/cacao-gc/final.c, src/mm/cacao-gc/final.h, src/mm/cacao-gc/gc.c,
	src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/heap.h, src/mm/cacao-gc/mark.c, src/mm/cacao-gc/mark.h, src/mm
	/cacao-gc/rootset.c, src/mm/cacao-gc/rootset.h, src/vm/jit/s390/md-
	asm.h:
	* src/mm/cacao-gc/final.h, src/mm/cacao-gc/final.c, src/mm/cacao-
	gc/rootset.h, src/mm/cacao-gc/rootset.c: Added.
	* src/mm/cacao-gc/Makefile.am: See above.

	* src/mm/cacao-gc/gc.h (gc_notify_finalizer): Added.
	* src/mm/cacao-gc/gc.c: Added finalization support.
	* src/mm/cacao-gc/mark.c: Same as above. Rootset can contain "non-
	marking" references now.

	* src/mm/cacao-gc/heap.h, src/mm/cacao-gc/heap.c: Severe code
	cleanup, this applies to almost all files.
	[1fcc2ed6373c]

2007-02-25  pm  <pm>

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen): Fixed ICMD_IF_ACMPNE
	* src/vm/jit/s390/asmpart.S (asm_call_jit_compiler): Handling NULL
	return value of jit_asm_compile.
	[4d4b8ff67e86]

	* src/vm/jit/s390/asmpart.S:
	* src/vm/jit/s390/asmpart.S (asm_getclassvalues_atomic,
	asm_criticalsections): Added.
	[081c95d4a439]

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390
	/md-asm.h:
	* src/vm/jit/codegen-common.c (methodtree_comparator): Fixed S390
	related comment.
	* src/vm/jit/s390/codegen.h: Fixed M_JSR macro, did not store RA.
	* src/vm/jit/s390/md-asm.h: Added (LOAD|STORE)_TEMPORARY_REGISTERS and
	(LOAD|STORE)_ARGUMENT_REGISTERS macros.
	* src/vm/jit/s390/asmpart.S: Implemented asm_handle_exception and
	asm_vm_call_method_exception_handler.
	* src/vm/jit/s390/md-abi.c (abi_registers_integer_temporary): did not
	contain %r0, added.
	[ac2af54a65da]

2007-02-24  twisti  <twisti>

	* src/vmcore/class.h, src/vmcore/zip.c:
	* src/vmcore/zip.c (errno.h): Added. (vm/vm.h): Likewise. (zip_get):
	Replaced asserts with vm_abort.
	[4921b203cfdc]

2007-02-24  michi  <michi>

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/gc.c, src/mm/cacao-
	gc/gc.h, src/mm/cacao-gc/heap.c, src/mm/cacao-gc/mark.c, src/mm
	/cacao-gc/region.h:
	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/compact.c, src/mm/cacao-
	gc/region.h, src/mm/cacao-gc/gc.c, src/mm/cacao-gc/mark.c, src/mm
	/cacao-gc/heap.c: Severe code cleanup.
	[a8c4d7afe6d8]

	* src/mm/cacao-gc/compact.c, src/mm/cacao-gc/heap.c, src/mm/cacao-
	gc/heap.h, src/vm/global.h:
	* src/vm/global.h: Added defines HDRFLAG_HASH_TAKEN and
	HDRFLAG_HASH_ATTACHED.

	* src/mm/cacao-gc/compact.c (compact_move): Hashcode gets attached
	to objects while moving if previously taken.

	* src/mm/cacao-gc/heap.c (get_object_size): Attached hashcode might
	increase object size.
	[c436d5e47cfa]

2007-02-23  michi  <michi>

	* src/native/native.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMSystem.c,
	src/native/vm/java_lang_Class.c, src/vm/vm.c, src/vmcore/class.c,
	src/vmcore/class.h, src/vmcore/classcache.h, src/vmcore/loader.c,
	src/vmcore/loader.h:
	* src/vm/vm.c [ENABLE_GC_CACAO]: Added assertion for JVMTI.

	* src/vmcore/loader.h (classloader): Added this typedef, use it to
	represent the indirection cell for a classloader.

	* src/vmcore/class.h (classinfo): Classloaders are now represendet
	as indirection cells.

	* src/vmcore/loader.c, src/vmcore/class.c, src/vmcore/classcache.h,
	src/native/native.c, src/native/vm/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/java_lang_VMSystem.c: Adapted to above changes.
	[de2f4c3ac2f3]

	* src/mm/cacao-gc/Makefile.am, src/mm/cacao-gc/compact.c, src/mm
	/cacao-gc/gc.c, src/mm/cacao-gc/gc.h, src/mm/cacao-gc/heap.c, src/mm
	/cacao-gc/heap.h, src/mm/cacao-gc/mark.c, src/mm/cacao-gc/mark.h,
	src/mm/cacao-gc/region.c, src/mm/cacao-gc/region.h:
	* src/mm/cacao-gc/mark.h, src/mm/cacao-gc/heap.h, src/mm/cacao-
	gc/heap.c, src/mm/cacao-gc/region.h, src/mm/cacao-gc/region.c:
	Added.

	* src/mm/cacao-gc/Makefile.am: See above.

	* src/mm/cacao-gc/gc.h, src/mm/cacao-gc/gc.c: Moved development
	breaks. (gc_collect): Added.

	* src/mm/cacao-gc/compact.c: Classloaders are threaded in now.
	(compact_move): Fixed a severe typo.
	[749fb93803aa]

	* src/vm/global.h:
	* src/vm/global.h: Added defines for HDRFLAG_MARK1, HDRFLAG_MARK2
	and HDRFLAG_UNCOLLECTABLE.
	[3f9744e458be]

	* src/vm/jit/i386/codegen.c, src/vm/jit/replace.c,
	src/vm/jit/stacktrace.h:
	* src/vm/jit/i386/codegen.c (createnativestub) [ENABLE_GC_CACAO]:
	Saved registers are now stored/recovered into/from the
	stackframeinfo struct.

	* src/vm/jit/replace.c (replace_pop_native_frame,
	replace_push_native_frame) [ENABLE_GC_CACAO]: Handle saved registers
	in the stackframeinfo struct now.

	* src/vm/jit/stacktrace.h [ENABLE_GC_CACAO]: Modified stackframeinfo
	struct accordingly.
	[4ab276d7b9bb]

	* src/vm/jit/replace.c:
	* src/vm/jit/replace.c: Renamed regs to abi_registers_integer_name.
	[6fe203d50ca4]

	* src/mm/memory.c, src/mm/memory.h:
	* src/mm/memory.c, src/mm/memory.h: Moved defines for memcheck into
	header file.
	[0d3eb975b96c]

	* src/cacaoh/dummy.c, src/native/native.c, src/native/native.h,
	src/vmcore/loader.c, src/vmcore/loader.h:
	* src/native/native.h (hashtable_library_loader_entry): Uses
	indirection cells.
	* src/native/native.c (native_hashtable_library_add): Uses indirection
	cells. (native_hashtable_library_find): Uses indirection cells.

	* src/vmcore/loader.h (hashtable_classloader_entry): Added to
	represent indirection cells.
	* src/vmcore/loader.c (hashtable_classloader): Added to hold
	indirection cells. (loader_hashtable_classloader_add,
	loader_hashtable_classloader_find): Added.

	* src/cacaoh/dummy.c (heap_get_hashcode): Added.
	[3ed9616c49da]

	* src/native/jni.c:
	* src/native/jni.c (jni_free_localref_table): Added.
	* src/native/jni.c [ENABLE_GC_CACAO]: The localref_table is no longer
	put onto the heap, but managed explicitly.
	[e4b9c076da31]

	* src/mm/gc-common.h, src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMSystem.c:
	* src/mm/gc-common.h [ENABLE_GC_CACAO]: Added prototype for
	heap_get_hashcode().
	* src/native/vm/gnu/java_lang_VMSystem.c [ENABLE_GC_CACAO]: Uses new
	method to get hashcodes for objects.
	* src/native/vm/cldc1.1/java_lang_Object.c [ENABLE_GC_CACAO]: Don't
	know if we can use this here.
	[d82b09b9957d]

2007-02-21  twisti  <twisti>

	* src/vm/global.h, src/vmcore/class.c, src/vmcore/loader.c,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vm/global.h (ACC_CLASS_SOFT_REFERENCE,
	ACC_CLASS_WEAK_REFERENCE) (ACC_CLASS_PHANTOM_REFERENCE): Added.

	* src/vmcore/class.c (class_create_classinfo) [ENABLE_JAVASE]: Check
	if the class is a reference class and flag it.

	* src/vmcore/loader.c (load_class_from_classbuffer): OR the flags
	loaded.

	* src/vmcore/utf8.c (utf_java_lang_ref_SoftReference)
	(utf_java_lang_ref_WeakReference,
	utf_java_lang_ref_PhantomReference): Added. (utf8_init): Initialize
	added variables.
	* src/vmcore/utf8.h: Likewise.
	[417471e88036]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_throw_noclassdeffounderror): Abort
	when VM is initializing.
	[b40a83ba8073]

2007-02-21  pm  <pm>

	* src/vm/jit/s390/codegen.c:
	* src/vm/jit/s390/codegen.c (codegen): allocate register save area
	required by C abi for builtin calls
	* src/vm/jit/s390/codegen.c (createnativestub): fix errornous code
	generated for return, fix datasp argument to
	codegen_finish_native_call
	[9f5b283b0aac]

2007-02-21  twisti  <twisti>

	* m4/jni.m4, src/native/Makefile.am, src/native/jni.c, src/vm/vm.c:
	* m4/jni.m4: Added ENABLE_JNI AM_CONDITIONAL.

	* src/vm/vm.c (vm_createjvm): Replaced some ENABLE_JAVASE with
	ENABLE_JNI. (vm_create): Likewise.

	* src/native/Makefile.am: Likewise.

	* src/native/jni.c (jni_init) [ENABLE_JAVASE]: ifdef'ed Java SE
	stuff. (_Jv_JNI_DefineClass) [!ENABLE_JAVASE]: Abort.
	(_Jv_JNI_FindClass): Likewise. (_Jv_JNI_FromReflectedMethod):
	Likewise. (_Jv_JNI_FromReflectedField): Likewise.
	(_Jv_JNI_NewDirectByteBuffer): Likewise.
	(_Jv_JNI_GetDirectBufferAddress): Likewise.
	(_Jv_JNI_GetDirectBufferCapacity): Likewise.
	(_Jv_JNI_IsAssignableFrom): Call
	_Jv_java_lang_Class_isAssignableFrom. (_Jv_JNI_IsInstanceOf): Call
	_Jv_java_lang_Class_isInstance. (_Jv_JNI_EnsureLocalCapacity):
	Removed debug output.
	[6a87404455be]

	* configure.ac, src/native/include/Makefile.am,
	src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/vm/jit/Makefile.am,
	src/vm/jit/abi-asm.h, src/vm/jit/disass-common.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/patcher.c,
	src/vm/jit/x86_64/md-abi.c:
	* Merged with trunk.
	[0f801edae0f9]

	* src/vm/jit/Makefile.am, src/vm/jit/disass-common.c:
	* src/vm/jit/Makefile.am [!WITH_BINUTILS_DISASSEMBLER]
	(DISASS_SOURCES): Removed.

	* src/vm/jit/disass-common.c: Removed WITH_BINUTILS_DISASSEMBLER
	ifdefs, since it's compiled conditionally.
	[68009c60134a]

	* src/vm/jit/x86_64/md-abi.c:
	* src/vm/jit/x86_64/md-abi.c (regs): Renamed to
	abi_registers_integer_name. (md_param_alloc): Made code more clear.
	(md_param_alloc_native): New function.
	[cebe1d53aed3]

	* src/vm/jit/abi-asm.h:
	* src/vm/jit/abi-asm.h: Cosmetic changes.
	[8abf46e074a3]

2007-02-20  tbfg  <tbfg>

	* src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c,
	src/vm/jit/m68k/codegen.h, src/vm/jit/m68k/emit.c,
	src/vm/jit/m68k/emit.h, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/m68k/md.c:
	* src/vm/jit/m68k/emit.c (emit_mov_imm_reg): New function.
	(emit_mov_imm_areg): Likewise.

	* src/vm/jit/m68k/linux/md-abi.h: Lots of defines.

	* src/vm/jit/m68k/linux/md-abi.c: Register allocator data structure
	created, some stubs added.

	* src/vm/jit/m68k/md.c (md_param_alloc): Removed.
	* src/vm/jit/m68k/arch.h (REG_ZERO): Added a dummy REG_ZERO, needs to
	be resolved.

	* src/vm/jit/m68k/emit.h: New file.

	* src/vm/jit/m68k/codegen.c (createcompilerstub): Implemented.

	* src/vm/jit/m68k/machine-instr.h (*BARRIER*): Implemented.
	(compare_and_swap): Implemented, but not atomically, there is no way
	to do soo on coldfire.

	* src/vm/jit/m68k/codegen.h (M_MOV_IMM): Added. (M_AMOV_IMM): Added.
	(M_JMP): Added. (OPWORD): Added.
	[2e818486fcf6]

	* src/cacao/Makefile.am, src/mm/memory.h, src/mm/nogc.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/native/Makefile.am, src/threads/native/threads.c,
	src/threads/native/threads.h, src/toolbox/logging.c,
	src/vm/finalizer.c, src/vm/jit/abi.h, src/vm/jit/alpha/disass.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/disass.c, src/vm/jit/arm
	/md-abi.c, src/vm/jit/asmpart.h, src/vm/jit/disass.h,
	src/vm/jit/i386/md-abi.c, src/vm/jit/mips/disass.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/mips/md-abi.h, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/s390/asmpart.S, src/vm/jit/s390/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/signal.c, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/options.c, src/vmcore/options.h:
	* src/mm/nogc.c (heap_allocate): Renamed
	exceptions_throw_outofmemory_exit to
	exceptions_throw_outofmemoryerror. (gc_init): Liekwise.

	* src/vmcore/descriptor.h (methoddesc): Added argaddrreguse when
	HAS_ADDRESS_REGISTER_FILE.
	[4bc1020616ed]

2007-02-20  twisti  <twisti>

	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c:
	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c (vm/exceptions.h):
	Added. (vm/stringlocal.h): Likewise. (loadLibrary): Throw error in
	case.
	[f5960974827d]

	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h:
	* src/native/vm/java_lang_Runtime.c (loadLibrary): Different
	signature for _Jv_java_lang_Runtime_loadLibrary depending on
	ENABLE_JNI.
	* src/native/vm/java_lang_Runtime.h: Likewise.
	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c: Likewise.
	* src/native/vm/gnu/java_lang_VMRuntime.c: Likewise.
	[89ae09836c68]

	* configure.ac, m4/java.m4, m4/jit.m4, m4/jni.m4:
	* configure.ac (AC_CHECK_ENABLE_JAVA): Added. (AC_CHECK_ENABLE_JIT):
	Likewise. (AC_CHECK_ENABLE_JNI): Likewise.

	* m4/jni.m4: New file.
	* m4/java.m4: Likewise.
	* m4/jit.m4: Likewise.
	[1c39fd610b52]

2007-02-19  twisti  <twisti>

	* src/native/include/Makefile.am, src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h:
	* src/native/vm/cldc1.1/com_sun_cldchi_jvm_JVM.c: New file.

	* src/native/vm/cldc1.1/Makefile.am (libnativevmcore_la_SOURCES):
	Added com_sun_cldchi_jvm_JVM.c.

	* src/native/vm/java_lang_Runtime.c [!WITH_STATIC_CLASSPATH]
	(ltdl.h): Added. (native/jni.h): Likewise. (native/native.h):
	Likewise. (native/include/java_lang_String.h): Likewise.
	(toolbox/logging.h): Likewise. (vm/exceptions.h): Likewise.
	(vm/stringlocal.h): Likewise. (vmcore/options.h): Likewise.
	(loadLibrary): New function.

	* src/native/vm/java_lang_Runtime.h (native/jni.h): Added.
	(native/include/java_lang_String.h): Likewise.

	* src/native/vm/gnu/java_lang_VMRuntime.c [!WITH_STATIC_CLASSPATH]
	(ltdl.h): Removed. (native/native.h): Likewise. (toolbox/logging.h):
	Likewise. (vmcore/options.h): Likewise. (nativeLoad): Call
	_Jv_java_lang_Runtime_loadLibrary.

	* src/native/include/Makefile.am (JAVAME_CLDC1_1_HEADER_FILES):
	Added com_sun_cldchi_jvm_JVM.h.
	[f1fc106c9495]

2007-02-18  pm  <pm>

	* src/cacao/Makefile.am, src/mm/memory.h, src/native/native.c,
	src/native/native.h, src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/native/Makefile.am, src/threads/native/threads.c,
	src/threads/native/threads.h, src/toolbox/logging.c,
	src/vm/finalizer.c, src/vm/jit/abi.h, src/vm/jit/alpha/disass.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/disass.c, src/vm/jit/arm
	/md-abi.c, src/vm/jit/asmpart.h, src/vm/jit/disass.h,
	src/vm/jit/i386/md-abi.c, src/vm/jit/mips/disass.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/mips/md-abi.h, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/s390/asmpart.S, src/vm/jit/s390/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/signal.c, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/s390/patcher.c (patcher_wrapper): Formatting changes.
	* src/vm/jit/s390/asmpart.S (asm_patcher_wrapper): Did not remove
	stack frame created by patcher stubs.
	[02d0605e27d4]

2007-02-18  michi  <michi>

	* src/mm/cacao-gc/compact.c:
	* src/mm/cacao-gc/compact.c: Fixed a typo in compact_move().
	Classloaders are now threaded in compact_thread_classes() as well.
	[d5545512c055]

	* src/cacaoh/Makefile.am, src/mm/boehm.c, src/native/native.c,
	src/native/native.h, src/native/vm/gnu/java_lang_VMRuntime.c,
	src/vm/builtin.h, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/freebsd/Makefile.am,
	src/vm/jit/alpha/linux/Makefile.am, src/vm/jit/alpha/md-abi.h,
	src/vm/jit/alpha/md.c, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/freebsd/Makefile.am,
	src/vm/jit/i386/linux/Makefile.am, src/vm/jit/mips/irix/Makefile.am,
	src/vm/jit/mips/linux/Makefile.am,
	src/vm/jit/powerpc/darwin/Makefile.am,
	src/vm/jit/powerpc/linux/Makefile.am, src/vm/jit/powerpc/linux/md-
	abi.h, src/vm/jit/s390/arch.h, src/vm/jit/s390/emit.c,
	src/vm/jit/s390/md-asm.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.h, src/vmcore/class.h:
	* src/native/native.c, src/native/native.h: The hashtable_library
	now uses the hashcode of the classloader instead of its memory
	address.
	[333581df59af]

2007-02-16  twisti  <twisti>

	* src/cacaoh/dummy.c, src/mm/memory.c:
	* Merged with trunk.
	[80d87d7ebe2c]

	* src/cacaoh/dummy.c, src/mm/memory.c, src/vmcore/statistics.c,
	src/vmcore/statistics.h:
	* src/vmcore/statistics.c (mm/gc-common.h): Added.
	(statistics_print_gc_memory_usage): New function.
	* src/vmcore/statistics.h (statistics_print_gc_memory_usage):
	Likewise.

	* src/cacaoh/dummy.c (gc_get_heap_size): New stub.
	(gc_get_free_bytes): Likewise. (gc_get_total_bytes): Likewise.
	(gc_get_max_heap_size): Likewise.

	* src/mm/memory.c (memory_thread): Call
	statistics_print_gc_memory_usage.
	[1a5524ae4db5]

	* src/Makefile.am, src/cacaoh/dummy.c, src/threads/Makefile.am,
	src/threads/threads-common.c, src/vm/jit/intrp/asmpart.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/dynamic-super.c,
	src/vm/jit/intrp/engine.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/intrp/java.vmg, src/vm/jit/intrp/patcher.c,
	src/vm/jit/intrp/peephole.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c:
	* Merged with trunk.
	[1e3bbf505d88]

2007-02-16  pm  <pm>

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md-abi.c,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c:
	* src/vm/jit/s390/md.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/md-abi.c: Changed a lot.
	Mostly adapted to changes in the tree.
	[7e252ec103cb]

2007-02-15  twisti  <twisti>

	* src/cacaoh/dummy.c, src/vm/jit/intrp/dynamic-super.c,
	src/vm/jit/intrp/engine.c:
	* src/cacaoh/dummy.c (intrp_asm_abstractmethoderror): New stub.
	(print_dynamic_super_statistics): Likewise.

	* src/vm/jit/intrp/engine.c (mm/memory.h): Added.
	* src/vm/jit/intrp/dynamic-super.c [!ENABLE_THREADS]
	(threads/none/lock.h): Likewise.
	[aeb00f812c30]

	* src/Makefile.am, src/threads/Makefile.am, src/threads/threads-
	common.c:
	* src/Makefile.am [ENABLE_THREADS] (THREADS_DIR): Added. (SUBDIRS):
	Added THREADS_DIR.

	* src/threads/Makefile.am (SUBDIRS): Set always to native.

	* src/threads/threads-common.c (threads/none/threads.h): Removed.
	[ENABLE_THREADS] (threads_create_thread): Removed ifdef.
	(threads_get_current_tid) [ENABLE_THREADS]: Removed.
	[9cc012c8781c]

	* src/vm/jit/powerpc/arch.h:
	* src/vm/jit/powerpc/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Defined.
	[1fa126b89842]

	* src/vm/jit/emit-common.c, src/vm/jit/emit-common.h,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/patcher.c:
	* src/vm/jit/emit-common.c
	[SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER] (emit_beqz)
	(emit_bnez, emit_bltz, emit_bgez, emit_bgtz, emit_blez): #ifdef'ed.
	[SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS] (emit_beq)
	(emit_bne): New functions.
	[SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER] (emit_beq, emit_bne)
	(emit_blt, emit_bge, emit_bgt, emit_ble): #ifdef'ed.
	* src/vm/jit/emit-common.h: Likewise.

	* src/vm/jit/mips/emit.c (emit_branch): Fixed.
	(emit_arithmetic_check): Use hardware-exception instructions.
	(emit_arrayindexoutofbounds_check): Likewise.
	(emit_classcast_check): Likewise. (emit_nullpointer_check):
	Likewise. (emit_exception_check): Likewise. (emit_arraystore_check):
	Removed. (emit_exception_stubs): Likewise.

	* src/vm/jit/mips/md.c (md_codegen_patch_branch): Removed.

	* src/vm/jit/mips/codegen.c (codegen): Renamed to codegen_emit and
	changed to use emit-branch functions.

	* src/vm/jit/mips/codegen.h (M_ITYPE_GET_RS, M_ITYPE_GET_RT)
	(M_ITYPE_GET_IMM): Added.

	* src/vm/jit/mips/linux/md-os.c (vm/jit/mips/codegen.h): Added.
	(md_signal_handler_sigsegv): Use exceptions_new_hardware_exception.

	* src/vm/jit/mips/arch.h
	(SUPPORT_BRANCH_CONDITIONAL_CONDITION_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_ONE_INTEGER_REGISTER)
	(SUPPORT_BRANCH_CONDITIONAL_TWO_INTEGER_REGISTERS): Defined.

	* src/vm/jit/mips/patcher.c (patcher_checkcast_interface): Fixed
	patching offsets.
	[fad4133a1392]

2007-02-15  pm  <pm>

	* src/cacaoh/Makefile.am, src/native/include/Makefile.am, src/threads
	/threads-common.c:
	* src/threads/threads-common.c (threads_get_current_tid): Return 0
	if compiled with --enable-threads=none
	[c76426752793]

2007-02-14  twisti  <twisti>

	* configure.ac, m4/cacaoh.m4, src/Makefile.am,
	src/native/include/Makefile.am:
	* configure.ac (--with-cacaoh): Removed code and call
	AC_CHECK_WITH_CACAOH.
	* m4/cacaoh.m4: New file.
	* src/Makefile.am [ENABLE_CACAOH] (CACAOH_DIR): Added. (SUBDIRS):
	Added CACAOH_DIR.
	* src/native/include/Makefile.am (CACAOH): Don't set it, configure
	does that.
	[0310673feb39]

2007-02-14  tbfg  <tbfg>

	* src/Makefile.am, src/cacaoh/Makefile.am,
	tests/regression/native/Makefile.am:
	* src/Makefile.am: Do not recurse into cacaoh when not enabled.
	* src/cacaoh/Makefile.am: Removed conditional builds.
	* tests/regression/native/Makefile.am: Used hardcoded cacaoh.
	[f4ae950cc199]

	* configure.ac, src/cacaoh/Makefile.am,
	src/native/include/Makefile.am:
	* configure.ac (--with-cacaoh): Added --with-cacaoh for easier
	crossbuilds.

	* src/cacaoh/Makefile.am: Use configure provided cacaoh.

	* src/native/include/Makefile.am: Only build cacaoh when no
	--with-cacaoh given.
	[d3ac14a1eef5]

2007-02-14  twisti  <twisti>

	* src/vm/jit/intrp/codegen.c, src/vm/jit/intrp/intrp.h,
	src/vm/jit/mips/emit.c:
	* src/vm/jit/mips/emit.c (emit_branch): New function.
	[b9f3457e62b7]

	* src/cacao/Makefile.am, src/mm/boehm.c, src/mm/memory.c,
	src/mm/memory.h, src/native/include/Makefile.am,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/Makefile.am, src/threads/native/Makefile.am,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/toolbox/logging.c, src/vm/builtin.h, src/vm/finalizer.c,
	src/vm/jit/abi.h, src/vm/jit/alpha/disass.c,
	src/vm/jit/alpha/freebsd/Makefile.am,
	src/vm/jit/alpha/linux/Makefile.am, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/alpha/md-abi.h, src/vm/jit/alpha/md.c,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/disass.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/disass.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/freebsd/Makefile.am,
	src/vm/jit/i386/linux/Makefile.am, src/vm/jit/i386/md-abi.c,
	src/vm/jit/intrp/asmpart.c, src/vm/jit/intrp/codegen.c,
	src/vm/jit/intrp/dynamic-super.c, src/vm/jit/intrp/engine.c,
	src/vm/jit/intrp/intrp.h, src/vm/jit/intrp/java.vmg,
	src/vm/jit/intrp/patcher.c, src/vm/jit/intrp/peephole.c,
	src/vm/jit/mips/disass.c, src/vm/jit/mips/irix/Makefile.am,
	src/vm/jit/mips/linux/Makefile.am, src/vm/jit/mips/md-abi.c,
	src/vm/jit/mips/md-abi.h, src/vm/jit/powerpc/darwin/Makefile.am,
	src/vm/jit/powerpc/linux/Makefile.am, src/vm/jit/powerpc/linux/md-
	abi.c, src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-asm.h, src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/stacktrace.c, src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64
	/md-abi.h, src/vm/signal.c, src/vmcore/class.h,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/intrp/peephole.c: Updated to current codebase.
	* src/vm/jit/intrp/intrp.h: Likewise.
	* src/vm/jit/intrp/codegen.c: Likewise.
	* src/vm/jit/intrp/engine.c: Likewise.
	* src/vm/jit/intrp/asmpart.c: Likewise.
	* src/vm/jit/intrp/dynamic-super.c: Likewise.
	* src/vm/jit/intrp/patcher.c: Likewise.
	* src/vm/jit/intrp/java.vmg: Likewise.
	[cc5c117f777d]

	* configure.ac, src/cacao/Makefile.am, src/cacaoh/dummy.c,
	src/mm/memory.c, src/mm/memory.h, src/native/jni.c,
	src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/.cvsignore, src/threads/Makefile.am,
	src/threads/critical.c, src/threads/critical.h,
	src/threads/native/Makefile.am, src/threads/native/critical.c,
	src/threads/native/critical.h, src/threads/native/lock.c,
	src/threads/native/lock.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/threads.h,
	src/threads/threads-common.c, src/threads/threads-common.h,
	src/toolbox/logging.c, src/vm/builtin.c, src/vm/builtin.h,
	src/vm/exceptions.c, src/vm/finalizer.c, src/vm/jit/abi.h,
	src/vm/jit/alpha/disass.c, src/vm/jit/alpha/emit.c, src/vm/jit/alpha
	/md-abi.c, src/vm/jit/alpha/md-abi.h, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/disass.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c,
	src/vm/jit/disass.h, src/vm/jit/emit-common.h,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/md-abi.c,
	src/vm/jit/mips/disass.c, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/Makefile.am, src/vm/jit/mips/linux/Makefile.am,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md-abi.h,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc/linux/md-abi.h, src/vm/jit/replace.c,
	src/vm/jit/replace.h, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c, src/vm/jit/show.c,
	src/vm/jit/sparc64/Makefile.am, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/sparc64/solaris/.cvsignore,
	src/vm/jit/sparc64/solaris/Makefile.am, src/vm/jit/sparc64/solaris
	/md-os.c, src/vm/jit/stacktrace.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.h, src/vm/signal.c, src/vm/vm.c,
	src/vmcore/annotation.c, src/vmcore/descriptor.c,
	src/vmcore/descriptor.h, src/vmcore/options.c, src/vmcore/options.h:
	* Merged with trunk.
	[7b6a202c6bfd]

	* src/mm/boehm.c, src/native/include/Makefile.am, src/native/native.c,
	src/native/vm/Makefile.am, src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_Object.h, src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/vm/exceptions.c,
	src/vm/jit/alpha/freebsd/Makefile.am,
	src/vm/jit/alpha/linux/Makefile.am, src/vm/jit/alpha/md.c,
	src/vm/jit/codegen-common.c, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/cygwin/Makefile.am, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/cygwin/md-os.c, src/vm/jit/i386/cygwin/ucontext.c,
	src/vm/jit/i386/cygwin/ucontext.h,
	src/vm/jit/i386/freebsd/Makefile.am,
	src/vm/jit/i386/linux/Makefile.am,
	src/vm/jit/powerpc/darwin/Makefile.am,
	src/vm/jit/powerpc/linux/Makefile.am,
	src/vm/jit/powerpc/netbsd/Makefile.am,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-abi.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c, src/vm/vm.c, src/vmcore/class.h:
	* Merged with trunk.
	[e39f030e886d]

2007-02-14  tbfg  <tbfg>

	* src/cacao/Makefile.am, src/cacaoh/dummy.c, src/mm/memory.c,
	src/mm/memory.h, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/threads/native/Makefile.am, src/threads/native/threads.c,
	src/threads/native/threads.h, src/toolbox/logging.c,
	src/vm/finalizer.c, src/vm/jit/Makefile.am, src/vm/jit/abi.h,
	src/vm/jit/alpha/disass.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/disass.c, src/vm/jit/arm/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/codegen-common.c,
	src/vm/jit/disass.h, src/vm/jit/i386/md-abi.c,
	src/vm/jit/m68k/disass.c, src/vm/jit/mips/disass.c, src/vm/jit/mips
	/md-abi.c, src/vm/jit/powerpc/linux/md-abi.c, src/vm/jit/s390/md.c,
	src/vm/jit/stacktrace.c, src/vm/signal.c, src/vmcore/annotation.c,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/m68k/disass.c: New file.
	* src/vm/jit/codegen-common.c: Include vmcore/statistics.h
	unconditionally.
	[2e1c214eadcf]

2007-02-13  twisti  <twisti>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/md-abi.c:
	* src/vm/jit/arm/codegen.c (createnativestub) [!__ARM_EABI__]:
	#ifdef'ed split-stuff.
	* src/vm/jit/arm/md-abi.c (md_param_alloc_native) [!__ARM_EABI__]:
	Added GNU EABI stuff.
	[af78bca75913]

2007-02-13  ajordan  <ajordan>

	* configure.ac, src/vm/jit/sparc64/Makefile.am,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/solaris/.cvsignore,
	src/vm/jit/sparc64/solaris/Makefile.am, src/vm/jit/sparc64/solaris
	/md-os.c:
	* configure.ac: Added support for compiling on Solaris.

	* src/vm/jit/sparc64/*: Added os subdir, changes for compiling on
	Solaris.
	[157ae470d534]

2007-02-13  twisti  <twisti>

	* src/vm/jit/mips/disass.c, src/vm/jit/mips/md-abi.c:
	* src/vm/jit/mips/md-abi.c (regs): Renamed to
	abi_registers_integer_name. (md_param_alloc_native): New function.
	* src/vm/jit/mips/disass.c (disassinstr): Replaced regs with
	abi_registers_integer_name.
	[3db406d10cfa]

	* src/vm/jit/mips/emit.c, src/vm/jit/mips/md-abi.h:
	* src/vm/jit/mips/emit.c (emit_verbosecall_exit): Fixed argument
	passing, but I think there's still something left to fix.
	* src/vm/jit/mips/md-abi.h (REG_A2_A3_PACKED): Added.
	[f55f5d4d9ef6]

	* src/threads/native/lock.c, src/threads/native/lock.h:
	* src/threads/native/lock.c (vm/vm.h): Added.
	(lock_record_add_waiter): New function. (lock_record_remove_waiter):
	Free the waiter data structure. (lock_record_wait): Use
	lock_record_add_waiter.
	* src/threads/native/lock.h: Cosmetic changes.
	[d1d527064209]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (mem_alloc): Arghhhh, fixed arguments.
	[a9db026b311f]

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (mem_alloc): Use calloc instead of malloc.
	[6faeec3ab2c6]

	* src/threads/threads-common.c:
	* src/threads/threads-common.c (threads_get_current_tid): Check if
	thread is NULL and return 0.
	[8f9daba23327]

	* src/cacaoh/dummy.c, src/threads/threads-common.c, src/threads
	/threads-common.h, src/toolbox/logging.c:
	* src/threads/threads-common.c (threads_get_current_tid): New
	function.
	* src/threads/threads-common.h (threads_get_current_tid): Added.

	* src/toolbox/logging.c (log_start): Use threads_get_current_tid.

	* src/cacaoh/dummy.c (threads_get_current_threadobject): Removed.
	(threads_get_current_tid): Added.
	[3a124f6f4c56]

2007-02-13  ajordan  <ajordan>

	* src/vm/jit/Makefile.am, src/vm/signal.c:
	* src/vm/jit/Makefile.am: Reverted duplicate changes.

	* src/vm/signal.c: Reverted one duplicate header include.
	[2fbdec7bf486]

	* src/native/jni.c, src/threads/critical.c,
	src/threads/none/threads.h, src/threads/threads-common.c,
	src/vm/exceptions.c, src/vm/finalizer.c, src/vm/jit/Makefile.am,
	src/vm/jit/codegen-common.c, src/vm/jit/stacktrace.c,
	src/vm/signal.c:
	* src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframeinfo):
	SPARC specific retrieval of the PV. (stacktrace_create): SPARC
	specific stack walking.

	* src/vm/jit/Makefile.am: Not compiling verifier source when
	disabled.

	* src/vm/jit/codegen-common.c (codegen_add_patch_ref): Included
	__SPARC_64__ in ifdef to add patcher NOPs from here.

	* src/vm/signal.c: Added include statements and/or ifdefs to fix
	compiling without threads.
	* src/vm/exceptions.c: Likewise.
	* src/vm/finalizer.c: Likewise.
	* src/native/jni.c: Likewise.
	* src/threads/none/threads.h: Likewise.
	* src/threads/threads-common.c: Likewise.
	* src/threads/critical.c: Likewise.
	[c51c053fbfbf]

	* src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md-abi.h:
	* src/vm/jit/sparc64/md-abi.h: set TRACE_ARGS_NUM to 6.
	* src/vm/jit/sparc64/emit.c: using the 6 available integer argument
	regs for call tracing.

	* src/vm/jit/sparc64/md-abi.c: added abi register names. Added
	md_param_alloc_native(), but still using the existing workaround.
	[9a19cd374635]

2007-02-13  twisti  <twisti>

	* src/mm/memory.c:
	* src/mm/memory.c (memory_thread) [ENABLE_STATISTICS]: #ifdef'ed
	statistics_print_memory_usage call.
	[cd26a2966c4b]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create) [ENABLE_STATISTICS]: #ifdef opt_stat.
	[08f3909ddc6a]

	* src/mm/memory.c, src/vm/vm.c:
	* src/vm/vm.c (vm_create): Set opt_stat also true for
	-verbose:memory.
	* src/mm/memory.c [ENABLE_THREADS] (threads/threads-common.h): Added.
	(memory_thread): Call statistics_print_memory_usage.
	[b512ae21162a]

	* src/cacao/Makefile.am, src/mm/memory.c, src/mm/memory.h,
	src/threads/.cvsignore, src/threads/Makefile.am,
	src/threads/critical.c, src/threads/critical.h,
	src/threads/native/Makefile.am, src/threads/native/critical.c,
	src/threads/native/critical.h, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/threads-common.c,
	src/threads/threads-common.h, src/vm/finalizer.c,
	src/vm/jit/asmpart.h, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/signal.c, src/vm/vm.c,
	src/vmcore/options.c, src/vmcore/options.h:
	* src/vm/jit/optimizing/profile.c (native/jni.h): Removed.
	(native/include/java_lang_Thread.h): Likewise.
	(native/include/java_lang_VMThread.h): Likewise. (threads/threads-
	common.h): Added. (thread_profile): Changed type to threadobject.
	(profile_start_thread): Use threads_create_thread.
	* src/vm/jit/optimizing/recompile.c: Likewise.
	* src/vm/signal.c: Likewise.
	* src/vm/finalizer.c: Likewise.

	* src/vm/jit/asmpart.h (threads/native/critical.h): Removed.
	(threads/critical.h): Added.

	* src/vmcore/options.c (opt_verbosememory): Added.
	* src/vmcore/options.h: Likewise.

	* src/vm/vm.c (XXusage): Added -verbose:memory. (vm_create):
	Likewise. Start memory thread.

	* src/cacao/Makefile.am (THREAD_LIB): Changed to
	$(top_builddir)/src/threads/libthreads.la.

	* src/mm/memory.c [ENABLE_THREADS] (thread_memory): Added.
	[ENABLE_THREADS] (memory_thread): New function. [ENABLE_THREADS]
	(memory_start_thread): Likewise.
	* src/mm/memory.h [ENABLE_THREADS] (memory_start_thread): Added.

	* src/threads/native/critical.c: Removed.
	* src/threads/native/critical.h: Likewise.
	* src/threads/critical.c: Added.
	* src/threads/critical.h: Likewise.

	* src/threads/threads-common.c: New file.
	* src/threads/threads-common.h: Likewise.
	* src/threads/Makefile.am (AM_CPPFLAGS): Added. (LIB): Likewise.
	[ENABLE_THREADS] (THREAD_LIB): Likewise. (noinst_LTLIBRARIES):
	Likewise. (libthreads_la_SOURCES): Likewise. (libthreads_la_LIBADD):
	Likewise.

	* src/threads/.cvsignore: New file.

	* src/threads/native/threads.c (include "threads/threads-common.h):
	Added.
	* src/threads/native/threads.h (MIN_PRIORITY, NORM_PRIORITY)
	(MAX_PRIORITY): Removed.

	* src/threads/native/Makefile.am (noinst_LTLIBRARIES): Changed to
	libthreadsposix.la.
	[57682a5aba23]

	* src/vmcore/annotation.c:
	* src/vmcore/annotation.c
	(annotation_load_attribute_runtimevisibleannotations): Renamed aa to
	annotations.
	[1c792673fcbd]

2007-02-12  twisti  <twisti>

	* src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.h (_EMIT_H): Renamed to _EMIT_COMMON_H.
	(config.h): Added. (vm/jit/codegen-common.h): Likewise.
	[SIZEOF_VOID_P == 4] (IS_IMM16): Added.
	[b19814ba89ab]

	* src/vm/jit/alpha/disass.c, src/vm/jit/alpha/md-abi.c:
	* src/vm/jit/alpha/md-abi.c (regs): Renamed to
	abi_registers_integer_name. (md_param_alloc_native): New function.

	* src/vm/jit/alpha/disass.c (vm/jit/abi.h): Added. (disassinstr):
	Replaced regs with abi_registers_integer_name.
	[23febdef7237]

	* src/vm/jit/i386/md-abi.c:
	* src/vm/jit/i386/md-abi.c (regs): Renamed to
	abi_registers_integer_name. (md_param_alloc_native): New function.
	[cc5eeff0cb09]

2007-02-11  twisti  <twisti>

	* src/vm/jit/arm/disass.c, src/vm/jit/arm/md-abi.c:
	* src/vm/jit/arm/disass.c (stdio.h): Added. (regs): Removed.
	* src/vm/jit/arm/md-abi.c (abi_registers_integer_name): Added.
	(md_param_alloc_native): Likewise.
	[29ed076c2ed8]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (vm/jit/abi.h): Added.
	[3edfd0bfe9e7]

	* src/vm/jit/disass.h, src/vm/jit/show.c:
	* src/vm/jit/disass.h (regs): Removed.

	* src/vm/jit/show.c (vm/jit/abi.h): Added. (show_allocation):
	Renamed regs to abi_registers_integer_name.
	[f0edc37030d7]

	* src/vm/jit/codegen-common.c, src/vm/jit/powerpc/linux/md-abi.c:
	* src/vm/jit/codegen-common.c (codegen_createnativestub): Call
	md_param_alloc_native instead of md_param_alloc.

	* src/vm/jit/powerpc/linux/md-abi.c (assert.h): Added. (regs):
	Renamed to abi_registers_integer_name.
	(abi_registers_integer_argument, abi_registers_integer_saved)
	(abi_registers_integer_temporary, abi_registers_float_name)
	(abi_registers_float_argument, abi_registers_float_saved)
	(abi_registers_float_temporary): Added. (md_param_alloc):
	Reformatted. (md_param_alloc_native): New function.
	[4736770b86de]

	* src/vm/jit/abi.h, src/vmcore/descriptor.c, src/vmcore/descriptor.h:
	* src/vmcore/descriptor.c (vm/jit/abi.h): Added.
	* src/vmcore/descriptor.h (md_param_alloc): Removed.

	* src/vm/jit/abi.h (abi_registers_integer_name)
	(abi_registers_integer_argument, abi_registers_integer_saved)
	(abi_registers_integer_temporary, abi_registers_float_name)
	(abi_registers_float_argument, abi_registers_float_saved)
	(abi_registers_float_temporary): Added. (md_param_alloc): Likewise.
	(md_param_alloc_native): Likewise.
	[a16f365547ee]

	* src/native/native.c, src/native/native.h,
	src/native/vm/gnu/java_lang_reflect_Method.c:
	* src/native/native.c (native_get_returntype): Removed.
	* src/native/native.h: Likewise.

	* src/native/vm/gnu/java_lang_reflect_Method.c (getReturnType):
	Moved code from native_get_returntype.
	[63cc7b056dbb]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (vm/jit/md.h): Added.
	[d03242be27f2]

2007-02-11  michi  <michi>

	* src/mm/cacao-gc/region.c, src/mm/cacao-gc/region.h, src/mm/memory.c,
	src/mm/memory.h:
	* src/mm/cacao-gc/region.h, src/mm/cacao-gc/region.c: Added.
	* src/mm/memory.c, src/mm/memory.h: Moved defines for memcheck into
	header file.
	[12fda0ee1c7c]

2007-02-11  twisti  <twisti>

	* src/vm/jit/arm/asmpart.S, src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Keep stack 8-byte
	aligned. (emit_verbosecall_exit): Added comment.
	* src/vm/jit/arm/asmpart.S (asm_call_jit_compiler): Keep stack 8-byte
	aligned.
	[d97c9610df75]

2007-02-11  michi  <michi>

	* src/vm/jit/i386/codegen.c, src/vm/jit/stacktrace.h:
	* src/vm/jit/i386/codegen.c (createnativestub): Saved registers are
	now stored/recovered into/from the stackframeinfo structure.
	* src/vm/jit/stacktrace.h: Modified stackframeinfo structure
	accordingly.
	[663e32714291]

2007-02-11  pm  <pm>

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/stacktrace.c:
	* src/vm/jit/stacktrace.c (stacktrace_create_extern_stackframeinfo):
	On s390 get return address from stack also in leaf methods.
	* src/vm/jit/codegen-common.c (methodtree_comparator): On s390 compare
	addresses as 31 bit integers.
	* src/vm/jit/s390/md.c, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/asmpart.S: Changed a lot, working on s390 port.
	[c749d9c3aaf1]

2007-02-11  tbfg  <tbfg>

	* src/vm/builtin.h, src/vm/jit/arm/emit.c, src/vm/jit/i386/emit.c,
	src/vm/jit/mips/md-abi.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/x86_64/emit.c:
	* src/vm/jit/powerpc64/codegen.c (CHECKCAST): Longbranches are only
	an issue when using SOFTEX.

	* src/vm/jit/powerpc64/patcher.c
	(patcher_resolve_classref_to_classinfo): Added.
	(patcher_resolve_classref_to_classinfo): Added.
	(patcher_resolve_classref_to_vftbl): Added.
	(patcher_resolve_classref_to_flags): Added.
	[448a35abd40f]

2007-02-11  michi  <michi>

	* src/vm/jit/replace.c, src/vm/jit/replace.h:
	* src/vm/jit/replace.c: Fixed includes for options.h and
	classcache.h headers.
	* src/vm/jit/replace.h: Added forward typedef for rplalloc.
	[666823923812]

	* src/vm/jit/replace.h:
	* src/vm/jit/replace.h: Fixed include for method.h header.
	[0ed77d0cbca4]

	* src/mm/gc-common.h, src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/gnu/java_lang_VMSystem.c:
	* src/mm/gc-common.h [ENABLE_GC_CACAO]: Added prototype for
	heap_get_hashcode().
	* src/native/vm/gnu/java_lang_VMSystem.c [ENABLE_GC_CACAO]: Uses new
	method to get hashcodes for objects.
	* src/native/vm/cldc1.1/java_lang_Object.c [ENABLE_GC_CACAO]: Don't
	know if we can use this here.
	[985cf627996d]

2007-02-11  twisti  <twisti>

	* src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.h:
	* src/vm/jit/x86_64/emit.c (emit_verbosecall_enter): Renamed
	builtin_trace_args to builtin_verbosecall_enter.
	(builtin_verbosecall_exit): Renamed builtin_displaymethodstop to
	builtin_verbosecall_exit and changed signature.

	* src/vm/jit/x86_64/md-abi.h (REG_FA0, REG_FA1): Added.
	[c6b6afe62556]

2007-02-10  twisti  <twisti>

	* src/vm/builtin.c, src/vm/builtin.h, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/md-abi.h, src/vm/jit/arm/emit.c,
	src/vm/jit/i386/emit.c, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/irix/Makefile.am, src/vm/jit/mips/linux/Makefile.am,
	src/vm/jit/mips/md-abi.h, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/linux/md-abi.h:
	* src/vm/builtin.c (builtin_trace_args): Renamed to
	builtin_verbosecall_enter. (builtin_trace_args): Renamed to
	builtin_verbosecall_enter. (builtin_displaymethodstop): Renamed to
	builtin_verbosecall_exit and changed signature.
	* src/vm/builtin.h: Likewise.

	* src/vm/jit/arm/emit.c (emit_verbosecall_enter): Likewise.
	(builtin_verbosecall_exit): Likewise.
	* src/vm/jit/alpha/emit.c: Likewise.
	* src/vm/jit/i386/emit.c: Likewise.
	* src/vm/jit/mips/emit.c: Likewise.
	* src/vm/jit/powerpc/emit.c: Likewise.

	* src/vm/jit/alpha/md-abi.h (REG_FA0, REG_FA1, REG_FA2): Added.
	* src/vm/jit/mips/md-abi.h: Removed multiple defines.
	* src/vm/jit/powerpc/linux/md-abi.h (REG_FA0, REG_FA1): Added.
	(REG_A0_A1_PACKED): Likewise.

	* src/vm/jit/mips/linux/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	* src/vm/jit/mips/irix/Makefile.am: Likewise.
	[07b4af4a23e6]

2007-02-10  tbfg  <tbfg>

	* src/mm/boehm.c, src/native/include/Makefile.am, src/native/native.c,
	src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_Object.h, src/vm/exceptions.c,
	src/vm/jit/alpha/md.c, src/vm/jit/i386/asmpart.S,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/patcher.c, src/vm/jit/s390/arch.h,
	src/vmcore/class.h:
	* src/vm/jit/powerpc64/linux/md-abi.c: Adopt changes include files.

	* src/vm/jit/powerpc64/emit.c: Likewise.

	* src/vm/jit/powerpc64/md.c: Likewise.

	* src/vm/jit/powerpc64/codegen.c: Likewise. Moved block closing
	bracket.

	* src/vm/jit/powerpc64/patcher.c: Likewise.

	* src/vm/exceptions.c: new_arithmeticexception and
	new_arrayindexoutofboundsexception prefixed by exceptions_.
	[1cdc902a5ccf]

2007-02-10  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md-abi.c,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/patcher.c:
	* src/vm/jit/sparc64/codegen.c (createnativestub): Fixed stack
	argument passing.

	* src/vm/jit/sparc64/*: Adapted includes to new cacao structure.
	[39f035e16f77]

2007-02-10  pm  <pm>

	* src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h:
	* s390/codegen.c: fix: ICMD_FCMPL generated wrong branch offset
	* s390/codegen.h: likewise
	* s390/asmpart.S: fix: asm_call_jit_compiler did not remove stack
	frame
	[3937893d7ada]

	* src/vm/jit/s390/arch.h, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/patcher.c:
	Continued work on S390 codegen. Affected files:

	* s390/codegen.c
	* s390/codegen.h
	* s390/arch.h
	* s390/patcher.c
	* s390/asmpart.S
	[baf322e0ebc6]

2007-02-09  twisti  <twisti>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/linux/md-abi.c,
	src/vm/jit/powerpc64/linux/md-os.c, src/vm/jit/powerpc64/md.c,
	src/vm/jit/powerpc64/patcher.c:
	* src/vm/jit/powerpc64/linux/md-os.c: Fixed includes.
	* src/vm/jit/powerpc64/linux/md-abi.c: Likewise.
	* src/vm/jit/powerpc64/md.c: Likewise.
	* src/vm/jit/powerpc64/codegen.c: Likewise.
	* src/vm/jit/powerpc64/patcher.c: Likewise.
	[66efde2212b2]

	* src/vm/jit/i386/asmpart.S:
	* src/vm/jit/i386/asmpart.S (asm_compare_and_swap): Added ; after
	lock, Darwin's assembler requires that. (asm_compare_and_swap):
	Likewise.
	[29838e9abba1]

	* src/mm/boehm.c:
	* src/mm/boehm.c [ENABLE_THREADS] (threads/native/threads.h):
	Removed.
	[7d3d2244cd52]

	* src/vm/jit/powerpc/darwin/Makefile.am,
	src/vm/jit/powerpc/linux/Makefile.am,
	src/vm/jit/powerpc/netbsd/Makefile.am:
	* src/vm/jit/powerpc/linux/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	* src/vm/jit/powerpc/darwin/Makefile.am: Likewise.
	* src/vm/jit/powerpc/netbsd/Makefile.am: Likewise.
	[27b01b1e3b7e]

	* src/vm/vm.c, src/vmcore/class.h:
	* src/vmcore/class.h (dummy_java_lang_Class): Added. (classinfo):
	Use dummy_java_lang_Class.
	* src/vm/vm.c (vm_create): Check dummy_java_lang_Class size.
	[646f1b3bd20a]

	* src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h:
	* src/native/vm/java_lang_Runtime.c [ENABLE_JAVASE]
	(runFinalizersOnExit): Added.
	* src/native/vm/java_lang_Runtime.h: Likewise.

	* src/native/vm/gnu/java_lang_VMRuntime.c (exit): Renamed argument
	par1 to status. (runFinalizersOnExit): Call
	_Jv_java_lang_Runtime_runFinalizersOnExit.
	[f35f918c49c4]

	* src/native/include/Makefile.am, src/native/native.c,
	src/native/vm/Makefile.am, src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c,
	src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Class.h,
	src/native/vm/java_lang_Object.h, src/native/vm/java_lang_Runtime.c,
	src/native/vm/java_lang_Runtime.h, src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_throw_unsatisfiedlinkerror)
	[!ENABLE_JAVASE]: Generate a java.lang.Error.

	* src/native/vm/cldc1.1/java_lang_Class.c (isInstance): Added.
	(isAssignableFrom): Likewise. (isInterface): Likewise. (isArray):
	Likewise.

	* src/native/vm/cldc1.1/java_lang_Object.c (hashCode): Likewise.
	(notify): Likewise. (wait): Likewise.

	* src/native/vm/cldc1.1/java_lang_String.c (hashCode): Smaller
	implementation changes. (indexOf__II): Likewise. (lastIndexOf__II):
	Likewise. (indexOf__I): Added.

	* src/native/vm/cldc1.1/java_lang_Thread.c: Header updated.

	* src/native/vm/cldc1.1/java_lang_Runtime.c (exitInternal): Fixed
	signature. (freeMemory): Added. (totalMemory): Likewise. (gc):
	Likewise.

	* src/native/vm/cldc1.1/com_sun_cldc_io_ResourceInputStream.c: New
	file.
	* src/native/vm/cldc1.1/com_sun_cldc_io_j2me_socket_Protocol.c:
	Likewise.
	* src/native/vm/cldc1.1/Makefile.am (libnativevmcore_la_SOURCES):
	Added com_sun_cldc_io_ResourceInputStream.c and
	com_sun_cldc_io_j2me_socket_Protocol.c.

	* src/native/vm/java_lang_Runtime.c: New file.
	* src/native/vm/java_lang_Runtime.h: Likewise.
	* src/native/vm/Makefile.am (libnativevm_la_SOURCES): Added
	java_lang_Runtime.c and java_lang_Runtime.h.


	* src/native/vm/java_lang_Class.c: Un-ifdef some functions for CLDC.
	* src/native/vm/java_lang_Class.h: Likewise.

	* src/native/vm/gnu/java_lang_VMRuntime.c
	(native/vm/java_lang_Runtime.h): Added. (exit): Call
	_Jv_java_lang_Runtime function. (freeMemory): Likewise.
	(totalMemory): Likewise. (gc): Likewise.

	* src/native/vm/java_lang_Object.h [ENABLE_JAVASE]
	(native/include/java_lang_Cloneable.h): Only available for JavaSE
	configurations.

	* src/native/include/Makefile.am (JAVAME_CLDC1_1_HEADER_FILES):
	Added com_sun_cldc_io_ResourceInputStream.h and
	com_sun_cldc_io_j2me_socket_Protocol.h.

	* src/native/native.c (dummynativetable) [ENABLE_JAVAME_CLDC1_1]:
	Added new functions.
	[fbdb38a96c9f]

	* src/vm/jit/alpha/freebsd/Makefile.am,
	src/vm/jit/alpha/linux/Makefile.am, src/vm/jit/alpha/md.c:
	* src/vm/jit/alpha/md.c (vm/options.h): Changed to vmcore/options.h.

	* src/vm/jit/alpha/linux/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	* src/vm/jit/alpha/freebsd/Makefile.am: Likewise.
	[693b7e76e960]

2007-02-08  tbfg  <tbfg>

	* src/vm/jit/i386/cygwin/Makefile.am, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/cygwin/md-os.c, src/vm/jit/i386/cygwin/ucontext.c,
	src/vm/jit/i386/cygwin/ucontext.h, src/vm/jit/m68k/.cvsignore,
	src/vm/jit/m68k/linux/.cvsignore, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c:
	* m68k/linux/.cvsignore: Added.
	* m68k/.cvsignore: Added.
	[cdf1b5289488]

2007-02-08  michi  <michi>

	* src/vm/jit/i386/cygwin/Makefile.am, src/vm/jit/i386/cygwin/md-asm.h,
	src/vm/jit/i386/cygwin/md-os.c, src/vm/jit/i386/cygwin/ucontext.c,
	src/vm/jit/i386/cygwin/ucontext.h:
	* src/vm/jit/i386/cygwin/Makefile.am: Changed to unix fileformat.
	* src/vm/jit/i386/cygwin/ucontext.h,
	src/vm/jit/i386/cygwin/ucontext.c, src/vm/jit/i386/cygwin/md-os.c,
	src/vm/jit/i386/cygwin/md-asm.h: Likewise.
	[45fafa8afbb4]

2007-02-08  twisti  <twisti>

	* src/vm/jit/i386/cygwin/Makefile.am,
	src/vm/jit/i386/freebsd/Makefile.am,
	src/vm/jit/i386/linux/Makefile.am:
	* src/vm/jit/i386/linux/Makefile.am (AM_CPPFLAGS) Added
	-I$(top_builddir)/src.
	* src/vm/jit/i386/cygwin/Makefile.am: Likewise.
	* src/vm/jit/i386/freebsd/Makefile.am: Likewise.
	[466a8912874b]

2007-02-07  pm  <pm>

	* src/vm/jit/codegen-common.c, src/vm/jit/s390/asmpart.S,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/codegen.h,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/patcher.c:
	Continued work on S390 port.
	java.lang.ClassLoader.getSystemClassLoader is now compiled, patched,
	called and the patcher trigger compilation of another method.

	* jit/s390/emit.c: Likiwise.
	* jit/s390/codegen.c: Likewise.
	* jit/s390/codegen.h: Likewise.
	* jit/s390/md-asm.h: Likewise.
	* jit/s390/patcher.c: Likewise.
	* jit/s390/asmpart.S: Likewise.
	* jit/codegen-common.c: Likewise.
	[592440195369]

2007-02-07  tbfg  <tbfg>

	* src/vm/jit/m68k/Makefile.am:
	* src/vm/jit/m68k/Makefile.am (DIST_SUBDIRS): Removed uclinux, added
	linux.
	[f967fb516920]

	* configure.ac, src/mm/boehm-gc/include/private/gc_locks.h,
	src/vm/jit/m68k/linux/Makefile.am, src/vm/jit/m68k/linux/md-abi.c,
	src/vm/jit/m68k/linux/md-abi.h, src/vm/jit/m68k/linux/md-asm.h,
	src/vm/jit/m68k/linux/md-os.c:
	* src/vm/jit/m68k/linux/md-abi.c: Added.
	* src/vm/jit/m68k/uclinux: Removed.
	* src/mm/boehm-gc/include/private/gc_locks.h (GC_test_and_set):
	Disabled, assembly does not work on coldfire.
	* configure.ac: Enabled m68k builds.
	[76b92aaedb38]

2007-02-07  twisti  <twisti>

	* configure.ac, src/Makefile.am, src/cacao/Makefile.am,
	src/cacao/cacao.c, src/cacaoh/Makefile.am, src/cacaoh/cacaoh.c,
	src/cacaoh/headers.c, src/cacaoh/headers.h, src/lib/Makefile.am,
	src/mm/Makefile.am, src/mm/boehm.c, src/mm/gc-common.h,
	src/mm/memory.c, src/native/include/.cvsignore,
	src/native/include/Makefile.am,
	src/native/include/java_lang_Class.h,
	src/native/include/java_lang_ClassLoader.h,
	src/native/include/java_lang_Cloneable.h,
	src/native/include/java_lang_Object.h,
	src/native/include/java_lang_String.h,
	src/native/include/java_lang_Thread.h,
	src/native/include/java_lang_ThreadGroup.h,
	src/native/include/java_lang_Throwable.h,
	src/native/include/java_lang_VMThread.h,
	src/native/include/java_lang_VMThrowable.h,
	src/native/include/java_util_Properties.h, src/native/jni.c,
	src/native/jni.h, src/native/native.c, src/native/native.h,
	src/native/vm/Makefile.am, src/threads/native/Makefile.am,
	src/threads/native/lock.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/threads/none/lock.h,
	src/threads/none/threads.h, src/toolbox/Makefile.am,
	src/toolbox/avl.c, src/toolbox/list.c, src/toolbox/logging.c,
	src/toolbox/logging.h, src/vm/Makefile.am, src/vm/access.c,
	src/vm/access.h, src/vm/annotation.c, src/vm/annotation.h,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/builtintable.inc,
	src/vm/class.c, src/vm/class.h, src/vm/classcache.c,
	src/vm/classcache.h, src/vm/descriptor.c, src/vm/descriptor.h,
	src/vm/exceptions.c, src/vm/exceptions.h, src/vm/field.c,
	src/vm/field.h, src/vm/finalizer.c, src/vm/hashtable.c,
	src/vm/hashtable.h, src/vm/initialize.c, src/vm/initialize.h,
	src/vm/jit/Makefile.am, src/vm/jit/abi.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/arch.h,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/codegen.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/linux/md-os.c,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/alpha/patcher.c,
	src/vm/jit/asmpart.h, src/vm/jit/code.c, src/vm/jit/code.h,
	src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/dseg.c, src/vm/jit/dseg.h, src/vm/jit/emit-common.c,
	src/vm/jit/i386/arch.h, src/vm/jit/i386/asmpart.S,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c, src/vm/jit/i386
	/md-abi.c, src/vm/jit/i386/md.c, src/vm/jit/i386/patcher.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/loop/graph.h, src/vm/jit/loop/loop.h,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/disass.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md-asm.h,
	src/vm/jit/mips/md.c, src/vm/jit/mips/patcher.c,
	src/vm/jit/optimizing/Makefile.am, src/vm/jit/optimizing/ifconv.c,
	src/vm/jit/optimizing/ifconv.h, src/vm/jit/optimizing/profile.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/parisc/arch.h,
	src/vm/jit/parse.c, src/vm/jit/powerpc/arch.h,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/powerpc64/arch.h, src/vm/jit/show.c,
	src/vm/jit/sparc64/arch.h, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/stack.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/tools/Makefile.am, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/verify/typecheck-stackbased.c,
	src/vm/jit/verify/typecheck.c, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/verify/typeinfo.h, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/arch.h, src/vm/jit/x86_64/codegen.c,
	src/vm/jit/x86_64/codegen.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/md.c,
	src/vm/jit/x86_64/patcher.c, src/vm/linker.c, src/vm/linker.h,
	src/vm/loader.c, src/vm/loader.h, src/vm/method.c, src/vm/method.h,
	src/vm/options.c, src/vm/options.h, src/vm/properties.c,
	src/vm/properties.h, src/vm/references.h, src/vm/resolve.c,
	src/vm/resolve.h, src/vm/rt-timing.c, src/vm/rt-timing.h,
	src/vm/signal.c, src/vm/signallocal.h, src/vm/statistics.c,
	src/vm/statistics.h, src/vm/string.c, src/vm/stringlocal.h,
	src/vm/suck.c, src/vm/suck.h, src/vm/utf8.c, src/vm/utf8.h,
	src/vm/vm.c, src/vm/zip.c, src/vm/zip.h:
	* Merged with trunk.
	[e840d73af6a9]

2007-02-06  twisti  <twisti>

	* src/native/vm/cldc1.1/Makefile.am:
	* src/native/vm/cldc1.1/Makefile.am: Updated header.
	[ab6eb7c14e9b]

	* src/native/vm/cldc1.1/java_lang_String.c:
	* src/native/vm/cldc1.1/java_lang_String.c (hashCode): Implemented.
	(indexOf__II): Likewise. (lastIndexOf__II): Likewise.
	[b527bef0a2f2]

	* src/threads/native/Makefile.am, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/freebsd/Makefile.am,
	src/vm/jit/x86_64/linux/Makefile.am:
	* src/threads/native/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	* src/vm/jit/x86_64/Makefile.am: Likewise.
	* src/vm/jit/x86_64/linux/Makefile.am: Likewise.
	* src/vm/jit/x86_64/freebsd/Makefile.am: Likewise.
	[e93ab8483e6b]

	* src/vm/jit/powerpc/codegen.c:
	* src/vm/jit/powerpc/codegen.c (codegen) [ENABLE_PROFILING]: #ifdef
	profiling code.
	[3f09fe8f17ae]

	* src/native/vm/Makefile.am:
	* src/native/vm/Makefile.am (DIST_SUBDIRS): Added missing \.
	[f9a03ea56104]

	* src/vm/jit/tools/genoffsets.c:
	* src/vm/jit/tools/genoffsets.c (vm/jit/stacktrace.h): Not required,
	removed.
	[4c950490c9bb]

	* src/vm/jit/tools/Makefile.am:
	* src/vm/jit/tools/Makefile.am: Cosmetic changes.
	[28ac1f93fda5]

	* src/mm/Makefile.am, src/vm/Makefile.am, src/vm/jit/Makefile.am,
	src/vm/jit/optimizing/Makefile.am:
	* src/vm/jit/optimizing/Makefile.am (AM_CPPFLAGS): Added
	-I$(top_builddir)/src.
	* src/vm/jit/Makefile.am: Likewise.
	* src/vm/Makefile.am: Likewise.
	* src/mm/Makefile.am: Likewise.
	[b769e2013034]

	* src/vm/jit/x86_64/freebsd/md-os.c, src/vm/jit/x86_64/linux/md-os.c:
	* src/vm/jit/linux/md-os.c (thread_restartcriticalsection): Added
	missing cast and pass pc to critical_find_restart_point.
	* src/vm/jit/freebsd/md-os.c (thread_restartcriticalsection):
	Likewise.
	[304f206f98a4]

2007-02-05  twisti  <twisti>

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (builtin_clone, builtin_isanysubclass)
	(builtin_new): Keep compiler happy and return a value.
	[7b6ed76f17e1]

	* src/vm/signallocal.h:
	* src/vm/signallocal.h (vm/types.h): Added. (vm/global.h): Likewise.
	[284179c96249]

	* configure.ac, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/freebsd/.cvsignore,
	src/vm/jit/x86_64/freebsd/Makefile.am, src/vm/jit/x86_64/freebsd/md-
	os.c:
	* configure.ac (AC_CONFIG_FILES): Added
	src/vm/jit/x86_64/freebsd/Makefile.

	* src/vm/jit/x86_64/Makefile.am (DIST_SUBDIRS): Added freebsd.

	* src/vm/jit/x86_64/freebsd/md-os.c: New file.
	* src/vm/jit/x86_64/freebsd/Makefile.am: Likewise.
	* src/vm/jit/x86_64/freebsd/.cvsignore: Likewise.
	[f06962a27a47]

	* configure.ac, src/vm/jit/x86_64/Makefile.am,
	src/vm/jit/x86_64/linux/.cvsignore,
	src/vm/jit/x86_64/linux/Makefile.am, src/vm/jit/x86_64/linux/md-
	os.c, src/vm/jit/x86_64/md.c:
	* configure.ac (AC_CONFIG_FILES): Added
	src/vm/jit/x86_64/linux/Makefile.

	* src/vm/jit/x86_64/Makefile.am (DIST_SUBDIRS): Added. (SUBDIRS):
	Likewise. (libarch_la_LIBADD): Likewise.

	* src/vm/jit/x86_64/md.c (md_signal_handler_sigsegv)
	(md_signal_handler_sigfpe, md_signal_handler_sigusr2)
	(thread_restartcriticalsection): Removed.

	* src/vm/jit/x86_64/linux/md-os.c: New file.
	* src/vm/jit/x86_64/linux/Makefile.am: Likewise.
	* src/vm/jit/x86_64/linux/.cvsignore: Likewise.
	[50fd3baf26ce]

2007-02-04  pm  <pm>

	* src/vm/jit/codegen-common.h, src/vm/jit/dseg.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/emit.c, src/vm/jit/s390
	/md-abi.c, src/vm/jit/s390/md-abi.h, src/vm/jit/s390/md-asm.h,
	src/vm/jit/s390/md.c:
	* jit/codegen-common.h: Enabled dseg_adddata for s390.
	* jit/dseg.c: Likewise.
	* jit/s390/md-abi.h: Continued work on s390 port.
	* jit/s390/emit.c: Likewise.
	* jit/s390/md.c: Likewise.
	* jit/s390/codegen.c: Likewise.
	* jit/s390/codegen.h: Likewise.
	* jit/s390/md-asm.h: Likewise.
	* jit/s390/asmpart.S: Likewise.
	* jit/s390/md-abi.c: Likewise.
	[39030922ab4c]

2007-02-04  twisti  <twisti>

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_ExceptionDescribe): Fixed typo.
	[ad6e18d9a2c9]

2007-02-03  twisti  <twisti>

	* src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/codegen.h:
	* src/vm/jit/x86_64/codegen.c (codegen) [ENABLE_PROFILING]: #ifdef
	instrumentation code. (createnativestub) [ENABLE_PROFILING]:
	Likewise.

	* src/vm/jit/x86_64/codegen.h [ENABLE_PROFILING]
	(PROFILE_CYCLE_START) (PROFILE_CYCLE_STOP): Added #ifdef.
	[222c9620051f]

	* src/native/jni.c, src/vm/builtin.c, src/vm/finalizer.c,
	src/vm/signal.c:
	* src/vm/builtin.c [ENABLE_THREADS] (threads/native/threads.h):
	Removed. [ENABLE_THREADS] (threads/native/lock.h): Added.
	(builtin_throw_exception): Use exceptions_set_exception.

	* src/vm/finalizer.c (finalizer_run): Likewise.

	* src/vm/signal.c (signal_start_thread): Use #warning instead of
	#error (temporarily).

	* src/native/jni.c (_Jv_jni_invokeNative): Use
	exceptions_get_exception, and exceptions_clear_exception.
	(_Jv_JNI_ExceptionDescribe): Likewise. (_Jv_JNI_IsAssignableFrom):
	Use exceptions_set_exception. (_Jv_JNI_ExceptionOccurred): Use
	exceptions_get_exception. (_Jv_JNI_ExceptionCheck): Likewise.
	(_Jv_JNI_ExceptionClear): Use exceptions_clear_exception.
	[fed9851c2331]

2007-02-02  twisti  <twisti>

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen) [ENABLE_PROFILING]: Profiling
	code. (createnativestub): Likewise.
	[7a50687ad4fa]

	* src/native/vm/java_lang_Object.c:
	* src/native/vm/java_lang_Object.c [ENABLE_JAVAME_CLDC1_1]
	(native/include/java_lang_String.h): Added.
	[fd01a1f6bbed]

	* src/native/vm/java_lang_Class.h:
	* src/native/vm/java_lang_Class.h
	(native/include/java_lang_String.h): Required by java_lang_Class.h
	for Java ME.
	[f4ce4816ce07]

2007-02-02  michi  <michi>

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.h:
	* src/vm/jit/arm/md-abi.h: Renamed REG_IP to REG_PV (special favor
	for twisti).
	* src/vm/jit/arm/emit.c, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h: Adapted to the above change.
	[09cb587627a5]

2007-02-02  twisti  <twisti>

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_compile_intern) [ENABLE_PROFILING]: Call
	reorder only when profiling.
	[b82b4ffef10b]

	* src/vm/jit/code.h, src/vm/jit/jit.c:
	* src/vm/jit/code.h (codeinfo) [ENABLE_PROFILING]: Made frequency,
	bbfrequency, and cycles conditional.

	* src/vm/jit/jit.c (jit_compile) [ENABLE_PROFILING]: Likewise.
	(jit_compile_intern) [ENABLE_PROFILING]: Likewise.
	[aefa55d03b45]

	* src/vm/jit/optimizing/Makefile.am:
	* src/vm/jit/optimizing/Makefile.am [ENABLE_PROFILING]
	(REORDER_SOURCES): Moved here till we have something better.
	[0d4c94194c02]

2007-02-01  twisti  <twisti>

	* src/vmcore/suck.c:
	* src/vmcore/suck.c (assert.h): Added. (suck_float): Use assert
	instead of an exception. (suck_double): Likewise.
	[307597c08f3e]

	* src/vmcore/linker.c:
	* src/vmcore/linker.c (link_class_intern): Also align double and s8
	fields to 4-bytes for ARM.
	[bd695dd70df6]

	* src/vm/exceptions.c, src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vmcore/utf8.c (utf_java_lang_InvocationTargetException): Is
	actually called utf_java_lang_reflect_InvocationTargetException.
	(utf8_init): Likewise.

	* src/vmcore/utf8.h (utf_java_lang_InvocationTargetException):
	Likewise.

	* src/vm/exceptions.c (exceptions_throw_invocationtargetexception):
	Likewise.
	[27db8a25b0c5]

	* src/vm/jit/code.c:
	* src/vm/jit/code.c [ENABLE_THREADS] (threads/native/lock.h): Added.
	[5c7f3502d8dc]

	* src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/jit.c,
	src/vm/jit/jit.h, src/vmcore/loader.c, src/vmcore/method.h:
	* src/vmcore/method.h (methodinfo): Removed member object.
	* src/vm/jit/code.h (codeinfo): Added member object.

	* src/vmcore/loader.c (loader_load_method): Removed
	lock_init_object_lock. (load_newly_created_array): Likewise.
	* src/vm/jit/code.c (code_codeinfo_new): Added lock_init_object_lock.

	* src/vm/jit/jit.c (jit_jitdata_new): Changed signature.
	(jit_compile): Use codeinfo lock object instead of methodinfo.
	(jit_recompile): Changed signature.
	* src/vm/jit/jit.h (jit_jitdata_new): Likewise.
	[b10236223add]

2007-01-31  twisti  <twisti>

	* src/cacaoh/dummy.c:
	* src/cacaoh/dummy.c (pthread.h): Added.
	[9e9bd911a22a]

	* src/cacaoh/dummy.c, src/toolbox/logging.c:
	* src/toolbox/logging.c (log_start): Uncommented thread pointer
	stuff.
	* src/cacaoh/dummy.c (threads_get_current_threadobject): Added.
	[edfa159dd432]

	* src/native/jni.c:
	* src/native/jni.c (_Jv_JNI_ThrowNew): Fixed warnings.
	[2e98f9533278]

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c:
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c: Updated
	year.
	[5972b844a2f3]

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c:
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c (string.h):
	Added. (mm/memory.h): Likewise.
	[932a77fd8583]

	* src/vmcore/loader.c:
	* src/vmcore/loader.c (load_newly_created_array) [ENABLE_JAVASE]:
	Fixed interfacescount.
	[2e8984fe366c]

	* src/vm/exceptions.c, src/vm/exceptions.h:
	* src/vm/exceptions.c [ENABLE_JAVAME_CLDC1_1](exceptions_new_error):
	New function. (exceptions_asm_new_abstractmethoderror)
	[!ENABLE_JAVASE]: Use exceptions_new_error.
	(exceptions_throw_virtualmachineerror): Removed.
	* src/vm/exceptions.h (exceptions_throw_virtualmachineerror):
	Likewise.
	[5b39ee72f613]

	* src/vm/jit/Makefile.am:
	* src/vm/jit/Makefile.am: Fixed !ENABLE_VERIFER build.
	[f7b45962f8d0]

2007-01-30  twisti  <twisti>

	* src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/emit.c, src/vm/jit/arm/md-
	abi.c, src/vm/jit/arm/md-abi.h, src/vm/jit/arm/md.c,
	src/vm/jit/arm/patcher.c:
	* src/vm/jit/arm/emit.c (mm/memory.h): Added. (vm/global.h):
	Likewise. (emit_patcher_stubs): Align stack to 8-byte.
	(emit_verbosecall_exit): Smaller optimizations.

	* src/vm/jit/arm/md-abi.h (config.h): Added. (REG_A1_A2_PACKED):
	Defined.

	* src/vm/jit/arm/md.c: Fixed includes. (md_codegen_get_pv_from_pc):
	Use vm_abort.

	* src/vm/jit/arm/codegen.c: Fixed includes. (codegen): Align stack
	to 8-byte. (createnativestub): Likewise.

	* src/vm/jit/arm/codegen.h (M_ADD_IMM_EXT_MUL4): Added do-while.
	(M_SUB_IMM_EXT_MUL4): Likewise.

	* src/vm/jit/arm/patcher.c: Fixed includes. (patcher_wrapper): Align
	stack to 8-byte.
	* src/vm/jit/arm/asmpart.S (asm_patcher_wrapper): Likewise.

	* src/vm/jit/arm/md-abi.c: Fixed includes.
	[0a30c3d70337]

	* src/vm/signal.c, src/vm/vm.c:
	* src/vm/signal.c (signal_init): Disable signal-thread handling
	temporarily.
	* src/vm/vm.c (vm_create): Likewise.
	[7f75f5c44e54]

2007-01-29  twisti  <twisti>

	* src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/java_lang_Class.c, src/vm/properties.c,
	src/vm/string.c, src/vmcore/class.c, src/vmcore/resolve.c,
	src/vmcore/utf8.c, src/vmcore/utf8.h:
	* src/vm/string.c (native/jni.h): Added.
	* src/vm/properties.c (native/jni.h): Likewise.

	* src/native/vm/cldc1.1/java_lang_Runtime.c: Includes fixed for
	cacaoh-changes.
	* src/native/vm/cldc1.1/java_lang_Class.c: Likewise.

	* src/native/vm/java_lang_Class.c [ENABLE_JAVAME_CLDC1_1]
	(native/include/java_lang_String.h): Added. (forName): #ifdef'd
	loader variable.

	* src/vmcore/class.c (class_resolveclassmethod): Removed Java ME
	exception handling, we do that in the exception function itself.
	(class_resolveinterfacemethod): Likewise.
	* src/vmcore/resolve.c (resolve_method_invokespecial): Likewise.

	* src/vmcore/utf8.c [ENABLE_JAVASE]
	(utf_java_lang_AbstractMethodError, utf_java_lang_NoSuchFieldError)
	(utf_java_lang_NoSuchMethodError): Removed ifdef.
	* src/vmcore/utf8.h: Likewise.
	[882a47a8b48a]

2007-01-29  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/patcher.c:
	* src/vm/jit/sparc64/codegen.h: Fixed double register number packing
	and fp compare instruction macros.
	* src/vm/jit/sparc64/codegen.c: Fixed fp compares. Fixed INT2CHAR.
	Fixed fp argument saving in createnativestub().

	* src/vm/jit/sparc64/patcher.c: Implemented get/put field patcher.

	* src/vm/jit/sparc64/md.c: Removed printf.
	[402167948fee]

2007-01-29  twisti  <twisti>

	* src/vm/jit/i386/codegen.c, src/vm/jit/i386/emit.c, src/vm/jit/i386
	/md-abi.c, src/vm/jit/i386/md.c, src/vm/jit/i386/patcher.c:
	* src/vm/jit/i386/emit.c: Includes fixed for cacaoh-changes.
	* src/vm/jit/i386/md.c: Likewise.
	* src/vm/jit/i386/codegen.c: Likewise.
	* src/vm/jit/i386/patcher.c: Likewise.
	* src/vm/jit/i386/md-abi.c: Likewise.
	[0b43a2caf86d]

	* src/vm/jit/i386/asmpart.S:
	* src/vm/jit/i386/asmpart.S (asm_compare_and_swap): New function.
	(asm_memory_barrier): Likewise.
	[4baa01211589]

	* src/vm/jit/alpha/asmpart.S:
	* src/vm/jit/alpha/asmpart.S (asm_compare_and_swap): Changed
	comment.
	[edf7afa4a623]

	* src/vm/jit/mips/codegen.c, src/vm/jit/mips/disass.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/patcher.c:
	* src/vm/jit/mips/emit.c: Include fixes for cacaoh-changes.
	* src/vm/jit/mips/md.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise
	* src/vm/jit/mips/linux/md-os.c: Likewise
	* src/vm/jit/mips/disass.c: Likewise
	* src/vm/jit/mips/patcher.c: Likewise
	* src/vm/jit/mips/md-abi.c: Likewise
	[5075d26aabb8]

	* src/vm/jit/alpha/codegen.c, src/vm/jit/alpha/emit.c,
	src/vm/jit/alpha/linux/md-os.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/alpha/patcher.c:
	* src/vm/jit/alpha/emit.c: Fixed includes for cacaoh-changes.
	* src/vm/jit/alpha/codegen.c: Likewise.
	* src/vm/jit/alpha/linux/md-os.c: Likewise.
	* src/vm/jit/alpha/patcher.c: Likewise.
	* src/vm/jit/alpha/md-abi.c: Likewise.
	[65984e7b13d1]

	* src/native/include/.cvsignore:
	* src/native/include/.cvsignore: Ignore all *.h files.
	[afcbe578518b]

	* src/vm/jit/x86_64/md.c:
	* src/vm/jit/x86_64/md.c: Fixed includes for cacaoh-changes.
	[900dc7622fe5]

	* src/vm/jit/x86_64/codegen.c, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md-abi.c, src/vm/jit/x86_64/patcher.c:
	* src/vm/jit/x86_64/emit.c: Fixed includes for cacaoh-changes.
	* src/vm/jit/x86_64/codegen.c: Likewise.
	* src/vm/jit/x86_64/patcher.c: Likewise.
	* src/vm/jit/x86_64/md-abi.c: Likewise.
	[16d9eafe63cc]

	* src/vm/jit/emit-common.c, src/vm/jit/jit.c, src/vmcore/stackmap.c:
	* src/vmcore/stackmap.c [ENABLE_STATISTICS] (vmcore/statistics.h):
	Removed ifdef.
	* src/vm/jit/jit.c: Likewise.
	* src/vm/jit/emit-common.c: Likewise.
	[d184eba61575]

	* configure.ac, src/Makefile.am, src/cacao/Makefile.am,
	src/cacaoh/Makefile.am, src/cacaoh/cacaoh.c, src/cacaoh/dummy.c,
	src/cacaoh/headers.c, src/cacaoh/headers.h, src/mm/Makefile.am,
	src/mm/boehm.c, src/mm/gc-common.h, src/mm/memory.c,
	src/native/include/Makefile.am,
	src/native/include/java_lang_Class.h,
	src/native/include/java_lang_ClassLoader.h,
	src/native/include/java_lang_Cloneable.h,
	src/native/include/java_lang_Object.h,
	src/native/include/java_lang_String.h,
	src/native/include/java_lang_Thread.h,
	src/native/include/java_lang_ThreadGroup.h,
	src/native/include/java_lang_Throwable.h,
	src/native/include/java_lang_VMThread.h,
	src/native/include/java_lang_VMThrowable.h,
	src/native/include/java_util_Properties.h, src/native/jni.c,
	src/native/jni.h, src/native/native.c, src/native/native.h,
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c,
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c, src/native/vm/
	gnu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c,
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c,
	src/native/vm/gnu/java_lang_VMClass.c,
	src/native/vm/gnu/java_lang_VMClassLoader.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMThrowable.c,
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c,
	src/native/vm/gnu/java_lang_reflect_Constructor.c,
	src/native/vm/gnu/java_lang_reflect_Field.c,
	src/native/vm/gnu/java_lang_reflect_Method.c,
	src/native/vm/gnu/java_security_VMAccessController.c,
	src/native/vm/java_lang_Class.c, src/native/vm/java_lang_Object.c,
	src/native/vm/java_lang_Thread.c, src/threads/native/lock.c,
	src/threads/native/threads.c, src/threads/native/threads.h,
	src/threads/none/lock.h, src/threads/none/threads.h,
	src/toolbox/Makefile.am, src/toolbox/avl.c, src/toolbox/hashtable.c,
	src/toolbox/hashtable.h, src/toolbox/list.c, src/toolbox/logging.c,
	src/toolbox/logging.h, src/vm/Makefile.am, src/vm/access.c,
	src/vm/access.h, src/vm/annotation.c, src/vm/annotation.h,
	src/vm/builtin.c, src/vm/builtin.h, src/vm/class.c, src/vm/class.h,
	src/vm/classcache.c, src/vm/classcache.h, src/vm/descriptor.c,
	src/vm/descriptor.h, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/field.c, src/vm/field.h, src/vm/finalizer.c,
	src/vm/hashtable.c, src/vm/hashtable.h, src/vm/initialize.c,
	src/vm/initialize.h, src/vm/jit/abi.h,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/asmpart.h,
	src/vm/jit/code.c, src/vm/jit/code.h, src/vm/jit/codegen-common.c,
	src/vm/jit/codegen-common.h, src/vm/jit/dseg.c, src/vm/jit/dseg.h,
	src/vm/jit/emit-common.c, src/vm/jit/jit.c, src/vm/jit/jit.h,
	src/vm/jit/loop/graph.h, src/vm/jit/loop/loop.h,
	src/vm/jit/optimizing/ifconv.c, src/vm/jit/optimizing/ifconv.h,
	src/vm/jit/optimizing/profile.c, src/vm/jit/optimizing/recompile.c,
	src/vm/jit/parse.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/linux/md-abi.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc/patcher.c,
	src/vm/jit/show.c, src/vm/jit/stack.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/verify/typecheck-stackbased.c, src/vm/jit/verify
	/typecheck-typeinferer.c, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typeinfo.c, src/vm/jit/verify/typeinfo.h,
	src/vm/linker.c, src/vm/linker.h, src/vm/loader.c, src/vm/loader.h,
	src/vm/method.c, src/vm/method.h, src/vm/options.c,
	src/vm/options.h, src/vm/properties.c, src/vm/properties.h,
	src/vm/references.h, src/vm/resolve.c, src/vm/resolve.h, src/vm/rt-
	timing.c, src/vm/rt-timing.h, src/vm/signal.c, src/vm/signallocal.h,
	src/vm/stackmap.c, src/vm/stackmap.h, src/vm/statistics.c,
	src/vm/statistics.h, src/vm/string.c, src/vm/stringlocal.h,
	src/vm/suck.c, src/vm/suck.h, src/vm/utf8.c, src/vm/utf8.h,
	src/vm/vm.c, src/vm/zip.c, src/vm/zip.h, src/vmcore/.cvsignore,
	src/vmcore/Makefile.am, src/vmcore/annotation.c,
	src/vmcore/annotation.h, src/vmcore/class.c, src/vmcore/class.h,
	src/vmcore/classcache.c, src/vmcore/classcache.h,
	src/vmcore/descriptor.c, src/vmcore/descriptor.h,
	src/vmcore/field.c, src/vmcore/field.h, src/vmcore/linker.c,
	src/vmcore/linker.h, src/vmcore/loader.c, src/vmcore/loader.h,
	src/vmcore/method.c, src/vmcore/method.h, src/vmcore/options.c,
	src/vmcore/options.h, src/vmcore/references.h, src/vmcore/resolve.c,
	src/vmcore/resolve.h, src/vmcore/rt-timing.c, src/vmcore/rt-
	timing.h, src/vmcore/stackmap.c, src/vmcore/stackmap.h,
	src/vmcore/statistics.c, src/vmcore/statistics.h, src/vmcore/suck.c,
	src/vmcore/suck.h, src/vmcore/utf8.c, src/vmcore/utf8.h,
	src/vmcore/zip.c, src/vmcore/zip.h:
	* This is a rather huge commit, which changes the build order of
	various parts to be able to bootstrap cacaoh without any
	dependencies on a generated header file. I include the file list
	from SVN, so we can see what happened to the files.

	Here we go (D-files were mostly moved to src/vmcore):

	D src/vm/hashtable.h D src/vm/options.h M
	src/vm/properties.h D src/vm/zip.c D src/vm/class.c D
	src/vm/suck.c D src/vm/loader.c M src/vm/builtin.c M
	src/vm/string.c D src/vm/zip.h D src/vm/class.h D src/vm
	/rt-timing.c D src/vm/suck.h D src/vm/annotation.c M
	src/vm/builtin.h D src/vm/loader.h D src/vm/descriptor.c D
	src/vm/annotation.h D src/vm/rt-timing.h D src/vm/resolve.c D
	src/vm/method.c D src/vm/descriptor.h M src/vm/finalizer.c D
	src/vm/resolve.h D src/vm/method.h D src/vm/references.h D
	src/vm/classcache.c D src/vm/statistics.c D
	src/vm/classcache.h D src/vm/statistics.h M
	src/vm/initialize.c M src/vm/access.c D src/vm/stackmap.c M
	src/vm/jit/powerpc/linux/md-abi.c M src/vm/jit/powerpc/emit.c M
	src/vm/jit/powerpc/md.c M src/vm/jit/powerpc/codegen.c M
	src/vm/jit/powerpc/patcher.c M src/vm/jit/codegen-common.h M
	src/vm/jit/abi.h M src/vm/jit/stack.c M
	src/vm/jit/optimizing/profile.c M
	src/vm/jit/optimizing/recompile.c M
	src/vm/jit/optimizing/ifconv.c M src/vm/jit/optimizing/ifconv.h M
	src/vm/jit/code.c M src/vm/jit/tools/genoffsets.c M
	src/vm/jit/code.h M src/vm/jit/show.c M src/vm/jit/dseg.c M
	src/vm/jit/verify/typeinfo.h M src/vm/jit/verify/typecheck-
	typeinferer.c M src/vm/jit/verify/typecheck.c M
	src/vm/jit/verify/typecheck-stackbased.c M
	src/vm/jit/verify/typeinfo.c M src/vm/jit/dseg.h M
	src/vm/jit/loop/loop.h M src/vm/jit/loop/graph.h M
	src/vm/jit/allocator/simplereg.c M src/vm/jit/parse.c M
	src/vm/jit/asmpart.h M src/vm/jit/stacktrace.c M src/vm/jit
	/emit-common.c M src/vm/jit/jit.c M src/vm/jit/stacktrace.h M
	src/vm/jit/codegen-common.c M src/vm/jit/jit.h M
	src/vm/initialize.h M src/vm/access.h D src/vm/stackmap.h M
	src/vm/signal.c M src/vm/exceptions.c M src/vm/vm.c D
	src/vm/field.c D src/vm/linker.c M src/vm/exceptions.h M
	src/vm/stringlocal.h D src/vm/utf8.c D src/vm/field.h M
	src/vm/Makefile.am D src/vm/linker.h D src/vm/hashtable.c D
	src/vm/options.c D src/vm/utf8.h M src/vm/properties.c M
	src/vm/signallocal.h M src/cacao/Makefile.am M
	src/native/jni.c M src/native/vm/java_lang_Class.c M
	src/native/vm/gnu/gnu_java_lang_management_VMThreadMXBeanImpl.c M
	src/native/vm/gnu/gnu_java_lang_management_VMMemoryMXBeanImpl.c M
	src/native/vm/gnu/java_security_VMAccessController.c M
	src/native/vm/gnu/java_lang_VMClassLoader.c M
	src/native/vm/gnu/java_lang_management_VMManagementFactory.c M
	src/native/vm/gnu/gnu_java_lang_management_VMRuntimeMXBeanImpl.c M
	src/native/vm/gnu/java_lang_VMClass.c M
	src/native/vm/gnu/java_lang_VMThread.c M
	src/native/vm/gnu/gnu_classpath_VMSystemProperties.c M
	src/native/vm/gnu/java_lang_reflect_Method.c M
	src/native/vm/gnu/java_lang_VMRuntime.c M
	src/native/vm/gnu/java_lang_reflect_Field.c M
	src/native/vm/gnu/gnu_classpath_VMStackWalker.c M src/native/vm/g
	nu/gnu_java_lang_management_VMClassLoadingMXBeanImpl.c M
	src/native/vm/gnu/java_lang_reflect_Constructor.c M
	src/native/vm/gnu/java_lang_VMThrowable.c M
	src/native/vm/java_lang_Object.c M
	src/native/vm/java_lang_Thread.c D
	src/native/include/java_lang_Thread.h D
	src/native/include/java_lang_Throwable.h D
	src/native/include/java_util_Properties.h D
	src/native/include/java_lang_VMThread.h D
	src/native/include/java_lang_VMThrowable.h D
	src/native/include/java_lang_ClassLoader.h M
	src/native/include/Makefile.am D
	src/native/include/java_lang_Cloneable.h D
	src/native/include/java_lang_ThreadGroup.h D
	src/native/include/java_lang_Class.h D
	src/native/include/java_lang_Object.h D
	src/native/include/java_lang_String.h M src/native/jni.h M
	src/native/native.c M src/native/native.h A
	src/toolbox/hashtable.h M src/toolbox/list.c M
	src/toolbox/avl.c M src/toolbox/logging.c M
	src/toolbox/Makefile.am M src/toolbox/logging.h A
	src/toolbox/hashtable.c M src/mm/gc-common.h M
	src/mm/Makefile.am M src/mm/memory.c M src/mm/boehm.c M
	src/Makefile.am M src/threads/none/threads.h M
	src/threads/none/lock.h M src/threads/native/threads.h M
	src/threads/native/lock.c M src/threads/native/threads.c AM
	src/vmcore A src/vmcore/options.h A src/vmcore/zip.c A
	src/vmcore/suck.c A src/vmcore/class.c A src/vmcore/loader.c A
	src/vmcore/zip.h A src/vmcore/annotation.c A src/vmcore/suck.h
	A src/vmcore/class.h A src/vmcore/rt-timing.c A
	src/vmcore/loader.h A src/vmcore/descriptor.c A
	src/vmcore/resolve.c A src/vmcore/annotation.h A src/vmcore
	/rt-timing.h A src/vmcore/method.c A src/vmcore/descriptor.h A
	src/vmcore/resolve.h A src/vmcore/method.h A
	src/vmcore/references.h A src/vmcore/classcache.c A
	src/vmcore/statistics.c A src/vmcore/.cvsignore A
	src/vmcore/classcache.h A src/vmcore/statistics.h A
	src/vmcore/stackmap.c A src/vmcore/stackmap.h A
	src/vmcore/field.c A src/vmcore/linker.c A src/vmcore/utf8.c A
	src/vmcore/field.h A src/vmcore/Makefile.am A
	src/vmcore/linker.h A src/vmcore/options.c A src/vmcore/utf8.h
	M src/cacaoh/cacaoh.c M src/cacaoh/headers.h M
	src/cacaoh/Makefile.am M src/cacaoh/headers.c A
	src/cacaoh/dummy.c M configure.ac
	[0fc2b6dcc07b]

	* src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c [ENABLE_SOFTFLOAT] (emit_load): Implemented.
	(emit_store): Changed implementation to be more clear. (emit_copy):
	Likewise.
	[fe8afee04ad9]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (codegen): ICMD_DASTORE: bugfix for
	softfloat.
	[91314a82783b]

2007-01-28  twisti  <twisti>

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (createcompilerstub): Don't generate a
	codeinfo.
	[2fde0f1e0334]

	* src/vm/jit/arm/codegen.c:
	* src/vm/jit/arm/codegen.c (createcompilerstub): Don't generate a
	codeinfo.
	[e3b34887588a]

2007-01-27  twisti  <twisti>

	* configure.ac, m4/soft.m4, src/vm/builtin.c, src/vm/builtintable.inc,
	src/vm/jit/alpha/arch.h, src/vm/jit/arm/arch.h,
	src/vm/jit/i386/arch.h, src/vm/jit/m68k/arch.h,
	src/vm/jit/mips/arch.h, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/patcher.c, src/vm/jit/parisc/arch.h,
	src/vm/jit/powerpc/arch.h, src/vm/jit/powerpc64/arch.h,
	src/vm/jit/s390/arch.h, src/vm/jit/sparc64/arch.h,
	src/vm/jit/x86_64/arch.h:
	* configure.ac: Use AC_CHECK_SOFTFLOAT, AC_CHECK_SOFT_FLOAT_CMP and
	AC_CHECK_SOFT_DOUBLE_CMP.
	* m4/soft.m4: New file.

	* src/vm/builtin.c [!SUPPORT_FLOAT_CMP] (builtin_fcmpl): Added
	conditional. [!SUPPORT_DOUBLE_CMP] (builtin_dcmpl): Likewise.

	* src/vm/builtintable.inc (builtintable_automatic):
	[!SUPPORT_FLOAT_CMP] (BUILTIN_fcmpl): Added. [!SUPPORT_DOUBLE_CMP]
	(BUILTIN_dcmpl): Likewise. (builtintable_function): [__MIPS__ &&
	SIZEOF_VOID_P != 4] (BUILTIN_arraycopy): Added.

	* src/vm/jit/mips/codegen.c (codegen): Added SUPPORT_FLOAT_CMP for
	ICMD_FCMPx, and SUPPORT_DOUBLE_CMP for ICMD_DCMPx.

	* src/vm/jit/arm/arch.h (SUPPORT_FLOAT_CMP, SUPPORT_DOUBLE_CMP):
	Added.
	* src/vm/jit/powerpc/arch.h: Likewise.
	* src/vm/jit/sparc64/arch.h: Likewise.
	* src/vm/jit/alpha/arch.h: Likewise.
	* src/vm/jit/s390/arch.h: Likewise.
	* src/vm/jit/mips/arch.h: Likewise.
	* src/vm/jit/parisc/arch.h: Likewise.
	* src/vm/jit/m68k/arch.h: Likewise.
	* src/vm/jit/i386/arch.h: Likewise.
	* src/vm/jit/powerpc64/arch.h: Likewise.
	* src/vm/jit/x86_64/arch.h: Likewise.

	* src/vm/jit/mips/patcher.c (vm/jit/md.h): Added.
	[0030ae40a5f0]

	* src/vm/loader.c:
	* src/vm/loader.c (load_newly_created_array): c->interfacescount was
	always set to 0, fixed.
	[c583dcb762a3]

2007-01-27  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/linux/md-os.c,
	src/vm/jit/sparc64/md.c:
	* src/vm/jit/sparc64/emit.c: Moved exception check generation to
	emit functions.
	* src/vm/jit/sparc64/codegen.h: Likewise.
	* src/vm/jit/sparc64/codegen.c: Likewise.

	* src/vm/jit/sparc64/md.c: Added SPARC specific functions for
	getting JIT information from the stack frame.

	* src/vm/jit/sparc64/linux/md-os.c: Fixed icache flushing when start
	address is not doubleword aligned.
	[2bd4d44bd3c0]

2007-01-23  twisti  <twisti>

	* src/vm/jit/mips/emit.c:
	* src/vm/jit/mips/emit.c (emit_patcher_stubs): Use
	dseg_add_functionptr instead of dseg_add_address.
	[0d1711cc34aa]

2007-01-22  twisti  <twisti>

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c:
	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c (postInit):
	Added missing file://.
	[cd2249587a11]

	* src/cacao/cacao.c:
	* src/cacao/cacao.c (main): Fixed typo.
	[543a7a5860cb]

	* src/lib/Makefile.am,
	src/lib/vm/reference/gnu/classpath/VMSystemProperties.java,
	src/native/include/Makefile.am:
	* src/lib/vm/reference/gnu/classpath/VMSystemProperties.java: New
	file.

	* src/lib/Makefile.am (VM_JAVA_FILES): Added
	gnu/classpath/VMSystemProperties.java. (VM_CLASS_FILES): Likewise.

	* src/native/include/Makefile.am (VM_ZIP): Added. (DO_HEADER_FILES):
	Depend on VM_ZIP.
	[cd1a96682531]

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c,
	src/vm/properties.c, src/vm/properties.h:
	* src/vm/properties.c (properties_get): Search list forward, as we
	don't have duplicate entries anymore. (properties_system_add): New
	function.
	* src/vm/properties.h (properties_system_add): Added.

	* src/native/vm/gnu/gnu_classpath_VMSystemProperties.c (postInit):
	New function.
	[67978ad263eb]

	* src/vm/jit/mips/md.c:
	* src/vm/jit/mips/md.c (md_get_method_patch_address): Fixed compiler
	warning.
	[3091559d5e74]

	* src/cacao/cacao.c:
	* src/cacao/cacao.c (main): Fixed compiler warning.
	[d5e2cb977df7]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/patcher.c:
	* src/vm/jit/arm/codegen.c (vm/jit/md.h): Added.
	* src/vm/jit/arm/patcher.c (vm/jit/md.h): Likewise.
	[0b8f6c2eab9d]

2007-01-22  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h:
	* src/vm/jit/sparc64/codegen.h: Fixed big disp handling.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	[a635998681c3]

2007-01-22  twisti  <twisti>

	* src/vm/jit/Makefile.am, src/vm/jit/codegen-common.c,
	src/vm/jit/jit.c, src/vm/jit/jit.h, src/vm/jit/md.h, src/vm/vm.c:
	* src/vm/jit/jit.h (md_init, md_get_method_patch_address,)
	(md_cacheflush, md_icacheflush, md_dcacheflush, intrp_md_init):
	Removed.

	* src/vm/jit/md.h: New file.
	* src/vm/jit/Makefile.am (noinst_HEADERS): Added md.h.

	* src/vm/jit/jit.c (vm/jit/md.h): Added.
	* src/vm/jit/codegen-common.c (vm/jit/md.h): Likewise.
	* src/vm/vm.c (vm/jit/md.h): Likewise.
	[d390734ef98c]

2007-01-19  edwin  <edwin>

	* configure.ac, src/cacaoh/headers.c, src/vm/exceptions.c,
	src/vm/jit/inline/inline.c, src/vm/jit/jit.c, src/vm/linker.c,
	src/vm/method.c, src/vm/options.c, src/vm/options.h, src/vm/vm.c:
	* src/vm/options.h, src/vm/method.c, src/vm/jit/inline/inline.c,
	src/vm/jit/jit.c, src/vm/vm.c, src/vm/linker.c, src/vm/options.c,
	src/cacaoh/headers.c: Cleaned up inlining options.

	* src/vm/exceptions.c: Removed a left-over use of "useinlining".

	* configure.ac: New configure flag --enable-inlining-debug.
	[566f6e517a77]

2007-01-18  twisti  <twisti>

	* src/vm/jit/arm/asmpart.S, src/vm/jit/arm/md-asm.h:
	* src/vm/jit/arm/md-asm.h: Renamed argument defines to start with 0.
	* src/vm/jit/arm/asmpart.S: Likewise.
	[2b341e5bb601]

	* src/vm/vm.c:
	* src/vm/vm.c (usage): Removed CACAO options. (XXusage): New
	function. (vm_create): Handle OPT_XX.
	[28b7b97ae806]

	* src/vm/jit/powerpc/asmpart.S:
	* src/vm/jit/powerpc/asmpart.S (asm_compare_and_swap): New function.
	(asm_memory_barrier): Likewise.
	[50cb34084654]

	* src/vm/jit/mips/asmpart.S, src/vm/jit/mips/md-asm.h:
	* src/vm/jit/mips/md-asm.h (RESTORE_ARGUMENT_REGISTERS)
	(RESTORE_ARGUMENT_REGISTERS, SAVE_TEMPORARY_REGISTERS)
	(RESTORE_TEMPORARY_REGISTERS): Added missing float registers.

	* src/vm/jit/mips/asmpart.S (asm_patcher_wrapper): Changed stack
	size for float registers.
	[a5ec1ec75994]

2007-01-17  tbfg  <tbfg>

	* src/vm/jit/powerpc64/codegen.c, src/vm/jit/powerpc64/emit.c,
	src/vm/jit/powerpc64/linux/md-abi.h:
	* src/vm/jit/powerpc64/linux/md-abi.h (REG_ZERO): Added.

	* src/vm/jit/powerpc64/emit.c (emit_replacement_stubs):
	Conditionally compiled on ENABLE_REPLACEMENT.

	* src/vm/jit/powerpc64/codegen.c (codegen_emit): Replaced
	emit_replacement_stubs with REPLACEMENT_EMIT_STUBS.
	[e6ee875d25a7]

2007-01-17  twisti  <twisti>

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (md-abi.h): Added.
	[4bec4df1aab1]

	* src/vm/jit/codegen-common.c:
	* src/vm/jit/codegen-common.c (codegen_reset): #ifdef replacement
	stuff.
	[1ecfc6ea6c0e]

	* configure.ac, src/cacaoh/headers.c, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/asmpart.h, src/vm/jit/disass-
	common.c, src/vm/jit/disass.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/x86_64/asmpart.S:
	Merged with trunk rev7219.

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/disass-common.c,
	src/vm/jit/s390, src/vm/jit/s390/emit.c, src/vm/jit/s390/md-abi.h,
	src/vm/jit/s390/md.c, src/vm/jit/s390/emit.h,
	src/vm/jit/s390/codegen.c, src/vm/jit/s390/machine-instr.h,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/arch.h, src/vm/jit/s390
	/md-asm.h, src/vm/jit/s390/disass.c, src/vm/jit/s390/patcher.c,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/Makefile.am,
	src/vm/jit/s390/md-abi.c, src/vm/jit/s390/.cvsignore,
	src/vm/jit/disass.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/asmpart.h, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/Makefile.am, src/cacaoh/headers.c, configure.ac: Merged.
	[15381fe4a67f]

2007-01-16  pm  <pm>

	* configure.ac, src/vm/jit/Makefile.am, src/vm/jit/disass-common.c,
	src/vm/jit/disass.h, src/vm/jit/s390/.cvsignore,
	src/vm/jit/s390/Makefile.am, src/vm/jit/s390/arch.h,
	src/vm/jit/s390/asmpart.S, src/vm/jit/s390/codegen.c,
	src/vm/jit/s390/codegen.h, src/vm/jit/s390/disass.c,
	src/vm/jit/s390/emit.c, src/vm/jit/s390/emit.h, src/vm/jit/s390
	/machine-instr.h, src/vm/jit/s390/md-abi.c, src/vm/jit/s390/md-
	abi.h, src/vm/jit/s390/md-asm.h, src/vm/jit/s390/md.c,
	src/vm/jit/s390/patcher.c:
	Initial import of s390 codegen, codebase is copyed from x86_64.
	[c5d44fda5516]

2007-01-16  twisti  <twisti>

	* src/cacaoh/headers.c:
	* src/cacaoh/headers.c (asm_compare_and_swap): Added.
	(asm_memory_barrier): Likewise.
	[ced478ee11d0]

	* src/vm/jit/x86_64/asmpart.S:
	* src/vm/jit/x86_64/asmpart.S (asm_patcher_wrapper): Removed unused
	sizestackframeinfo.
	[6aaa22b2b309]

	* src/vm/jit/alpha/asmpart.S, src/vm/jit/asmpart.h:
	* src/vm/jit/asmpart.h (asm_compare_and_swap): Added.
	(asm_memory_barrier): Likewise.

	* src/vm/jit/alpha/asmpart.S (asm_compare_and_swap): New function.
	(asm_memory_barrier): Likewise.
	[8a11edfc6695]

2007-01-15  twisti  <twisti>

	* src/vm/jit/powerpc64/codegen.c:
	* src/vm/jit/powerpc64/codegen.c (codegen): Ported replacement.
	[1b31182b8fdf]

	* configure.ac, src/cacaoh/cacaoh.c, src/cacaoh/headers.c,
	src/mm/boehm.c, src/mm/memory.c, src/native/native.c,
	src/vm/builtin.c, src/vm/classcache.c, src/vm/descriptor.c,
	src/vm/exceptions.c, src/vm/exceptions.h, src/vm/jit/Makefile.am,
	src/vm/jit/allocator/liveness.c, src/vm/jit/allocator/lsra.c,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/alpha/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/inline/inline.c,
	src/vm/jit/inline/inline_debug.inc, src/vm/jit/intrp/codegen.c,
	src/vm/jit/jit.c, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/linux/md-os.c,
	src/vm/jit/mips/md-abi.c, src/vm/jit/mips/md-abi.h,
	src/vm/jit/mips/md.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md-abi.h,
	src/vm/jit/sparc64/md.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/stack.c, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/verify/generate.pl, src/vm/jit/verify/typecheck-
	builtins.inc, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/codegen.c, src/vm/loader.c, src/vm/rt-timing.c,
	src/vm/rt-timing.h, src/vm/suck.c, src/vm/utf8.c, src/vm/vm.c:
	Merged with trunk rev7206.

	* src/vm/suck.c, src/vm/loader.c, src/vm/builtin.c, src/vm/rt-
	timing.c, src/vm/descriptor.c, src/vm/rt-timing.h,
	src/vm/classcache.c, src/vm/jit/powerpc/codegen.c, src/vm/jit/arm,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/md-abi.h, src/vm/jit/arm/md.c,
	src/vm/jit/arm/codegen.c, src/vm/jit/arm/machine-instr.h,
	src/vm/jit/arm/codegen.h src/vm/jit/arm/linux, src/vm/jit/arm/linux
	/md-os.c, src/vm/jit/arm/linux/Makefile.am,
	src/vm/jit/arm/linux/.cvsignore, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/md-asm.h, src/vm/jit/arm/disass.c,
	src/vm/jit/arm/patcher.c, src/vm/jit/arm/asmpart.S,
	src/vm/jit/arm/Makefile.am, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/.cvsignore, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/alpha/codegen.c, src/vm/jit/stack.c,
	src/vm/jit/tools/genoffsets.c, src/vm/jit/verify/typecheck-
	typeinferer-gen.inc, src/vm/jit/verify/typecheck-typeinferer.c,
	src/vm/jit/verify/generate.pl, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/mips/md-abi.h,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/mips/codegen.h,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/md-abi.c, src/vm/jit/inline/inline.c,
	src/vm/jit/inline/inline_debug.inc, src/vm/jit/allocator/lsra.c,
	src/vm/jit/allocator/simplereg.c, src/vm/jit/allocator/liveness.c,
	src/vm/jit/parisc/linux/Makefile.am, src/vm/jit/m68k,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/md.c,
	src/vm/jit/m68k/arch.h, src/vm/jit/m68k/codegen.c, src/vm/jit/m68k
	/machine-instr.h, src/vm/jit/m68k/patcher.c,
	src/vm/jit/m68k/uclinux, src/vm/jit/m68k/uclinux/md-abi.h,
	src/vm/jit/m68k/uclinux/md-os.c, src/vm/jit/m68k/uclinux/md-asm.h,
	src/vm/jit/m68k/uclinux/Makefile.am, src/vm/jit/m68k/uclinux/md-
	abi.c, src/vm/jit/m68k/asmpart.S, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/m68k/codegen.h, src/vm/jit/powerpc64/codegen.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/intrp/codegen.c,
	src/vm/jit/x86_64/codegen.c, src/vm/jit/jit.c,
	src/vm/jit/Makefile.am, src/vm/exceptions.c, src/vm/vm.c,
	src/vm/exceptions.h, src/vm/utf8.c, src/native/native.c,
	src/mm/memory.c, src/mm/boehm.c, src/cacaoh/cacaoh.c,
	src/cacaoh/headers.c, configure.ac: Merged.
	[263e061c0f8d]

2007-01-13  edwin  <edwin>

	* src/vm/jit/verify/typecheck-typeinferer.c:
	* src/vm/jit/verify/typecheck-typeinferer.c: Check basic types in
	debug mode.
	[bc6ac49a2576]

	* src/vm/jit/verify/generate.pl, src/vm/jit/verify/typecheck-
	typeinferer-gen.inc:
	* src/vm/jit/verify/generate.pl: Further changes for the type
	inferer.

	* src/vm/jit/verify/typecheck-typeinferer-gen.inc: Regenerated.
	[58d274e03303]

	* src/vm/rt-timing.c, src/vm/rt-timing.h:
	* src/vm/rt-timing.h: Fixed position of #include "config.h".
	(rt_timing_diff_usec): Export.

	* src/vm/rt-timing.c (rt_timing_diff_usec): Export.
	[17a57a236451]

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_compile_intern): Removed unused code and
	fixed instrumentation.
	[d32067dc461e]

	* src/vm/jit/inline/inline.c, src/vm/jit/inline/inline_debug.inc:
	* src/vm/jit/inline/inline.c: Better inlining decisions. Implemented
	knapsack heuristics. More statistics. Refactoring and fixes.

	* src/vm/jit/inline/inline_debug.inc: Fixed to make it compile.
	[2675b8465cc8]

2007-01-13  ajordan  <ajordan>

	* src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/codegen.h, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md-abi.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c:
	* src/vm/jit/sparc64/md-abi.h: The JIT stackframes now also includes
	the 6 parameter slots required when doing a ABI compliant C call.
	* src/vm/jit/sparc64/emit.c: Likewise.
	* src/vm/jit/sparc64/codegen.c: Likewise.
	* src/vm/jit/sparc64/patcher.c: Likewise.
	* src/vm/jit/sparc64/asmpart.S: Likewise.

	* src/vm/jit/sparc64/codegen.h: Added include.

	* src/vm/jit/sparc64/md.c: Added method, to get framepointer from
	saved register window. (for temporary fix in JIT stack walking)
	[8723d252337d]

2007-01-12  twisti  <twisti>

	* src/vm/jit/arm/linux/md-os.c:
	* src/vm/jit/arm/linux/md-os.c (md_signal_handler_sigsegv): Use
	codegen_get_pv_from_pc.
	[b14675eb67a8]

2007-01-11  twisti  <twisti>

	* src/vm/jit/mips/asmpart.S, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/codegen.h, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/linux/md-os.c, src/vm/jit/mips/md-abi.c,
	src/vm/jit/mips/md-abi.h:
	* src/vm/jit/mips/md-abi.h: Merged MIPS32 code.
	* src/vm/jit/mips/emit.c: Likewise.
	* src/vm/jit/mips/codegen.c: Likewise.
	* src/vm/jit/mips/codegen.h: Likewise.
	* src/vm/jit/mips/linux/md-os.c: Likewise.
	* src/vm/jit/mips/asmpart.S: Likewise.
	* src/vm/jit/mips/md-abi.c: Likewise.
	[87baf39e945a]

	* src/mm/memory.c, src/vm/jit/m68k/Makefile.am,
	src/vm/jit/m68k/arch.h, src/vm/jit/m68k/asmpart.S,
	src/vm/jit/m68k/codegen.c, src/vm/jit/m68k/codegen.h,
	src/vm/jit/m68k/emit.c, src/vm/jit/m68k/machine-instr.h,
	src/vm/jit/m68k/md.c, src/vm/jit/m68k/patcher.c,
	src/vm/jit/m68k/uclinux/Makefile.am, src/vm/jit/m68k/uclinux/md-
	abi.c, src/vm/jit/m68k/uclinux/md-abi.h, src/vm/jit/m68k/uclinux/md-
	asm.h, src/vm/jit/m68k/uclinux/md-os.c:
	* src/mm/memory.c (mem_realloc): Fixed compiler warning.
	[2758baba10d2]

	* src/vm/exceptions.c:
	* src/vm/exceptions.c (exceptions_throw_internalerror): Don't return
	a value. (exceptions_throw_outofmemoryerror): Likewise.
	[bd9464eafaa4]

	* src/vm/jit/arm/codegen.c, src/vm/jit/arm/codegen.h,
	src/vm/jit/arm/emit.c:
	* src/vm/jit/arm/emit.c (emit_exception_stubs): Renamed eref to er,
	use md_codegen_patch_branch.

	* src/vm/jit/arm/codegen.c (codegen): Use
	codegen_resolve_branchrefs, use exceptions_throw_internalerror.

	* src/vm/jit/arm/codegen.h (M_STACK_LOAD_FLT_TYPED): Removed.
	(M_STACK_STORE_FLT_TYPED): Likewise.
	[6b1b1aad7475]

	* configure.ac, src/vm/jit/Makefile.am, src/vm/jit/arm/.cvsignore,
	src/vm/jit/arm/Makefile.am, src/vm/jit/arm/arch.h,
	src/vm/jit/arm/asmpart.S, src/vm/jit/arm/codegen.c,
	src/vm/jit/arm/codegen.h, src/vm/jit/arm/disass.c,
	src/vm/jit/arm/emit.c, src/vm/jit/arm/linux/.cvsignore,
	src/vm/jit/arm/linux/Makefile.am, src/vm/jit/arm/linux/md-os.c,
	src/vm/jit/arm/machine-instr.h, src/vm/jit/arm/md-abi.c,
	src/vm/jit/arm/md-abi.h, src/vm/jit/arm/md-asm.h,
	src/vm/jit/arm/md.c, src/vm/jit/arm/patcher.c:
	* configure.ac [ENABLE_STATICVM] (AC_CHECK_LIB(dl)): Only perform
	the check if we want a static VM. (AC_CONFIG_FILES): Added
	src/vm/jit/arm/Makefile and src/vm/jit/arm/linux/Makefile.
	* src/vm/jit/Makefile.am (DIST_SUBDIRS): Added arm.
	[93c25d89aa7a]

2007-01-10  twisti  <twisti>

	* src/vm/builtin.c:
	* src/vm/builtin.c (builtin_newarray): Removed debug output.
	[ca1161ec4cc1]

	* src/cacaoh/cacaoh.c, src/cacaoh/headers.c, src/mm/boehm.c,
	src/mm/memory.c, src/native/native.c, src/vm/builtin.c,
	src/vm/classcache.c, src/vm/descriptor.c, src/vm/exceptions.c,
	src/vm/exceptions.h, src/vm/jit/allocator/liveness.c,
	src/vm/jit/allocator/lsra.c, src/vm/jit/allocator/simplereg.c,
	src/vm/jit/alpha/codegen.c, src/vm/jit/i386/codegen.c,
	src/vm/jit/intrp/codegen.c, src/vm/jit/mips/codegen.c,
	src/vm/jit/mips/md.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/powerpc64/codegen.c, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/stack.c,
	src/vm/jit/tools/genoffsets.c, src/vm/jit/verify/typecheck-
	builtins.inc, src/vm/jit/verify/typeinfo.c,
	src/vm/jit/x86_64/codegen.c, src/vm/loader.c, src/vm/suck.c,
	src/vm/utf8.c, src/vm/vm.c:
	* src/vm/suck.c (suck_add): Use vm_abort instead of
	throw_cacao_exception_exit. (suck_float, suck_double): Use
	exceptions_throw_internalerror.

	* src/vm/loader.c (load_class_bootstrap): Use vm_abort instead of
	throw_cacao_exception_exit.
	* src/vm/jit/sparc64/emit.c (emit_patcher_stubs): Likewise.
	* src/vm/jit/mips/md.c (md_patch_replacement_point): Likewise.
	* src/vm/vm.c (vm_create): Likewise.

	* src/vm/builtin.c (builtin_newarray): Use
	exceptions_throw_outofmemoryerror.

	* src/vm/descriptor.c (descriptor_pool_lookup_classref): Use
	exceptions_throw_internalerror.
	* src/vm/classcache.c (classcache_store_unique): Likewise.
	* src/vm/jit/powerpc/codegen.c (codegen): Likewise.
	* src/vm/jit/sparc64/codegen.c (codegen): Likewise.
	* src/vm/jit/alpha/codegen.c (codegen): Likewise.
	* src/vm/jit/mips/codegen.c (codegen): Likewise.
	* src/vm/jit/i386/codegen.c (codegen): Likewise.
	* src/vm/jit/powerpc64/codegen.c (codegen): Likewise.
	* src/vm/jit/intrp/codegen.c (codegen): Likewise.
	* src/vm/jit/x86_64/codegen.c (codegen): Likewise.
	* src/vm/jit/stack.c (stack_reanalyse_block): Likewise.
	(stack_analyse): Likewise.
	* src/vm/jit/verify/typeinfo.c (typeinfos_init_from_methoddesc):
	Likewise. (typeinfo_init_component): Likewise.
	* src/vm/jit/verify/typecheck-builtins.inc: Likewise.
	* src/vm/jit/allocator/lsra.c (lsra_scan_registers_canditates):
	Likewise.
	* src/vm/jit/allocator/simplereg.c (simplereg_allocate_temporaries):
	Likewise.
	* src/vm/jit/allocator/liveness.c
	(liveness_scan_registers_canditates): Likewise.

	* src/vm/exceptions.c (exceptions_throw_outofmemory_exit): Removed.
	(new_internalerror): Removed. (exceptions_throw_internalerror):
	Rewritten. (exceptions_throw_outofmemoryerror): Added.

	* src/vm/exceptions.h: Likewise.

	* src/vm/utf8.c (utf_get_number_of_u2s): Use
	exceptions_throw_internalerror instead of
	throw_cacao_exception_exit.

	* src/native/native.c (native_init): Changed debug output.

	* src/mm/memory.c (memory_checked_alloc): Use vm_abort instead of
	exceptions_throw_outofmemory_exit. (mem_realloc): Changed debug
	output.
	* src/mm/boehm.c (gc_out_of_memory): Use vm_abort and
	exceptions_throw_outofmemoryerror.

	* src/cacaoh/cacaoh.c (cacaoh_abort): Added. (main): Use
	cacaoh_abort.

	* src/cacaoh/headers.c (throw_cacao_exception_exit): Removed.
	(exceptions_throw_outofmemory_exit): Likewise. (new_internalerror):
	Renamed to exceptions_throw_internalerror.
	(exceptions_throw_outofmemoryerror): Added.

	* src/vm/jit/tools/genoffsets.c (main): Don't print
	sizestackframeinfo.
	[eaa7c4b43388]

	* src/vm/jit/parisc/linux/Makefile.am:
	* src/vm/jit/parisc/linux/Makefile.am (libmd_la_SOURCES): Commented.
	[b51cf064818d]

2007-01-08  twisti  <twisti>

	* configure.ac, src/cacao/cacao.c, src/mm/memory.c, src/vm/jit/emit-
	common.h, src/vm/jit/inline/inline.c, src/vm/jit/jit.c,
	src/vm/jit/mips/codegen.c, src/vm/jit/parisc/Makefile.am,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c, src/vm/jit/verify/Makefile.am,
	src/vm/jit/verify/generate.pl, src/vm/jit/verify/icmds.c,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/verify
	/typecheck-common.c, src/vm/jit/verify/typecheck-common.h,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/verify/typecheck-
	invoke.inc, src/vm/jit/verify/typecheck-stackbased-gen.inc,
	src/vm/jit/verify/typecheck-variablesbased-gen.inc,
	src/vm/jit/verify/typecheck.c, src/vm/method.c, src/vm/method.h,
	src/vm/vm.c:
	Merged with trunk rev6283.

	* src/vm/method.c, src/vm/method.h, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/patcher.c,
	src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-invoke.inc,
	src/vm/jit/verify/typecheck-common.c, src/vm/jit/verify/typecheck-
	typeinferer-gen.inc, src/vm/jit/verify/typecheck-multianewarray.inc,
	src/vm/jit/verify/typecheck-typeinferer.c, src/vm/jit/verify
	/typecheck-common.h, src/vm/jit/verify/typecheck-fields.inc,
	src/vm/jit/verify/typecheck-typeinferer.h, src/vm/jit/verify
	/typecheck-stackbased-gen.inc, src/vm/jit/verify/typecheck.c,
	src/vm/jit/verify/typecheck-variablesbased-gen.inc,
	src/vm/jit/verify/generate.pl, src/vm/jit/verify/Makefile.am,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/mips/codegen.c,
	src/vm/jit/inline/inline.c, src/vm/jit/parisc/linux/Makefile.am,
	src/vm/jit/parisc/Makefile.am, src/vm/jit/jit.c, src/vm/jit/emit-
	common.h, src/vm/vm.c, src/cacao/cacao.c, src/mm/memory.c,
	configure.ac: Merged.
	[8e237a4d5523]

	* configure.ac:
	* configure.ac: Added GPL header.
	[c3f5ae9d7eb2]

	* src/vm/vm.c:
	* src/vm/vm.c (vm_create): Fixed off-by-one bug.
	[f5e5e63ff2db]

2007-01-08  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c:
	* src/vm/jit/sparc64/codegen.c: Fixed argument passing via the stack
	(for JIT methods).
	[77115a8e9e95]

2007-01-07  ajordan  <ajordan>

	* src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/codegen.h,
	src/vm/jit/sparc64/linux/md-os.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/sparc64/patcher.c:
	* src/vm/jit/sparc64/codegen.c: Implemented INSTANCEOF and CHECKCAST
	ICMDs
	* src/vm/jit/sparc64/patcher.c: and their respective patchers.

	* src/vm/jit/sparc64/codegen.h: Added comparison instructions.

	* src/vm/jit/sparc64/linux/md-os.c: Implemented instruction cache
	flush for linux.
	* src/vm/jit/sparc64/md.c: Likewise.
	[2d476dbfb2c2]

2007-01-06  twisti  <twisti>

	* configure.ac:
	* configure.ac: Check for libdl.
	[6decb9c44f6f]

	* src/cacao/cacao.c:
	* src/cacao/cacao.c (main): Print function name in error output.
	[941930b2845d]

2007-01-06  edwin  <edwin>

	* src/vm/jit/inline/inline.c:
	* src/vm/jit/inline/inline.c: Many refactorings and comments.
	[a4fdb4ceef75]

2007-01-04  twisti  <twisti>

	* src/mm/memory.c:
	* src/mm/memory.c (mem_realloc): Use vm_abort.
	[e6f0eee2c2cf]

2007-01-03  edwin  <edwin>

	* src/vm/jit/verify/Makefile.am, src/vm/jit/verify/icmds.c,
	src/vm/jit/verify/typecheck-builtins.inc, src/vm/jit/verify
	/typecheck-common.c, src/vm/jit/verify/typecheck-common.h,
	src/vm/jit/verify/typecheck-fields.inc, src/vm/jit/verify/typecheck-
	invoke.inc, src/vm/jit/verify/typecheck-multianewarray.inc,
	src/vm/jit/verify/typecheck-stackbased-gen.inc, src/vm/jit/verify
	/typecheck-typeinferer-gen.inc, src/vm/jit/verify/typecheck-
	typeinferer.c, src/vm/jit/verify/typecheck-typeinferer.h,
	src/vm/jit/verify/typecheck-variablesbased-gen.inc,
	src/vm/jit/verify/typecheck.c:
	* src/vm/jit/verify/typecheck-typeinferer.c: New type inference
	pass.
	* src/vm/jit/verify/typecheck-typeinferer.h: Likewise.

	* src/vm/jit/verify/typecheck-common.c: Moved code from typecheck.c
	that can be shared between the variables-based verifier and the type
	inference pass to this file.
	* src/vm/jit/verify/typecheck-common.h: Likewise.

	* src/vm/jit/verify/typecheck-multianewarray.inc: Moved code for
	type checking/infering MULTIANEWARRAY to this file.

	* src/vm/jit/verify/icmds.c: Adapted for generating the type
	infererence pass.
	* src/vm/jit/verify/typecheck-invoke.inc: Likewise.
	* src/vm/jit/verify/typecheck-fields.inc: Likewise.
	* src/vm/jit/verify/typecheck.c: Likewise.
	* src/vm/jit/verify/Makefile.am: Likewise.
	* src/vm/jit/verify/typecheck-builtins.inc: Likewise.

	* src/vm/jit/verify/typecheck-typeinferer-gen.inc: Generated.

	* src/vm/jit/verify/typecheck-stackbased-gen.inc: Regenerated.
	* src/vm/jit/verify/typecheck-variablesbased-gen.inc: Regenerated.
	[6d875bc53835]

	* src/vm/jit/verify/icmds.c, src/vm/jit/verify/typecheck-stackbased-
	gen.inc, src/vm/jit/verify/typecheck-variablesbased-gen.inc:
	* src/vm/jit/verify/icmds.c: Added comments.

	* src/vm/jit/verify/typecheck-stackbased-gen.inc, src/vm/jit/verify
	/typecheck-variablesbased-gen.inc: Regenerated.
	[81dcffbbd1b3]

	* src/vm/method.c, src/vm/method.h:
	* src/vm/method.c, src/vm/method.h (method_count_implementations):
	New function.
	[58228f481c93]

	* src/vm/jit/verify/generate.pl:
	* src/vm/jit/verify/generate.pl: Added options --typeinferer and
	--debug. Prepared for generating the type inference pass.
	[07e04a8efbb4]

2007-01-02  twisti  <twisti>

	* configure.ac, src/vm/jit/parisc/Makefile.am,
	src/vm/jit/parisc/linux/Makefile.am:
	* configure.ac (AC_CONFIG_FILES): Added
	src/vm/jit/parisc/linux/Makefile.
	* src/vm/jit/parisc/Makefile.am (SUBDIRS): Set to $(OS_DIR).
	* src/vm/jit/parisc/linux/Makefile.am: New file.
	[d193cb85b31c]

2007-01-02  edwin  <edwin>

	* src/vm/jit/emit-common.h:
	* src/vm/jit/emit-common.h (emit_replacement_stubs): Only declare
	prototype if ENABLE_REPLACEMENT.
	[60115f167ec8]

	* src/vm/jit/mips/codegen.c:
	* src/vm/jit/mips/codegen.c (codegen): Use REPLACEMENT_ macros.
	[5e4385a84e1e]

2007-01-02  twisti  <twisti>

	* configure.ac, src/native/include/.cvsignore,
	src/native/include/Makefile.am,
	src/native/include/java_lang_VMObject.h, src/vm/jit/Makefile.am,
	src/vm/jit/alpha/asmpart.S, src/vm/jit/alpha/disass.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md-abi.c,
	src/vm/jit/alpha/md.c, src/vm/jit/asmpart.h, src/vm/jit/code.c,
	src/vm/jit/code.h, src/vm/jit/codegen-common.c, src/vm/jit/codegen-
	common.h, src/vm/jit/i386/asmpart.S, src/vm/jit/i386/codegen.c,
	src/vm/jit/i386/disass.c, src/vm/jit/i386/emit.c, src/vm/jit/i386
	/md-abi.c, src/vm/jit/i386/md.c, src/vm/jit/inline/inline.c,
	src/vm/jit/jit.h, src/vm/jit/mips/asmpart.S, src/vm/jit/mips/emit.c,
	src/vm/jit/mips/md.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/md.c,
	src/vm/jit/replace.h, src/vm/jit/show.c, src/vm/jit/sparc64/emit.c,
	src/vm/jit/sparc64/md.c, src/vm/jit/tools/genoffsets.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/disass.c,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/x86_64/md.c, tests/regression/jctest.java,
	tests/regression/jctest.output:
	Merged with trunk rev6266.

	* src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/md.c,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/codegen-common.h,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md.c,
	src/vm/jit/alpha/disass.c, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/md-abi.c, src/vm/jit/code.c,
	src/vm/jit/tools/genoffsets.c, src/vm/jit/code.h, src/vm/jit/show.c,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/md.c,
	src/vm/jit/mips/asmpart.S, src/vm/jit/inline/inline.c,
	src/vm/jit/powerpc64/md.c, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/i386/emit.c, src/vm/jit/i386/md.c,
	src/vm/jit/i386/codegen.c, src/vm/jit/i386/disass.c,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/md-abi.c,
	src/vm/jit/asmpart.h, src/vm/jit/x86_64/emit.c,
	src/vm/jit/x86_64/md.c, src/vm/jit/x86_64/disass.c,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/md-abi.c,
	src/vm/jit/replace.h, src/vm/jit/Makefile.am, src/vm/jit/codegen-
	common.c, src/vm/jit/jit.h, src/native/include,
	src/native/include/java_lang_VMObject.h,
	src/native/include/Makefile.am, src/native/include/.cvsignore,
	tests/regression/jctest.output, tests/regression/jctest.java,
	configure.ac: Merged.
	[191085398868]

2007-01-02  edwin  <edwin>

	* src/vm/jit/jit.c:
	* src/vm/jit/jit.c (jit_invalidate_code): Require
	ENABLE_REPLACEMENT.
	[66966741fd27]

2007-01-02  twisti  <twisti>

	* configure.ac, contrib/setenvinstalled.in, contrib/setenvsource.in,
	m4/ac_prog_javac.m4, src/Makefile.am, src/cacaoh/cacaoh.c,
	src/cacaoh/headers.c, src/fdlibm/Makefile.am, src/fdlibm/e_fmod.c,
	src/fdlibm/fdlibm.h, src/fdlibm/ieeefp.h, src/fdlibm/mprec.h,
	src/fdlibm/s_copysign.c, src/fdlibm/s_finite.c, src/fdlibm/w_fmod.c,
	src/lib/vm/reference/java/lang/VMThread.java, src/mm/memory.c,
	src/native/Makefile.am, src/native/include/.cvsignore,
	src/native/include/Makefile.am,
	src/native/include/java_lang_Thread.h,
	src/native/include/java_lang_VMThread.h, src/native/jni.c,
	src/native/native.c, src/native/native.h, src/native/vm/Makefile.am,
	src/threads/native/lock.c, src/threads/native/threads.c,
	src/threads/native/threads.h, src/vm/annotation.c, src/vm/class.c,
	src/vm/class.h, src/vm/exceptions.c, src/vm/exceptions.h,
	src/vm/finalizer.c, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/md.c, src/vm/jit/asmpart.h, src/vm/jit/codegen-
	common.c, src/vm/jit/i386/asmpart.S, src/vm/jit/i386/md.c,
	src/vm/jit/inline/inline.c, src/vm/jit/mips/md.c,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/powerpc/asmpart.S,
	src/vm/jit/powerpc/codegen.c, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc64/asmpart.S, src/vm/jit/powerpc64/md.c,
	src/vm/jit/sparc64/asmpart.S, src/vm/jit/sparc64/codegen.c,
	src/vm/jit/stacktrace.c, src/vm/jit/stacktrace.h,
	src/vm/jit/x86_64/asmpart.S, src/vm/jit/x86_64/md.c,
	src/vm/linker.c, src/vm/loader.c, src/vm/properties.c,
	src/vm/properties.h, src/vm/resolve.c, src/vm/resolve.h,
	src/vm/signal.c, src/vm/utf8.c, src/vm/utf8.h, src/vm/vm.c,
	tests/regression/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am:
	Merged with trunk rev6223.

	* m4/ac_prog_javac.m4, src/vm/properties.h, src/vm/class.c,
	src/vm/loader.c, src/vm/annotation.c, src/vm/class.h,
	src/vm/resolve.c, src/vm/finalizer.c, src/vm/resolve.h,
	src/vm/jit/powerpc/emit.c, src/vm/jit/powerpc/codegen.c,
	src/vm/jit/sparc64/codegen.c, src/vm/jit/sparc64/asmpart.S,
	src/vm/jit/optimizing/recompile.c, src/vm/jit/stacktrace.c,
	src/vm/jit/stacktrace.h, src/vm/jit/codegen-common.c,
	src/vm/signal.c, src/vm/exceptions.c, src/vm/vm.c, src/vm/linker.c,
	src/vm/exceptions.h, src/vm/utf8.c, src/vm/utf8.h,
	src/vm/properties.c, src/lib/vm/reference/java/lang/VMThread.java,
	src/native/jni.c, src/native/vm/java_lang_Thread.h,
	src/native/vm/cldc1.1,
	src/native/vm/cldc1.1/com_sun_cldchi_io_ConsoleOutputStream.c,
	src/native/vm/cldc1.1/java_lang_Runtime.c,
	src/native/vm/cldc1.1/java_lang_System.c,
	src/native/vm/cldc1.1/java_lang_Class.c,
	src/native/vm/cldc1.1/java_lang_Float.c,
	src/native/vm/cldc1.1/Makefile.am,
	src/native/vm/cldc1.1/java_lang_Object.c,
	src/native/vm/cldc1.1/java_lang_String.c,
	src/native/vm/cldc1.1/java_lang_Thread.c,
	src/native/vm/cldc1.1/java_lang_Throwable.c,
	src/native/vm/cldc1.1/java_lang_Math.c,
	src/native/vm/cldc1.1/.cvsignore,
	src/native/vm/cldc1.1/java_lang_Double.c,
	src/native/vm/java_lang_Class.c,
	src/native/vm/gnu/java_lang_VMThread.c,
	src/native/vm/gnu/java_lang_VMRuntime.c,
	src/native/vm/gnu/Makefile.am, src/native/vm/Makefile.am,
	src/native/vm/java_lang_Object.c, src/native/vm/java_lang_Thread.c,
	src/native/vm/java_lang_Class.h, src/native/vm/java_lang_Object.h,
	src/native/include, src/native/include/java_lang_Thread.h,
	src/native/include/java_lang_VMThread.h,
	src/native/include/Makefile.am, src/native/include/.cvsignore,
	src/native/native.c, src/native/Makefile.am, src/native/native.h,
	src/mm/memory.c, src/Makefile.am, src/threads/native/threads.h,
	src/threads/native/lock.c, src/threads/native/threads.c,
	src/fdlibm/k_cos.c, src/fdlibm/s_ceil.c, src/fdlibm/s_finite.c,
	src/fdlibm/ieeefp.h, src/fdlibm/fdlibm.h, src/fdlibm/s_floor.c,
	src/fdlibm/k_sin.c, src/fdlibm/s_tan.c, src/fdlibm/s_cos.c,
	src/fdlibm/w_fmod.c, src/fdlibm/mprec.h, src/fdlibm/s_sin.c,
	src/fdlibm/s_copysign.c, src/fdlibm/w_sqrt.c,
	src/fdlibm/e_rem_pio2.c, src/fdlibm/k_rem_pio2.c,
	src/fdlibm/Makefile.am, src/fdlibm/e_fmod.c, src/fdlibm/k_tan.c,
	src/fdlibm/e_sqrt.c, src/cacaoh/cacaoh.c, src/cacaoh/headers.c,
	contrib/setenvinstalled.in, contrib/setenvsource.in,
	tests/regression/jasmin/Makefile.am,
	tests/regression/native/Makefile.am,
	tests/regression/codepatching/Makefile.am,
	tests/regression/Makefile.am, configure.ac: Merged.
	[693ea6b397f5]

2007-01-02  edwin  <edwin>

	* configure.ac, src/vm/jit/Makefile.am, src/vm/jit/alpha/asmpart.S,
	src/vm/jit/alpha/emit.c, src/vm/jit/alpha/md.c,
	src/vm/jit/asmpart.h, src/vm/jit/code.c, src/vm/jit/code.h,
	src/vm/jit/codegen-common.c, src/vm/jit/codegen-common.h,
	src/vm/jit/i386/asmpart.S, src/vm/jit/i386/emit.c,
	src/vm/jit/i386/md.c, src/vm/jit/jit.h, src/vm/jit/mips/asmpart.S,
	src/vm/jit/mips/emit.c, src/vm/jit/mips/md.c,
	src/vm/jit/powerpc/asmpart.S, src/vm/jit/powerpc/emit.c,
	src/vm/jit/powerpc/md.c, src/vm/jit/powerpc64/asmpart.S,
	src/vm/jit/powerpc64/md.c, src/vm/jit/replace.h, src/vm/jit/show.c,
	src/vm/jit/sparc64/emit.c, src/vm/jit/sparc64/md.c,
	src/vm/jit/tools/genoffsets.c, src/vm/jit/x86_64/asmpart.S,
	src/vm/jit/x86_64/emit.c, src/vm/jit/x86_64/md.c:
	* configure.ac: Added option --enable-replacement.

	* src/vm/jit/Makefile.am: Compile replace.c only for
	ENABLE_REPLACEMENT.

	* src/vm/jit/replace.h: Define empty macros unless
	ENABLE_REPLACEMENT.

	* src/vm/jit/powerpc/emit.c: Enclosed replacement-specific code in
	#if ENABLE_REPLACEMENT.
	* src/vm/jit/powerpc/md.c: Likewise.
	* src/vm/jit/powerpc/asmpart.S: Likewise.
	* src/vm/jit/codegen-common.h: Likewise.
	* src/vm/jit/sparc64/emit.c: Likewise.
	* src/vm/jit/sparc64/md.c: Likewise.
	* src/vm/jit/alpha/emit.c: Likewise.
	* src/vm/jit/alpha/md.c: Likewise.
	* src/vm/jit/alpha/asmpart.S: Likewise.
	* src/vm/jit/code.c: Likewise.
	* src/vm/jit/code.h: Likewise.
	* src/vm/jit/tools/genoffsets.c: Likewise.
	* src/vm/jit/show.c: Likewise.
	* src/vm/jit/mips/emit.c: Likewise.
	* src/vm/jit/mips/md.c: Likewise.
	* src/vm/jit/mips/asmpart.S: Likewise.
	* src/vm/jit/powerpc64/md.c: Likewise.
	* src/vm/jit/powerpc64/asmpart.S: Likewise.
	* src/vm/jit/i386/emit.c: Likewise.
	* src/vm/jit/i386/md.c: Likewise.
	* src/vm/jit/i386/asmpart.S: Likewise.
	* src/vm/jit/asmpart.h: Likewise.
	* src/vm/jit/x86_64/emit.c: Likewise.
	* src/vm/jit/x86_64/md.c: Likewise.
	* src/vm/jit/x86_64/asmpart.S: Likewise.
	* src/vm/jit/codegen-common.c: Likewise.
	* src/vm/jit/jit.h: Likewise.
	[d57bc9b264e8]

	* src/vm/jit/i386/codegen.c:
	* src/vm/jit/i386/codegen.c (codegen): Cleaned up to use
	REPLACEMENT_ macros.
	[262f09f41eaf]

2007-01-02  twisti  <twisti>

	* tests/regression/jctest.java, tests/regression/jctest.output:
	* tests/regression/jctest.java: Print hex numbers too.
	* tests/regression/jctest.output: Updated.
	[bead5d6be07a]

