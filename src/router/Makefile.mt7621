#
# Broadcom Linux Router Makefile
#
# Copyright 2001-2003, Broadcom Corporation
# All Rights Reserved.
#
# THIS SOFTWARE IS OFFERED "AS IS", AND BROADCOM GRANTS NO WARRANTIES OF ANY
# KIND, EXPRESS OR IMPLIED, BY STATUTE, COMMUNICATION OR OTHERWISE. BROADCOM
# SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
#
# $Id: Makefile,v 1.2 2005/09/26 11:06:58 seg Exp $
#

include .config
ifneq ($(wildcard ../cy_conf.mak),)
  include ../cy_conf.mak
endif

#
# Paths
#
OPENSER_MODULES := sl tm rr maxfwd usrloc registrar dbtext textops exec auth auth_db nathelper
OPENSER_MODULE_FILES := $(foreach module,$(OPENSER_MODULES),openser/modules/$(module)/$(module).so)
OPENSSL_NO_CIPHERS:= no-idea no-md2 no-mdc2 no-rc5 no-sha0 no-rmd160 no-aes192
OPENSSL_OPTIONS:= shared no-ec no-err no-fips no-hw no-krb5 no-threads zlib-dynamic

# Source bases

export PLATFORM LINUXDIR LIBDIR USRLIBDIR
export TOP := $(shell pwd)
export SRCBASE := $(shell (cd $(TOP)/.. && pwd -P))


# Set the HAL directory if you have the HAL sources

# Set the Atheros Rate Control directory if you have the proprietary rate control
export ATH_RATE=ath_rate/sample

#
# Cross-compile environment variables
#

# Build platform
export BUILD := i386-pc-linux-gnu
export HOSTCC := gcc

# uClibc wrapper
export ARCH:=$(PLATFORM)
ifeq ($(CONFIG_UCLIBC),y)
export PLATFORM := $(PLATFORM)-uclibc
endif

#export LINUXDIR := $(SRCBASE)/linux/linux.v24
ifeq ($(ARCH),mips)
export LINUXDIR := $(SRCBASE)/linux/brcm63xx/linux-2.6.17
endif
#ifeq ($(ARCH),armeb)
#export LINUXDIR := $(SRCBASE)/linux/xscale/linux-2.6.23
#endif
#ifeq ($(ARCH),mipsel)
#export LINUXDIR := $(SRCBASE)/kernel/rb500/linux-2.6.17-rc5
#endif
ifeq ($(ARCH),i386)
export LINUXDIR := $(SRCBASE)/kernel/wrap/linux-2.6.16.7
endif

export KERNELRELEASE = $(shell cat $(LINUXDIR)/include/config/kernel.release 2> /dev/null)

#export KERNELRELEASE = $(shell cat $(LINUXDIR)/.kernelrelease 2> /dev/null)

#ifeq ($(PLATFORM),mipsel)
#export CROSS_COMPILE := mipsel-linux-
#export CONFIGURE := ./configure mipsel-linux --build=$(BUILD)
#export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../mipsel-linux && pwd -P)
#endif

#ifeq ($(PLATFORM),mipsel-uclibc)
export CROSS_COMPILE := $(ARCH)-linux-uclibc-
export CONFIGURE := ./configure $(ARCH)-linux --build=$(BUILD)
export TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/.. && pwd -P)
#endif

#ifeq ($(CONFIG_BCMWPA2),y)
#export CFLAGS += -DBCMWPA2 
#endif

export BASEOPT:=-Os
#export ARCH:= mipsel

ifeq ($(ARCH),mipsel)
export COPTS:=$(BASEOPT) -pipe -mips32r2 -mtune=1004kc -fno-caller-saves -mno-branch-likely -fno-plt
endif
ifeq ($(ARCH),arm)
export COPTS:=$(BASEOPT) -march=armv4 -pipe -funit-at-a-time -msoft-float
endif
ifeq ($(ARCH),mips)
export COPTS:=$(BASEOPT) -pipe -mips32 -mtune=mips32 -funit-at-a-time 
endif
ifeq ($(ARCH),i386)
export COPTS:=$(BASEOPT) -pipe -march=i486 -funit-at-a-time 
endif

export CC := ccache $(CROSS_COMPILE)gcc
export CXX := ccache $(CROSS_COMPILE)g++
export AR := $(CROSS_COMPILE)ar
export AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
export NM := $(CROSS_COMPILE)nm
export RANLIB := $(CROSS_COMPILE)ranlib
export STRIP := $(CROSS_COMPILE)strip
export SIZE := $(CROSS_COMPILE)size
export MIPS16_OPT:= -minterlink-mips16 -mips16

export CFLAGS := $(COPTS)

#
# Install and target directories
#

export PLATFORMDIR := $(TOP)/$(PLATFORM)
export INSTALLDIR := $(PLATFORMDIR)/install
export TARGETDIR := $(PLATFORMDIR)/target

ifeq ($(PLATFORM),mipsel)
obj-y += libcrypto
endif
#
# Configuration
#
CONFIG_IPTABLES=y

include rules/configs.mk

obj-clean := $(foreach obj,$(obj-y) $(obj-n),$(obj)-clean)
obj-install := $(foreach obj,$(obj-y),$(obj)-install)
obj-distclean := $(foreach obj,$(obj-y) $(obj-n),$(obj)-distclean)

all: install_headers  build_date clean_target $(obj-y) $(LINUXDIR)/.config kernel

build_date:
	echo "#define BUILD_DATE \"$(shell date +%D)\"" > ../../opt/build.h 
	echo "CONFIG_MUSL=y" >> .config 

include kernel-features.mk

kernel:
	# Also build kernel
ifeq ($(CONFIG_RT3052),y)
ifeq ($(CONFIG_ESR6650),y)
	cp $(LINUXDIR)/.config_esr6650 $(LINUXDIR)/.config
else
ifeq ($(CONFIG_F5D8235),y)
	cp $(LINUXDIR)/.config_rt3052_8366rb $(LINUXDIR)/.config
else
ifeq ($(CONFIG_ESR9752),y)
	cp $(LINUXDIR)/.config_esr9752 $(LINUXDIR)/.config
else
ifeq ($(CONFIG_ACXNR22),y)
	cp $(LINUXDIR)/.config_esr9752 $(LINUXDIR)/.config
else

ifeq ($(CONFIG_USB),y)
	cp $(LINUXDIR)/.config_rt3052_usb $(LINUXDIR)/.config
else
ifeq ($(CONFIG_EAP9550),y)
	cp $(LINUXDIR)/.config_eap9550 $(LINUXDIR)/.config
else
	cp $(LINUXDIR)/.config_rt3052 $(LINUXDIR)/.config
endif
endif
endif
endif
endif
endif
ifeq ($(CONFIG_DIR600),y)
	cp $(LINUXDIR)/.config_rt3050f $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_RT10N),y)
	cp $(LINUXDIR)/.config_rt3050f $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_NEPTUNE),y)
	cp $(LINUXDIR)/.config_neptune $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR615),y)
	cp $(LINUXDIR)/.config_rt3052 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR615H),y)
	cp $(LINUXDIR)/.config_rt3352 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_W502U),y)
	cp $(LINUXDIR)/.config_w502u $(LINUXDIR)/.config
endif

else
	cp $(LINUXDIR)/.config_rt2880 $(LINUXDIR)/.config
ifeq ($(CONFIG_AR670W),y)
	cp $(LINUXDIR)/.config_ar670w $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_AR690W),y)
	cp $(LINUXDIR)/.config_ar690w $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_BR6574N),y)
	cp $(LINUXDIR)/.config_rt2880_rtl8366 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_RT15N),y)
	cp $(LINUXDIR)/.config_rt15n $(LINUXDIR)/.config
endif
endif
ifeq ($(CONFIG_RT3352),y)
	cp $(LINUXDIR)/.config_rt3352 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_TIXI),y)
	cp $(LINUXDIR)/.config_tixi $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_WCRGN),y)
	cp $(LINUXDIR)/.config_rt3350 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_HAMEA15),y)
	cp $(LINUXDIR)/.config_hame $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_TECHNAXX3G),y)
	cp $(LINUXDIR)/.config_technaxx3g $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_MT7620),y)
	cp $(LINUXDIR)/.config_mt7620 $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR810L),y)
	cp $(LINUXDIR)/.config_dir810l $(LINUXDIR)/.config
endif
ifeq ($(CONFIG_DIR860),y)
	cp $(LINUXDIR)/.config_mt7621 $(LINUXDIR)/.config
	cp $(LINUXDIR)/drivers/net/wireless/Kconfig.mt7621 $(LINUXDIR)/drivers/net/wireless/Kconfig
endif
ifeq ($(CONFIG_DIR882),y)
	cp $(LINUXDIR)/.config_mt7621_dir882 $(LINUXDIR)/.config
	cp $(LINUXDIR)/drivers/net/wireless/Kconfig.dir882 $(LINUXDIR)/drivers/net/wireless/Kconfig
endif
	$(kernelfeatures)
	$(MAKE) -C $(LINUXDIR) oldconfig	

	if ! grep -q "CONFIG_EMBEDDED_RAMDISK=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -j 4 -C $(LINUXDIR) vmlinux vmlinux CROSS_COMPILE="ccache $(ARCH)-linux-uclibc-" ARCH=mips ; \
	fi
	if grep -q "CONFIG_MODULES=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -j 4 -C $(LINUXDIR) modules CROSS_COMPILE="ccache $(ARCH)-linux-uclibc-" ARCH=mips ; \
	fi

	$(MAKE) -C $(LINUXDIR) modules_install DEPMOD=/bin/true INSTALL_MOD_PATH=$(TARGETDIR)
ifeq ($(CONFIG_MT76),y)
	-$(MAKE) -f Makefile.mt7621 ath9k
	-$(MAKE) -f Makefile.mt7621 ath9k-install
endif
	-$(MAKE) -f Makefile.mt7621 libutils
#	-$(MAKE) -f Makefile.rt2880 madwifi
#	-$(MAKE) -f Makefile.rt2880 madwifi-install
ifeq ($(CONFIG_BATMANADV),y)
	-$(MAKE) -f Makefile.mt7621 batman-adv
	-$(MAKE) -f Makefile.mt7621 batman-adv-install
endif
ifeq ($(CONFIG_OPENDPI),y)
	-$(MAKE) -f Makefile.mt7621 ndpi-netfilter
	-$(MAKE) -f Makefile.mt7621 ndpi-netfilter-install
endif
ifeq ($(CONFIG_SMBD),y)
	-$(MAKE) -f Makefile.mt7621 smbd
	-$(MAKE) -f Makefile.mt7621 smbd-install
endif
ifeq ($(CONFIG_WIREGUARD),y)
	-$(MAKE) -f Makefile.mt7621 wireguard
	-$(MAKE) -f Makefile.mt7621 wireguard-install
endif
ifeq ($(CONFIG_CAKE),y)
	-$(MAKE) -f Makefile.mt7621 cake
	-$(MAKE) -f Makefile.mt7621 cake-install
	-$(MAKE) -f Makefile.mt7621 fq_codel_fast
	-$(MAKE) -f Makefile.mt7621 fq_codel_fast-install
endif
	-$(MAKE) -f Makefile.mt7621 uniwip-gpio
	-$(MAKE) -f Makefile.mt7621 uniwip-gpio-install

	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/build
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/source

ifneq ($(CONFIG_SAMBA),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/cifs
endif
ifneq ($(CONFIG_JFFS2),y)
ifneq ($(CONFIG_MT7620),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jffs2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/lib/lzma
endif
endif
ifneq ($(CONFIG_IPV6),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/net/ipv6
endif
ifneq ($(CONFIG_BONDING),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/bonding
endif
ifeq ($(CONFIG_E1700),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
endif
ifneq ($(CONFIG_DIR860),y)
ifneq ($(CONFIG_WHR1166D),y)
ifneq ($(CONFIG_DIR810L),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
else
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
endif
else
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
endif
endif
ifneq ($(CONFIG_USBIP),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/staging/usbip
endif
ifneq ($(CONFIG_USB),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/fat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/vfat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/msdos
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/mbcache.ko
endif
ifneq ($(CONFIG_USB_ADVANCED),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext4
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/btrfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd	
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd2	
endif
ifeq ($(CONFIG_3G_ONLY),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs
endif

ifeq ($(CONFIG_NOSTRIP),y)
	find $(ARCH)-uclibc/install $(ARCH)-uclibc/target  -name \*.ko | \
		xargs $(ARCH)-linux-nm | \
		awk '$$1 == "U" { print $$2 } ' | \
		sort -u > $(LINUXDIR)/mod_symtab.txt
	$(ARCH)-linux-nm -n $(LINUXDIR)/vmlinux.o | grep ' [rR] __ksymtab' | sed -e 's,........ [rR] __ksymtab_,,' > $(LINUXDIR)/kernel_symtab.txt
	grep -Ff $(LINUXDIR)/mod_symtab.txt $(LINUXDIR)/kernel_symtab.txt -F > $(LINUXDIR)/sym_include.txt
	grep -Fvf $(LINUXDIR)/mod_symtab.txt $(LINUXDIR)/kernel_symtab.txt -F > $(LINUXDIR)/sym_exclude.txt
	( \
		echo '#define SYMTAB_KEEP \'; \
		cat $(LINUXDIR)/sym_include.txt | \
			awk '{print "KEEP(*(___ksymtab+" $$$$1 ")) \\" }'; \
		echo; \
		echo '#define SYMTAB_KEEP_GPL \'; \
		cat $(LINUXDIR)/sym_include.txt | \
			awk '{print "KEEP(*(___ksymtab_gpl+" $$$$1 ")) \\" }'; \
		echo; \
		echo '#define SYMTAB_DISCARD \'; \
		cat $(LINUXDIR)/sym_exclude.txt | \
			awk '{print "*(___ksymtab+" $$$$1 ") \\" }'; \
		echo; \
		echo '#define SYMTAB_DISCARD_GPL \'; \
		cat $(LINUXDIR)/sym_exclude.txt | \
			awk '{print "*(___ksymtab_gpl+" $$$$1 ") \\" }'; \
		echo; \
	) > $(LINUXDIR)/symtab.h
	rm -f $(LINUXDIR)/vmlinux

	if ! grep -q "CONFIG_EMBEDDED_RAMDISK=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -j 4 -C $(LINUXDIR) vmlinux EXTRA_LDSFLAGS="-I$(LINUXDIR) -include symtab.h" CROSS_COMPILE="ccache $(ARCH)-linux-uclibc-" ARCH=mips ; \
	fi
endif
ifeq ($(CONFIG_MT7620),y)
	cp $(LINUXDIR)/vmlinux $(LINUXDIR)/vmlinux-mt7620
ifeq ($(CONFIG_DIR860),y)
ifeq ($(CONFIG_DIR882),y)
	$(ARCH)-linux-uclibc-cpp -nostdinc -x assembler-with-cpp -I$(LINUXDIR)/arch/mips/boot/dts -I$(LINUXDIR)/arch/mips/boot/dts/include -I$(LINUXDIR)/include -undef -D__DTS__ -o $(LINUXDIR)/dts/DIR-882.dtb.tmp $(LINUXDIR)/dts/DIR-882.dts
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/dts/ -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/DIR-882.dtb.tmp
else
	$(ARCH)-linux-uclibc-cpp -nostdinc -x assembler-with-cpp -I$(LINUXDIR)/arch/mips/boot/dts -I$(LINUXDIR)/arch/mips/boot/dts/include -I$(LINUXDIR)/include -undef -D__DTS__ -o $(LINUXDIR)/dts/DIR-860.dtb.tmp $(LINUXDIR)/dts/DIR-860.dts
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/dts/ -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/DIR-860.dtb.tmp
endif
else
ifeq ($(CONFIG_DIR810L),y)
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/include -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/DIR-810L.dts
else
ifeq ($(CONFIG_E1700),y)
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/include -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/MT7620a_MT7530.dts
else
ifeq ($(CONFIG_WHR1166D),y)
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/include -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/MT7620a_1166.dts
else
	$(LINUXDIR)/scripts/dtc/dtc -i $(LINUXDIR)/include -O dtb -o $(LINUXDIR)/dts/MT7620a.dtb $(LINUXDIR)/dts/MT7620a.dts
endif
endif
endif
endif
	patch-dtb $(LINUXDIR)/vmlinux-mt7620 $(LINUXDIR)/dts/MT7620a.dtb
#	$(call CompressLzma,$(KDIR)/vmlinux-$(1)$(3),$(KDIR)/vmlinux-$(1)$(3).bin.lzma)
endif

	make mkimage
#	cp mipsel-uclibc/root.uimage /GruppenLW/releases/test.bin

include common.mk

install package: clean_target $(filter-out lib.$(ARCH)-install,$(obj-install)) $(LINUXDIR)/.config
        # Install binaries into target directory
	install -d $(TARGETDIR)
	for dir in $(wildcard $(patsubst %,$(INSTALLDIR)/%,$(obj-y))) ; do \
	    (cd $${dir} && tar cpf - .) | (cd $(TARGETDIR) && tar xpf -) \
	done
	mkdir -p $(ARCH)-uclibc/target/etc/config
	mkdir -p $(ARCH)-uclibc/target/etc/kaid
	mkdir -p $(ARCH)-uclibc/target/etc/langpack
	cp ./opt/bin/ipkg $(ARCH)-uclibc/target/bin
	cd  $(ARCH)-uclibc/target/lib
	cp ./opt/etc/preinit $(ARCH)-uclibc/target/etc
	cp ./opt/etc/postinit $(ARCH)-uclibc/target/etc
	cp ./opt/etc/ipkg.conf $(ARCH)-uclibc/target/etc
	cp ./opt/etc/config/* $(ARCH)-uclibc/target/etc/config
	cp ./opt/usr/lib/smb.conf $(ARCH)-uclibc/target/usr/lib
	ln -sf ../tmp/smbshare $(ARCH)-uclibc/target/www/smb
	# optimize the crypto library by removing unneeded symbols
	# Install (and possibly optimize) C library
#	$(MAKE) -f Makefile.rt2880 lib.$(ARCH)-install
	# optimize the others library by removing unneeded symbols
	$(MAKE) -f Makefile.mt7621 optimize-lib
	#-cp lib.mipsel/libcrypt.so.0 $(TARGETDIR)/lib
	# Install modules into filesystem
	if grep -q "CONFIG_MODULES=y" $(LINUXDIR)/.config ; then \
	    $(MAKE) -C $(LINUXDIR) modules_install DEPMOD=/bin/true INSTALL_MOD_PATH=$(TARGETDIR) ; \
	fi
ifeq ($(CONFIG_MADWIFI),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wl
endif
ifeq ($(CONFIG_WAVESAT),y)
	make -f Makefile.mt7621 wavesat-install
endif
#	cp lib.$(ARCH)/libgcc_s.so.1 $(TARGETDIR)/lib
	find $(TARGETDIR) -name "wl_*.o"  | xargs rm -rf
ifneq ($(CONFIG_SAMBA),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/cifs
endif
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/build
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/source
        # Prepare filesystem
	cd $(TARGETDIR) && $(TOP)/misc/rootprep.sh
        # Make sure mksquashfs-2.0 is used
	cd $(TARGETDIR)  &&  find . -iname "CVS" | xargs rm -rf
	cd $(TARGETDIR)  &&  find . -iname ".svn" | xargs rm -rf
#	./busybox/examples/depmod.pl -F $(LINUXDIR)/System.map -b $(ARCH)-uclibc/target/lib/modules
#	tar --directory=$(TARGETDIR) --remove-files -cvvjf $(TARGETDIR)/etc/local.tar.bz2 usr/local
	rm -rf $(TARGETDIR)/usr/local
	rm -f $(TARGETDIR)/bin/ipkg
	rm -f $(TARGETDIR)/usr/lib/smb.conf
#	mkdir $(TARGETDIR)/usr/local
ifeq ($(CONFIG_KAID),y)
	cp kaid/kaid $(TARGETDIR)/usr/sbin
endif
#	mv $(TARGETDIR)/usr/lib/services.so $(TARGETDIR)/lib
	cd $(TARGETDIR) && find . -name *.ko -exec mipsel-linux-strip --strip-unneeded --remove-section=.comment {} +
#	mipsel-linux-strip $(TARGETDIR)/lib/modules/$(LINUXVER)/*.ko		
ifneq ($(CONFIG_SAMBA),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/cifs
endif
ifneq ($(CONFIG_JFFS2),y)
ifneq ($(CONFIG_MT7620),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jffs2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/lib/lzma
endif
endif
ifneq ($(CONFIG_IPV6),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/net/ipv6
endif
ifneq ($(CONFIG_BONDING),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/bonding
endif
ifneq ($(CONFIG_USBIP),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/staging/usbip
endif
ifneq ($(CONFIG_USB),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext2
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/fat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/vfat
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/msdos
	rm -f $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/mbcache.ko
endif
ifneq ($(CONFIG_USB_ADVANCED),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext3
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/ext4
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/xfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/btrfs
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd	
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs/jbd2	
endif
ifeq ($(CONFIG_E1700),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
endif
ifneq ($(CONFIG_DIR860),y)
ifneq ($(CONFIG_WHR1166D),y)
ifneq ($(CONFIG_DIR810L),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
else
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7612
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
endif
else
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt5592
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/drivers/net/wireless/rt7610
endif
endif
ifeq ($(CONFIG_3G_ONLY),y)
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel/fs
endif
	find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	-find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/net -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	-find $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/extra -name *.ko -exec mv {} $(TARGETDIR)/lib/modules/$(KERNELRELEASE) \;
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/kernel
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/net
	rm -rf $(TARGETDIR)/lib/modules/$(KERNELRELEASE)/extra
	#e2fsck -y -f $(ARCH)-uclibc/root.fs
	./busybox/examples/depmod.pl -F $(LINUXDIR)/System.map -b $(ARCH)-uclibc/target/lib/modules

	export STRIP_KMOD="$(LINUXDIR)/scripts/strip-kmod.sh" && \
	export STRIP="sstrip" && \
	$(LINUXDIR)/scripts/rstrip.sh $(TARGETDIR)

#	export STRIP_KMOD="echo" && \
#	export STRIP="sstrip" && \
#	$(LINUXDIR)/scripts/rstrip.sh $(TARGETDIR)

	$(TOP)/../../tools/removewhitespace.sh $(TOP)/../../tools $(TARGETDIR)/etc/config
	$(LINUXDIR)/scripts/squashfs/mksquashfs4 $(ARCH)-uclibc/target $(ARCH)-uclibc/root.fs -comp xz -nopad  -root-owned -noappend -b 262144
#	$(LINUXDIR)/scripts/squashfs/mksquashfs-lzma $(ARCH)-uclibc/target $(ARCH)-uclibc/root.fs -noappend -root-owned -le -nopad
	dd if=mipsel-uclibc/root-mt7621_dir882.uimage of=mipsel-uclibc/aligned-mt7621_dir882.uimage bs=65536 conv=sync
	dd if=mipsel-uclibc/root-mt7621_dir878.uimage of=mipsel-uclibc/aligned-mt7621_dir878.uimage bs=65536 conv=sync
#	cp mipsel-uclibc/root-mt7621_dir882.uimage mipsel-uclibc/aligned-mt7621_dir882.uimage
#	cp mipsel-uclibc/root-mt7621_dir878.uimage mipsel-uclibc/aligned-mt7621_dir878.uimage


	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/aligned-mt7621_dir878.uimage
	./tools/trx_n -m 30000000 -o mipsel-uclibc/dir878-a1-webflash.bin mipsel-uclibc/aligned-mt7621_dir878.uimage

	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/aligned-mt7621_dir882.uimage
	./tools/trx_n -m 30000000 -o mipsel-uclibc/dir882-a1-webflash.bin mipsel-uclibc/aligned-mt7621_dir882.uimage


ifeq ($(CONFIG_MT7620),y)
	dd if=mipsel-uclibc/root-mt7620.uimage of=mipsel-uclibc/aligned-mt7620.uimage bs=4096 conv=sync
	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/aligned-mt7620.uimage


ifeq ($(CONFIG_DIR860),y)
	lzma e $(TOP)/$(ARCH)-uclibc/vmlinus-mt7620 $(TOP)/$(ARCH)-uclibc/vmlinus-mt7620.lzma
	dd if=mipsel-uclibc/vmlinus-mt7620.lzma of=mipsel-uclibc/vmlinus-mt7620.aligned bs=4096 conv=sync	
	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/vmlinus-mt7620.aligned
	tools/buildimg4/packimgs -v -o mipsel-uclibc/raw-dir860.img -i mipsel-uclibc/vmlinus-mt7620.aligned
	tools/buildimg4/seama -i mipsel-uclibc/raw-dir860.img -m dev=/dev/mtdblock/2 -m type=firmware 
	tools/buildimg4/seama -s mipsel-uclibc/web-dir860.img -i mipsel-uclibc/raw-dir860.img.seama -m signature=wrgac13_dlink.2013gui_dir860lb
	./tools/trx_n -m 30000000 -o mipsel-uclibc/dir860l-webflash.bin mipsel-uclibc/raw-dir860.img.seama
endif

	cp mipsel-uclibc/aligned-mt7620.uimage mipsel-uclibc/aligned-mt7620.dir810la1
	cp mipsel-uclibc/aligned-mt7620.uimage mipsel-uclibc/aligned-mt7620.dir810lb1
	cp mipsel-uclibc/aligned-mt7620.uimage mipsel-uclibc/aligned-mt7620.dir810lc1
	./tools/dir810l/ncc_att_hwid -f mipsel-uclibc/aligned-mt7620.dir810lc1 -m DIR-810L -H C1 -r WW -c 1.0 -F 2.5 -a
	./tools/dir810l/ncc_att_hwid -f mipsel-uclibc/aligned-mt7620.dir810lb1 -m DIR-810L -H B1 -r WW -c 1.0 -F 2.5 -a
	./tools/dir810l/ncc_att_hwid -f mipsel-uclibc/aligned-mt7620.dir810la1 -m DIR-810L -H A1 -r WW -c 1.0 -F 2.5 -a
	cp mipsel-uclibc/aligned-mt7620.uimage mipsel-uclibc/firmware_WHR-300HP2.ram
	./tools/trx_n -m 30000000 -a 1 -o mipsel-uclibc/mt7620-webflash.bin mipsel-uclibc/firmware_WHR-300HP2.ram
	cp tools/CRC_tool $(ARCH)-uclibc
	cp tools/conf.txt $(ARCH)-uclibc
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-300-jp
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-300-jp WRTR-297GN && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-300-us
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-300-us WRTR-297GN_US && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-300-eu
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-300-eu WRTR-297GN_EU && cd ..

	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-600-jp
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-600-jp WRTR-296N && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-600-us
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-600-us WRTR-296N_US && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-600-eu
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-600-eu WRTR-296N_EU && cd ..


	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-1166-jp
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-1166-jp WRTR-300ACN && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-1166-us
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-1166-us WRTR-300ACN_US && cd ..
	cp $(ARCH)-uclibc/aligned-mt7620.uimage $(ARCH)-uclibc/aligned-mt7620.uimage-1166-eu
	-cd $(ARCH)-uclibc && ./CRC_tool aligned-mt7620.uimage-1166-eu WRTR-300ACN_EU && cd ..
endif


ifneq ($(CONFIG_TECHNAXX),y)
ifneq ($(CONFIG_NEPTUNE),y)
ifneq ($(CONFIG_RT3352),y)
ifneq ($(CONFIG_RT10N),y)
ifneq ($(CONFIG_RT15N),y)
ifneq ($(CONFIG_WR5422),y)
ifneq ($(CONFIG_RT13NB1),y)
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/aligned.uimage
	cat mipsel-uclibc/root.fs  >> mipsel-uclibc/vmlinus.aligned
else
	$(MAKE) -C mkimage makeasus13nb1
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makewr5422
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makeasus15n
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makeasus
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makewr5422
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makewr5422
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
else
	$(MAKE) -C mkimage makewr5422
	dd if=mipsel-uclibc/root.uimage of=mipsel-uclibc/aligned.uimage bs=4096 conv=sync
	dd if=mipsel-uclibc/vmlinus.lzma of=mipsel-uclibc/vmlinus.aligned bs=4096 conv=sync
endif
#	cp mipsel-uclibc/aligned.uimage /GruppenLW/releases/firmware.bin
	./tools/trx_n -m 30000000 -a 1 -o mipsel-uclibc/rt2880-webflash.bin mipsel-uclibc/aligned.uimage
	./tools/trx_n -m 30000000 -a 1 -o mipsel-uclibc/raw-webflash.bin mipsel-uclibc/vmlinus.aligned
ifeq ($(CONFIG_DIR600),y)
	./tools/buildimg/packimgs -v -o mipsel-uclibc/raw.img -i mipsel-uclibc/aligned.uimage
	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/dir600b-web.bin -d /dev/mtdblock/2 -s wrgn23_dlwbr_dir600b -c
endif
ifeq ($(CONFIG_DIR615),y)
	./tools/buildimg/packimgs -v -o mipsel-uclibc/raw.img -i mipsel-uclibc/aligned.uimage
#	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/dir615d2-web.bin -d /dev/mtdblock/2 -s wrgn23_dlwbr_dir615 -c
	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/dir615d-web.bin -d /dev/mtdblock/2 -s wrgn22_dlwbr_dir615 -c
endif
ifeq ($(CONFIG_DIR615H),y)
	./tools/senao/header.x86 -s mipsel-uclibc/aligned.uimage -d mipsel-uclibc/dir615h-web.bin -a -t kernel
endif
ifeq ($(CONFIG_DIR300),y)
	./tools/buildimg/packimgs -v -o mipsel-uclibc/raw.img -i mipsel-uclibc/aligned.uimage
	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/dir300b-web.bin -d /dev/mtdblock/2 -s wrgn23_dlwbr_dir300b -c
endif

ifeq ($(CONFIG_AR670W),y)
	./tools/buildimg/packimgs -v -o mipsel-uclibc/raw.img -i $(ARCH)-uclibc/vmlinus.aligned
	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/ar670w-web.bin -d /dev/mtdblock/2 -s wrgn16a_airlink_ar670w -c
endif
ifeq ($(CONFIG_AR690W),y)
	./tools/buildimg/packimgs -v -o mipsel-uclibc/raw.img -i $(ARCH)-uclibc/vmlinus.aligned
	./tools/buildimg/v2image -v -i mipsel-uclibc/raw.img -o mipsel-uclibc/ar690w-web.bin -d /dev/mtdblock/2 -s wrgn20_airlink_ar690w -c
endif
ifeq ($(CONFIG_F5D8235),y)
	dd if=mipsel-uclibc/aligned.uimage of=mipsel-uclibc/belkin.uimage bs=4096 conv=sync
	./tools/belkin/fw_crc_hdr mipsel-uclibc/belkin.uimage mipsel-uclibc/belkin-f5d8235.bin
endif
ifeq ($(CONFIG_BR6574N),y)
	./tools/csys/edimax mipsel-uclibc/aligned.uimage mipsel-uclibc/edimax.bin NR2G
	./tools/csys/edimax mipsel-uclibc/aligned.uimage mipsel-uclibc/edimax-6574.bin WNRA
endif	
	../../../broadcom/opt/bufenc/encrypt mipsel-uclibc/rt2880-webflash.bin mipsel-uclibc/WHR-G300N-webflash_enc.bin WHR-G300N-DD-WRT
	./tools/whrg300n mipsel-uclibc/aligned.uimage mipsel-uclibc/whrg300n-firmware.tftp
	./tools/make_firmware mipsel-uclibc/aligned.uimage


include rules/all.mk

.PHONY: all clean distclean mrproper install package
.PHONY: conf mconf oldconf kconf kmconf config menuconfig oldconfig
.PHONY: dummy fixkc libnet libpcap



