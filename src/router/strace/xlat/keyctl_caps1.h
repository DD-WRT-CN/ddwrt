/* Generated by ./xlat/gen.sh from ./xlat/keyctl_caps1.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(KEYCTL_CAPS1_NS_KEYRING_NAME) || (defined(HAVE_DECL_KEYCTL_CAPS1_NS_KEYRING_NAME) && HAVE_DECL_KEYCTL_CAPS1_NS_KEYRING_NAME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((KEYCTL_CAPS1_NS_KEYRING_NAME) == (0x01), "KEYCTL_CAPS1_NS_KEYRING_NAME != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define KEYCTL_CAPS1_NS_KEYRING_NAME 0x01
#endif
#if defined(KEYCTL_CAPS1_NS_KEY_TAG) || (defined(HAVE_DECL_KEYCTL_CAPS1_NS_KEY_TAG) && HAVE_DECL_KEYCTL_CAPS1_NS_KEY_TAG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((KEYCTL_CAPS1_NS_KEY_TAG) == (0x02), "KEYCTL_CAPS1_NS_KEY_TAG != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define KEYCTL_CAPS1_NS_KEY_TAG 0x02
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat keyctl_caps1 in mpers mode

# else

static const struct xlat_data keyctl_caps1_xdata[] = {
 XLAT(KEYCTL_CAPS1_NS_KEYRING_NAME),
 XLAT(KEYCTL_CAPS1_NS_KEY_TAG),
};
static
const struct xlat keyctl_caps1[1] = { {
 .data = keyctl_caps1_xdata,
 .size = ARRAY_SIZE(keyctl_caps1_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
