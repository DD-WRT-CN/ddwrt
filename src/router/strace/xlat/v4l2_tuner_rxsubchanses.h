/* Generated by ./xlat/gen.sh from ./xlat/v4l2_tuner_rxsubchanses.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(V4L2_TUNER_SUB_MONO) || (defined(HAVE_DECL_V4L2_TUNER_SUB_MONO) && HAVE_DECL_V4L2_TUNER_SUB_MONO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_SUB_MONO) == (0x0001), "V4L2_TUNER_SUB_MONO != 0x0001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_SUB_MONO 0x0001
#endif
#if defined(V4L2_TUNER_SUB_STEREO) || (defined(HAVE_DECL_V4L2_TUNER_SUB_STEREO) && HAVE_DECL_V4L2_TUNER_SUB_STEREO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_SUB_STEREO) == (0x0002), "V4L2_TUNER_SUB_STEREO != 0x0002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_SUB_STEREO 0x0002
#endif
#if defined(V4L2_TUNER_SUB_LANG2) || (defined(HAVE_DECL_V4L2_TUNER_SUB_LANG2) && HAVE_DECL_V4L2_TUNER_SUB_LANG2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_SUB_LANG2) == (0x0004), "V4L2_TUNER_SUB_LANG2 != 0x0004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_SUB_LANG2 0x0004
#endif
#if defined(V4L2_TUNER_SUB_LANG1) || (defined(HAVE_DECL_V4L2_TUNER_SUB_LANG1) && HAVE_DECL_V4L2_TUNER_SUB_LANG1)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_SUB_LANG1) == (0x0008), "V4L2_TUNER_SUB_LANG1 != 0x0008");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_SUB_LANG1 0x0008
#endif
#if defined(V4L2_TUNER_SUB_RDS) || (defined(HAVE_DECL_V4L2_TUNER_SUB_RDS) && HAVE_DECL_V4L2_TUNER_SUB_RDS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_SUB_RDS) == (0x0010), "V4L2_TUNER_SUB_RDS != 0x0010");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_SUB_RDS 0x0010
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_tuner_rxsubchanses[];

# else

static const struct xlat_data v4l2_tuner_rxsubchanses_xdata[] = {
 XLAT(V4L2_TUNER_SUB_MONO),
 XLAT(V4L2_TUNER_SUB_STEREO),
 XLAT(V4L2_TUNER_SUB_LANG2),

 XLAT(V4L2_TUNER_SUB_LANG1),
 XLAT(V4L2_TUNER_SUB_RDS),
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_tuner_rxsubchanses[1] = { {
 .data = v4l2_tuner_rxsubchanses_xdata,
 .size = ARRAY_SIZE(v4l2_tuner_rxsubchanses_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
