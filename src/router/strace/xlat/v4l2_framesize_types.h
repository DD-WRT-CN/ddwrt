/* Generated by ./xlat/gen.sh from ./xlat/v4l2_framesize_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(V4L2_FRMSIZE_TYPE_DISCRETE) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_DISCRETE) && HAVE_DECL_V4L2_FRMSIZE_TYPE_DISCRETE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_FRMSIZE_TYPE_DISCRETE) == (1), "V4L2_FRMSIZE_TYPE_DISCRETE != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_FRMSIZE_TYPE_DISCRETE 1
#endif
#if defined(V4L2_FRMSIZE_TYPE_CONTINUOUS) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_CONTINUOUS) && HAVE_DECL_V4L2_FRMSIZE_TYPE_CONTINUOUS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_FRMSIZE_TYPE_CONTINUOUS) == (2), "V4L2_FRMSIZE_TYPE_CONTINUOUS != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_FRMSIZE_TYPE_CONTINUOUS 2
#endif
#if defined(V4L2_FRMSIZE_TYPE_STEPWISE) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_STEPWISE) && HAVE_DECL_V4L2_FRMSIZE_TYPE_STEPWISE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_FRMSIZE_TYPE_STEPWISE) == (3), "V4L2_FRMSIZE_TYPE_STEPWISE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_FRMSIZE_TYPE_STEPWISE 3
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_framesize_types[];

# else

static const struct xlat_data v4l2_framesize_types_xdata[] = {
 [V4L2_FRMSIZE_TYPE_DISCRETE] = XLAT(V4L2_FRMSIZE_TYPE_DISCRETE),
 [V4L2_FRMSIZE_TYPE_CONTINUOUS] = XLAT(V4L2_FRMSIZE_TYPE_CONTINUOUS),
 [V4L2_FRMSIZE_TYPE_STEPWISE] = XLAT(V4L2_FRMSIZE_TYPE_STEPWISE),
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_framesize_types[1] = { {
 .data = v4l2_framesize_types_xdata,
 .size = ARRAY_SIZE(v4l2_framesize_types_xdata),
 .type = XT_INDEXED,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
