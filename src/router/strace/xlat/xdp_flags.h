/* Generated by ./xlat/gen.sh from ./xlat/xdp_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(XDP_FLAGS_MODES) || (defined(HAVE_DECL_XDP_FLAGS_MODES) && HAVE_DECL_XDP_FLAGS_MODES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XDP_FLAGS_MODES) == (0xe), "XDP_FLAGS_MODES != 0xe");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XDP_FLAGS_MODES 0xe
#endif
#if defined(XDP_FLAGS_UPDATE_IF_NOEXIST) || (defined(HAVE_DECL_XDP_FLAGS_UPDATE_IF_NOEXIST) && HAVE_DECL_XDP_FLAGS_UPDATE_IF_NOEXIST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XDP_FLAGS_UPDATE_IF_NOEXIST) == (0x1), "XDP_FLAGS_UPDATE_IF_NOEXIST != 0x1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XDP_FLAGS_UPDATE_IF_NOEXIST 0x1
#endif
#if defined(XDP_FLAGS_SKB_MODE) || (defined(HAVE_DECL_XDP_FLAGS_SKB_MODE) && HAVE_DECL_XDP_FLAGS_SKB_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XDP_FLAGS_SKB_MODE) == (0x2), "XDP_FLAGS_SKB_MODE != 0x2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XDP_FLAGS_SKB_MODE 0x2
#endif
#if defined(XDP_FLAGS_DRV_MODE) || (defined(HAVE_DECL_XDP_FLAGS_DRV_MODE) && HAVE_DECL_XDP_FLAGS_DRV_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XDP_FLAGS_DRV_MODE) == (0x4), "XDP_FLAGS_DRV_MODE != 0x4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XDP_FLAGS_DRV_MODE 0x4
#endif
#if defined(XDP_FLAGS_HW_MODE) || (defined(HAVE_DECL_XDP_FLAGS_HW_MODE) && HAVE_DECL_XDP_FLAGS_HW_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XDP_FLAGS_HW_MODE) == (0x8), "XDP_FLAGS_HW_MODE != 0x8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XDP_FLAGS_HW_MODE 0x8
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat xdp_flags in mpers mode

# else

static const struct xlat_data xdp_flags_xdata[] = {
 XLAT(XDP_FLAGS_MODES),
 XLAT(XDP_FLAGS_UPDATE_IF_NOEXIST),
 XLAT(XDP_FLAGS_SKB_MODE),
 XLAT(XDP_FLAGS_DRV_MODE),
 XLAT(XDP_FLAGS_HW_MODE),
};
static
const struct xlat xdp_flags[1] = { {
 .data = xdp_flags_xdata,
 .size = ARRAY_SIZE(xdp_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
