/* Generated by ./xlat/gen.sh from ./xlat/ptrace_cmds.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PTRACE_TRACEME) || (defined(HAVE_DECL_PTRACE_TRACEME) && HAVE_DECL_PTRACE_TRACEME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_TRACEME) == (0), "PTRACE_TRACEME != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_TRACEME 0
#endif
#if defined(PTRACE_PEEKTEXT) || (defined(HAVE_DECL_PTRACE_PEEKTEXT) && HAVE_DECL_PTRACE_PEEKTEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT) == (0x1), "PTRACE_PEEKTEXT != 0x1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT 0x1
#endif
#if defined(PTRACE_PEEKDATA) || (defined(HAVE_DECL_PTRACE_PEEKDATA) && HAVE_DECL_PTRACE_PEEKDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA) == (0x2), "PTRACE_PEEKDATA != 0x2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA 0x2
#endif
#if defined(PTRACE_PEEKUSER) || (defined(HAVE_DECL_PTRACE_PEEKUSER) && HAVE_DECL_PTRACE_PEEKUSER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKUSER) == (0x3), "PTRACE_PEEKUSER != 0x3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKUSER 0x3
#endif
#if defined(PTRACE_POKETEXT) || (defined(HAVE_DECL_PTRACE_POKETEXT) && HAVE_DECL_PTRACE_POKETEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT) == (0x4), "PTRACE_POKETEXT != 0x4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT 0x4
#endif
#if defined(PTRACE_POKEDATA) || (defined(HAVE_DECL_PTRACE_POKEDATA) && HAVE_DECL_PTRACE_POKEDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA) == (0x5), "PTRACE_POKEDATA != 0x5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA 0x5
#endif
#if defined(PTRACE_POKEUSER) || (defined(HAVE_DECL_PTRACE_POKEUSER) && HAVE_DECL_PTRACE_POKEUSER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEUSER) == (0x6), "PTRACE_POKEUSER != 0x6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEUSER 0x6
#endif
#if defined(PTRACE_CONT) || (defined(HAVE_DECL_PTRACE_CONT) && HAVE_DECL_PTRACE_CONT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_CONT) == (0x7), "PTRACE_CONT != 0x7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_CONT 0x7
#endif
#if defined(PTRACE_KILL) || (defined(HAVE_DECL_PTRACE_KILL) && HAVE_DECL_PTRACE_KILL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_KILL) == (0x8), "PTRACE_KILL != 0x8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_KILL 0x8
#endif
#if defined(PTRACE_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SINGLESTEP) && HAVE_DECL_PTRACE_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLESTEP) == (0x9), "PTRACE_SINGLESTEP != 0x9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLESTEP 0x9
#endif
#if defined(PTRACE_ATTACH) || (defined(HAVE_DECL_PTRACE_ATTACH) && HAVE_DECL_PTRACE_ATTACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ATTACH) == (0x10), "PTRACE_ATTACH != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ATTACH 0x10
#endif
#if !defined __sparc__
#if defined(PTRACE_DETACH) || (defined(HAVE_DECL_PTRACE_DETACH) && HAVE_DECL_PTRACE_DETACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_DETACH) == (0x11), "PTRACE_DETACH != 0x11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_DETACH 0x11
#endif
#else
#endif
#if defined(PTRACE_SYSCALL) || (defined(HAVE_DECL_PTRACE_SYSCALL) && HAVE_DECL_PTRACE_SYSCALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSCALL) == (0x18), "PTRACE_SYSCALL != 0x18");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSCALL 0x18
#endif
#if defined(PTRACE_SETOPTIONS) || (defined(HAVE_DECL_PTRACE_SETOPTIONS) && HAVE_DECL_PTRACE_SETOPTIONS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETOPTIONS) == (0x4200), "PTRACE_SETOPTIONS != 0x4200");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETOPTIONS 0x4200
#endif
#if defined(PTRACE_GETEVENTMSG) || (defined(HAVE_DECL_PTRACE_GETEVENTMSG) && HAVE_DECL_PTRACE_GETEVENTMSG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETEVENTMSG) == (0x4201), "PTRACE_GETEVENTMSG != 0x4201");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETEVENTMSG 0x4201
#endif
#if defined(PTRACE_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_GETSIGINFO) && HAVE_DECL_PTRACE_GETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETSIGINFO) == (0x4202), "PTRACE_GETSIGINFO != 0x4202");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETSIGINFO 0x4202
#endif
#if defined(PTRACE_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_SETSIGINFO) && HAVE_DECL_PTRACE_SETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETSIGINFO) == (0x4203), "PTRACE_SETSIGINFO != 0x4203");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETSIGINFO 0x4203
#endif
#if defined(PTRACE_GETREGSET) || (defined(HAVE_DECL_PTRACE_GETREGSET) && HAVE_DECL_PTRACE_GETREGSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGSET) == (0x4204), "PTRACE_GETREGSET != 0x4204");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGSET 0x4204
#endif
#if defined(PTRACE_SETREGSET) || (defined(HAVE_DECL_PTRACE_SETREGSET) && HAVE_DECL_PTRACE_SETREGSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGSET) == (0x4205), "PTRACE_SETREGSET != 0x4205");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGSET 0x4205
#endif
#if defined(PTRACE_SEIZE) || (defined(HAVE_DECL_PTRACE_SEIZE) && HAVE_DECL_PTRACE_SEIZE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SEIZE) == (0x4206), "PTRACE_SEIZE != 0x4206");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SEIZE 0x4206
#endif
#if defined(PTRACE_INTERRUPT) || (defined(HAVE_DECL_PTRACE_INTERRUPT) && HAVE_DECL_PTRACE_INTERRUPT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_INTERRUPT) == (0x4207), "PTRACE_INTERRUPT != 0x4207");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_INTERRUPT 0x4207
#endif
#if defined(PTRACE_LISTEN) || (defined(HAVE_DECL_PTRACE_LISTEN) && HAVE_DECL_PTRACE_LISTEN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_LISTEN) == (0x4208), "PTRACE_LISTEN != 0x4208");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_LISTEN 0x4208
#endif
#if defined(PTRACE_PEEKSIGINFO) || (defined(HAVE_DECL_PTRACE_PEEKSIGINFO) && HAVE_DECL_PTRACE_PEEKSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKSIGINFO) == (0x4209), "PTRACE_PEEKSIGINFO != 0x4209");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKSIGINFO 0x4209
#endif
#if defined(PTRACE_GETSIGMASK) || (defined(HAVE_DECL_PTRACE_GETSIGMASK) && HAVE_DECL_PTRACE_GETSIGMASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETSIGMASK) == (0x420a), "PTRACE_GETSIGMASK != 0x420a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETSIGMASK 0x420a
#endif
#if defined(PTRACE_SETSIGMASK) || (defined(HAVE_DECL_PTRACE_SETSIGMASK) && HAVE_DECL_PTRACE_SETSIGMASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETSIGMASK) == (0x420b), "PTRACE_SETSIGMASK != 0x420b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETSIGMASK 0x420b
#endif
#if defined(PTRACE_SECCOMP_GET_FILTER) || (defined(HAVE_DECL_PTRACE_SECCOMP_GET_FILTER) && HAVE_DECL_PTRACE_SECCOMP_GET_FILTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SECCOMP_GET_FILTER) == (0x420c), "PTRACE_SECCOMP_GET_FILTER != 0x420c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SECCOMP_GET_FILTER 0x420c
#endif
#if defined(PTRACE_SECCOMP_GET_METADATA) || (defined(HAVE_DECL_PTRACE_SECCOMP_GET_METADATA) && HAVE_DECL_PTRACE_SECCOMP_GET_METADATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SECCOMP_GET_METADATA) == (0x420d), "PTRACE_SECCOMP_GET_METADATA != 0x420d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SECCOMP_GET_METADATA 0x420d
#endif
#if defined(PTRACE_GET_SYSCALL_INFO) || (defined(HAVE_DECL_PTRACE_GET_SYSCALL_INFO) && HAVE_DECL_PTRACE_GET_SYSCALL_INFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_SYSCALL_INFO) == (0x420e), "PTRACE_GET_SYSCALL_INFO != 0x420e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_SYSCALL_INFO 0x420e
#endif
#if defined __arm__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS) == (0xc), "PTRACE_GETREGS != 0xc");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS 0xc
#endif
#elif defined __hppa__ || defined __ia64__
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS) == (0x12), "PTRACE_GETREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS 0x12
#endif
#else
#endif
#if defined __arm__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS) == (0xd), "PTRACE_SETREGS != 0xd");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS 0xd
#endif
#elif defined __hppa__ || defined __ia64__
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS) == (0x13), "PTRACE_SETREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS 0x13
#endif
#else
#endif
#if defined __arm__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GETFPREGS) || (defined(HAVE_DECL_PTRACE_GETFPREGS) && HAVE_DECL_PTRACE_GETFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPREGS) == (0xe), "PTRACE_GETFPREGS != 0xe");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPREGS 0xe
#endif
#else
#endif
#if defined __arm__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SETFPREGS) || (defined(HAVE_DECL_PTRACE_SETFPREGS) && HAVE_DECL_PTRACE_SETFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPREGS) == (0xf), "PTRACE_SETFPREGS != 0xf");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPREGS 0xf
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GETFPXREGS) || (defined(HAVE_DECL_PTRACE_GETFPXREGS) && HAVE_DECL_PTRACE_GETFPXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPXREGS) == (0x12), "PTRACE_GETFPXREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPXREGS 0x12
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SETFPXREGS) || (defined(HAVE_DECL_PTRACE_SETFPXREGS) && HAVE_DECL_PTRACE_SETFPXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPXREGS) == (0x13), "PTRACE_SETFPXREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPXREGS 0x13
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETHBPREGS) == (0x14), "PTRACE_GETHBPREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETHBPREGS 0x14
#endif
#elif defined __arm__
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETHBPREGS) == (0x1d), "PTRACE_GETHBPREGS != 0x1d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETHBPREGS 0x1d
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETHBPREGS) == (0x15), "PTRACE_SETHBPREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETHBPREGS 0x15
#endif
#elif defined __arm__
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETHBPREGS) == (0x1e), "PTRACE_SETHBPREGS != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETHBPREGS 0x1e
#endif
#else
#endif
#if defined __arm__ || defined __ia64__ || defined __mips__ || defined __s390__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_OLDSETOPTIONS) || (defined(HAVE_DECL_PTRACE_OLDSETOPTIONS) && HAVE_DECL_PTRACE_OLDSETOPTIONS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLDSETOPTIONS) == (0x15), "PTRACE_OLDSETOPTIONS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLDSETOPTIONS 0x15
#endif
#else
#endif
#if defined __powerpc__ || defined __sparc__
#if defined(PTRACE_GETREGS64) || (defined(HAVE_DECL_PTRACE_GETREGS64) && HAVE_DECL_PTRACE_GETREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS64) == (0x16), "PTRACE_GETREGS64 != 0x16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS64 0x16
#endif
#else
#endif
#if defined __powerpc__ || defined __sparc__
#if defined(PTRACE_SETREGS64) || (defined(HAVE_DECL_PTRACE_SETREGS64) && HAVE_DECL_PTRACE_SETREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS64) == (0x17), "PTRACE_SETREGS64 != 0x17");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS64 0x17
#endif
#else
#endif
#if defined __arm__ || defined __unicore32__
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA) == (0x16), "PTRACE_GET_THREAD_AREA != 0x16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA 0x16
#endif
#elif defined __arc__ || defined __m68k__ || defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA) == (0x19), "PTRACE_GET_THREAD_AREA != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA 0x19
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_SET_THREAD_AREA) && HAVE_DECL_PTRACE_SET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_THREAD_AREA) == (0x1a), "PTRACE_SET_THREAD_AREA != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_THREAD_AREA 0x1a
#endif
#else
#endif
#if defined __arm__ || defined __c6x__ || defined __sh__
#if defined(PTRACE_GETFDPIC) || (defined(HAVE_DECL_PTRACE_GETFDPIC) && HAVE_DECL_PTRACE_GETFDPIC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFDPIC) == (0x1f), "PTRACE_GETFDPIC != 0x1f");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFDPIC 0x1f
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU) == (0x1d), "PTRACE_SYSEMU != 0x1d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU 0x1d
#endif
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU) == (0x1f), "PTRACE_SYSEMU != 0x1f");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU 0x1f
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU_SINGLESTEP) == (0x1e), "PTRACE_SYSEMU_SINGLESTEP != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU_SINGLESTEP 0x1e
#endif
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU_SINGLESTEP) == (0x20), "PTRACE_SYSEMU_SINGLESTEP != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU_SINGLESTEP 0x20
#endif
#else
#endif
#if defined __hppa__ || defined __ia64__ || defined __s390__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0xc), "PTRACE_SINGLEBLOCK != 0xc");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0xc
#endif
#elif defined __m68k__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0x21), "PTRACE_SINGLEBLOCK != 0x21");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0x21
#endif
#elif defined __powerpc__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0x100), "PTRACE_SINGLEBLOCK != 0x100");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0x100
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_GETWMMXREGS) || (defined(HAVE_DECL_PTRACE_GETWMMXREGS) && HAVE_DECL_PTRACE_GETWMMXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETWMMXREGS) == (0x12), "PTRACE_GETWMMXREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETWMMXREGS 0x12
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SETWMMXREGS) || (defined(HAVE_DECL_PTRACE_SETWMMXREGS) && HAVE_DECL_PTRACE_SETWMMXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETWMMXREGS) == (0x13), "PTRACE_SETWMMXREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETWMMXREGS 0x13
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SET_SYSCALL) || (defined(HAVE_DECL_PTRACE_SET_SYSCALL) && HAVE_DECL_PTRACE_SET_SYSCALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_SYSCALL) == (0x17), "PTRACE_SET_SYSCALL != 0x17");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_SYSCALL 0x17
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_GETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_GETCRUNCHREGS) && HAVE_DECL_PTRACE_GETCRUNCHREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETCRUNCHREGS) == (0x19), "PTRACE_GETCRUNCHREGS != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETCRUNCHREGS 0x19
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_SETCRUNCHREGS) && HAVE_DECL_PTRACE_SETCRUNCHREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETCRUNCHREGS) == (0x1a), "PTRACE_SETCRUNCHREGS != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETCRUNCHREGS 0x1a
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_GETVFPREGS) || (defined(HAVE_DECL_PTRACE_GETVFPREGS) && HAVE_DECL_PTRACE_GETVFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVFPREGS) == (0x1b), "PTRACE_GETVFPREGS != 0x1b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVFPREGS 0x1b
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SETVFPREGS) || (defined(HAVE_DECL_PTRACE_SETVFPREGS) && HAVE_DECL_PTRACE_SETVFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVFPREGS) == (0x1c), "PTRACE_SETVFPREGS != 0x1c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVFPREGS 0x1c
#endif
#else
#endif
#if defined __ia64__
#if defined(PTRACE_OLD_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_GETSIGINFO) && HAVE_DECL_PTRACE_OLD_GETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLD_GETSIGINFO) == (0xd), "PTRACE_OLD_GETSIGINFO != 0xd");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLD_GETSIGINFO 0xd
#endif
#else
#endif
#if defined __ia64__
#if defined(PTRACE_OLD_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_SETSIGINFO) && HAVE_DECL_PTRACE_OLD_SETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLD_SETSIGINFO) == (0xe), "PTRACE_OLD_SETSIGINFO != 0xe");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLD_SETSIGINFO 0xe
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PTRACE_PEEKTEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT_3264) == (0xc0), "PTRACE_PEEKTEXT_3264 != 0xc0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT_3264 0xc0
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PTRACE_PEEKDATA_3264) && HAVE_DECL_PTRACE_PEEKDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA_3264) == (0xc1), "PTRACE_PEEKDATA_3264 != 0xc1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA_3264 0xc1
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PTRACE_POKETEXT_3264) && HAVE_DECL_PTRACE_POKETEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT_3264) == (0xc2), "PTRACE_POKETEXT_3264 != 0xc2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT_3264 0xc2
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PTRACE_POKEDATA_3264) && HAVE_DECL_PTRACE_POKEDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA_3264) == (0xc3), "PTRACE_POKEDATA_3264 != 0xc3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA_3264 0xc3
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_GET_THREAD_AREA_3264) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA_3264) && HAVE_DECL_PTRACE_GET_THREAD_AREA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA_3264) == (0xc4), "PTRACE_GET_THREAD_AREA_3264 != 0xc4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA_3264 0xc4
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_GET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_GET_WATCH_REGS) && HAVE_DECL_PTRACE_GET_WATCH_REGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_WATCH_REGS) == (0xd0), "PTRACE_GET_WATCH_REGS != 0xd0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_WATCH_REGS 0xd0
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_SET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_SET_WATCH_REGS) && HAVE_DECL_PTRACE_SET_WATCH_REGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_WATCH_REGS) == (0xd1), "PTRACE_SET_WATCH_REGS != 0xd1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_WATCH_REGS 0xd1
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETVRREGS) || (defined(HAVE_DECL_PTRACE_GETVRREGS) && HAVE_DECL_PTRACE_GETVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVRREGS) == (0x12), "PTRACE_GETVRREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVRREGS 0x12
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETVRREGS) || (defined(HAVE_DECL_PTRACE_SETVRREGS) && HAVE_DECL_PTRACE_SETVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVRREGS) == (0x13), "PTRACE_SETVRREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVRREGS 0x13
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETEVRREGS) || (defined(HAVE_DECL_PTRACE_GETEVRREGS) && HAVE_DECL_PTRACE_GETEVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETEVRREGS) == (0x14), "PTRACE_GETEVRREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETEVRREGS 0x14
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETEVRREGS) || (defined(HAVE_DECL_PTRACE_SETEVRREGS) && HAVE_DECL_PTRACE_SETEVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETEVRREGS) == (0x15), "PTRACE_SETEVRREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETEVRREGS 0x15
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETVSRREGS) || (defined(HAVE_DECL_PTRACE_GETVSRREGS) && HAVE_DECL_PTRACE_GETVSRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVSRREGS) == (0x1b), "PTRACE_GETVSRREGS != 0x1b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVSRREGS 0x1b
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETVSRREGS) || (defined(HAVE_DECL_PTRACE_SETVSRREGS) && HAVE_DECL_PTRACE_SETVSRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVSRREGS) == (0x1c), "PTRACE_SETVSRREGS != 0x1c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVSRREGS 0x1c
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_GET_DEBUGREG) && HAVE_DECL_PTRACE_GET_DEBUGREG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_DEBUGREG) == (0x19), "PTRACE_GET_DEBUGREG != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_DEBUGREG 0x19
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_SET_DEBUGREG) && HAVE_DECL_PTRACE_SET_DEBUGREG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_DEBUGREG) == (0x1a), "PTRACE_SET_DEBUGREG != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_DEBUGREG 0x1a
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_DELHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_DELHWDEBUG) && HAVE_DECL_PPC_PTRACE_DELHWDEBUG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_DELHWDEBUG) == (0x87), "PPC_PTRACE_DELHWDEBUG != 0x87");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_DELHWDEBUG 0x87
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_SETHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_SETHWDEBUG) && HAVE_DECL_PPC_PTRACE_SETHWDEBUG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_SETHWDEBUG) == (0x88), "PPC_PTRACE_SETHWDEBUG != 0x88");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_SETHWDEBUG 0x88
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_GETHWDBGINFO) || (defined(HAVE_DECL_PPC_PTRACE_GETHWDBGINFO) && HAVE_DECL_PPC_PTRACE_GETHWDBGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_GETHWDBGINFO) == (0x89), "PPC_PTRACE_GETHWDBGINFO != 0x89");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_GETHWDBGINFO 0x89
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKEUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEUSR_3264) && HAVE_DECL_PPC_PTRACE_POKEUSR_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKEUSR_3264) == (0x90), "PPC_PTRACE_POKEUSR_3264 != 0x90");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKEUSR_3264 0x90
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKUSR_3264) && HAVE_DECL_PPC_PTRACE_PEEKUSR_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKUSR_3264) == (0x91), "PPC_PTRACE_PEEKUSR_3264 != 0x91");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKUSR_3264 0x91
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEDATA_3264) && HAVE_DECL_PPC_PTRACE_POKEDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKEDATA_3264) == (0x92), "PPC_PTRACE_POKEDATA_3264 != 0x92");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKEDATA_3264 0x92
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKETEXT_3264) && HAVE_DECL_PPC_PTRACE_POKETEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKETEXT_3264) == (0x93), "PPC_PTRACE_POKETEXT_3264 != 0x93");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKETEXT_3264 0x93
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKDATA_3264) && HAVE_DECL_PPC_PTRACE_PEEKDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKDATA_3264) == (0x94), "PPC_PTRACE_PEEKDATA_3264 != 0x94");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKDATA_3264 0x94
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKTEXT_3264) == (0x95), "PPC_PTRACE_PEEKTEXT_3264 != 0x95");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKTEXT_3264 0x95
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKUSR_AREA) || (defined(HAVE_DECL_PTRACE_PEEKUSR_AREA) && HAVE_DECL_PTRACE_PEEKUSR_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKUSR_AREA) == (0x5000), "PTRACE_PEEKUSR_AREA != 0x5000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKUSR_AREA 0x5000
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKEUSR_AREA) || (defined(HAVE_DECL_PTRACE_POKEUSR_AREA) && HAVE_DECL_PTRACE_POKEUSR_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEUSR_AREA) == (0x5001), "PTRACE_POKEUSR_AREA != 0x5001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEUSR_AREA 0x5001
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKTEXT_AREA) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_AREA) && HAVE_DECL_PTRACE_PEEKTEXT_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT_AREA) == (0x5002), "PTRACE_PEEKTEXT_AREA != 0x5002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT_AREA 0x5002
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKDATA_AREA) || (defined(HAVE_DECL_PTRACE_PEEKDATA_AREA) && HAVE_DECL_PTRACE_PEEKDATA_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA_AREA) == (0x5003), "PTRACE_PEEKDATA_AREA != 0x5003");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA_AREA 0x5003
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKETEXT_AREA) || (defined(HAVE_DECL_PTRACE_POKETEXT_AREA) && HAVE_DECL_PTRACE_POKETEXT_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT_AREA) == (0x5004), "PTRACE_POKETEXT_AREA != 0x5004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT_AREA 0x5004
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKEDATA_AREA) || (defined(HAVE_DECL_PTRACE_POKEDATA_AREA) && HAVE_DECL_PTRACE_POKEDATA_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA_AREA) == (0x5005), "PTRACE_POKEDATA_AREA != 0x5005");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA_AREA 0x5005
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_GET_LAST_BREAK) || (defined(HAVE_DECL_PTRACE_GET_LAST_BREAK) && HAVE_DECL_PTRACE_GET_LAST_BREAK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_LAST_BREAK) == (0x5006), "PTRACE_GET_LAST_BREAK != 0x5006");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_LAST_BREAK 0x5006
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEK_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL) && HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEK_SYSTEM_CALL) == (0x5007), "PTRACE_PEEK_SYSTEM_CALL != 0x5007");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEK_SYSTEM_CALL 0x5007
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKE_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_POKE_SYSTEM_CALL) && HAVE_DECL_PTRACE_POKE_SYSTEM_CALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKE_SYSTEM_CALL) == (0x5008), "PTRACE_POKE_SYSTEM_CALL != 0x5008");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKE_SYSTEM_CALL 0x5008
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_ENABLE_TE) || (defined(HAVE_DECL_PTRACE_ENABLE_TE) && HAVE_DECL_PTRACE_ENABLE_TE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ENABLE_TE) == (0x5009), "PTRACE_ENABLE_TE != 0x5009");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ENABLE_TE 0x5009
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_DISABLE_TE) || (defined(HAVE_DECL_PTRACE_DISABLE_TE) && HAVE_DECL_PTRACE_DISABLE_TE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_DISABLE_TE) == (0x5010), "PTRACE_DISABLE_TE != 0x5010");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_DISABLE_TE 0x5010
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_TE_ABORT_RAND) || (defined(HAVE_DECL_PTRACE_TE_ABORT_RAND) && HAVE_DECL_PTRACE_TE_ABORT_RAND)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_TE_ABORT_RAND) == (0x5011), "PTRACE_TE_ABORT_RAND != 0x5011");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_TE_ABORT_RAND 0x5011
#endif
#else
#endif
#if defined __sh__
#if defined(PTRACE_GETDSPREGS) || (defined(HAVE_DECL_PTRACE_GETDSPREGS) && HAVE_DECL_PTRACE_GETDSPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETDSPREGS) == (0x37), "PTRACE_GETDSPREGS != 0x37");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETDSPREGS 0x37
#endif
#else
#endif
#if defined __sh__
#if defined(PTRACE_SETDSPREGS) || (defined(HAVE_DECL_PTRACE_SETDSPREGS) && HAVE_DECL_PTRACE_SETDSPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETDSPREGS) == (0x38), "PTRACE_SETDSPREGS != 0x38");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETDSPREGS 0x38
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SPARC_DETACH) || (defined(HAVE_DECL_PTRACE_SPARC_DETACH) && HAVE_DECL_PTRACE_SPARC_DETACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SPARC_DETACH) == (0xb), "PTRACE_SPARC_DETACH != 0xb");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SPARC_DETACH 0xb
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_READDATA) || (defined(HAVE_DECL_PTRACE_READDATA) && HAVE_DECL_PTRACE_READDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_READDATA) == (0x10), "PTRACE_READDATA != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_READDATA 0x10
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_WRITEDATA) || (defined(HAVE_DECL_PTRACE_WRITEDATA) && HAVE_DECL_PTRACE_WRITEDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_WRITEDATA) == (0x11), "PTRACE_WRITEDATA != 0x11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_WRITEDATA 0x11
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_READTEXT) || (defined(HAVE_DECL_PTRACE_READTEXT) && HAVE_DECL_PTRACE_READTEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_READTEXT) == (0x12), "PTRACE_READTEXT != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_READTEXT 0x12
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_WRITETEXT) || (defined(HAVE_DECL_PTRACE_WRITETEXT) && HAVE_DECL_PTRACE_WRITETEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_WRITETEXT) == (0x13), "PTRACE_WRITETEXT != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_WRITETEXT 0x13
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_GETFPAREGS) || (defined(HAVE_DECL_PTRACE_GETFPAREGS) && HAVE_DECL_PTRACE_GETFPAREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPAREGS) == (0x14), "PTRACE_GETFPAREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPAREGS 0x14
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SETFPAREGS) || (defined(HAVE_DECL_PTRACE_SETFPAREGS) && HAVE_DECL_PTRACE_SETFPAREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPAREGS) == (0x15), "PTRACE_SETFPAREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPAREGS 0x15
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_GETFPREGS64) || (defined(HAVE_DECL_PTRACE_GETFPREGS64) && HAVE_DECL_PTRACE_GETFPREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPREGS64) == (0x19), "PTRACE_GETFPREGS64 != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPREGS64 0x19
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SETFPREGS64) || (defined(HAVE_DECL_PTRACE_SETFPREGS64) && HAVE_DECL_PTRACE_SETFPREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPREGS64) == (0x1a), "PTRACE_SETFPREGS64 != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPREGS64 0x1a
#endif
#else
#endif
#if defined __x86_64__ || defined __i386__
#if defined(PTRACE_ARCH_PRCTL) || (defined(HAVE_DECL_PTRACE_ARCH_PRCTL) && HAVE_DECL_PTRACE_ARCH_PRCTL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ARCH_PRCTL) == (0x1e), "PTRACE_ARCH_PRCTL != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ARCH_PRCTL 0x1e
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_GETXTREGS) || (defined(HAVE_DECL_PTRACE_GETXTREGS) && HAVE_DECL_PTRACE_GETXTREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETXTREGS) == (0x12), "PTRACE_GETXTREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETXTREGS 0x12
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_SETXTREGS) || (defined(HAVE_DECL_PTRACE_SETXTREGS) && HAVE_DECL_PTRACE_SETXTREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETXTREGS) == (0x13), "PTRACE_SETXTREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETXTREGS 0x13
#endif
#else
#endif

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

static const struct xlat_data ptrace_cmds_xdata[] = {

 XLAT(PTRACE_TRACEME),
 XLAT(PTRACE_PEEKTEXT),
 XLAT(PTRACE_PEEKDATA),
 XLAT(PTRACE_PEEKUSER),
 XLAT(PTRACE_POKETEXT),
 XLAT(PTRACE_POKEDATA),
 XLAT(PTRACE_POKEUSER),
 XLAT(PTRACE_CONT),
 XLAT(PTRACE_KILL),
 XLAT(PTRACE_SINGLESTEP),
 XLAT(PTRACE_ATTACH),

/*
* On sparc, there is PTRACE_SPARC_DETACH (= 11) that is used instead
* of PTRACE_DETACH, as PTRACE_DETACH's number (0x11) is occupied
* by PTRACE_WRITEDATA.
*/
#if !defined __sparc__
 XLAT(PTRACE_DETACH),
#else
#if defined(PTRACE_DETACH) || (defined(HAVE_DECL_PTRACE_DETACH) && HAVE_DECL_PTRACE_DETACH)
  XLAT(PTRACE_DETACH),
#endif
#endif

 XLAT(PTRACE_SYSCALL),

 XLAT(PTRACE_SETOPTIONS),
 XLAT(PTRACE_GETEVENTMSG),
 XLAT(PTRACE_GETSIGINFO),
 XLAT(PTRACE_SETSIGINFO),
 XLAT(PTRACE_GETREGSET),
 XLAT(PTRACE_SETREGSET),
 XLAT(PTRACE_SEIZE),
 XLAT(PTRACE_INTERRUPT),
 XLAT(PTRACE_LISTEN),
 XLAT(PTRACE_PEEKSIGINFO),
 XLAT(PTRACE_GETSIGMASK),
 XLAT(PTRACE_SETSIGMASK),
 XLAT(PTRACE_SECCOMP_GET_FILTER),
 XLAT(PTRACE_SECCOMP_GET_METADATA),
 XLAT(PTRACE_GET_SYSCALL_INFO),


#if defined __arm__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
 XLAT(PTRACE_GETREGS),
#elif defined __hppa__ || defined __ia64__
 XLAT(PTRACE_GETREGS),
#else
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
  XLAT(PTRACE_GETREGS),
#endif
#endif

#if defined __arm__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
 XLAT(PTRACE_SETREGS),
#elif defined __hppa__ || defined __ia64__
 XLAT(PTRACE_SETREGS),
#else
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
  XLAT(PTRACE_SETREGS),
#endif
#endif

#if defined __arm__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GETFPREGS),
#else
#if defined(PTRACE_GETFPREGS) || (defined(HAVE_DECL_PTRACE_GETFPREGS) && HAVE_DECL_PTRACE_GETFPREGS)
  XLAT(PTRACE_GETFPREGS),
#endif
#endif

#if defined __arm__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SETFPREGS),
#else
#if defined(PTRACE_SETFPREGS) || (defined(HAVE_DECL_PTRACE_SETFPREGS) && HAVE_DECL_PTRACE_SETFPREGS)
  XLAT(PTRACE_SETFPREGS),
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GETFPXREGS),
#else
#if defined(PTRACE_GETFPXREGS) || (defined(HAVE_DECL_PTRACE_GETFPXREGS) && HAVE_DECL_PTRACE_GETFPXREGS)
  XLAT(PTRACE_GETFPXREGS),
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SETFPXREGS),
#else
#if defined(PTRACE_SETFPXREGS) || (defined(HAVE_DECL_PTRACE_SETFPXREGS) && HAVE_DECL_PTRACE_SETFPXREGS)
  XLAT(PTRACE_SETFPXREGS),
#endif
#endif

#if defined __xtensa__
 XLAT(PTRACE_GETHBPREGS),
#elif defined __arm__
 XLAT(PTRACE_GETHBPREGS),
#else
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
  XLAT(PTRACE_GETHBPREGS),
#endif
#endif

#if defined __xtensa__
 XLAT(PTRACE_SETHBPREGS),
#elif defined __arm__
 XLAT(PTRACE_SETHBPREGS),
#else
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
  XLAT(PTRACE_SETHBPREGS),
#endif
#endif

#if defined __arm__ || defined __ia64__ || defined __mips__ || defined __s390__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_OLDSETOPTIONS),
#else
#if defined(PTRACE_OLDSETOPTIONS) || (defined(HAVE_DECL_PTRACE_OLDSETOPTIONS) && HAVE_DECL_PTRACE_OLDSETOPTIONS)
  XLAT(PTRACE_OLDSETOPTIONS),
#endif
#endif

#if defined __powerpc__ || defined __sparc__
 XLAT(PTRACE_GETREGS64),
#else
#if defined(PTRACE_GETREGS64) || (defined(HAVE_DECL_PTRACE_GETREGS64) && HAVE_DECL_PTRACE_GETREGS64)
  XLAT(PTRACE_GETREGS64),
#endif
#endif
#if defined __powerpc__ || defined __sparc__
 XLAT(PTRACE_SETREGS64),
#else
#if defined(PTRACE_SETREGS64) || (defined(HAVE_DECL_PTRACE_SETREGS64) && HAVE_DECL_PTRACE_SETREGS64)
  XLAT(PTRACE_SETREGS64),
#endif
#endif

#if defined __arm__ || defined __unicore32__
 XLAT(PTRACE_GET_THREAD_AREA),
#elif defined __arc__ || defined __m68k__ || defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GET_THREAD_AREA),
#else
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
  XLAT(PTRACE_GET_THREAD_AREA),
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SET_THREAD_AREA),
#else
#if defined(PTRACE_SET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_SET_THREAD_AREA) && HAVE_DECL_PTRACE_SET_THREAD_AREA)
  XLAT(PTRACE_SET_THREAD_AREA),
#endif
#endif

#if defined __arm__ || defined __c6x__ || defined __sh__
 XLAT(PTRACE_GETFDPIC),
#else
#if defined(PTRACE_GETFDPIC) || (defined(HAVE_DECL_PTRACE_GETFDPIC) && HAVE_DECL_PTRACE_GETFDPIC)
  XLAT(PTRACE_GETFDPIC),
#endif
#endif

#if defined __powerpc__
 XLAT(PTRACE_SYSEMU),
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SYSEMU),
#else
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
  XLAT(PTRACE_SYSEMU),
#endif
#endif

#if defined __powerpc__
 XLAT(PTRACE_SYSEMU_SINGLESTEP),
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SYSEMU_SINGLESTEP),
#else
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
  XLAT(PTRACE_SYSEMU_SINGLESTEP),
#endif
#endif

#if defined __hppa__ || defined __ia64__ || defined __s390__
 XLAT(PTRACE_SINGLEBLOCK),
#elif defined __m68k__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SINGLEBLOCK),
#elif defined __powerpc__
 XLAT(PTRACE_SINGLEBLOCK),
#else
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
  XLAT(PTRACE_SINGLEBLOCK),
#endif
#endif


#if defined __arm__
 XLAT(PTRACE_GETWMMXREGS),
#else
#if defined(PTRACE_GETWMMXREGS) || (defined(HAVE_DECL_PTRACE_GETWMMXREGS) && HAVE_DECL_PTRACE_GETWMMXREGS)
  XLAT(PTRACE_GETWMMXREGS),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SETWMMXREGS),
#else
#if defined(PTRACE_SETWMMXREGS) || (defined(HAVE_DECL_PTRACE_SETWMMXREGS) && HAVE_DECL_PTRACE_SETWMMXREGS)
  XLAT(PTRACE_SETWMMXREGS),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SET_SYSCALL),
#else
#if defined(PTRACE_SET_SYSCALL) || (defined(HAVE_DECL_PTRACE_SET_SYSCALL) && HAVE_DECL_PTRACE_SET_SYSCALL)
  XLAT(PTRACE_SET_SYSCALL),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_GETCRUNCHREGS),
#else
#if defined(PTRACE_GETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_GETCRUNCHREGS) && HAVE_DECL_PTRACE_GETCRUNCHREGS)
  XLAT(PTRACE_GETCRUNCHREGS),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SETCRUNCHREGS),
#else
#if defined(PTRACE_SETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_SETCRUNCHREGS) && HAVE_DECL_PTRACE_SETCRUNCHREGS)
  XLAT(PTRACE_SETCRUNCHREGS),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_GETVFPREGS),
#else
#if defined(PTRACE_GETVFPREGS) || (defined(HAVE_DECL_PTRACE_GETVFPREGS) && HAVE_DECL_PTRACE_GETVFPREGS)
  XLAT(PTRACE_GETVFPREGS),
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SETVFPREGS),
#else
#if defined(PTRACE_SETVFPREGS) || (defined(HAVE_DECL_PTRACE_SETVFPREGS) && HAVE_DECL_PTRACE_SETVFPREGS)
  XLAT(PTRACE_SETVFPREGS),
#endif
#endif


#if defined __ia64__
 XLAT(PTRACE_OLD_GETSIGINFO),
#else
#if defined(PTRACE_OLD_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_GETSIGINFO) && HAVE_DECL_PTRACE_OLD_GETSIGINFO)
  XLAT(PTRACE_OLD_GETSIGINFO),
#endif
#endif
#if defined __ia64__
 XLAT(PTRACE_OLD_SETSIGINFO),
#else
#if defined(PTRACE_OLD_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_SETSIGINFO) && HAVE_DECL_PTRACE_OLD_SETSIGINFO)
  XLAT(PTRACE_OLD_SETSIGINFO),
#endif
#endif


#if defined __mips__
 XLAT(PTRACE_PEEKTEXT_3264),
#else
#if defined(PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PTRACE_PEEKTEXT_3264)
  XLAT(PTRACE_PEEKTEXT_3264),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_PEEKDATA_3264),
#else
#if defined(PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PTRACE_PEEKDATA_3264) && HAVE_DECL_PTRACE_PEEKDATA_3264)
  XLAT(PTRACE_PEEKDATA_3264),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_POKETEXT_3264),
#else
#if defined(PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PTRACE_POKETEXT_3264) && HAVE_DECL_PTRACE_POKETEXT_3264)
  XLAT(PTRACE_POKETEXT_3264),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_POKEDATA_3264),
#else
#if defined(PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PTRACE_POKEDATA_3264) && HAVE_DECL_PTRACE_POKEDATA_3264)
  XLAT(PTRACE_POKEDATA_3264),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_GET_THREAD_AREA_3264),
#else
#if defined(PTRACE_GET_THREAD_AREA_3264) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA_3264) && HAVE_DECL_PTRACE_GET_THREAD_AREA_3264)
  XLAT(PTRACE_GET_THREAD_AREA_3264),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_GET_WATCH_REGS),
#else
#if defined(PTRACE_GET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_GET_WATCH_REGS) && HAVE_DECL_PTRACE_GET_WATCH_REGS)
  XLAT(PTRACE_GET_WATCH_REGS),
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_SET_WATCH_REGS),
#else
#if defined(PTRACE_SET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_SET_WATCH_REGS) && HAVE_DECL_PTRACE_SET_WATCH_REGS)
  XLAT(PTRACE_SET_WATCH_REGS),
#endif
#endif


#if defined __powerpc__
 XLAT(PTRACE_GETVRREGS),
#else
#if defined(PTRACE_GETVRREGS) || (defined(HAVE_DECL_PTRACE_GETVRREGS) && HAVE_DECL_PTRACE_GETVRREGS)
  XLAT(PTRACE_GETVRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETVRREGS),
#else
#if defined(PTRACE_SETVRREGS) || (defined(HAVE_DECL_PTRACE_SETVRREGS) && HAVE_DECL_PTRACE_SETVRREGS)
  XLAT(PTRACE_SETVRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GETEVRREGS),
#else
#if defined(PTRACE_GETEVRREGS) || (defined(HAVE_DECL_PTRACE_GETEVRREGS) && HAVE_DECL_PTRACE_GETEVRREGS)
  XLAT(PTRACE_GETEVRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETEVRREGS),
#else
#if defined(PTRACE_SETEVRREGS) || (defined(HAVE_DECL_PTRACE_SETEVRREGS) && HAVE_DECL_PTRACE_SETEVRREGS)
  XLAT(PTRACE_SETEVRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GETVSRREGS),
#else
#if defined(PTRACE_GETVSRREGS) || (defined(HAVE_DECL_PTRACE_GETVSRREGS) && HAVE_DECL_PTRACE_GETVSRREGS)
  XLAT(PTRACE_GETVSRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETVSRREGS),
#else
#if defined(PTRACE_SETVSRREGS) || (defined(HAVE_DECL_PTRACE_SETVSRREGS) && HAVE_DECL_PTRACE_SETVSRREGS)
  XLAT(PTRACE_SETVSRREGS),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GET_DEBUGREG),
#else
#if defined(PTRACE_GET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_GET_DEBUGREG) && HAVE_DECL_PTRACE_GET_DEBUGREG)
  XLAT(PTRACE_GET_DEBUGREG),
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SET_DEBUGREG),
#else
#if defined(PTRACE_SET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_SET_DEBUGREG) && HAVE_DECL_PTRACE_SET_DEBUGREG)
  XLAT(PTRACE_SET_DEBUGREG),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_DELHWDEBUG),
#else
#if defined(PPC_PTRACE_DELHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_DELHWDEBUG) && HAVE_DECL_PPC_PTRACE_DELHWDEBUG)
  XLAT(PPC_PTRACE_DELHWDEBUG),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_SETHWDEBUG),
#else
#if defined(PPC_PTRACE_SETHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_SETHWDEBUG) && HAVE_DECL_PPC_PTRACE_SETHWDEBUG)
  XLAT(PPC_PTRACE_SETHWDEBUG),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_GETHWDBGINFO),
#else
#if defined(PPC_PTRACE_GETHWDBGINFO) || (defined(HAVE_DECL_PPC_PTRACE_GETHWDBGINFO) && HAVE_DECL_PPC_PTRACE_GETHWDBGINFO)
  XLAT(PPC_PTRACE_GETHWDBGINFO),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKEUSR_3264),
#else
#if defined(PPC_PTRACE_POKEUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEUSR_3264) && HAVE_DECL_PPC_PTRACE_POKEUSR_3264)
  XLAT(PPC_PTRACE_POKEUSR_3264),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKUSR_3264),
#else
#if defined(PPC_PTRACE_PEEKUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKUSR_3264) && HAVE_DECL_PPC_PTRACE_PEEKUSR_3264)
  XLAT(PPC_PTRACE_PEEKUSR_3264),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKEDATA_3264),
#else
#if defined(PPC_PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEDATA_3264) && HAVE_DECL_PPC_PTRACE_POKEDATA_3264)
  XLAT(PPC_PTRACE_POKEDATA_3264),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKETEXT_3264),
#else
#if defined(PPC_PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKETEXT_3264) && HAVE_DECL_PPC_PTRACE_POKETEXT_3264)
  XLAT(PPC_PTRACE_POKETEXT_3264),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKDATA_3264),
#else
#if defined(PPC_PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKDATA_3264) && HAVE_DECL_PPC_PTRACE_PEEKDATA_3264)
  XLAT(PPC_PTRACE_PEEKDATA_3264),
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKTEXT_3264),
#else
#if defined(PPC_PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264)
  XLAT(PPC_PTRACE_PEEKTEXT_3264),
#endif
#endif


#if defined __s390__
 XLAT(PTRACE_PEEKUSR_AREA),
#else
#if defined(PTRACE_PEEKUSR_AREA) || (defined(HAVE_DECL_PTRACE_PEEKUSR_AREA) && HAVE_DECL_PTRACE_PEEKUSR_AREA)
  XLAT(PTRACE_PEEKUSR_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKEUSR_AREA),
#else
#if defined(PTRACE_POKEUSR_AREA) || (defined(HAVE_DECL_PTRACE_POKEUSR_AREA) && HAVE_DECL_PTRACE_POKEUSR_AREA)
  XLAT(PTRACE_POKEUSR_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEKTEXT_AREA),
#else
#if defined(PTRACE_PEEKTEXT_AREA) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_AREA) && HAVE_DECL_PTRACE_PEEKTEXT_AREA)
  XLAT(PTRACE_PEEKTEXT_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEKDATA_AREA),
#else
#if defined(PTRACE_PEEKDATA_AREA) || (defined(HAVE_DECL_PTRACE_PEEKDATA_AREA) && HAVE_DECL_PTRACE_PEEKDATA_AREA)
  XLAT(PTRACE_PEEKDATA_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKETEXT_AREA),
#else
#if defined(PTRACE_POKETEXT_AREA) || (defined(HAVE_DECL_PTRACE_POKETEXT_AREA) && HAVE_DECL_PTRACE_POKETEXT_AREA)
  XLAT(PTRACE_POKETEXT_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKEDATA_AREA),
#else
#if defined(PTRACE_POKEDATA_AREA) || (defined(HAVE_DECL_PTRACE_POKEDATA_AREA) && HAVE_DECL_PTRACE_POKEDATA_AREA)
  XLAT(PTRACE_POKEDATA_AREA),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_GET_LAST_BREAK),
#else
#if defined(PTRACE_GET_LAST_BREAK) || (defined(HAVE_DECL_PTRACE_GET_LAST_BREAK) && HAVE_DECL_PTRACE_GET_LAST_BREAK)
  XLAT(PTRACE_GET_LAST_BREAK),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEK_SYSTEM_CALL),
#else
#if defined(PTRACE_PEEK_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL) && HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL)
  XLAT(PTRACE_PEEK_SYSTEM_CALL),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKE_SYSTEM_CALL),
#else
#if defined(PTRACE_POKE_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_POKE_SYSTEM_CALL) && HAVE_DECL_PTRACE_POKE_SYSTEM_CALL)
  XLAT(PTRACE_POKE_SYSTEM_CALL),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_ENABLE_TE),
#else
#if defined(PTRACE_ENABLE_TE) || (defined(HAVE_DECL_PTRACE_ENABLE_TE) && HAVE_DECL_PTRACE_ENABLE_TE)
  XLAT(PTRACE_ENABLE_TE),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_DISABLE_TE),
#else
#if defined(PTRACE_DISABLE_TE) || (defined(HAVE_DECL_PTRACE_DISABLE_TE) && HAVE_DECL_PTRACE_DISABLE_TE)
  XLAT(PTRACE_DISABLE_TE),
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_TE_ABORT_RAND),
#else
#if defined(PTRACE_TE_ABORT_RAND) || (defined(HAVE_DECL_PTRACE_TE_ABORT_RAND) && HAVE_DECL_PTRACE_TE_ABORT_RAND)
  XLAT(PTRACE_TE_ABORT_RAND),
#endif
#endif


#if defined __sh__
 XLAT(PTRACE_GETDSPREGS),
#else
#if defined(PTRACE_GETDSPREGS) || (defined(HAVE_DECL_PTRACE_GETDSPREGS) && HAVE_DECL_PTRACE_GETDSPREGS)
  XLAT(PTRACE_GETDSPREGS),
#endif
#endif
#if defined __sh__
 XLAT(PTRACE_SETDSPREGS),
#else
#if defined(PTRACE_SETDSPREGS) || (defined(HAVE_DECL_PTRACE_SETDSPREGS) && HAVE_DECL_PTRACE_SETDSPREGS)
  XLAT(PTRACE_SETDSPREGS),
#endif
#endif


#if defined __sparc__
 XLAT(PTRACE_SPARC_DETACH),
#else
#if defined(PTRACE_SPARC_DETACH) || (defined(HAVE_DECL_PTRACE_SPARC_DETACH) && HAVE_DECL_PTRACE_SPARC_DETACH)
  XLAT(PTRACE_SPARC_DETACH),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_READDATA),
#else
#if defined(PTRACE_READDATA) || (defined(HAVE_DECL_PTRACE_READDATA) && HAVE_DECL_PTRACE_READDATA)
  XLAT(PTRACE_READDATA),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_WRITEDATA),
#else
#if defined(PTRACE_WRITEDATA) || (defined(HAVE_DECL_PTRACE_WRITEDATA) && HAVE_DECL_PTRACE_WRITEDATA)
  XLAT(PTRACE_WRITEDATA),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_READTEXT),
#else
#if defined(PTRACE_READTEXT) || (defined(HAVE_DECL_PTRACE_READTEXT) && HAVE_DECL_PTRACE_READTEXT)
  XLAT(PTRACE_READTEXT),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_WRITETEXT),
#else
#if defined(PTRACE_WRITETEXT) || (defined(HAVE_DECL_PTRACE_WRITETEXT) && HAVE_DECL_PTRACE_WRITETEXT)
  XLAT(PTRACE_WRITETEXT),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_GETFPAREGS),
#else
#if defined(PTRACE_GETFPAREGS) || (defined(HAVE_DECL_PTRACE_GETFPAREGS) && HAVE_DECL_PTRACE_GETFPAREGS)
  XLAT(PTRACE_GETFPAREGS),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_SETFPAREGS),
#else
#if defined(PTRACE_SETFPAREGS) || (defined(HAVE_DECL_PTRACE_SETFPAREGS) && HAVE_DECL_PTRACE_SETFPAREGS)
  XLAT(PTRACE_SETFPAREGS),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_GETFPREGS64),
#else
#if defined(PTRACE_GETFPREGS64) || (defined(HAVE_DECL_PTRACE_GETFPREGS64) && HAVE_DECL_PTRACE_GETFPREGS64)
  XLAT(PTRACE_GETFPREGS64),
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_SETFPREGS64),
#else
#if defined(PTRACE_SETFPREGS64) || (defined(HAVE_DECL_PTRACE_SETFPREGS64) && HAVE_DECL_PTRACE_SETFPREGS64)
  XLAT(PTRACE_SETFPREGS64),
#endif
#endif


#if defined __x86_64__ || defined __i386__
 XLAT(PTRACE_ARCH_PRCTL),
#else
#if defined(PTRACE_ARCH_PRCTL) || (defined(HAVE_DECL_PTRACE_ARCH_PRCTL) && HAVE_DECL_PTRACE_ARCH_PRCTL)
  XLAT(PTRACE_ARCH_PRCTL),
#endif
#endif


#if defined __xtensa__
 XLAT(PTRACE_GETXTREGS),
#else
#if defined(PTRACE_GETXTREGS) || (defined(HAVE_DECL_PTRACE_GETXTREGS) && HAVE_DECL_PTRACE_GETXTREGS)
  XLAT(PTRACE_GETXTREGS),
#endif
#endif
#if defined __xtensa__
 XLAT(PTRACE_SETXTREGS),
#else
#if defined(PTRACE_SETXTREGS) || (defined(HAVE_DECL_PTRACE_SETXTREGS) && HAVE_DECL_PTRACE_SETXTREGS)
  XLAT(PTRACE_SETXTREGS),
#endif
#endif
};
const struct xlat ptrace_cmds[1] = { {
 .data = ptrace_cmds_xdata,
 .size = ARRAY_SIZE(ptrace_cmds_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
