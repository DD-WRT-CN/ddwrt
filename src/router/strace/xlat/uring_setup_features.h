/* Generated by ./xlat/gen.sh from ./xlat/uring_setup_features.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(IORING_FEAT_SINGLE_MMAP) || (defined(HAVE_DECL_IORING_FEAT_SINGLE_MMAP) && HAVE_DECL_IORING_FEAT_SINGLE_MMAP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IORING_FEAT_SINGLE_MMAP) == ((1<<0)), "IORING_FEAT_SINGLE_MMAP != (1<<0)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IORING_FEAT_SINGLE_MMAP (1<<0)
#endif
#if defined(IORING_FEAT_NODROP) || (defined(HAVE_DECL_IORING_FEAT_NODROP) && HAVE_DECL_IORING_FEAT_NODROP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IORING_FEAT_NODROP) == ((1<<1)), "IORING_FEAT_NODROP != (1<<1)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IORING_FEAT_NODROP (1<<1)
#endif
#if defined(IORING_FEAT_SUBMIT_STABLE) || (defined(HAVE_DECL_IORING_FEAT_SUBMIT_STABLE) && HAVE_DECL_IORING_FEAT_SUBMIT_STABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IORING_FEAT_SUBMIT_STABLE) == ((1<<2)), "IORING_FEAT_SUBMIT_STABLE != (1<<2)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IORING_FEAT_SUBMIT_STABLE (1<<2)
#endif
#if defined(IORING_FEAT_RW_CUR_POS) || (defined(HAVE_DECL_IORING_FEAT_RW_CUR_POS) && HAVE_DECL_IORING_FEAT_RW_CUR_POS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IORING_FEAT_RW_CUR_POS) == ((1<<3)), "IORING_FEAT_RW_CUR_POS != (1<<3)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IORING_FEAT_RW_CUR_POS (1<<3)
#endif
#if defined(IORING_FEAT_CUR_PERSONALITY) || (defined(HAVE_DECL_IORING_FEAT_CUR_PERSONALITY) && HAVE_DECL_IORING_FEAT_CUR_PERSONALITY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IORING_FEAT_CUR_PERSONALITY) == ((1<<4)), "IORING_FEAT_CUR_PERSONALITY != (1<<4)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IORING_FEAT_CUR_PERSONALITY (1<<4)
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uring_setup_features in mpers mode

# else

static const struct xlat_data uring_setup_features_xdata[] = {
 XLAT(IORING_FEAT_SINGLE_MMAP),
 XLAT(IORING_FEAT_NODROP),
 XLAT(IORING_FEAT_SUBMIT_STABLE),
 XLAT(IORING_FEAT_RW_CUR_POS),
 XLAT(IORING_FEAT_CUR_PERSONALITY),
};
static
const struct xlat uring_setup_features[1] = { {
 .data = uring_setup_features_xdata,
 .size = ARRAY_SIZE(uring_setup_features_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
