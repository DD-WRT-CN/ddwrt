#!/bin/sh

# Check how strace -e abbrev=set, -e raw=set, -e trace=set,
# and -e verbose=set work.
#
# Copyright (c) 2014-2020 The strace developers.
# All rights reserved.
#
# SPDX-License-Identifier: GPL-2.0-or-later

. "${srcdir=.}/init.sh"

run_prog ../umovestr
pattern_abbrev_verbose='execve("\.\./umovestr", \["\.\./umovestr"\], 0x[[:xdigit:]]* /\* [[:digit:]]* vars \*/) = 0'
pattern_nonabbrev_verbose='execve("\.\./umovestr", \["\.\./umovestr"\], \[".*\"\(\.\.\.\)\?\]) = 0'
pattern_nonverbose='execve("\.\./umovestr", 0x[[:xdigit:]]*, 0x[[:xdigit:]]*) = 0'
pattern_raw='execve(0x[[:xdigit:]]*, 0x[[:xdigit:]]*, 0x[[:xdigit:]]*) = 0'

check_output_mismatch()
{
	local pattern
	pattern="$1"; shift
	run_strace "$@" ../umovestr
	LC_ALL=C grep -x "$pattern" "$LOG" > /dev/null || {
		printf '%s\n%s\n' \
			'Failed patterns of expected output:' "$pattern"
		dump_log_and_fail_with "$STRACE $args output mismatch"
	}
}

check_execve_output_mismatch()
{
	local what how
	what="$1"; shift
	how="$1"; shift

	check_output_mismatch "$@" -e "$what=$how" -e execve
	check_output_mismatch "$@" "--$what=$how" --trace=execve
}

check_output_mismatch "$pattern_abbrev_verbose" -e execve
LC_ALL=C grep -v -x "$pattern_abbrev_verbose" "$LOG" |
LC_ALL=C grep '^[[:alnum:]_]*(' > /dev/null &&
	dump_log_and_fail_with "$STRACE $args unexpected output"

check_output_mismatch "$pattern_abbrev_verbose" -e trace=%process
LC_ALL=C grep '^chdir' "$LOG" > /dev/null &&
	dump_log_and_fail_with "$STRACE $args unexpected output"

run_strace -e 42 ../umovestr
LC_ALL=C grep '^[[:alnum:]_]*(' "$LOG" > /dev/null &&
	dump_log_and_fail_with "$STRACE $args unexpected output"

run_strace -e/ -e42 ../umovestr
LC_ALL=C grep '^[[:alnum:]_]*(' "$LOG" > /dev/null &&
	dump_log_and_fail_with "$STRACE $args unexpected output"

for a in execve \!chdir /. all \!none \
	 file process \!desc \!ipc \!memory \!network \!signal; do
	check_execve_output_mismatch abbrev "$a" "$pattern_abbrev_verbose"
	check_execve_output_mismatch raw "$a" "$pattern_raw"
	check_execve_output_mismatch verbose "$a" "$pattern_abbrev_verbose"
done

for a in \!execve chdir 42 \!all none \
	 \!file \!process desc ipc memory network signal; do
	check_execve_output_mismatch abbrev "$a" "$pattern_nonabbrev_verbose"
	check_execve_output_mismatch raw "$a" "$pattern_abbrev_verbose"
	check_execve_output_mismatch verbose "$a" "$pattern_nonverbose" --columns=31
done

exit 0
