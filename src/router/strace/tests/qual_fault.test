#!/bin/sh -efu
#
# Check that fault injection works properly.
#
# Copyright (c) 2016 Dmitry V. Levin <ldv@altlinux.org>
# Copyright (c) 2016-2018 The strace developers.
# All rights reserved.
#
# SPDX-License-Identifier: GPL-2.0-or-later

. "${srcdir=.}/scno_tampering.sh"

#
# F
# F+
# F+S

N=100

: ${suffix=}
[ -z "${name_override-}" ] || NAME="$name_override"

check_fault_injection()
{
	local trace fault err first step procs extra
	trace=$1; shift
	fault=$1; shift
	err=$1; shift
	first=$1; shift
	step=$1; shift
	procs=$1; shift
	extra="$*"

	local when=
	if [ -z "$first$step" ]; then
		first=1
		step=1
	else
		case "$step" in
			'') when=":when=$first"; step=0 ;;
			+) when=":when=$first+"; step=1 ;;
			*) when=":when=$first+$step" ;;
		esac
	fi

	local error=
	local raw=reg
	set --
	case "$err" in
		'') ;;
		[123456789]*)
			error=":error=$err"
			raw=raw
			set -- -e raw=all
			;;
		*) error=":error=$err" ;;
	esac

	outexp="$NAME.out.exp"
	outgot="$NAME.out.got"
	outout="$NAME.out.out"
	outpid="$NAME.pid"

	run_strace -a11 -ff -e trace=$trace \
		"$@" -e fault=$fault$when$error$suffix $extra \
		../$NAME $raw "$err" "$first" "$step" $N \
		"$procs" "$outexp" "$outgot" "$outout" "$outpid"

	for i in $(seq 0 $((procs - 1)) )
	do
		pid=$(cat "$outpid.$i")

		match_diff "$LOG.$pid" "$outout.$i"
		match_diff "$outgot.$i" "$outexp.$i"
	done
}

for err in '' ENOSYS 22 einval; do
	for fault in writev desc,51; do
		check_fault_injection \
			writev $fault "$err" '' '' 1 -efault=chdir
		check_fault_injection \
			writev $fault "$err" '' '' 1 -efault=chdir -efault=none
		for F in 1 2 3 5 7 11; do
			check_fault_injection \
				writev $fault "$err" $F '' 1
			check_fault_injection \
				writev $fault "$err" $F + 1
			for S in 1 2 3 5 7 11; do
				check_fault_injection \
					writev $fault "$err" $F $S 1
				check_fault_injection \
					writev $fault "$err" $F $S 4
			done
		done
	done
done
