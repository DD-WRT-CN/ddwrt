
gflags Module

Jiri Kuthan

Edited by

Daniel-Constantin Mierla

   Copyright © 2004 FhG FOKUS
     _________________________________________________________

   Table of Contents
   1. User's Guide

        1.1. Overview
        1.2. Dependencies
        1.3. Exported Parameters

              1.3.1. initial (string)

        1.4. Exported Functions

              1.4.1. set_gflag(flag)
              1.4.2. reset_gflag(flag)
              1.4.3. is_gflag(flag)

   2. Developer's Guide
   3. Frequently Asked Questions

   List of Examples
   1-1. initial parameter usage
   1-2. set_gflag() usage
   1-3. reset_gflag() usage
   1-4. is_gflag() usage
     _________________________________________________________

Chapter 1. User's Guide

1.1. Overview

   gflags module (global flags) keeps a bitmap of flags in shared
   memory and may be used to change behaviour of server based on
   value of the flags. E.g., if (is_gflag("1")) {
   t_relay_to_udp("10.0.0.1","5060"); } else {
   t_relay_to_udp("10.0.0.2","5060"); }.

   The benefit of this module is the value of the switch flags
   can be manipulated by external applications such as web
   interface or command line tools. The size of bitmap is 32
   (unsigned int).

   The module exports commands to FIFO server that can be used to
   change the global flags via FIFO interface. The FIFO commands
   are: "set_gflag", "reset_gflag" and "is_gflag".
     _________________________________________________________

1.2. Dependencies

   The module depends on the following modules (in the other
   words the listed modules must be loaded before this module):

     * none
     _________________________________________________________

1.3. Exported Parameters

1.3.1. initial (string)

   The initial value of global flags bitmap.

   Default value is "0".

   Example 1-1. initial parameter usage
modparam("gflags", "initial", "15)
     _________________________________________________________

1.4. Exported Functions

1.4.1. set_gflag(flag)

   Set the bit at the position "flag" in global flags.

   "flag" can have a value from the range 1..31.

   This function can be used from REQUEST_ROUTE, FAILURE_ROUTE,
   ONREPLY_ROUTE.

   Example 1-2. set_gflag() usage
...
set_gflag("4");
...
     _________________________________________________________

1.4.2. reset_gflag(flag)

   Reset the bit at the position "flag" in global flags.

   This function can be used from REQUEST_ROUTE, FAILURE_ROUTE,
   ONREPLY_ROUTE.

   Example 1-3. reset_gflag() usage
...
reset_gflag("4");
...
     _________________________________________________________

1.4.3. is_gflag(flag)

   Check if bit at the position "flag" in global flags is set.

   This function can be used from REQUEST_ROUTE, FAILURE_ROUTE,
   ONREPLY_ROUTE.

   Example 1-4. is_gflag() usage
...
if(is_gflag("4"))
{
        log("global flag 4 is set\n");
} else {
        log("global flag 4 is not set\n");
};
...
     _________________________________________________________

Chapter 2. Developer's Guide

   The module does not provide any API to use in other OpenSER
   modules.
     _________________________________________________________

Chapter 3. Frequently Asked Questions

   3.1. Where can I find more about OpenSER?
   3.2. Where can I post a question about this module?
   3.3. How can I report a bug?

   3.1. Where can I find more about OpenSER?

   Take a look at http://openser.org/.

   3.2. Where can I post a question about this module?

   First at all check if your question was already answered on
   one of our mailing lists:

     * User Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/users
     * Developer Mailing List -
       http://openser.org/cgi-bin/mailman/listinfo/devel

   E-mails regarding any stable OpenSER release should be sent to
   <users@openser.org> and e-mails regarding development versions
   should be sent to <devel@openser.org>.

   If you want to keep the mail private, send it to
   <team@openser.org>.

   3.3. How can I report a bug?

   Please follow the guidelines provided at:
   http://openser.org/bugs.
