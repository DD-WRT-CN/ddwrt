.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EXT_KERBEROS_SID_GROUP_ACL 8"
.TH EXT_KERBEROS_SID_GROUP_ACL 8 "2020-06-09" "perl v5.30.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\& ext_kerberos_sid_group_acl \- external ACL helper for Squid to verify AD Domain group membership using sid.
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& ext_kerberos_sid_group_acl [\-d] [\-h] \-p Principal Name \-D Domain Controller \-b Base DN \-G Group1:Group2
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBext_kerberos_sid_group_acl\fR is an installed executable script.
It uses \fBldapsearch\fR from Openldap to lookup the name of a \s-1AD\s0 group sid.
.PP
This helper must be used in with the negotiate_kerberos_auth helper in a
Microsft \s-1AD\s0 or Samba environement.
.PP
It reads from the standard input the domain username and a list of group sids
and tries to match the group SIDs to the \s-1AD\s0 group sids.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-d\fR" 12
.IX Item "-d"
Write debug info to stderr.
.IP "\fB\-h\fR" 12
.IX Item "-h"
Print the help.
.IP "\fB\-p principal name\fR" 12
.IX Item "-p principal name"
Principal name in squid keytab to use for ldap authentication to \s-1AD\s0
.IP "\fB\-D domain controller\fR" 12
.IX Item "-D domain controller"
Domain controller to contact to lookup group \s-1SID\s0
.IP "\fB\-b base \s-1DN\s0\fR" 12
.IX Item "-b base DN"
Base \s-1DN\s0 for ldap search
.IP "\fB\-G \s-1AD\s0 group name\fR" 12
.IX Item "-G AD group name"
\&\s-1AD\s0 group name to be used for \s-1SID\s0 lookup. List separated by a colon (:)
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
.Vb 7
\&  auth_param negotiate program /path/to/negotiate_wrapper_auth \-d \e
\&       \-\-ntlm /path/to/ntlm_auth \-\-helper\-protocol=squid\-2.5\-ntlmssp \-\-domain example.com \e
\&       \-\-kerberos /path/to/negotiate_kerberos_auth \-d \-s GSS_C_NO_NAME \-k /path/to/squid.keytab \-t none
\&  external_acl_type sid_check %LOGIN %note{group} /path/to/kerberos_sid_group_acl \-p principal \-D dc1.example.com \-b "DC=example,DC=com" \-G Group1:Group2
\&  acl squid_allow external sid_check
\&  acl allowed_group external sid_check
\&  http_access allow allowed_group
.Ve
.PP
If the local perl interpreter is in a unusual location it may need to be added:
.PP
.Vb 1
\&  external_acl_type sid_check %LOGIN %note{group} /path/to/perl /path/to/kerberos_sid_group_acl \-p principal \-D dc1.example.com \-b "DC=example,DC=com" \-G Group1:Group2
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
This program was written by Markus Moeller <markus_moeller@compuserve.com>
.PP
This manual was written by Markus Moeller <markus_moeller@compuserve.com>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 5
\& * Copyright (C) 1996\-2020 The Squid Software Foundation and contributors
\& *
\& * Squid software is distributed under GPLv2+ license and includes
\& * contributions from numerous individuals and organizations.
\& * Please see the COPYING and CONTRIBUTORS files for details.
\&
\& This program is put in the public domain by Markus Moeller
\& <markus_moeller@compuserve.com>. It is distributed in the hope that it will
\& be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
\& of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Ve
.SH "QUESTIONS"
.IX Header "QUESTIONS"
Questions on the usage of this program can be sent to the \fISquid Users mailing list <squid\-users@lists.squid\-cache.org\fR>
.SH "REPORTING BUGS"
.IX Header "REPORTING BUGS"
Bug reports need to be made in English.
See http://wiki.squid\-cache.org/SquidFaq/BugReporting for details of what you need to include with your bug report.
.PP
Report bugs or bug fixes using http://bugs.squid\-cache.org/
.PP
Report serious security bugs to \fISquid Bugs <squid\-bugs@lists.squid\-cache.org\fR>
.PP
Report ideas for new improvements to the \fISquid Developers mailing list <squid\-dev@lists.squid\-cache.org\fR>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBnegotiate_kerberos_auth\fR\|(8)
.PP
The Squid \s-1FAQ\s0 wiki http://wiki.squid\-cache.org/SquidFaq
.PP
The Squid Configuration Manual http://www.squid\-cache.org/Doc/config/
