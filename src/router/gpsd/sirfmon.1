.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "SIRFMON" 1 "" "" ""
.SH NAME
sirfmon \- monitor and control a SiRF GPS in binary mode
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 8
\fBsirfmon\fR [\-h] [\-v] [\-F\ \fIcontrol\-socket\fR] [[\fB\fIserver\fR\\ [\fI:port\fR\\ [\fI:device\fR]]\fR\ |\ \fB\fIdevice\fR\fR]]
.ad
.hy

.SH "DESCRIPTION"

.PP
sirfmon is a monitor that watches packets coming from a SiRF GPS (the SiRF chipset is the one by far the most commonly used in GPS mice and other consumer\-grade GPSes, about 80% of them and rising in early 2005)\&. This program is primarily useful as a diagnostic aid for troubleshooting gpsd problems; it deliberately uses decoder logic that different from the decoder in the gpsd SiRF driver, so behaviors that show up in both are unlikely to be due to logic bugs in either\&.

.PP
sirfmon accepts an \-h option that displays a usage message, or a \-v option to dump the package version and exit\&.

.PP
This program may be run in either of two modes, as a client for the gpsd daemon (and its associated control socket) or directly connected to a specified serial device\&. When run with no argument, it attempts to connect to the daemon\&. If the argument looks like a server:port specification it will also attempt to connect to the daemon\&. If the argument looks like a bare server name it will attempt to connect to a daemon running on the default gpsd port on that server\&. Only if the device argument contains slashes but no colons will it be treated as a serial device for direct connection\&. In direct\-connect mode sirfmon will hunt for a correct baud rate and lock on to it automatically\&.

.PP
The \-F option is only valid in client mode; it specifies a control socket to which the program should send device control strings\&. You must specify a valid pathname of a Unix\-domain socket on your local filesystem\&.

.PP
You will probably need to be root to run this program, as the serial devices and control socket it uses are normally privileged\&.

.PP
After startup, the top part of the screen reports the contents of several especially interesting packet types\&. The bottom half of the screen is a scrolling hex dump of all packets the GPS is issuing\&. Dump lines beginning >>> represent control packets sent to the GPS\&.

.PP
At SiRF firmware level 231, the "UTC" time displayed is not real UTC, as it is not leap\-second\-corrected\&. This is due to an inadequacy in the SiRF firmware\&.

.PP
To interpret what you see, you will need a copy of the SiRF Binary Protocol Reference Manual\&.

.SH "COMMANDS"

.PP
The following comands are available while sirfmon is running:

.TP
n
Switch device to NMEA mode at current speed and exit\&.



.TP
b
Change baud rate\&.

.TP
c
Set (c1) or clear (c0) static navigation\&. The SiRF documentation says ``Static navigation is a position filter designed to be used with motor vehicles\&. When the vehicle's velocity falls below a threshold, the position and heading are frozen, and velocity is set to zero\&. This condition will continue until the computed velocity rises above 1\&.2 times the threshold or until the computed position is at least a set distance from the frozen place\&. The threshold velocity and set distance may vary with software versions\&.''

Non\-static mode is designed for use with road navigation software, which often snaps the reported position to the nearest road within some uncertainty radius\&. You probably want to turn static navigation off for pedestrian use, as it is likely to report speed zero and position changing in lsrge jumps\&.

.TP
l
Toggle packet logging\&. If packet logging is on, it will be turned off and the log closed\&. If it is off, logging to the filename following the l will be enabled\&. Differs from simply capturing the data from the GPS device in that only whole packets are logged\&. The logfile is opened for append, so you can log more than one portion of the packet stream and they will be stitched together correctly\&.

.TP
s
Send hex bytes to device\&. Following the 's' you may type hex digit pairs; end with a newline\&. These will become the payload of a SiRF control packet shipped to the device\&.

.TP
t
Toggle navigation\-parameter display mode\&. Toggles between normal display and one that shows selected navigation parameters from MID 19, including the Static Navigation bit toggled by the 'c' command\&.

.TP
Ctrl\-S
Freeze display, suspend scrolling in debug window\&.

.TP
Ctrl\-Q
Unfreeze display, resume normal operation\&.

.SH "FILES"

.TP
\fI/var/run/gpsd\&.sock\fR
The default location of the control socket\&.

.SH "BUGS AND LIMITATIONS"

.PP
The logic for hunting the GPS's baud rate is vulnerable to various sorts of RS232 flakiness\&. If it hangs for longer than a few seconds, kill the program and restart\&.

.SH "SEE ALSO"

.PP
 \fBgpsd\fR(8), \fBgps\fR(1), \fBlibgps\fR(3), \fBlibgpsd\fR(3), \fBgpsprof\fR(1), \fBgpsfake\fR(1), \fBgpsctl\fR(1), \fBgpscat\fR(1)\&.

.SH "AUTHOR"

.PP
Eric S\&. Raymond <esr@thyrsus\&.com>, based on code originally by Rob Janssen, PE1CHL\&. This code is part of the gpsd toolset; there is a project page for gpsd  here: \fIhttp://gpsd.berlios.de/\fR\&.

