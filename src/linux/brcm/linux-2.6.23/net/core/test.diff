Index: dev.c
===================================================================
--- dev.c	(revision 11050)
+++ dev.c	(working copy)
@@ -351,6 +351,22 @@
 }
 #endif
 
+
+/*void dev_disable_lro(struct net_device *dev)
+{
+	if (dev->ethtool_ops && dev->ethtool_ops->get_flags &&
+	    dev->ethtool_ops->set_flags) {
+		u32 flags = dev->ethtool_ops->get_flags(dev);
+		if (flags & ETH_FLAG_LRO) {
+			flags &= ~ETH_FLAG_LRO;
+			dev->ethtool_ops->set_flags(dev, flags);
+		}
+	}
+	WARN_ON(dev->features & NETIF_F_LRO);
+}
+EXPORT_SYMBOL(dev_disable_lro);
+*/
+
 /*******************************************************************************
 
 		Protocol management and registration routines
@@ -1782,17 +1798,6 @@
 
 	__get_cpu_var(netdev_rx_stat).total++;
 
-#ifdef CONFIG_BRIDGE
-	/* Optimisation for framebursting (allow interleaving of pkts by
-	 * immediately processing the rx pkt instead of Qing the pkt and deferring
-	 * the processing). Only optimise for bridging and guard against non
-	 * TASKLET based netif_rx calls.
-	 */
-	if (!in_irq() && (skb->dev->br_port != NULL) && br_handle_frame_hook != NULL) {
-		local_irq_restore(flags);
-		return netif_receive_skb(skb);
-	}
-#endif		
 	if (queue->input_pkt_queue.qlen <= netdev_max_backlog) {
 		if (queue->input_pkt_queue.qlen) {
 enqueue:
