23.10.09 
    * experimental addition of sector unprotection code

22.10.09
    * remove sector protection check

19.10.09
    * added pb44 compile target and added some changes to the stub. ar7100 remains untested, dont flash it

16.10.09
    * added some ar7100 specific functions to decompression stub. still alot todo
    * compile only selected phys (ar7100)
    
15.10.09
    * start of ar7100 port (far from beeing finished, stub needs still to be written)

14.10.09
    * add some workarounds for slow low quality flash chips
    * add ICPLUS switch support to AP48 target
    * added SOL51 target (AP48, Resetbutton gpio 6, ICPLUS switch, 8 mb flash, 32 mb ram)

10.10.09
    * added small advise
    
17.7.09
    * added doodle labs DLM-101 prebuild image

06.7.09
    * signal bar fix (uncritical, just cosmetic)
    
03.7.09
    * LZMA compressed elf image support (required to boot ubnt images)
    
02.7.09
    * signal bar is used to show flash activity (only on senao and ubnt products right now)
    
26.6.09
    * move clock initialization to ensure udelay function
    * removed http protocol to save space. i believe the embedded tftp client is enough and the tftp server for recovery makes recovery and flashing pretty easy
    * simplified the firmware format handling code, for easy integration of new formats. reduces codesize too
25.6.09
    * fix bootcode for LSDK based devices
    * add cfg partition for ubnt devices
24.6.09
    * correct size and entrypoint for EAP3660
    * added config erase method for senao,ubiquiti and wiligear configs
    * added Senao firmware format (EOC2610,EAP3660,ECB3500,EOC5610,EOC1650)
    * added wiligear firmware format for tftp recovery (the whole code is rewritten to be readable and small)
23.6.09
    * added ubnt firmware format for tftp recovery (format taken from fwsplit)
    * added tftp recovery code (code was provided by wiligear)
    - if reset button is keep pushed the tftp server will start, redboot will then accept tftp transfers in the common dd-wrt webflash format
    - i will add wiligear GEOS format and ubnt format in future versions ,the provided code need to be rewritten first
22.6.09 
    * we invert the usage for resetbutton_enable here, so it will only boot redboot per default if the resetbutton feature is disabled from dd-wrt
      otherwise, use trigger reset button to enter it
21.6.09
    * implement dynamic uart clock for ap51/ap61 redboot (required for clean uart output with overclocked cpu's)
    * fix uart clock for ap51/ap61 (uncritical,console output was distorted on microredboot itself)
    * fix small bug in nvram detection code (uncritical)
20.6.09
    * source restructured for well readability (divide ap48 specific and ap51/ap61 specific changes)
    * decrease the size a little bit by compiler friendly source changes
    * added NOR flash chip detection (if detection fails it will have no consequences. not all flash chips are implemented but easy to maintain)
    * AR5312/AR2313: fix nvram erase for nor flash devices (tested)
    * make LzmaDecoder 2-3 times faster. this increases size, but we are still in 64 kb limit
    note:
    - finally the bootloader works now for ap51,ap65 and ap48 with all current planned features
    
19.6.09
    * AR5312/AR2313: nor flash support for erasing nvram on reset button long push (untested)
    * AR5312/AR2313: add support for 32MB ram chips (auto detection)
    * most nor flash chips should be supported, but no guarantee. redboot will display the required ID's for implementation
    * nvram partition will now be automaticly detected if present
    * 8 MB flash chip support for 5312/2313 (redboot modification)
    * support consolidated board data or not, doesnt matter. will be found
    * shows board type if present (taken from nvram)
    * erase nvram only if nvram was detected (to prevent breaking of filesystem if DD-WRT isnt installed, but another OS)
    note:
    - before using from source consider to adjust the dram refresh timing, since i had to decrease it for testing on my AP48
    - it will not have any negative influence if you dont do it, but dram access might be slower than expected

18.6.09
    * add more ap48/ar5312/ar2313 related support code and modify redboot to compile for this target
    * AP48 is still in progress and untested, do not use it if you dont know how to handle a jtag 
    
17.6.09
    * add nvram_get to boot_stub (for checking system variables)
    * boots always redboot and leaves booting procedure to redboot if nvram var resetbutton_enable=1
    * add more AR5312 specific code (unused right now), for later AP48 support
    * printf implementation for easier and more compfortable debug output code writing
